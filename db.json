{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":0},{"_id":"source/images/beian.png","path":"images/beian.png","modified":1,"renderable":0},{"_id":"source/images/pasted-0.png","path":"images/pasted-0.png","modified":1,"renderable":0},{"_id":"source/images/pasted-1.png","path":"images/pasted-1.png","modified":1,"renderable":0},{"_id":"source/images/thumb-default.png","path":"images/thumb-default.png","modified":1,"renderable":0},{"_id":"source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":1,"renderable":0},{"_id":"source/images/1ef3/03.databind.gif","path":"images/1ef3/03.databind.gif","modified":1,"renderable":0},{"_id":"source/images/4ad7/code.png","path":"images/4ad7/code.png","modified":1,"renderable":0},{"_id":"source/images/4ad7/result.png","path":"images/4ad7/result.png","modified":1,"renderable":0},{"_id":"source/images/4ed/lifecycle.vue3.png","path":"images/4ed/lifecycle.vue3.png","modified":1,"renderable":0},{"_id":"source/images/a38e/05.mvvm.png","path":"images/a38e/05.mvvm.png","modified":1,"renderable":0},{"_id":"source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":1,"renderable":0},{"_id":"source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":1,"renderable":0},{"_id":"source/images/5bf8/lifecycle.png","path":"images/5bf8/lifecycle.png","modified":1,"renderable":0},{"_id":"source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":1,"renderable":0},{"_id":"source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":1,"renderable":0},{"_id":"source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":1,"renderable":0},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/images/beian.png","path":"images/beian.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"d799616f68059b5fe318d7675dcbd8585401a2ab","modified":1621941598081},{"_id":"source/robots.txt","hash":"1d4641ebf5c0809a2ae440fe8d6975010c5c5dac","modified":1623232265744},{"_id":"source/404/index.md","hash":"16638b081d796638565ca462f3c87339b9a0577e","modified":1621785707546},{"_id":"source/_discarded/hello-world.md","hash":"f7535d5a8d7eb644e006528e40b63df09f9ff1ed","modified":1622948804417},{"_id":"source/_discarded/关于IdentityServer结合mysql的一些坑.md","hash":"e50b30317e9da0a07d86ba6de0d7a2dd8aac77a8","modified":1622948626028},{"_id":"source/_discarded/关于net core动态加载配置文件的小问题","hash":"59dd78357f024bb6760002594d22ef7067b36048","modified":1622123961035},{"_id":"source/_discarded/vscode控制台中文乱码.md","hash":"41257e3877dc9b140a155db1532889a63fdc5a1c","modified":1622950019255},{"_id":"source/_data/gallery.yml","hash":"eef9b025c2a81fdc714967d0c7b21bed9d55cff5","modified":1621785707547},{"_id":"source/_data/links.yml","hash":"c1260fbf212298d13aa807eee174ab62b7b8ad1a","modified":1623318116055},{"_id":"source/_posts/ApiLinkMonitor-单服务链路追踪框架.md","hash":"3ebbb20cf0dbe9c2edf42511db71914fb1d80253","modified":1678426624592},{"_id":"source/_posts/Flutter-OdinDio-基于Dio的封装.md","hash":"2ebb5cb33e18326d7c4e9b927b5a9337da2ceb3f","modified":1678438562002},{"_id":"source/_posts/Flutter-OdinUtils封装.md","hash":"2c16f673f7815d3d6becddd6fe82a5e87053a50f","modified":1678439347200},{"_id":"source/_posts/Flutter-Plugin发布.md","hash":"6e10d7e898ac45f5da07b19aa2332652a07a6913","modified":1678438823446},{"_id":"source/_posts/Flutter-source-gen-命令与配置.md","hash":"c05230eeb3862b6eba2972ec79bafead7ff88445","modified":1678438107810},{"_id":"source/_posts/Flutter-基于reflectable反射以及调用.md","hash":"443ddf3c58def259afd83335721d9964ab9ae8ba","modified":1678438328193},{"_id":"source/_posts/Hexo-Pure主题给Post页面添加keywords.md","hash":"bc00780128e48503ea9204b87f5f58cd554ac56d","modified":1623320138606},{"_id":"source/_posts/IdentityServer结合Mysql.md","hash":"2a5bb90c159e354d1d8895d7d4778855960f2513","modified":1623216988805},{"_id":"source/_posts/Net中关于Json序列化Long类型数据的解决办法.md","hash":"a32307ddbfdcb0c321fc4659fa15090b71ce9b2d","modified":1678425125856},{"_id":"source/_posts/Net-Core使用SqlSugar和Cap.md","hash":"dfa1a6c189bba62cb04fb4783fa681bcdb65322d","modified":1623859988984},{"_id":"source/_posts/OdinLog-组件.md","hash":"d2d0d05b97ee777e69549d9696231067c7936c00","modified":1678427148559},{"_id":"source/_posts/Serilog封装扩展并写入Mysql.md","hash":"733f8dfcbe7a8f2b7bb14fec9aa5cea396d2e930","modified":1623216980358},{"_id":"source/_posts/Vue2-0-01-hello-vue.md","hash":"b9bc803fa55912d94037e257a342113d19f1c3e4","modified":1678428070408},{"_id":"source/_posts/Vue2-0-02-模板语法.md","hash":"970a4a5a9cdadb2d407112a54b00889f078de1c8","modified":1678428280208},{"_id":"source/_posts/Vue2-0-03-数据绑定.md","hash":"a7be99d7a5630bcc3d0692190a48bbad58ac9833","modified":1678428588103},{"_id":"source/_posts/Vue2-0-04-el与data的两种写法.md","hash":"b69e7b88280fc7cc3a78c6b715180b2b942099a3","modified":1678428739533},{"_id":"source/_posts/Vue2-0-05-mvvm模型.md","hash":"9a61a3e4943c481bf718214f48d834f778379152","modified":1678428933283},{"_id":"source/_posts/Vue2-0-06-数据代理-Object-defineProperty.md","hash":"3820fa3a7024bca2758cbc066d1988d7e4049e88","modified":1678429289979},{"_id":"source/_posts/Vue2-0-07-事件处理.md","hash":"054e149602f1ca74362de114c54cd157d4008994","modified":1678429218412},{"_id":"source/_posts/Vue2-0-09-键盘事件.md","hash":"dec6dfab3f2c88b39217a24e752206e62e017b61","modified":1678429607814},{"_id":"source/_posts/Vue2-0-08-事件修饰符.md","hash":"8198b9f0b14b69360cb173012921834801e815be","modified":1678429439119},{"_id":"source/_posts/Vue2-0-10-Computed计算属性.md","hash":"4c81a672bce315dc331d9aca3b7ceea81bd516a0","modified":1678429693423},{"_id":"source/_posts/Vue2-0-12-样式的绑定.md","hash":"4ed600a67657f342df8d78b8d2f27da4757ed072","modified":1678429998531},{"_id":"source/_posts/Vue2-0-13-vue指令.md","hash":"d04cae81953280859efdcb926ae5044174809591","modified":1678430302484},{"_id":"source/_posts/Vue2-0-11-Watch监视属性.md","hash":"4b8884b900e020d330e425f5cb56d9482012032e","modified":1678429886891},{"_id":"source/_posts/Vue2-0-14-vue-set方法.md","hash":"4a61c6ac0d971ff24c27a079c5827eae5620c681","modified":1678430563225},{"_id":"source/_posts/Vue2-0-15-表单数据的收集.md","hash":"3498c9557e743e6324cb86a2fef3669e620c7431","modified":1678430783442},{"_id":"source/_posts/Vue2-0-16-Filter过滤器.md","hash":"ac3fadea4411a42d7e4b3b8eca82034b38d53c92","modified":1678431101638},{"_id":"source/_posts/Vue2-0-17-生命周期.md","hash":"a3fcf894d7d6fec446eb17a881f1a60b8fa97499","modified":1678431241569},{"_id":"source/_posts/Vue2-0-18-3-Vue组件-内置关系.md","hash":"8e3dfac2d1cdddd91a8df2db0b0766428c10c604","modified":1678431866682},{"_id":"source/_posts/Vue2-0-18-1-vue组件-非单文件组件.md","hash":"8aafe96f35ccb293cdc578e2c3829b85f2018fb1","modified":1678431690671},{"_id":"source/_posts/Vue2-0-18-2-Vue组件-组件嵌套.md","hash":"3e3197bb34bc8a83b6c24ea3b535bb135090d786","modified":1678431796523},{"_id":"source/_posts/Vue2-0-18-4-Vue组件-单文件组件.md","hash":"d6e25074257aec2201fcc62ea70548e337a1aeba","modified":1678432050391},{"_id":"source/_posts/Vue2-0-19-Vue脚手架.md","hash":"bd77c0036234bbeb3d079dfea25cda6aad66242e","modified":1678432256577},{"_id":"source/_posts/Vue2-0-系列.md","hash":"dc65b118893c024c5b8764dab78e9ab35408ddd0","modified":1678432267095},{"_id":"source/_posts/Vue2-0进阶-02-props配置项.md","hash":"3feb7b39ab530f5a963f6d4732d4558391beb97b","modified":1678433356881},{"_id":"source/_posts/Vue2-0进阶-01-ref属性.md","hash":"a1984086719193e65f22128a9992b99d5c134c8d","modified":1678433085552},{"_id":"source/_posts/Vue2-0进阶-03-mixins混入配置项.md","hash":"67c0ec4b8d400261b38211a38e465c95470dafde","modified":1678433739168},{"_id":"source/_posts/Vue2-0进阶-04-plugins插件.md","hash":"93e984955dcd1e8150d3d08e0d853685c8f5ab79","modified":1678433868568},{"_id":"source/_posts/Vue2-0进阶-06-webStorage浏览器的本地存储.md","hash":"0892ec025ba4d22257db031a0fd9323edd40cd07","modified":1678434089513},{"_id":"source/_posts/Vue2-0进阶-07-vue自定义事件.md","hash":"c7ed970bc509419eed1f34d8008fbf6b5906ff5b","modified":1678434348023},{"_id":"source/_posts/Vue2-0进阶-05-vue的style.md","hash":"a0a1a39756cb15af90fde3cbb5a56c60af87bf2d","modified":1678433996259},{"_id":"source/_posts/Vue2-0进阶-09-消息订阅与发布.md","hash":"1089b2af8619f8d60967913a09b7ce03a68aace4","modified":1678434596630},{"_id":"source/_posts/Vue2-0进阶-08-全局事件总线.md","hash":"5d80c6d12a563c2c72da0a50a203902857075ffc","modified":1678434471418},{"_id":"source/_posts/Vue2-0进阶-10-nextTick与props传递函数.md","hash":"f8dcccd0adb747d2fa37ee381b2e980affbf1156","modified":1678434731645},{"_id":"source/_posts/Vue2-0进阶-12-配置代理.md","hash":"5b2f0aa8818bdbf7085beadd375045351e3b20f8","modified":1678435019635},{"_id":"source/_posts/Vue2-0进阶-11-动画效果.md","hash":"7e4691dcf46af7d809a2811085844b085b7d7863","modified":1678434866068},{"_id":"source/_posts/Vue2-0进阶-13-slot插槽.md","hash":"24c6df5e4b4e21df514e8e97333ed83adea4498a","modified":1678435273836},{"_id":"source/_posts/Vue2-0进阶-15-vue-router路由.md","hash":"a476249f5e15bf4a43b8db5d162d56bcec53cfaf","modified":1678435757350},{"_id":"source/_posts/Vue2-0进阶-14-vuex.md","hash":"b347036218988c24a0f571ac301b6151bcea90f1","modified":1678435437564},{"_id":"source/_posts/Vue2-0进阶学习.md","hash":"40dacbf64e6553b47d468ca5916ad4ab7152d48a","modified":1678435778239},{"_id":"source/_posts/Vue3-0-01-初识vue3.md","hash":"0d9c2215c4628d71803a1e327f019daceea19dc4","modified":1678436402586},{"_id":"source/_posts/Vue3-0-03-生命周期.md","hash":"e1f1c5857886b5ffab408e050288e767cdb2af55","modified":1678436817440},{"_id":"source/_posts/Vue3-0-02-计算属性与监视属性.md","hash":"c5c570969f6d018f88fd3fcfd7a786cd0fc582c6","modified":1678436596360},{"_id":"source/_posts/Vue3-0-04-vue3中的hook.md","hash":"57e57c08f622f1de5385d0b717802812d9fc7c47","modified":1678436930986},{"_id":"source/_posts/Vue3-0-07-vue3中新增的一些组件.md","hash":"b1ed234cc8f7d8374089ef6bc0a25a0f2c64a594","modified":1678437438127},{"_id":"source/_posts/Vue3-0-05-toRef与toRefs.md","hash":"c6f12cfaf95bc314159d0cb592584c1ba45757b2","modified":1678437033923},{"_id":"source/_posts/Vue3-0-Pinia-状态管理框架.md","hash":"773efcc29faf36731e1b2c7eebac3e807edf0c12","modified":1678437954186},{"_id":"source/_posts/Vue3-0-06-其他的CompositionApi及总结.md","hash":"b9337a5a98639b34f629229e40913ee15a368f24","modified":1678437231406},{"_id":"source/_posts/Vue3-0-学习系列.md","hash":"033eccea60b06f4fce84aea496ca2210d6bbfd4b","modified":1678437475228},{"_id":"source/_posts/mysql8-远程连接解决办法.md","hash":"eaba475143d4a7318daa1b6ff9a86e2bce02f893","modified":1678426718576},{"_id":"source/_posts/macos-小指令.md","hash":"1a8b35a34e2103118376328884398ffcdf5facea","modified":1678432350548},{"_id":"source/_posts/vscode-使用-git-commit-plugin-插件规范提交-Git.md","hash":"ba34c01c1ab09303c57a4de1516d28314004fd1e","modified":1678424447892},{"_id":"source/_posts/vscode控制台中文乱码.md","hash":"aa46465cf3d665d62f15a69a14c2fbf53231e084","modified":1623216984282},{"_id":"source/_posts/vscode无法使用nuget的小问题.md","hash":"78633108c61245ad1d8f22cce739cb129b69627a","modified":1623216994178},{"_id":"source/_posts/使用-BackgroundService-类在微服务中实现后台任务.md","hash":"ce52921532139aca01013ba649c969560db00ba0","modified":1623665931943},{"_id":"source/_posts/利用BackgroundService封装后台服务.md","hash":"a44cdb5a784880186b6a28bf254a0e7ab0354d86","modified":1678426591049},{"_id":"source/_posts/关于net-core动态加载配置文件的小问题.md","hash":"3e1cc59f10508db1ef54a34cc1b6743403c9a9a5","modified":1623319060509},{"_id":"source/_posts/关于Mapster对象映射器的封装和使用.md","hash":"cce1bf3d4bb30b5f38076ae5f2d97a91ee5ce977","modified":1678425576203},{"_id":"source/_posts/利用Canal集合RabbitMQ实现数据和缓存同步.md","hash":"825138adf9d9e23d212cf6429ff4447613482146","modified":1678425799045},{"_id":"source/_posts/基于HttpClientFactory的封装和使用.md","hash":"557ade2898a246c1556340ed4547ce63224d2909","modified":1623365353622},{"_id":"source/about/index.md","hash":"66a54982627c3431802efcf70aecbf4db7425e3d","modified":1621947703352},{"_id":"source/books/index.md","hash":"d913d58987f539ac2ca4cca366ebf42f8b1a03d1","modified":1621785707549},{"_id":"source/_posts/基于git-commit-plugin插件的扩展.md","hash":"56fdb8b699c211b1e8db7b980b14b6999c7f14f4","modified":1624986355885},{"_id":"source/images/avatar.jpg","hash":"709b1d1482c3048af833de20c996842c04a29159","modified":1623860047387},{"_id":"source/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1656501085488},{"_id":"source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1623860047388},{"_id":"source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1623860047395},{"_id":"source/categories/index.md","hash":"b0006184ce9570766e7c7507d20fede1079f4992","modified":1621785707549},{"_id":"source/links/index.md","hash":"d768332d0d322fe39267dbbda05b931488c27d7e","modified":1621785707550},{"_id":"source/repository/index.md","hash":"bf2bec13066d7d53fc05a334876eb482e6f95825","modified":1621785707551},{"_id":"source/tags/index.md","hash":"c35ba8af5acf41102909a9f9c1349a24d89f97a6","modified":1621785707552},{"_id":"source/images/4ad7/result.png","hash":"27f1f09b638030bbd24d2bc080baa3c59fd4a1c2","modified":1678424841261},{"_id":"source/images/4ad7/code.png","hash":"b9b726c4c0c50dfa48cf8693fd5be9592e961269","modified":1678424629477},{"_id":"source/images/donate/alipayimg.png","hash":"05b21dc626204a9df8ccc6b532fc389b3be86d96","modified":1623860047387},{"_id":"source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1623860047388},{"_id":"source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1623860047396},{"_id":"source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1623860047396},{"_id":"source/images/pasted-0.png","hash":"e68d998666ad6cfbe52f0636d88f9452adc316fd","modified":1678439387477},{"_id":"source/images/a38e/05.mvvm.png","hash":"e68d998666ad6cfbe52f0636d88f9452adc316fd","modified":1678428799180},{"_id":"source/images/pasted-1.png","hash":"e362937b7163f1d04576aeb0e11d8012b4a26e4b","modified":1678439387483},{"_id":"source/images/4ed/lifecycle.vue3.png","hash":"e362937b7163f1d04576aeb0e11d8012b4a26e4b","modified":1678436701021},{"_id":"source/images/donate/wechatpayimg.png","hash":"93e0b8869fd5178269cc1a153385dce0a04d491c","modified":1623860047854},{"_id":"themes/pure/README.md","hash":"94fe451bf920cec6152e7bf9cbff4ccf0af0febc","modified":1621785707544},{"_id":"themes/pure/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1621785707543},{"_id":"themes/pure/README.cn.md","hash":"7facc2f8aadaf4c172dfc931bebcc37b9ef3d7e8","modified":1621785707544},{"_id":"themes/pure/_config.yml","hash":"748b9cff3dc496677b01593967e54a3996b1180d","modified":1678426747501},{"_id":"themes/pure/_config.yml.example","hash":"a3b55d01598967db40da6f740b38cdba4f17d7bc","modified":1621785707545},{"_id":"themes/pure/package.json","hash":"d5bad0f074925c46e8ee5a75d385346d2fcea850","modified":1621785707594},{"_id":"themes/pure/languages/en.yml","hash":"ed342f9158f13fafaf51baa4cc89df4d8aa31720","modified":1621785707553},{"_id":"themes/pure/languages/zh-CN.yml","hash":"399061d959807b41e333808b4c7851ca290a82fe","modified":1621785707553},{"_id":"themes/pure/languages/zh-TW.yml","hash":"387ad2ca1b2a01dac36f768a6116a2033c3ac142","modified":1621785707554},{"_id":"themes/pure/layout/about.ejs","hash":"4b64515ccc801cc9eba637a1e1909c6c4dd203f6","modified":1621785707588},{"_id":"themes/pure/languages/default.yml","hash":"ed342f9158f13fafaf51baa4cc89df4d8aa31720","modified":1621785707552},{"_id":"themes/pure/layout/archive.ejs","hash":"90fa5b0d8f081d0bde33b2784f66e6a80e5b0dac","modified":1621785707589},{"_id":"themes/pure/layout/books.ejs","hash":"75cbd31d3551c730e8a683bd5b08562881a95b51","modified":1621785707589},{"_id":"themes/pure/layout/categories.ejs","hash":"9cc7b5f5af40fd7ec641bf0f5a5f8f1ce1ac22d5","modified":1621785707590},{"_id":"themes/pure/layout/layout.ejs","hash":"7288cdd53c5ccc259e83f816283089a1fca76217","modified":1623681498104},{"_id":"themes/pure/layout/index.ejs","hash":"44418dbf1fb82392b8e1e4cc910d16a383190433","modified":1621785707591},{"_id":"themes/pure/layout/links.ejs","hash":"ee90a5f2a9d19bc02682ea3a59177b947f7f7284","modified":1621785707592},{"_id":"themes/pure/layout/category.ejs","hash":"b3f7a96fbaf201a65ed64d509edc29976542fbfb","modified":1621785707590},{"_id":"themes/pure/layout/tag.ejs","hash":"30d8ddd84c9aa87dff1be02af308097cf4e72448","modified":1621785707593},{"_id":"themes/pure/layout/post.ejs","hash":"fbfed3c882059e757b23ff57924400683631594b","modified":1621785707592},{"_id":"themes/pure/layout/page.ejs","hash":"fbfed3c882059e757b23ff57924400683631594b","modified":1621785707592},{"_id":"themes/pure/layout/repository.ejs","hash":"0ecad33b6c1ec741eb3b02bb47a3824ac3749d09","modified":1621785707593},{"_id":"themes/pure/layout/tags.ejs","hash":"76bc71f3dfd8a5b1aa14b09dec7b460b14f5028a","modified":1621785707594},{"_id":"themes/pure/scripts/thumbnail.js","hash":"4a7385e533f3567758bc995a8be5eb3e7839ac9c","modified":1621785707610},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1621785707614},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"eef9b025c2a81fdc714967d0c7b21bed9d55cff5","modified":1621785707547},{"_id":"themes/pure/_source/404/index.md","hash":"16638b081d796638565ca462f3c87339b9a0577e","modified":1621785707546},{"_id":"themes/pure/_source/_data/links.yml","hash":"a5e31f35ebb8e1e8811f2e3d957cf4d4835aa2f9","modified":1621785707547},{"_id":"themes/pure/_source/about/index.md","hash":"b72470146e8244886e15715e0cae79b4130305e8","modified":1621785707548},{"_id":"themes/pure/_source/links/index.md","hash":"d768332d0d322fe39267dbbda05b931488c27d7e","modified":1621785707550},{"_id":"themes/pure/_source/books/index.md","hash":"d913d58987f539ac2ca4cca366ebf42f8b1a03d1","modified":1621785707549},{"_id":"themes/pure/_source/repository/index.md","hash":"bf2bec13066d7d53fc05a334876eb482e6f95825","modified":1621785707551},{"_id":"themes/pure/_source/tags/index.md","hash":"c35ba8af5acf41102909a9f9c1349a24d89f97a6","modified":1621785707552},{"_id":"themes/pure/_source/categories/index.md","hash":"b0006184ce9570766e7c7507d20fede1079f4992","modified":1621785707549},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"1998ca0ca551b12c42fdb341447d062744f3b018","modified":1624982109546},{"_id":"themes/pure/layout/_common/social.ejs","hash":"2bcdc7b0ee3905e724b01c2efa1ca6b47a846e1f","modified":1621785707557},{"_id":"themes/pure/layout/_common/header.ejs","hash":"2fd2ac7b063b84426b2712293714fac7a90fecfe","modified":1623231845074},{"_id":"themes/pure/layout/_common/script.ejs","hash":"3045da0c1979946694b628fbef39c01cc98b6e75","modified":1621785707556},{"_id":"themes/pure/layout/_common/head.ejs","hash":"1d87fb59a4a740d8e815173ef4c4b8f04bba7d66","modified":1623278066571},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"944913dcabd09c10d3014c844abf851f4dfdba8d","modified":1621785707558},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"4be88eec64fd40c7e1b74df8ccb6c8cdfa3e7a17","modified":1621785707558},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"38c9ef4b6bd60a588800d3110fc09670d7110a95","modified":1623195822552},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"e4810f8e03986d5a8afdf4c0932814a3d0db9ffe","modified":1621785707559},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"41473e777e3315e4321f026e8a6b1dded43399ff","modified":1623319992459},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"db8cba32bf6655a8d21fe8c8ccd0695b049e1d4c","modified":1621785707561},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"47bbb53fe9cca05928c45782c6897c8a94d597ff","modified":1621785707562},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"6408e37ec1a8ee868cf36d5b0e020d5d97ea2f27","modified":1621785707560},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"c196b54f92eff017a48e02bacc029dd82edc8cf9","modified":1621785707561},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"6aa85f52b3b0b125b5cc241492faebe679f19c35","modified":1623319982057},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"fdc5ac554e375f2e8b1e4dbe77cedda692f1228e","modified":1621785707563},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"be30d7eb0b391759ac329b8a7b410d758ff8b032","modified":1621785707570},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"bae5b4eb8b6415dc988bda88be1c4f8e252b1844","modified":1621785707564},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"335a906404dada013d83508244e992c7a26fa879","modified":1621785707570},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"a6662f79f7fd6f1cc9b5180672ba8e1d0192fbe2","modified":1621785707571},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"db2967c6902ceb67caa70364935ef3441b10432f","modified":1621785707578},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"d5c98ab345952bb11d9ee69a9c1e3432b6760c55","modified":1621785707578},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"4558b5713926735d874deb14d8b21ed2e597b714","modified":1621785707580},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"1e4bad0e7d04352e3634994f413c16b0001efa4a","modified":1621785707579},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"7a64d98212769423425102a441fca52eb6930fff","modified":1621785707580},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"89848cc8e0190ca76cc26d42c6880a23e370702e","modified":1621785707582},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"83baf0f6279487e0d1f2cfcd0c37c51d26af3f8e","modified":1621945242608},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"a464706b7a903e25d34b104bdfb298b260abc132","modified":1621785707580},{"_id":"themes/pure/layout/_script/search.ejs","hash":"2b784d15581df4309f56682896b725da7d44fcdd","modified":1621785707582},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"5e9a5cc9bdc05fabf939db494c3937cc0df48a72","modified":1621785707583},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"b250fb0f63286f9648cd8bf428bed6a88901b481","modified":1621785707585},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"dc548a83c33b5a598683bf2e1cb723bc3be4a76b","modified":1621785707584},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"14b1ec0bdb911ab6d92046c78d371264afc4fb19","modified":1621785707584},{"_id":"themes/pure/layout/_search/index.ejs","hash":"2c1f06dac5710e5fd073f3e5739545f3f6a0a56f","modified":1621785707583},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"2a920b405e08b3f66a8d57514444739976732a3d","modified":1623682632630},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"83c8ce4b099951d58b2be5006f6963afbbe7d4e9","modified":1621785707586},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8932ce5283a7e6a356c6840104a7d6984f2ea986","modified":1621785707586},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"e6967ec160b93a5f466a73a36745833e644d04c0","modified":1621785707587},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"24823a881a6c15fd846c7f4780eb90fe869a813b","modified":1621785707587},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1621785707615},{"_id":"themes/pure/source/fonts/README.md","hash":"b5b2aac1b36a86dac2217d242d650e026c5a3b0c","modified":1621785707615},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1621785707618},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1621785707618},{"_id":"themes/pure/source/images/avatar.jpg","hash":"709b1d1482c3048af833de20c996842c04a29159","modified":1621789285435},{"_id":"themes/pure/source/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1624982027637},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1621785707623},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1621785707623},{"_id":"themes/pure/source/js/application.js","hash":"c29f52f5ed2d1a5d8185b115f2962d22e707e19e","modified":1621785707624},{"_id":"themes/pure/source/js/insight.js","hash":"a1b773d9ce470bf0e2f8fdca1b6fac2ac3d31aeb","modified":1621785707625},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1621785707625},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"20ef0d47ec3d2de7d94db9778ddac092dc2bd4b5","modified":1621785707564},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"8cbaef422bd7f3d1581d1198dd1c36e4c0e1e46e","modified":1621785707566},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"0ef132fc45042b28411e3334e77b6e2a7f47fae2","modified":1621785707565},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"939c3cc8b7da6f3c2c8862eb04e5f311f21f1011","modified":1623231733838},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"bdef9836ca91b3e45498a9d98bcaec69e6627ced","modified":1621785707566},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1621785707567},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"8fd470b8d52606a90d475f7da9dbbed32742b1c9","modified":1621785707568},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"76cea347093c670cc066883928af031ff18f1d99","modified":1623278131580},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"15255c9b1644a79be097f6af26f0317a507b0690","modified":1621785707567},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"0d8b9a3aeaed95b74e292c593f0a8225711bfdca","modified":1621785707569},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1621785707569},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"81e9a89734505f54fef83dc74d2e277dab1bfa75","modified":1621785707569},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"829778c19025882fe73cf1b297a36a9d0eff39a1","modified":1621785707572},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"19585fc666e13a2816d74a8046998ac7fd36f75c","modified":1621785707573},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"4557389e499b89982eb005a821208fdd3dbac627","modified":1621785707573},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"98dac12a9cbf47098b49183893d714355e2e5999","modified":1621785707574},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"2cc7b1cb7bdf157fe6470eb34a613963df75afa3","modified":1621785707575},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"0af71b5b354fdddd576fbd55c3aeb0221af71e7d","modified":1621785707575},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"19120669bfea521e0b9d2df5bf3a34f0ecb8bb68","modified":1621785707576},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"72b48dcaab830b615c71f6e810e96100b715c682","modified":1621785707577},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"6234ef13a1290f8849ca850641c0be0ab6af8cef","modified":1621785707575},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"96fcc36560a8367e6c4ba9ec1e82d0c5a730b1b4","modified":1621785707576},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"f95c3289c03fa084afce64e3c399cb5127707f56","modified":1621785707578},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1621785707621},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"05b21dc626204a9df8ccc6b532fc389b3be86d96","modified":1621788876953},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1621785707622},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1621785707622},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1621785707598},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1621785707596},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1621785707597},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1621785707599},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1621785707600},{"_id":"themes/pure/source/js/jquery.min.js","hash":"dacc1f76630a9708add066819b1aabf8dce01056","modified":1621785707626},{"_id":"themes/pure/source/js/plugin.min.js","hash":"4eded164f8b6f5187fbf10065873ebeee5ab8787","modified":1621785707630},{"_id":"themes/pure/source/css/style.css","hash":"ff0731ff99c03b9120a60e1a70df78d209f7cbf4","modified":1621785707612},{"_id":"themes/pure/source/css/style.min.css","hash":"4e46cbfadf9f0c5c236239a163058a3f525492ce","modified":1621785707613},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"1af91521f1c29c231ffc19d7f64696ddcd71470b","modified":1621785707617},{"_id":"themes/pure/source/js/plugin.js","hash":"59cb2985d8d21653f0f80ef327517eca86af0ac6","modified":1621785707627},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1621785707629},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"93e0b8869fd5178269cc1a153385dce0a04d491c","modified":1621789049117},{"_id":"source/images/5bf8/lifecycle.png","hash":"b69386a7b163ad35fa233d3e53c571f48cd71204","modified":1678431187718},{"_id":"source/images/1ef3/03.databind.gif","hash":"0f10462e66f2abcfe5f967f22194d7c4d5b6bdf8","modified":1678428475361},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1621785707609},{"_id":"public/baidusitemap.xml","hash":"f3d60a82edcb13612d88ef0162d1f84d2226e0ea","modified":1678478863148},{"_id":"public/atom.xml","hash":"11eb1bbf3a5b17a3bf6944a7ce1249f705805606","modified":1678478863148},{"_id":"public/content.json","hash":"e87fbf824b30564f37a98b3b6d16ac742201dd6e","modified":1678478863148},{"_id":"public/sitemap.xml","hash":"33155f2eeede370de12e0d7d654dd77256883b5b","modified":1678478863148},{"_id":"public/submit_urls.txt","hash":"8f0a05a3dd3407479ce5d7479cf828c8d9d1d66c","modified":1678478863148},{"_id":"public/404.html","hash":"72771962801b2b3237fb0a1ad92b0109d4922c36","modified":1678478863148},{"_id":"public/books/index.html","hash":"280a8c33af0897a7bdc3e28614d36886658ba95a","modified":1678478863148},{"_id":"public/about/index.html","hash":"17ff0c5653cf35c3ab4bd0b06740e6e0e7ec4429","modified":1678478863148},{"_id":"public/categories/index.html","hash":"162c2eafa0186f69ced6bf9b2f1e1e38a62207fa","modified":1678478863148},{"_id":"public/repository/index.html","hash":"1ed256a1c50d031582c0492334589bcea79bde77","modified":1678478863148},{"_id":"public/links/index.html","hash":"680775b126a6270cb208370ade3c63a18076f467","modified":1678478863148},{"_id":"public/tags/index.html","hash":"a56d096d0b7b51e07c8a31b95069aa7858038523","modified":1678478863148},{"_id":"public/articles/eff3.html","hash":"cd0fb72bcd23a0bbdd5422b066bf0f820777051d","modified":1678478863148},{"_id":"public/articles/c804.html","hash":"d955b9b7654fddc6b1a827566146397720f6a058","modified":1678478863148},{"_id":"public/articles/b092.html","hash":"e8b1d86a7acf7cee96e5129522ff7c0074c94419","modified":1678478863148},{"_id":"public/articles/4998.html","hash":"9385029eff0a70843fe0655efbc25e32ac92a6dd","modified":1678478863148},{"_id":"public/articles/a7f.html","hash":"bc6e9595eedef148f152c2db924877994ea8de18","modified":1678478863148},{"_id":"public/articles/99b6.html","hash":"86ea059616d7eecf9d5083e53731751303f435fb","modified":1678478863148},{"_id":"public/articles/40e7.html","hash":"66d50fa16aa722fe6375eb35f2e12b5690e5dec1","modified":1678478863148},{"_id":"public/articles/9754.html","hash":"fc6b063a87f674d4fd3e900e89d0197062f052b9","modified":1678478863148},{"_id":"public/articles/ba93.html","hash":"a763a7653820dd0a9fc01df45ae436d40263b9da","modified":1678478863148},{"_id":"public/articles/bd63.html","hash":"9a97eece636f7432a8b32ce14cbc112c3340a8b1","modified":1678478863148},{"_id":"public/articles/4ed.html","hash":"a582397891fce1dead5acdc9bf669fa1eec904ed","modified":1678478863148},{"_id":"public/articles/3ab3.html","hash":"7351d1dccb2a3fabc7ca4b5d78d4deae9a5a4d33","modified":1678478863148},{"_id":"public/articles/2774.html","hash":"fc019dfe084f95d0a79ee9effbdb353db568b777","modified":1678478863148},{"_id":"public/articles/151c.html","hash":"62548116e52e2b021d20847905bd2a6cedfe89de","modified":1678478863148},{"_id":"public/articles/cc23.html","hash":"32659fb1a5575e70170f5c7808c970e5964d7b0c","modified":1678478863148},{"_id":"public/articles/97b5.html","hash":"e6667823b522863086544d1f544abb9289f0c355","modified":1678478863148},{"_id":"public/articles/d7ab.html","hash":"c22b2a2d9681451f6b464ef46c26d3ff4ac3ffb8","modified":1678478863148},{"_id":"public/articles/551e.html","hash":"d7ef655bed3e207d76c7a942296d75b34176b67b","modified":1678478863148},{"_id":"public/articles/f2de.html","hash":"da46c2dfc2ced61a902b16307074bfe7641eb194","modified":1678478863148},{"_id":"public/articles/fc6a.html","hash":"366c95ade98d911da3c11258aecd8382eefb5a91","modified":1678478863148},{"_id":"public/articles/ac9b.html","hash":"ffd00db514395f7beeb71361e41d98014b2994c3","modified":1678478863148},{"_id":"public/articles/10d9.html","hash":"376f7e42c6cd660e4e91bbffa6ae8851d5fc23cf","modified":1678478863148},{"_id":"public/articles/e1f2.html","hash":"c8f54ee30d63e7cc9ead321ff174a396fb38d108","modified":1678478863148},{"_id":"public/articles/fef3.html","hash":"1eb9d060f536a5561af7b1daa00c5cf8e93500a1","modified":1678478863148},{"_id":"public/articles/4576.html","hash":"8cff18ea5586ae3ccb40bbf5ccada6df0e1d8679","modified":1678478863148},{"_id":"public/articles/ec79.html","hash":"636024ce22bfe140ec029a41e1fdad9663c1c675","modified":1678478863148},{"_id":"public/articles/6426.html","hash":"4611903b76e8457442dc4f14619238ef5822cece","modified":1678478863148},{"_id":"public/articles/40e6.html","hash":"7702d4347a8c4fce4561c935a0876ae77ec45da7","modified":1678478863148},{"_id":"public/articles/dd21.html","hash":"c05a5557be6c46ab3874f31b0f6f0bf0bf307b96","modified":1678478863148},{"_id":"public/articles/e255.html","hash":"463f1e7b551459ec146f568c8f3cdc03fef56445","modified":1678478863148},{"_id":"public/articles/ade6.html","hash":"825ca40438846bac4878742473fddc8eafa2f384","modified":1678478863148},{"_id":"public/articles/d49a.html","hash":"c6563ef0f922d4821a13adcb19645264f8779a23","modified":1678478863148},{"_id":"public/articles/9c18.html","hash":"c6bc89d15449cb5ccee8282aab45e44a50f6b51d","modified":1678478863148},{"_id":"public/articles/72b9.html","hash":"9855809e8a670fafdfbbe7e3600d7b09ff2f3a6d","modified":1678478863148},{"_id":"public/articles/ff66.html","hash":"2653ecac724ab3512ca391acd6a2f058a1bbdbed","modified":1678478863148},{"_id":"public/articles/26da.html","hash":"b39b7c30210c2c9480feeda997d538941e50df16","modified":1678478863148},{"_id":"public/articles/5bf8.html","hash":"41ab767b63f4c86f6f3a19727d9a24199e46ff81","modified":1678478863148},{"_id":"public/articles/cb68.html","hash":"a65258814d3aafc86e970f5d9c0aeb955d5fda14","modified":1678478863148},{"_id":"public/articles/2b60.html","hash":"df6bdb284c0dc05e53fa6bf322037fb35c2e6e58","modified":1678478863148},{"_id":"public/articles/227f.html","hash":"a57f89368fb280c07684dbbbb3548f990e64ce81","modified":1678478863148},{"_id":"public/articles/d63a.html","hash":"a3110ec994464fcae3a62d7eea8ddbfa71765371","modified":1678478863148},{"_id":"public/articles/5a60.html","hash":"02406fb27db2c1dae9d7bb2cad9bff1866c15ef6","modified":1678478863148},{"_id":"public/articles/bd29.html","hash":"3d44f149f2d9cd79a63246faa5bd4fb26fb19700","modified":1678478863148},{"_id":"public/articles/8c58.html","hash":"933f1a6b6843bf151382a355a063fe9821547cc0","modified":1678478863148},{"_id":"public/articles/42b7.html","hash":"eda8ed5eafc6d3319bd79b71c91578d65fd869ef","modified":1678478863148},{"_id":"public/articles/48de.html","hash":"59ad368dac6a4359da83dda423b152fd0a4f1c6c","modified":1678478863148},{"_id":"public/articles/ec6.html","hash":"bf4d3378d791daea6cd81496cafed5e3e90875b7","modified":1678478863148},{"_id":"public/articles/7c3d.html","hash":"bec81d34f669c788ec1bfc054cc960b3051d2c11","modified":1678478863148},{"_id":"public/articles/a38e.html","hash":"d7f939500d6cec21af00aac1ab0a46c18cfc5f46","modified":1678478863148},{"_id":"public/articles/3899.html","hash":"bf6e5b2813afc093cdf5b4342d168046ed196c31","modified":1678478863148},{"_id":"public/articles/1ef3.html","hash":"85f6a64ee1cc18c4b9ef49ec266846aaf398fde6","modified":1678478863148},{"_id":"public/articles/1723.html","hash":"9b3a751444bc886334ab32dbe507b4cc311a0b2a","modified":1678478863148},{"_id":"public/articles/1d50.html","hash":"10ebc3b439ac9c1d1d78d8bf9e2f512e5d28069a","modified":1678478863148},{"_id":"public/articles/da3d.html","hash":"8f076789f45174a2fc88ef5f3277e7bd1cc8dfd9","modified":1678478863148},{"_id":"public/articles/86b2.html","hash":"6a613f9fbf6798483446ff293788f36bc352ea67","modified":1678478863148},{"_id":"public/articles/8b92.html","hash":"bffcabeeaeeb681285e447fd5774b20705db3749","modified":1678478863148},{"_id":"public/articles/5b4d.html","hash":"c8e888ae065f2870273a704d9dab1f7ff1a2f3d2","modified":1678478863148},{"_id":"public/articles/c075.html","hash":"7b2811d30fb906b7e399360b565cd4a3d61360f0","modified":1678478863148},{"_id":"public/articles/9cc8.html","hash":"b8c94809dbf53ec3e75161b6dbb16c0d820c229e","modified":1678478863148},{"_id":"public/articles/4ad7.html","hash":"5c65a0dd2dced86739c07b41c26c6835a1ca1222","modified":1678478863148},{"_id":"public/articles/60dd.html","hash":"63b3c2cefb87056117e376830e4251755489b331","modified":1678478863148},{"_id":"public/articles/9b56.html","hash":"74b9cec0d2761c65106eff66c114e701c02a782d","modified":1678478863148},{"_id":"public/articles/ed30.html","hash":"ed716e515a4a50c6746a8208668c4f6e8b60f8ad","modified":1678478863148},{"_id":"public/articles/2893.html","hash":"b1a8c196de2b416e8b68b5d3f6c48050eeaa4d88","modified":1678478863148},{"_id":"public/articles/4ff6.html","hash":"e865db5ec0009641ae937aa3a83f0db89fb8d158","modified":1678478863148},{"_id":"public/articles/409f.html","hash":"bfbba41492281d9040f90626bb6c53ca3a25a10e","modified":1678478863148},{"_id":"public/articles/a3b9.html","hash":"cff2e5e312da137584907914a161f2b370a3307d","modified":1678478863148},{"_id":"public/articles/b919.html","hash":"7fec6e32f37be528451a50733bdf436cb5b10df1","modified":1678478863148},{"_id":"public/articles/cda.html","hash":"66b70854fdbdee5bdfdecd955d9cdf8a1a6368dd","modified":1678478863148},{"_id":"public/articles/7094.html","hash":"05048ab07038be83094b748ecd0759520768978c","modified":1678478863148},{"_id":"public/articles/80b6.html","hash":"756c1cf51a4e79632c8beb12e26c1d212e7ed5b3","modified":1678478863148},{"_id":"public/articles/8950.html","hash":"7676de4a74fcb9887d753f32263d1c27f3883f0f","modified":1678478863148},{"_id":"public/archives/index.html","hash":"e7ae500fab8b33ecc1495cd7a7c494b99c095206","modified":1678478863148},{"_id":"public/archives/page/2/index.html","hash":"be79be1c00f723732f95e392bcc5344156f54bdb","modified":1678478863148},{"_id":"public/archives/page/3/index.html","hash":"81b7b3fb1586bf5a1f9f1f554d0d95626ea53608","modified":1678478863148},{"_id":"public/archives/page/4/index.html","hash":"744675bb6f1c87b12bc699589486aae955b88cbe","modified":1678478863148},{"_id":"public/archives/page/5/index.html","hash":"9afa4e7d13d35fe1a642ff32332f6dc3df69ef8c","modified":1678478863148},{"_id":"public/archives/page/6/index.html","hash":"b758de06c7e0ed162ed0d45b13681950508aea23","modified":1678478863148},{"_id":"public/archives/page/7/index.html","hash":"791e263fcc77008a4337ab7002e58c228c6294ba","modified":1678478863148},{"_id":"public/archives/page/8/index.html","hash":"f1ce7c30f13ba062a1d7f6cde5aa9eca53009e58","modified":1678478863148},{"_id":"public/archives/2021/index.html","hash":"0b369f6d2f0733591e40d326ba9a874c718db42a","modified":1678478863148},{"_id":"public/archives/2021/page/2/index.html","hash":"471bc33b33aa2220845878c2c6762fb98ead4687","modified":1678478863148},{"_id":"public/archives/2021/05/index.html","hash":"7f2885d88a04146edcdd9161cb69ef01fdc971f9","modified":1678478863148},{"_id":"public/archives/2021/06/index.html","hash":"1afa49d95dde1560d446fe241e1335926142ace2","modified":1678478863148},{"_id":"public/archives/2021/07/index.html","hash":"6337a26d3ef8202c4eef0e66a2156658a1cb4dc9","modified":1678478863148},{"_id":"public/archives/2022/index.html","hash":"4ace7f1c2a6e5d696215e6da7b0a70c9b5abd97c","modified":1678478863148},{"_id":"public/archives/2022/page/2/index.html","hash":"04118bfa84dc32a5343ee3636be524ee728604e3","modified":1678478863148},{"_id":"public/archives/2022/page/3/index.html","hash":"aff34c85d3ec3c3ebe4fd9e32a87d350b2844d45","modified":1678478863148},{"_id":"public/archives/2022/page/4/index.html","hash":"9b1b263a7de661efddae0112c9e00b6bb8670378","modified":1678478863148},{"_id":"public/archives/2022/page/5/index.html","hash":"8699bf2b636e975f15f30d85043caca9702d66f1","modified":1678478863148},{"_id":"public/archives/2022/page/6/index.html","hash":"8fed3ac78bac1dac9b1b30355d0bef155aacba46","modified":1678478863148},{"_id":"public/archives/2022/06/index.html","hash":"b63089e0cd37bcf535ccad6abb23e5417995a858","modified":1678478863148},{"_id":"public/archives/2022/07/index.html","hash":"e4f93ae6feea56b58bd39dc8767a2835e9735161","modified":1678478863148},{"_id":"public/archives/2022/10/index.html","hash":"75dbf580b6ebd0f79e315eaf511525053acdc54f","modified":1678478863148},{"_id":"public/archives/2022/10/page/2/index.html","hash":"8ac7f8e0448b630b3d904dbdb4c49b0f2322f2ff","modified":1678478863148},{"_id":"public/archives/2022/10/page/3/index.html","hash":"84745fbec6af1bd39a064b60a8fd1189010a4caf","modified":1678478863148},{"_id":"public/archives/2022/10/page/4/index.html","hash":"346276d7f8b330ce311e89edea9975f4702ef6ab","modified":1678478863148},{"_id":"public/archives/2022/10/page/5/index.html","hash":"912c8936c93fa3817bdc36b6e5b0da1411eb2885","modified":1678478863148},{"_id":"public/archives/2022/11/index.html","hash":"e9b0c8a9a4be47bf36b9d11dbe187b8f9b446659","modified":1678478863148},{"_id":"public/archives/2022/12/index.html","hash":"7ebfe6de536d1db670241c81d9b73c3df43fbceb","modified":1678478863148},{"_id":"public/categories/Net-Core/index.html","hash":"eede9f7b7f274fb557ade181f3d0e3f035b41d69","modified":1678478863148},{"_id":"public/categories/Net-Core/page/2/index.html","hash":"02a48a2f8de62d0d50be090d9c30af6bd8356682","modified":1678478863148},{"_id":"public/categories/Flutter/index.html","hash":"aabf5e409712aadeb0c02a4d2d94b96b9b0392c2","modified":1678478863148},{"_id":"public/categories/Hexo/index.html","hash":"a96f95643050a542c8e9866c7cfa5e226b61dea6","modified":1678478863148},{"_id":"public/categories/前端/index.html","hash":"b0130962edf17ba8ea01db312c35ce6bd1c162b4","modified":1678478863148},{"_id":"public/categories/前端/page/2/index.html","hash":"2dad131fca97807ff7d8ecca0e6619715f9a1eae","modified":1678478863148},{"_id":"public/categories/前端/page/3/index.html","hash":"260c68632d4052884c26aef6d09545a8496d433b","modified":1678478863148},{"_id":"public/categories/前端/page/4/index.html","hash":"44097d5249974a61b37c17aeab52dacdb4676d8e","modified":1678478863148},{"_id":"public/categories/前端/page/5/index.html","hash":"4ef485761f973abd60d9402bbc4bff02bafce297","modified":1678478863148},{"_id":"public/categories/前端/vue2/index.html","hash":"997aae7ea1bce8af265154b02a7978a4b487db74","modified":1678478863148},{"_id":"public/categories/前端/vue2/page/2/index.html","hash":"dc92aa7c734d1ca210098b3441a9280a6d7b94e7","modified":1678478863148},{"_id":"public/categories/前端/vue2/page/3/index.html","hash":"41b0ce10f6f635968defda07be0bff2bfd8a1566","modified":1678478863148},{"_id":"public/categories/前端/vue2/page/4/index.html","hash":"9eb6f7e6350f69d149465c94b96dc6c95078300f","modified":1678478863148},{"_id":"public/categories/前端/vue3/index.html","hash":"367604a8cfb3d4039f0faaff4a26876aada01c5b","modified":1678478863148},{"_id":"public/categories/MySql/index.html","hash":"4bb94b9bcc41171a5f4e67cb92702756c982383b","modified":1678478863148},{"_id":"public/categories/macos/index.html","hash":"4051af11cddf53b58fa947c856b266ef00683460","modified":1678478863148},{"_id":"public/categories/Git/index.html","hash":"72878d004dbfeb8f141e2b3c83523be7dfe52aae","modified":1678478863148},{"_id":"public/categories/VsCode/index.html","hash":"3304f1dee6cd11affacdaa6b2fd5966e48dc42d6","modified":1678478863148},{"_id":"public/categories/Net-Core/RabbitMQ/index.html","hash":"774201521b2ad838156e80e7a00d67fbd14f402f","modified":1678478863148},{"_id":"public/categories/VsCode插件开发/index.html","hash":"969cba37ac93ee5da1b2e427a7c70c4e6798c050","modified":1678478863148},{"_id":"public/categories/Net-Core/RabbitMQ/MySql/index.html","hash":"259aed0dac99a4b15cf35bf15d1937647332aee4","modified":1678478863148},{"_id":"public/categories/Net-Core/RabbitMQ/MySql/Canal/index.html","hash":"6ecb000253bdad2b48afea0c2a88f8134241c37d","modified":1678478863148},{"_id":"public/index.html","hash":"885f741fee319f7f39f556b97c7a1f8e61ebda1a","modified":1678478863148},{"_id":"public/page/2/index.html","hash":"e8ebcf0daaf4a0d71d6dc28a3c7afca94a71d94f","modified":1678478863148},{"_id":"public/page/3/index.html","hash":"20d2528b78c239a4a5774725d71541402f19c0e5","modified":1678478863148},{"_id":"public/page/4/index.html","hash":"8c60090dc8eb167098702a1fd442cf32f22ffc1e","modified":1678478863148},{"_id":"public/page/5/index.html","hash":"d6cd7c54e0e2d7439f987819fdb1ebfeb5f12a3a","modified":1678478863148},{"_id":"public/page/6/index.html","hash":"83c52f2ce036cb71e594a45c2aa136354fb5b16d","modified":1678478863148},{"_id":"public/page/7/index.html","hash":"b39b56318ee8b5884279306f5be88a64ae2c2b14","modified":1678478863148},{"_id":"public/page/8/index.html","hash":"92b8aa948b2f40a8e9192141f6f4b55a0a772bef","modified":1678478863148},{"_id":"public/page/9/index.html","hash":"e83f35444607da09c58c5ada2c4b31dda6fadab0","modified":1678478863148},{"_id":"public/page/10/index.html","hash":"d73e84c0316955a84d87f6bf750dc610c37473f4","modified":1678478863148},{"_id":"public/page/11/index.html","hash":"558234df4026871efb9b6c7d65d65cd10afd213f","modified":1678478863148},{"_id":"public/page/12/index.html","hash":"776ab5782a1784833644de0ab32e92805e6f3e47","modified":1678478863148},{"_id":"public/page/13/index.html","hash":"a45ba9a04bfa87f1e42b82ed26aff677d2117697","modified":1678478863148},{"_id":"public/page/14/index.html","hash":"59aed3fb1d3bac249c14f37d004213467d19e2bd","modified":1678478863148},{"_id":"public/page/15/index.html","hash":"b7b118338d20b672d4860b7d6d52e172283e462c","modified":1678478863148},{"_id":"public/tags/Net-Core/index.html","hash":"98df7eede17a7227254f73b82e24cd54b00cde93","modified":1678478863148},{"_id":"public/tags/Net-Core/page/2/index.html","hash":"346f4bde92c908ff9c0c7e82c945f9cfc8b2d388","modified":1678478863148},{"_id":"public/tags/链路追踪/index.html","hash":"49e8359335c8f2d26b1c22812ade661069645986","modified":1678478863148},{"_id":"public/tags/ApiLinkMonitor/index.html","hash":"7bcd3239e049120669669ffa20cc31b6fddbaefc","modified":1678478863148},{"_id":"public/tags/Dio/index.html","hash":"df730d013fa4a590015f901a4b2be2f3046365d6","modified":1678478863148},{"_id":"public/tags/Flutter/index.html","hash":"05309cec926e82e2a2a322fef03da656c4b4bfef","modified":1678478863148},{"_id":"public/tags/OdinUtils/index.html","hash":"3edd874e725c3c93fbc23f2e58543559af92fed6","modified":1678478863148},{"_id":"public/tags/Plugin/index.html","hash":"773577a6fc8eebfe545369fca000bee4d7752443","modified":1678478863148},{"_id":"public/tags/source-gen/index.html","hash":"6e3f05cd96274b7964b427719d2f70eaf81eff27","modified":1678478863148},{"_id":"public/tags/reflectable/index.html","hash":"68d872e96a74188f240fcfaafe6355ed07b7d269","modified":1678478863148},{"_id":"public/tags/Hexo/index.html","hash":"4cf6c6dd6abbcb0e4dd7b709f087b8109bdd777e","modified":1678478863148},{"_id":"public/tags/Seo/index.html","hash":"4fac46259df5d5b37189790b83e3d32185a4f92c","modified":1678478863148},{"_id":"public/tags/Pure/index.html","hash":"f2f934bc8c137817eb866796e19895e3f716220e","modified":1678478863148},{"_id":"public/tags/IdentityServer4/index.html","hash":"ae549f70300664e436cb24fadbe121d105a9eab7","modified":1678478863148},{"_id":"public/tags/Mysql/index.html","hash":"4ba43fd79d550b06cb71986fa2c454fd5889a231","modified":1678478863148},{"_id":"public/tags/SqlSugar/index.html","hash":"1119ba97f3b6855b6d15540e00951f16282492d6","modified":1678478863148},{"_id":"public/tags/Cap/index.html","hash":"63f35919b2a3c0079708a4cbb21cb001fbe0ff0d","modified":1678478863148},{"_id":"public/tags/Json/index.html","hash":"2bc71a20f369e0460ece49737cfa9e949b01fc41","modified":1678478863148},{"_id":"public/tags/Long类型数据/index.html","hash":"42bd1e659d9acc3380e29b4e55692ff7da6d9b94","modified":1678478863148},{"_id":"public/tags/Log/index.html","hash":"f937c6f3329ff49f354e7769315a84dfb2e9a411","modified":1678478863148},{"_id":"public/tags/Serilog/index.html","hash":"f2d5b000a12b0d4c3e47053ef0d35133b4bcefde","modified":1678478863148},{"_id":"public/tags/vue/index.html","hash":"e42715cf3514008beed6a9aa294c8ecbc6c0be5c","modified":1678478863148},{"_id":"public/tags/插值语法/index.html","hash":"27eff880756583d3dd1dd9827fbba7cec7c192c7","modified":1678478863148},{"_id":"public/tags/v-bind/index.html","hash":"896d229490ab2988c65de3c79ddce03de94d157f","modified":1678478863148},{"_id":"public/tags/v-model/index.html","hash":"405d5d1a78174ac44422ff26f2ec723bba1bf4fb","modified":1678478863148},{"_id":"public/tags/模板语法/index.html","hash":"639ce8698c602099bd095c15658dce2aadfbaaa5","modified":1678478863148},{"_id":"public/tags/vue2/index.html","hash":"37f6e0d569dbdb415170b304a238d139ffd4d150","modified":1678478863148},{"_id":"public/tags/vue2/page/2/index.html","hash":"07522c322efd3788fd5062f00c4349062589a242","modified":1678478863148},{"_id":"public/tags/vue2/page/3/index.html","hash":"4b92cc6461b44e284d30664769de98ff3ec3f1ca","modified":1678478863148},{"_id":"public/tags/vue2/page/4/index.html","hash":"51cc4e9437bc2a8b3a5fa332e8177892804d729d","modified":1678478863148},{"_id":"public/tags/指令语法/index.html","hash":"29f3962b2c5b4b6a02d3a6da6a1f8cefd9a4726a","modified":1678478863148},{"_id":"public/tags/数据绑定/index.html","hash":"ed547cf035dd4c69fc5bcc242ac1c5f74d69c032","modified":1678478863148},{"_id":"public/tags/单向绑定/index.html","hash":"869623f87f95322c18bdabe7c7e86335f7bdb528","modified":1678478863148},{"_id":"public/tags/双向绑定/index.html","hash":"91f7d5f76e93a655aa97111b547613cfbd45a2e3","modified":1678478863148},{"_id":"public/tags/el/index.html","hash":"f20b000b80582fec91e75278020dbca55f237e1f","modified":1678478863148},{"_id":"public/tags/data/index.html","hash":"e170c33529397eaaa87fa82cbd9c53667e768318","modified":1678478863148},{"_id":"public/tags/mvvm/index.html","hash":"3091c044e1339ef5be588078cf3e8b8c6bb6861b","modified":1678478863148},{"_id":"public/tags/JavaScript/index.html","hash":"c46b479b9c43af47c8c914dcc103eec2ca6b173b","modified":1678478863148},{"_id":"public/tags/数据代理/index.html","hash":"b3e19be45aeecd7628b3000cd224e7dcc632dd29","modified":1678478863148},{"_id":"public/tags/defineProperty/index.html","hash":"003d709124435a933cdab0dc0080583b49b7e088","modified":1678478863148},{"_id":"public/tags/click/index.html","hash":"eb78196e5bd8dffcad38d37ae0955de97f1fd6ac","modified":1678478863148},{"_id":"public/tags/eventObject/index.html","hash":"4c0fbfbcc28cfe8e199422595c9b16820002118f","modified":1678478863148},{"_id":"public/tags/keydown/index.html","hash":"6209061496e7c93c7c23a80fb5fa4569dac35d04","modified":1678478863148},{"_id":"public/tags/keyup/index.html","hash":"51c55a511f5df753927c83a04e77ac3c7b5a7be9","modified":1678478863148},{"_id":"public/tags/prevent/index.html","hash":"392ec7ca4b95e18ab19471411c20dc3d44935fd2","modified":1678478863148},{"_id":"public/tags/stop/index.html","hash":"6037966e9ddf079d7385196d1d9dc3d61a22c52e","modified":1678478863148},{"_id":"public/tags/once/index.html","hash":"63b3a699eb7277253bc83d834ef95b99cd1d14a8","modified":1678478863148},{"_id":"public/tags/capture/index.html","hash":"ea61bb4f712fe9649ad454ed19c323a771be4dfe","modified":1678478863148},{"_id":"public/tags/self/index.html","hash":"ed791cf459457f72b41f718ed44bdb203b0379ae","modified":1678478863148},{"_id":"public/tags/passive/index.html","hash":"93018cea69403ef20fd335900a904abe87f41edd","modified":1678478863148},{"_id":"public/tags/计算属性/index.html","hash":"d8864cc4640f9c62a21b4db90d8988dda8c94a1d","modified":1678478863148},{"_id":"public/tags/computed/index.html","hash":"39c9dcaf67cd36253e88e5324cb3826a1b5c8cb8","modified":1678478863148},{"_id":"public/tags/class/index.html","hash":"5a30fd611651e3062f249b12e882ac250ed0b071","modified":1678478863148},{"_id":"public/tags/style/index.html","hash":"420331a74bbda8ee2a5c5cdf1e69f0fec0d16001","modified":1678478863148},{"_id":"public/tags/v-指令/index.html","hash":"29f44c75719ea5f1cd06c20c8a72ec6f8a13ed77","modified":1678478863148},{"_id":"public/tags/指令/index.html","hash":"8a292e27087854b88eab0aaf2f850ec382d1b6ed","modified":1678478863148},{"_id":"public/tags/watch/index.html","hash":"02cda955a8a4ddecdd18768f886a8f96a5637180","modified":1678478863148},{"_id":"public/tags/监视属性/index.html","hash":"9836495e2d291ed90512490b217c4a435ca2b3d3","modified":1678478863148},{"_id":"public/tags/vue-set/index.html","hash":"5ebc40f80ee874da1910270593f0d29a45f43b81","modified":1678478863148},{"_id":"public/tags/Form/index.html","hash":"465c0e3e039a50df4f711aefff0734124d6f2c79","modified":1678478863148},{"_id":"public/tags/Filter/index.html","hash":"02dd16d4a8c00db9e625d7acb733f87d24f66f7f","modified":1678478863148},{"_id":"public/tags/生命周期/index.html","hash":"fdc1a5ffaf57a8e64efe003d2360f79ea9f578fe","modified":1678478863148},{"_id":"public/tags/component/index.html","hash":"86725809b6c821a546a93bbf19389d8a2c872351","modified":1678478863148},{"_id":"public/tags/components/index.html","hash":"5d633e80210046f3cc90801d6c7d7073452c3485","modified":1678478863148},{"_id":"public/tags/cli/index.html","hash":"4b6c83c880bf21d2c861dc4d708143d814a43a91","modified":1678478863148},{"_id":"public/tags/props/index.html","hash":"e72baa3479264ccf6ab6903e93ceb2750f638fce","modified":1678478863148},{"_id":"public/tags/ref属性/index.html","hash":"dc0e031a0181608a7f2f45da99216c3a6ddf9b38","modified":1678478863148},{"_id":"public/tags/maxins/index.html","hash":"713387f3715cc4bb3196df33844e192dd29e0893","modified":1678478863148},{"_id":"public/tags/混入/index.html","hash":"df0e6f4dfe5062b5fb1f6a73252d0fa340f1894b","modified":1678478863148},{"_id":"public/tags/plugins/index.html","hash":"badebe7953526b66a4d4aad153082441a3e0b845","modified":1678478863148},{"_id":"public/tags/webstorage/index.html","hash":"dc9ce5dc6be05e9a9dd484e9b8909e0b4a176eea","modified":1678478863148},{"_id":"public/tags/自定义事件/index.html","hash":"31ce9d81725859dfcf4e86167c5204d2d2910512","modified":1678478863148},{"_id":"public/tags/eventbus/index.html","hash":"8f408f6d45733c21e4f3f3890d8b4f5436eb101e","modified":1678478863148},{"_id":"public/tags/消息订阅/index.html","hash":"88bfd913cd80a9846c8e6fa233c7031749186888","modified":1678478863148},{"_id":"public/tags/subscribe/index.html","hash":"6ada4e21d6f1fb7d8bc26e565e40c387222ded71","modified":1678478863148},{"_id":"public/tags/unsubscribe/index.html","hash":"0092a130e2ea5d973c365417a25031d19c8010cd","modified":1678478863148},{"_id":"public/tags/nexttick/index.html","hash":"b141d0056aa863303a36315d9d8e516402182038","modified":1678478863148},{"_id":"public/tags/proxy/index.html","hash":"bf7192269c4c191baa5636b59c6db3d2c5c32fad","modified":1678478863148},{"_id":"public/tags/axios/index.html","hash":"327f3e6a2cf4448d48d3ce11101f8768e5cfc4ff","modified":1678478863148},{"_id":"public/tags/animate/index.html","hash":"a9d140059f581bd60eef8574bb1557c877e8ae6b","modified":1678478863148},{"_id":"public/tags/vuex/index.html","hash":"0884d32f1b0a1a370959e36617c9e913506b00c9","modified":1678478863148},{"_id":"public/tags/slot/index.html","hash":"7090345383fa2c56cc78e29301538b5ee79234ea","modified":1678478863148},{"_id":"public/tags/插槽/index.html","hash":"baac54e3d26f420a3316038e944a11ea1c6eb74a","modified":1678478863148},{"_id":"public/tags/router/index.html","hash":"1603e471257af46bd0d25ceebcdde6a73d969a00","modified":1678478863148},{"_id":"public/tags/路由/index.html","hash":"c6b25a8d72afe32a8612ba02c164d4fa305a9bef","modified":1678478863148},{"_id":"public/tags/vue3/index.html","hash":"d76a2ca3bfe5256a1b65c0ba02eed567d4cd5a58","modified":1678478863148},{"_id":"public/tags/hook/index.html","hash":"f23c515ed506ba838c1032aceaa3ed8ff5df9636","modified":1678478863148},{"_id":"public/tags/toRef/index.html","hash":"57d1b44514bee09462de51f13edf0e42d432bccd","modified":1678478863148},{"_id":"public/tags/toRefs/index.html","hash":"2f32b518cab90f46da0225e40abe6f324362b8c7","modified":1678478863148},{"_id":"public/tags/compositionApi/index.html","hash":"a8f8dba062cfd704e01ea503879f2e2d48a063f0","modified":1678478863148},{"_id":"public/tags/Pinia/index.html","hash":"9422ee9c44b0d63feaca566eff627c1ea22077ba","modified":1678478863148},{"_id":"public/tags/MySql/index.html","hash":"dc81dbee012d138fd4566a1a2ae300d833241e17","modified":1678478863148},{"_id":"public/tags/macos/index.html","hash":"6d6c0e74b3aacb8db4e2e85108af837ab4a739ed","modified":1678478863148},{"_id":"public/tags/VsCode/index.html","hash":"c6a4a3fca0370bc2d47c14221da5766223f3d110","modified":1678478863148},{"_id":"public/tags/Git/index.html","hash":"1f6c184ea4fedbac87e3091594fdd528192719ae","modified":1678478863148},{"_id":"public/tags/插件/index.html","hash":"cf364b02d11a498f6996c2adf3d8912b789ce82e","modified":1678478863148},{"_id":"public/tags/中文乱码/index.html","hash":"770f1b51c770084b0c70db4d8111aeadf0762d37","modified":1678478863148},{"_id":"public/tags/Nuget/index.html","hash":"33ecd94ea0e0ed1a5403aab43fe6663285d10d86","modified":1678478863148},{"_id":"public/tags/微服务/index.html","hash":"d6b8b71e38bf697492217a02efb572cf3a477000","modified":1678478863148},{"_id":"public/tags/BackgroundService/index.html","hash":"2df075c88bfcc8836276fd90065395780957b5f6","modified":1678478863148},{"_id":"public/tags/后台服务/index.html","hash":"1330042e22906e5a321d323390ee82c22f5a5373","modified":1678478863148},{"_id":"public/tags/Mapster/index.html","hash":"733eae09cb483b425af922dd4aa08575f39185f3","modified":1678478863148},{"_id":"public/tags/Canal/index.html","hash":"8955567090d0dcefc3a528b7c069fff59f6c9d6d","modified":1678478863148},{"_id":"public/tags/RabbitMQ/index.html","hash":"853b5b209f25110b85f02e4af3902521ed583694","modified":1678478863148},{"_id":"public/tags/HttpClientFactory/index.html","hash":"14f10c534cdb0ccfdefef44ac96b142825ae6203","modified":1678478863148},{"_id":"public/robots.txt","hash":"1d4641ebf5c0809a2ae440fe8d6975010c5c5dac","modified":1678478863148},{"_id":"public/images/avatar.jpg","hash":"709b1d1482c3048af833de20c996842c04a29159","modified":1678478863148},{"_id":"public/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1678478863148},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1678478863148},{"_id":"public/images/4ad7/code.png","hash":"b9b726c4c0c50dfa48cf8693fd5be9592e961269","modified":1678478863148},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1678478863148},{"_id":"public/images/4ad7/result.png","hash":"27f1f09b638030bbd24d2bc080baa3c59fd4a1c2","modified":1678478863148},{"_id":"public/images/donate/alipayimg.png","hash":"05b21dc626204a9df8ccc6b532fc389b3be86d96","modified":1678478863148},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1678478863148},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1678478863148},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1678478863148},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1678478863148},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1678478863148},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1678478863148},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1678478863148},{"_id":"public/fonts/README.html","hash":"26a13286f808d3ef09314df865be3049eef3906f","modified":1678478863148},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1678478863148},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1678478863148},{"_id":"public/images/pasted-0.png","hash":"e68d998666ad6cfbe52f0636d88f9452adc316fd","modified":1678478863148},{"_id":"public/images/a38e/05.mvvm.png","hash":"e68d998666ad6cfbe52f0636d88f9452adc316fd","modified":1678478863148},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1678478863148},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1678478863148},{"_id":"public/css/style.css","hash":"6ad1506403ae3916e1d23de173c2cf254a36a1e3","modified":1678478863148},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1678478863148},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1678478863148},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1678478863148},{"_id":"public/images/pasted-1.png","hash":"e362937b7163f1d04576aeb0e11d8012b4a26e4b","modified":1678478863148},{"_id":"public/images/donate/wechatpayimg.png","hash":"93e0b8869fd5178269cc1a153385dce0a04d491c","modified":1678478863148},{"_id":"public/images/4ed/lifecycle.vue3.png","hash":"e362937b7163f1d04576aeb0e11d8012b4a26e4b","modified":1678478863148},{"_id":"public/fonts/iconfont.svg","hash":"1af91521f1c29c231ffc19d7f64696ddcd71470b","modified":1678478863148},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1678478863148},{"_id":"public/images/5bf8/lifecycle.png","hash":"b69386a7b163ad35fa233d3e53c571f48cd71204","modified":1678478863148},{"_id":"public/images/1ef3/03.databind.gif","hash":"0f10462e66f2abcfe5f967f22194d7c4d5b6bdf8","modified":1678478863148}],"Category":[{"name":".Net Core","_id":"clf2yza1w00045cs97drlh1bd"},{"name":"Flutter","_id":"clf2yza21000c5cs93tvj44l5"},{"name":"Hexo","_id":"clf2yza2c00145cs99e27bohs"},{"name":"前端","_id":"clf2yza2e001b5cs9enni6x86"},{"name":"vue2","parent":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza2m001u5cs91qor98fm"},{"name":"vue3","parent":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3c004o5cs9a1jp8v96"},{"name":"MySql","_id":"clf2yza3k005i5cs9gwmubvjo"},{"name":"macos","_id":"clf2yza3m005r5cs90maq3rlf"},{"name":"Git","_id":"clf2yza3o005x5cs93x0u9der"},{"name":"VsCode","_id":"clf2yza3q00645cs9gx8p7yzj"},{"name":"RabbitMQ","parent":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza5500fg5cs90h6l2jp0"},{"name":"VsCode插件开发","_id":"clf2yza5600fk5cs97p10e38y"},{"name":"MySql","parent":"clf2yza5500fg5cs90h6l2jp0","_id":"clf2yza5600fo5cs9a2ms2aes"},{"name":"Canal","parent":"clf2yza5600fo5cs9a2ms2aes","_id":"clf2yza5700ft5cs97oupfysd"}],"Data":[{"_id":"gallery","data":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}},{"_id":"links","data":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}],"Page":[{"_content":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\" />\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\t\t<meta name=\"robots\" content=\"all\" />\n\t\t<meta name=\"robots\" content=\"index,follow\" />\n\t\t<link\n\t\t\trel=\"stylesheet\"\n\t\t\ttype=\"text/css\"\n\t\t\thref=\"https://qzone.qq.com/gy/404/style/404style.css\"\n\t\t/>\n\t</head>\n\t<body>\n\t\t<script\n\t\t\ttype=\"text/plain\"\n\t\t\tsrc=\"http://www.qq.com/404/search_children.js\"\n\t\t\tcharset=\"utf-8\"\n\t\t\thomePageUrl=\"/\"\n\t\t\thomePageName=\"回到我的主页\"\n\t\t></script>\n\t\t<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n\t\t<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n\t</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\" />\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\t\t<meta name=\"robots\" content=\"all\" />\n\t\t<meta name=\"robots\" content=\"index,follow\" />\n\t\t<link\n\t\t\trel=\"stylesheet\"\n\t\t\ttype=\"text/css\"\n\t\t\thref=\"https://qzone.qq.com/gy/404/style/404style.css\"\n\t\t/>\n\t</head>\n\t<body>\n\t\t<script\n\t\t\ttype=\"text/plain\"\n\t\t\tsrc=\"http://www.qq.com/404/search_children.js\"\n\t\t\tcharset=\"utf-8\"\n\t\t\thomePageUrl=\"/\"\n\t\t\thomePageName=\"回到我的主页\"\n\t\t></script>\n\t\t<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n\t\t<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n\t</body>\n</html>\n","date":"2023-03-10T19:50:06.807Z","updated":"2021-05-25T11:19:58.081Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"clf2yza1p00005cs92hf93qo8","content":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\" />\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\t\t<meta name=\"robots\" content=\"all\" />\n\t\t<meta name=\"robots\" content=\"index,follow\" />\n\t\t<link\n\t\t\trel=\"stylesheet\"\n\t\t\ttype=\"text/css\"\n\t\t\thref=\"https://qzone.qq.com/gy/404/style/404style.css\"\n\t\t/>\n\t</head>\n\t<body>\n\t\t<script\n\t\t\ttype=\"text/plain\"\n\t\t\tsrc=\"http://www.qq.com/404/search_children.js\"\n\t\t\tcharset=\"utf-8\"\n\t\t\thomePageUrl=\"/\"\n\t\t\thomePageName=\"回到我的主页\"\n\t\t></script>\n\t\t<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n\t\t<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n\t</body>\n</html>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\" />\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n\t\t<meta name=\"robots\" content=\"all\" />\n\t\t<meta name=\"robots\" content=\"index,follow\" />\n\t\t<link\n\t\t\trel=\"stylesheet\"\n\t\t\ttype=\"text/css\"\n\t\t\thref=\"https://qzone.qq.com/gy/404/style/404style.css\"\n\t\t/>\n\t</head>\n\t<body>\n\t\t<script\n\t\t\ttype=\"text/plain\"\n\t\t\tsrc=\"http://www.qq.com/404/search_children.js\"\n\t\t\tcharset=\"utf-8\"\n\t\t\thomePageUrl=\"/\"\n\t\t\thomePageName=\"回到我的主页\"\n\t\t></script>\n\t\t<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n\t\t<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n\t</body>\n</html>\n"},{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"_content":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\n---\n<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","date":"2023-03-10T19:50:06.807Z","updated":"2021-05-23T16:01:47.546Z","path":"/404.html","layout":"page","_id":"clf2yza1u00025cs96gdc4jzp","content":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n"},{"title":"书单","layout":"books","comments":0,"sidebar":"none","_content":"","source":"books/index.md","raw":"---\ntitle: 书单\nlayout: books\ncomments: false\nsidebar: none\n---","date":"2023-03-10T19:50:06.808Z","updated":"2021-05-23T16:01:47.549Z","path":"books/index.html","_id":"clf2yza1y00065cs94resbykf","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"关于","description":"个人简介","layout":"about","comments":0,"sidebar":"custom","_content":"\n### 一个热爱编程性格开朗的 Coder，喜欢折腾，爱写代码，并将它作为一种生活乐趣，标准技术宅一个。也喜欢看老电影，老电视剧，有精力的老年 Coder。\n\n```mermaid\nsequenceDiagram\n    participant z as today\n    participant l as tomorrow\n    loop day after day\n        z->>l: coding？\n        l-->>z: yeah,happy coding\n        activate z\n        Note left of z: think await\n        alt not yet coding\n            z-xl: no\n        else conding\n            z-xl: happy\n        end\n        opt find happy\n            l-->z: Coding makes us happy Work\n        end\n    end\n```\n","source":"about/index.md","raw":"---\ntitle: 关于\ndescription: 个人简介\nlayout: about\ncomments: false\nsidebar: custom\n---\n\n### 一个热爱编程性格开朗的 Coder，喜欢折腾，爱写代码，并将它作为一种生活乐趣，标准技术宅一个。也喜欢看老电影，老电视剧，有精力的老年 Coder。\n\n```mermaid\nsequenceDiagram\n    participant z as today\n    participant l as tomorrow\n    loop day after day\n        z->>l: coding？\n        l-->>z: yeah,happy coding\n        activate z\n        Note left of z: think await\n        alt not yet coding\n            z-xl: no\n        else conding\n            z-xl: happy\n        end\n        opt find happy\n            l-->z: Coding makes us happy Work\n        end\n    end\n```\n","date":"2023-03-10T19:50:06.807Z","updated":"2021-05-25T13:01:43.352Z","path":"about/index.html","_id":"clf2yza1z00085cs9dknd7vqr","content":"<h3 id=\"一个热爱编程性格开朗的-coder喜欢折腾爱写代码并将它作为一种生活乐趣标准技术宅一个-也喜欢看老电影老电视剧有精力的老年-coder\"><a class=\"markdownIt-Anchor\" href=\"#一个热爱编程性格开朗的-coder喜欢折腾爱写代码并将它作为一种生活乐趣标准技术宅一个-也喜欢看老电影老电视剧有精力的老年-coder\"></a> 一个热爱编程性格开朗的 Coder，喜欢折腾，爱写代码，并将它作为一种生活乐趣，标准技术宅一个。也喜欢看老电影，老电视剧，有精力的老年 Coder。</h3>\n<pre class=\"mermaid\">sequenceDiagram\n    participant z as today\n    participant l as tomorrow\n    loop day after day\n        z->>l: coding？\n        l-->>z: yeah,happy coding\n        activate z\n        Note left of z: think await\n        alt not yet coding\n            z-xl: no\n        else conding\n            z-xl: happy\n        end\n        opt find happy\n            l-->z: Coding makes us happy Work\n        end\n    end</pre>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h3 id=\"一个热爱编程性格开朗的-coder喜欢折腾爱写代码并将它作为一种生活乐趣标准技术宅一个-也喜欢看老电影老电视剧有精力的老年-coder\"><a class=\"markdownIt-Anchor\" href=\"#一个热爱编程性格开朗的-coder喜欢折腾爱写代码并将它作为一种生活乐趣标准技术宅一个-也喜欢看老电影老电视剧有精力的老年-coder\"></a> 一个热爱编程性格开朗的 Coder，喜欢折腾，爱写代码，并将它作为一种生活乐趣，标准技术宅一个。也喜欢看老电影，老电视剧，有精力的老年 Coder。</h3>\n<pre class=\"mermaid\">sequenceDiagram\n    participant z as today\n    participant l as tomorrow\n    loop day after day\n        z->>l: coding？\n        l-->>z: yeah,happy coding\n        activate z\n        Note left of z: think await\n        alt not yet coding\n            z-xl: no\n        else conding\n            z-xl: happy\n        end\n        opt find happy\n            l-->z: Coding makes us happy Work\n        end\n    end</pre>\n"},{"title":"分类","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\nlayout: categories\ncomments: false\n---\n","date":"2023-03-10T19:50:06.808Z","updated":"2021-05-23T16:01:47.549Z","path":"categories/index.html","_id":"clf2yza21000a5cs9bqhn83uo","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2023-03-10T19:50:06.809Z","updated":"2021-05-23T16:01:47.551Z","path":"repository/index.html","_id":"clf2yza22000e5cs9h21i7bb4","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"友情链接","layout":"links","comments":1,"sidebar":"none","_content":"","source":"links/index.md","raw":"---\ntitle: 友情链接\nlayout: links\ncomments: true\nsidebar: none\n---","date":"2023-03-10T19:50:06.809Z","updated":"2021-05-23T16:01:47.550Z","path":"links/index.html","_id":"clf2yza23000g5cs9gqi6d4rz","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"标签","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\nlayout: tags\ncomments: false\n---\n","date":"2023-03-10T19:50:06.810Z","updated":"2021-05-23T16:01:47.552Z","path":"tags/index.html","_id":"clf2yza26000l5cs93cm610xa","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""}],"Post":[{"title":"ApiLinkMonitor 单服务链路追踪框架","author":"OdinSam","abbrlink":"5b4d","date":"2021-07-24T05:30:00.000Z","_content":">在平时的开发中，虽然我们有日志信息、报错信息等等，但是我们依然在某些时候需要查看项目中方法调用的来龙去脉，这种信息一般叫做链路信息。这里介绍一个单服务用于中小型项目的链路追踪框架。\n\n<!--more-->\n\n#### 1. 简介\n\n项目基于 [OdinInjectCore](https://github.com/odinsam/OdinPlugs.OdinInject) 和 [SnowFlake](https://github.com/odinsam/OdinPlugs.SnowFlake) 框架开发，使用 .net core 中间件实现，主要用到了 AspectCore.Core 第三方框架为底层服务类方法调用的链路监控。监控的项目调用的链路信息入库 mongo，所以需要搭配 mongo 一起使用.\n\n#### 2. 使用\n\n```csharp\n// 注入链路监控\nservices\n    .AddSingletonSnowFlake(dataCenterId, workerId)\n    .AddOdinTransientMongoDb(\n        opt => { opt.ConnectionString = mongoConnection; opt.DbName = databaseName; })\n    .AddOdinTransientInject<IOdinApiLinkMonitor>();\n\nservices.ConfigureDynamicProxy(config =>\n    {\n        // ~ 使用通配符的特定全局拦截器\n        config.Interceptors.AddTyped<OdinAspectCoreInterceptorAttribute>(Predicates.ForService(\"*Service\"));\n    });\n```\n\n#### 3. 链路数据\n\ncontroller 调用的 service 类需要以 Service 结尾,例如 接口 ITestService 和 实现类 TestService,controller 的 api 方法被调用后生成链路数据.\n所有数据均进入 mongo。\n\n```json\n{\n    // 链路的 雪花Id，本次链路唯一\n    \"Id\": 206324387228553216,\n    // 链路 当前的雪花Id\n    \"CurrentId\": 206324387245330432,\n    // 链路状态\n    \"LinkStatusEnum\": 0,\n    // 链路状态描述 start 表示本次链路开始\n    \"LinkStatusStr\": \"Start\",\n    // 上层链路雪花Id 0代表没有上层链路\n    \"LinkPrevious\": 0,\n    // 链路调用返回的状态\n    \"InvokerReturnStatusEnum\": 0,\n    // 链路调用返回的状态描述\n    \"InvokerReturnStatusStr\": null,\n    // 下级链路雪花Id\n    \"LinkNext\": 206324387245330433,\n    // 链路耗时\n    \"ElapsedTime\": null,\n    // 链路调用的完整类名\n    \"InvokerClassFullName\": null,\n    // 链路调用的类名\n    \"InvokerClassName\": null,\n    // 调用的方法名\n    \"InvokerMethodName\": null,\n    // 本次链路的需要 从小到大排序\n    \"LinkSort\": 0\n}\n\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324394790883328,\n    \"LinkStatusEnum\": 1,\n    // 链路状态描述  Invoker 表示链路调用中\n    \"LinkStatusStr\": \"Invoker\",\n    // 与上一层链路的 LinkNext 对应\n    \"LinkPrevious\": 206324387245330433,\n    \"InvokerReturnStatusEnum\": 0,\n    \"InvokerReturnStatusStr\": null,\n    \"LinkNext\": 206324394790883329,\n    \"ElapsedTime\": null,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.ITestService\",\n    \"InvokerClassName\": \"ITestService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 1\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324394962849792,\n    \"LinkStatusEnum\": 1,\n    \"LinkStatusStr\": \"Invoker\",\n    \"LinkPrevious\": 206324394790883329,\n    \"InvokerReturnStatusEnum\": 0,\n    \"InvokerReturnStatusStr\": null,\n    \"LinkNext\": 206324394962849793,\n    \"ElapsedTime\": null,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.IInerService\",\n    \"InvokerClassName\": \"IInerService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 2\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324395122233344,\n    \"LinkStatusEnum\": 1,\n    \"LinkStatusStr\": \"Invoker\",\n    \"LinkPrevious\": 206324394962849793,\n    \"InvokerReturnStatusEnum\": 0,\n    \"InvokerReturnStatusStr\": null,\n    \"LinkNext\": 206324395122233345,\n    \"ElapsedTime\": null,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.ITTService\",\n    \"InvokerClassName\": \"ITTService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 3\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324395277422592,\n    \"LinkStatusEnum\": 3,\n    //  链路状态描述  ToEndReturn 表示链路调用返回\n    \"LinkStatusStr\": \"ToEndReturn\",\n    \"LinkPrevious\": 206324395122233345,\n    \"InvokerReturnStatusEnum\": 2,\n    // 链路调用返回的状态描述 CatchReturn 表示调用出现异常 但是被catch捕获\n    \"InvokerReturnStatusStr\": \"CatchReturn\",\n    \"LinkNext\": 206324395277422593,\n    \"ElapsedTime\": 37,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.ITTService\",\n    \"InvokerClassName\": \"ITTService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 4\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324395520692224,\n    \"LinkStatusEnum\": 3,\n    \"LinkStatusStr\": \"ToEndReturn\",\n    \"LinkPrevious\": 206324395277422593,\n    \"InvokerReturnStatusEnum\": 2,\n    \"InvokerReturnStatusStr\": \"CatchReturn\",\n    \"LinkNext\": 206324395520692225,\n    \"ElapsedTime\": 133,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.IInerService\",\n    \"InvokerClassName\": \"IInerService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 5\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324395667492864,\n    \"LinkStatusEnum\": 3,\n    \"LinkStatusStr\": \"ToEndReturn\",\n    \"LinkPrevious\": 206324395520692225,\n    \"InvokerReturnStatusEnum\": 2,\n    \"InvokerReturnStatusStr\": \"CatchReturn\",\n    \"LinkNext\": 206324395667492865,\n    \"ElapsedTime\": 210,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.ITestService\",\n    \"InvokerClassName\": \"ITestService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 6\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324396925784064,\n    \"LinkStatusEnum\": 2,\n    //  链路状态描述  Over 表示本次链路调用结束\n    \"LinkStatusStr\": \"Over\",\n    \"LinkPrevious\": 206324395667492865,\n    \"InvokerReturnStatusEnum\": 1,\n    // 调用成功结束\n    \"InvokerReturnStatusStr\": \"Success\",\n    \"LinkNext\": 0,\n    // 本次调用 2558 ms\n    \"ElapsedTime\": 2558,\n    \"InvokerClassFullName\": null,\n    \"InvokerClassName\": null,\n    \"InvokerMethodName\": null,\n    \"LinkSort\": 7\n}\n```\n\n#### 4. 解析\n\n通过链路数据得出结论：\n本次 api 调用：\n首先 调用 OdinCore.Services.InterfaceServices.ITestService 类的 show 方法,方法内部调用 OdinCore.Services.InterfaceServices.IInerService 类的 show 方法，\n然后又调用 OdinCore.Services.InterfaceServices.ITTService 类的 show 方法，结果调用出错，但是被 catch 捕获最后返回。\n\nswagger 调用返回信息如下:\n\n```json\n{\n    \"SnowFlakeId\": \"206324387228553216\",\n    \"Data\": {\n        \"ClassName\": \"System.Exception\",\n        \"Message\": \"ttservice throw\",\n        \"Data\": null,\n        \"InnerException\": null,\n        \"HelpURL\": null,\n        \"StackTraceString\": \"   at OdinPlugs.OdinMvcCore.OdinFilter.ApiInvokerFilterAttribute.OnActionExecuted(ActionExecutedContext context) in /Users/odin/workSpace/github/odinmaf/OdinPlugs/OdinMvcCore/OdinFilter/ApiInvokFilterAttribute.cs:line 109\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ExceptionContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeNextResourceFilter()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at OdinPlugs.ApiLinkMonitor.OdinMiddleware.OdinExceptionMiddleware.Invoke(HttpContext context) in /Users/odin/workSpace/github/odinmaf/OdinPlugs.ApiLinkMonitor/OdinMiddleware/OdinExceptionMiddleware.cs:line 34\",\n        \"RemoteStackTraceString\": null,\n        \"RemoteStackIndex\": 0,\n        \"ExceptionMethod\": null,\n        \"HResult\": -2146233088,\n        \"Source\": \"AspectCore.Core\",\n        \"WatsonBuckets\": null\n    },\n    \"StatusCode\": \"sys-error\",\n    \"ErrorMessage\": \"系统异常，请联系管理员\",\n    \"Message\": \"系统异常:[sys-error]\"\n}\n```\n\n通过相同的雪花 Id 最后会清晰的分析出整个调用过程中的过程，并且如果能够结合 [OdinPlugs](https://github.com/odinsam/OdinPlugin) 框架,可以监控到 controller 中 api 的调用记录，包括入参、时间、返回信息等会更加详细。\n\n具体的代码在 [GitHub](https://github.com/odinsam/OdinPlugs.ApiLinkMonitor) [![nuget](https://img.shields.io/nuget/v/OdinPlugs.ApiLinkMonitor)](https://www.nuget.org/packages/OdinPlugs.ApiLinkMonitor)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/ApiLinkMonitor-单服务链路追踪框架.md","raw":"title: ApiLinkMonitor 单服务链路追踪框架\nauthor: OdinSam\nabbrlink: 5b4d\ntags:\n  - .Net Core\n  - 链路追踪\n  - ApiLinkMonitor\ncategories:\n  - .Net Core\ndate: 2021-07-24 13:30:00\n---\n>在平时的开发中，虽然我们有日志信息、报错信息等等，但是我们依然在某些时候需要查看项目中方法调用的来龙去脉，这种信息一般叫做链路信息。这里介绍一个单服务用于中小型项目的链路追踪框架。\n\n<!--more-->\n\n#### 1. 简介\n\n项目基于 [OdinInjectCore](https://github.com/odinsam/OdinPlugs.OdinInject) 和 [SnowFlake](https://github.com/odinsam/OdinPlugs.SnowFlake) 框架开发，使用 .net core 中间件实现，主要用到了 AspectCore.Core 第三方框架为底层服务类方法调用的链路监控。监控的项目调用的链路信息入库 mongo，所以需要搭配 mongo 一起使用.\n\n#### 2. 使用\n\n```csharp\n// 注入链路监控\nservices\n    .AddSingletonSnowFlake(dataCenterId, workerId)\n    .AddOdinTransientMongoDb(\n        opt => { opt.ConnectionString = mongoConnection; opt.DbName = databaseName; })\n    .AddOdinTransientInject<IOdinApiLinkMonitor>();\n\nservices.ConfigureDynamicProxy(config =>\n    {\n        // ~ 使用通配符的特定全局拦截器\n        config.Interceptors.AddTyped<OdinAspectCoreInterceptorAttribute>(Predicates.ForService(\"*Service\"));\n    });\n```\n\n#### 3. 链路数据\n\ncontroller 调用的 service 类需要以 Service 结尾,例如 接口 ITestService 和 实现类 TestService,controller 的 api 方法被调用后生成链路数据.\n所有数据均进入 mongo。\n\n```json\n{\n    // 链路的 雪花Id，本次链路唯一\n    \"Id\": 206324387228553216,\n    // 链路 当前的雪花Id\n    \"CurrentId\": 206324387245330432,\n    // 链路状态\n    \"LinkStatusEnum\": 0,\n    // 链路状态描述 start 表示本次链路开始\n    \"LinkStatusStr\": \"Start\",\n    // 上层链路雪花Id 0代表没有上层链路\n    \"LinkPrevious\": 0,\n    // 链路调用返回的状态\n    \"InvokerReturnStatusEnum\": 0,\n    // 链路调用返回的状态描述\n    \"InvokerReturnStatusStr\": null,\n    // 下级链路雪花Id\n    \"LinkNext\": 206324387245330433,\n    // 链路耗时\n    \"ElapsedTime\": null,\n    // 链路调用的完整类名\n    \"InvokerClassFullName\": null,\n    // 链路调用的类名\n    \"InvokerClassName\": null,\n    // 调用的方法名\n    \"InvokerMethodName\": null,\n    // 本次链路的需要 从小到大排序\n    \"LinkSort\": 0\n}\n\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324394790883328,\n    \"LinkStatusEnum\": 1,\n    // 链路状态描述  Invoker 表示链路调用中\n    \"LinkStatusStr\": \"Invoker\",\n    // 与上一层链路的 LinkNext 对应\n    \"LinkPrevious\": 206324387245330433,\n    \"InvokerReturnStatusEnum\": 0,\n    \"InvokerReturnStatusStr\": null,\n    \"LinkNext\": 206324394790883329,\n    \"ElapsedTime\": null,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.ITestService\",\n    \"InvokerClassName\": \"ITestService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 1\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324394962849792,\n    \"LinkStatusEnum\": 1,\n    \"LinkStatusStr\": \"Invoker\",\n    \"LinkPrevious\": 206324394790883329,\n    \"InvokerReturnStatusEnum\": 0,\n    \"InvokerReturnStatusStr\": null,\n    \"LinkNext\": 206324394962849793,\n    \"ElapsedTime\": null,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.IInerService\",\n    \"InvokerClassName\": \"IInerService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 2\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324395122233344,\n    \"LinkStatusEnum\": 1,\n    \"LinkStatusStr\": \"Invoker\",\n    \"LinkPrevious\": 206324394962849793,\n    \"InvokerReturnStatusEnum\": 0,\n    \"InvokerReturnStatusStr\": null,\n    \"LinkNext\": 206324395122233345,\n    \"ElapsedTime\": null,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.ITTService\",\n    \"InvokerClassName\": \"ITTService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 3\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324395277422592,\n    \"LinkStatusEnum\": 3,\n    //  链路状态描述  ToEndReturn 表示链路调用返回\n    \"LinkStatusStr\": \"ToEndReturn\",\n    \"LinkPrevious\": 206324395122233345,\n    \"InvokerReturnStatusEnum\": 2,\n    // 链路调用返回的状态描述 CatchReturn 表示调用出现异常 但是被catch捕获\n    \"InvokerReturnStatusStr\": \"CatchReturn\",\n    \"LinkNext\": 206324395277422593,\n    \"ElapsedTime\": 37,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.ITTService\",\n    \"InvokerClassName\": \"ITTService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 4\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324395520692224,\n    \"LinkStatusEnum\": 3,\n    \"LinkStatusStr\": \"ToEndReturn\",\n    \"LinkPrevious\": 206324395277422593,\n    \"InvokerReturnStatusEnum\": 2,\n    \"InvokerReturnStatusStr\": \"CatchReturn\",\n    \"LinkNext\": 206324395520692225,\n    \"ElapsedTime\": 133,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.IInerService\",\n    \"InvokerClassName\": \"IInerService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 5\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324395667492864,\n    \"LinkStatusEnum\": 3,\n    \"LinkStatusStr\": \"ToEndReturn\",\n    \"LinkPrevious\": 206324395520692225,\n    \"InvokerReturnStatusEnum\": 2,\n    \"InvokerReturnStatusStr\": \"CatchReturn\",\n    \"LinkNext\": 206324395667492865,\n    \"ElapsedTime\": 210,\n    \"InvokerClassFullName\": \"OdinCore.Services.InterfaceServices.ITestService\",\n    \"InvokerClassName\": \"ITestService\",\n    \"InvokerMethodName\": \"show\",\n    \"LinkSort\": 6\n}\n\n{\n    \"Id\": 206324387228553216,\n    \"CurrentId\": 206324396925784064,\n    \"LinkStatusEnum\": 2,\n    //  链路状态描述  Over 表示本次链路调用结束\n    \"LinkStatusStr\": \"Over\",\n    \"LinkPrevious\": 206324395667492865,\n    \"InvokerReturnStatusEnum\": 1,\n    // 调用成功结束\n    \"InvokerReturnStatusStr\": \"Success\",\n    \"LinkNext\": 0,\n    // 本次调用 2558 ms\n    \"ElapsedTime\": 2558,\n    \"InvokerClassFullName\": null,\n    \"InvokerClassName\": null,\n    \"InvokerMethodName\": null,\n    \"LinkSort\": 7\n}\n```\n\n#### 4. 解析\n\n通过链路数据得出结论：\n本次 api 调用：\n首先 调用 OdinCore.Services.InterfaceServices.ITestService 类的 show 方法,方法内部调用 OdinCore.Services.InterfaceServices.IInerService 类的 show 方法，\n然后又调用 OdinCore.Services.InterfaceServices.ITTService 类的 show 方法，结果调用出错，但是被 catch 捕获最后返回。\n\nswagger 调用返回信息如下:\n\n```json\n{\n    \"SnowFlakeId\": \"206324387228553216\",\n    \"Data\": {\n        \"ClassName\": \"System.Exception\",\n        \"Message\": \"ttservice throw\",\n        \"Data\": null,\n        \"InnerException\": null,\n        \"HelpURL\": null,\n        \"StackTraceString\": \"   at OdinPlugs.OdinMvcCore.OdinFilter.ApiInvokerFilterAttribute.OnActionExecuted(ActionExecutedContext context) in /Users/odin/workSpace/github/odinmaf/OdinPlugs/OdinMvcCore/OdinFilter/ApiInvokFilterAttribute.cs:line 109\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ExceptionContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeNextResourceFilter()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at OdinPlugs.ApiLinkMonitor.OdinMiddleware.OdinExceptionMiddleware.Invoke(HttpContext context) in /Users/odin/workSpace/github/odinmaf/OdinPlugs.ApiLinkMonitor/OdinMiddleware/OdinExceptionMiddleware.cs:line 34\",\n        \"RemoteStackTraceString\": null,\n        \"RemoteStackIndex\": 0,\n        \"ExceptionMethod\": null,\n        \"HResult\": -2146233088,\n        \"Source\": \"AspectCore.Core\",\n        \"WatsonBuckets\": null\n    },\n    \"StatusCode\": \"sys-error\",\n    \"ErrorMessage\": \"系统异常，请联系管理员\",\n    \"Message\": \"系统异常:[sys-error]\"\n}\n```\n\n通过相同的雪花 Id 最后会清晰的分析出整个调用过程中的过程，并且如果能够结合 [OdinPlugs](https://github.com/odinsam/OdinPlugin) 框架,可以监控到 controller 中 api 的调用记录，包括入参、时间、返回信息等会更加详细。\n\n具体的代码在 [GitHub](https://github.com/odinsam/OdinPlugs.ApiLinkMonitor) [![nuget](https://img.shields.io/nuget/v/OdinPlugs.ApiLinkMonitor)](https://www.nuget.org/packages/OdinPlugs.ApiLinkMonitor)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"ApiLinkMonitor-单服务链路追踪框架","published":1,"updated":"2023-03-10T05:37:04.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza1s00015cs9dwgb0ips","content":"<blockquote>\n<p>在平时的开发中，虽然我们有日志信息、报错信息等等，但是我们依然在某些时候需要查看项目中方法调用的来龙去脉，这种信息一般叫做链路信息。这里介绍一个单服务用于中小型项目的链路追踪框架。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-简介\"><a class=\"markdownIt-Anchor\" href=\"#1-简介\"></a> 1. 简介</h4>\n<p>项目基于 <a href=\"https://github.com/odinsam/OdinPlugs.OdinInject\">OdinInjectCore</a> 和 <a href=\"https://github.com/odinsam/OdinPlugs.SnowFlake\">SnowFlake</a> 框架开发，使用 .net core 中间件实现，主要用到了 AspectCore.Core 第三方框架为底层服务类方法调用的链路监控。监控的项目调用的链路信息入库 mongo，所以需要搭配 mongo 一起使用.</p>\n<h4 id=\"2-使用\"><a class=\"markdownIt-Anchor\" href=\"#2-使用\"></a> 2. 使用</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注入链路监控</span></span><br><span class=\"line\">services</span><br><span class=\"line\">    .AddSingletonSnowFlake(dataCenterId, workerId)</span><br><span class=\"line\">    .AddOdinTransientMongoDb(</span><br><span class=\"line\">        opt =&gt; &#123; opt.ConnectionString = mongoConnection; opt.DbName = databaseName; &#125;)</span><br><span class=\"line\">    .AddOdinTransientInject&lt;IOdinApiLinkMonitor&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">services.ConfigureDynamicProxy(config =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// ~ 使用通配符的特定全局拦截器</span></span><br><span class=\"line\">        config.Interceptors.AddTyped&lt;OdinAspectCoreInterceptorAttribute&gt;(Predicates.ForService(<span class=\"string\">&quot;*Service&quot;</span>));</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-链路数据\"><a class=\"markdownIt-Anchor\" href=\"#3-链路数据\"></a> 3. 链路数据</h4>\n<p>controller 调用的 service 类需要以 Service 结尾,例如 接口 ITestService 和 实现类 TestService,controller 的 api 方法被调用后生成链路数据.<br />\n所有数据均进入 mongo。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 链路的 雪花Id，本次链路唯一</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路 当前的雪花Id</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324387245330432</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路状态</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路状态描述 start 表示本次链路开始</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Start&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 上层链路雪花Id 0代表没有上层链路</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用返回的状态</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用返回的状态描述</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 下级链路雪花Id</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324387245330433</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路耗时</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用的完整类名</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用的类名</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 调用的方法名</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 本次链路的需要 从小到大排序</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324394790883328</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路状态描述  Invoker 表示链路调用中</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Invoker&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 与上一层链路的 LinkNext 对应</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324387245330433</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324394790883329</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.ITestService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;ITestService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324394962849792</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Invoker&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324394790883329</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324394962849793</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.IInerService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;IInerService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324395122233344</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Invoker&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324394962849793</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324395122233345</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.ITTService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;ITTService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324395277422592</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"comment\">//  链路状态描述  ToEndReturn 表示链路调用返回</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;ToEndReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324395122233345</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用返回的状态描述 CatchReturn 表示调用出现异常 但是被catch捕获</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"string\">&quot;CatchReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324395277422593</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"number\">37</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.ITTService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;ITTService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324395520692224</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;ToEndReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324395277422593</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"string\">&quot;CatchReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324395520692225</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"number\">133</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.IInerService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;IInerService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">5</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324395667492864</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;ToEndReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324395520692225</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"string\">&quot;CatchReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324395667492865</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"number\">210</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.ITestService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;ITestService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">6</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324396925784064</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"comment\">//  链路状态描述  Over 表示本次链路调用结束</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Over&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324395667492865</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 调用成功结束</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"string\">&quot;Success&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 本次调用 2558 ms</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"number\">2558</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">7</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-解析\"><a class=\"markdownIt-Anchor\" href=\"#4-解析\"></a> 4. 解析</h4>\n<p>通过链路数据得出结论：<br />\n本次 api 调用：<br />\n首先 调用 OdinCore.Services.InterfaceServices.ITestService 类的 show 方法,方法内部调用 OdinCore.Services.InterfaceServices.IInerService 类的 show 方法，<br />\n然后又调用 OdinCore.Services.InterfaceServices.ITTService 类的 show 方法，结果调用出错，但是被 catch 捕获最后返回。</p>\n<p>swagger 调用返回信息如下:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;SnowFlakeId&quot;</span>: <span class=\"string\">&quot;206324387228553216&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;Data&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;ClassName&quot;</span>: <span class=\"string\">&quot;System.Exception&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;Message&quot;</span>: <span class=\"string\">&quot;ttservice throw&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;Data&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;InnerException&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;HelpURL&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;StackTraceString&quot;</span>: <span class=\"string\">&quot;   at OdinPlugs.OdinMvcCore.OdinFilter.ApiInvokerFilterAttribute.OnActionExecuted(ActionExecutedContext context) in /Users/odin/workSpace/github/odinmaf/OdinPlugs/OdinMvcCore/OdinFilter/ApiInvokFilterAttribute.cs:line 109\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeNextExceptionFilterAsync&gt;g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ExceptionContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeNextResourceFilter()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeAsync&gt;g__Logged|17_1(ResourceInvoker invoker)\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.&lt;Invoke&gt;g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at OdinPlugs.ApiLinkMonitor.OdinMiddleware.OdinExceptionMiddleware.Invoke(HttpContext context) in /Users/odin/workSpace/github/odinmaf/OdinPlugs.ApiLinkMonitor/OdinMiddleware/OdinExceptionMiddleware.cs:line 34&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;RemoteStackTraceString&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;RemoteStackIndex&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;ExceptionMethod&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;HResult&quot;</span>: <span class=\"number\">-2146233088</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;Source&quot;</span>: <span class=\"string\">&quot;AspectCore.Core&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;WatsonBuckets&quot;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">&quot;StatusCode&quot;</span>: <span class=\"string\">&quot;sys-error&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ErrorMessage&quot;</span>: <span class=\"string\">&quot;系统异常，请联系管理员&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;Message&quot;</span>: <span class=\"string\">&quot;系统异常:[sys-error]&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过相同的雪花 Id 最后会清晰的分析出整个调用过程中的过程，并且如果能够结合 <a href=\"https://github.com/odinsam/OdinPlugin\">OdinPlugs</a> 框架,可以监控到 controller 中 api 的调用记录，包括入参、时间、返回信息等会更加详细。</p>\n<p>具体的代码在 <a href=\"https://github.com/odinsam/OdinPlugs.ApiLinkMonitor\">GitHub</a> <a href=\"https://www.nuget.org/packages/OdinPlugs.ApiLinkMonitor\"><img src=\"https://img.shields.io/nuget/v/OdinPlugs.ApiLinkMonitor\" alt=\"nuget\" /></a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>在平时的开发中，虽然我们有日志信息、报错信息等等，但是我们依然在某些时候需要查看项目中方法调用的来龙去脉，这种信息一般叫做链路信息。这里介绍一个单服务用于中小型项目的链路追踪框架。</p>\n</blockquote>","more":"<h4 id=\"1-简介\"><a class=\"markdownIt-Anchor\" href=\"#1-简介\"></a> 1. 简介</h4>\n<p>项目基于 <a href=\"https://github.com/odinsam/OdinPlugs.OdinInject\">OdinInjectCore</a> 和 <a href=\"https://github.com/odinsam/OdinPlugs.SnowFlake\">SnowFlake</a> 框架开发，使用 .net core 中间件实现，主要用到了 AspectCore.Core 第三方框架为底层服务类方法调用的链路监控。监控的项目调用的链路信息入库 mongo，所以需要搭配 mongo 一起使用.</p>\n<h4 id=\"2-使用\"><a class=\"markdownIt-Anchor\" href=\"#2-使用\"></a> 2. 使用</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注入链路监控</span></span><br><span class=\"line\">services</span><br><span class=\"line\">    .AddSingletonSnowFlake(dataCenterId, workerId)</span><br><span class=\"line\">    .AddOdinTransientMongoDb(</span><br><span class=\"line\">        opt =&gt; &#123; opt.ConnectionString = mongoConnection; opt.DbName = databaseName; &#125;)</span><br><span class=\"line\">    .AddOdinTransientInject&lt;IOdinApiLinkMonitor&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">services.ConfigureDynamicProxy(config =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// ~ 使用通配符的特定全局拦截器</span></span><br><span class=\"line\">        config.Interceptors.AddTyped&lt;OdinAspectCoreInterceptorAttribute&gt;(Predicates.ForService(<span class=\"string\">&quot;*Service&quot;</span>));</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-链路数据\"><a class=\"markdownIt-Anchor\" href=\"#3-链路数据\"></a> 3. 链路数据</h4>\n<p>controller 调用的 service 类需要以 Service 结尾,例如 接口 ITestService 和 实现类 TestService,controller 的 api 方法被调用后生成链路数据.<br />\n所有数据均进入 mongo。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 链路的 雪花Id，本次链路唯一</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路 当前的雪花Id</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324387245330432</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路状态</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路状态描述 start 表示本次链路开始</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Start&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 上层链路雪花Id 0代表没有上层链路</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用返回的状态</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用返回的状态描述</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 下级链路雪花Id</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324387245330433</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路耗时</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用的完整类名</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用的类名</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 调用的方法名</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 本次链路的需要 从小到大排序</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324394790883328</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路状态描述  Invoker 表示链路调用中</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Invoker&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 与上一层链路的 LinkNext 对应</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324387245330433</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324394790883329</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.ITestService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;ITestService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324394962849792</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Invoker&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324394790883329</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324394962849793</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.IInerService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;IInerService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324395122233344</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Invoker&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324394962849793</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324395122233345</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.ITTService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;ITTService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324395277422592</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"comment\">//  链路状态描述  ToEndReturn 表示链路调用返回</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;ToEndReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324395122233345</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 链路调用返回的状态描述 CatchReturn 表示调用出现异常 但是被catch捕获</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"string\">&quot;CatchReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324395277422593</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"number\">37</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.ITTService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;ITTService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324395520692224</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;ToEndReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324395277422593</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"string\">&quot;CatchReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324395520692225</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"number\">133</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.IInerService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;IInerService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">5</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324395667492864</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;ToEndReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324395520692225</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"string\">&quot;CatchReturn&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">206324395667492865</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"number\">210</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"string\">&quot;OdinCore.Services.InterfaceServices.ITestService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"string\">&quot;ITestService&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"string\">&quot;show&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">6</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;Id&quot;</span>: <span class=\"number\">206324387228553216</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;CurrentId&quot;</span>: <span class=\"number\">206324396925784064</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusEnum&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"comment\">//  链路状态描述  Over 表示本次链路调用结束</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkStatusStr&quot;</span>: <span class=\"string\">&quot;Over&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkPrevious&quot;</span>: <span class=\"number\">206324395667492865</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusEnum&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 调用成功结束</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerReturnStatusStr&quot;</span>: <span class=\"string\">&quot;Success&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkNext&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 本次调用 2558 ms</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;ElapsedTime&quot;</span>: <span class=\"number\">2558</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassFullName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerClassName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;InvokerMethodName&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;LinkSort&quot;</span>: <span class=\"number\">7</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-解析\"><a class=\"markdownIt-Anchor\" href=\"#4-解析\"></a> 4. 解析</h4>\n<p>通过链路数据得出结论：<br />\n本次 api 调用：<br />\n首先 调用 OdinCore.Services.InterfaceServices.ITestService 类的 show 方法,方法内部调用 OdinCore.Services.InterfaceServices.IInerService 类的 show 方法，<br />\n然后又调用 OdinCore.Services.InterfaceServices.ITTService 类的 show 方法，结果调用出错，但是被 catch 捕获最后返回。</p>\n<p>swagger 调用返回信息如下:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;SnowFlakeId&quot;</span>: <span class=\"string\">&quot;206324387228553216&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;Data&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">&quot;ClassName&quot;</span>: <span class=\"string\">&quot;System.Exception&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;Message&quot;</span>: <span class=\"string\">&quot;ttservice throw&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;Data&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;InnerException&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;HelpURL&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;StackTraceString&quot;</span>: <span class=\"string\">&quot;   at OdinPlugs.OdinMvcCore.OdinFilter.ApiInvokerFilterAttribute.OnActionExecuted(ActionExecutedContext context) in /Users/odin/workSpace/github/odinmaf/OdinPlugs/OdinMvcCore/OdinFilter/ApiInvokFilterAttribute.cs:line 109\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeNextActionFilterAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeNextExceptionFilterAsync&gt;g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ExceptionContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeNextResourceFilter()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\\n--- End of stack trace from previous location ---\\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.&lt;InvokeAsync&gt;g__Logged|17_1(ResourceInvoker invoker)\\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.&lt;Invoke&gt;g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\\n   at Microsoft.AspNetCore.MiddlewareAnalysis.AnalysisMiddleware.Invoke(HttpContext httpContext)\\n   at OdinPlugs.ApiLinkMonitor.OdinMiddleware.OdinExceptionMiddleware.Invoke(HttpContext context) in /Users/odin/workSpace/github/odinmaf/OdinPlugs.ApiLinkMonitor/OdinMiddleware/OdinExceptionMiddleware.cs:line 34&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;RemoteStackTraceString&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;RemoteStackIndex&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;ExceptionMethod&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;HResult&quot;</span>: <span class=\"number\">-2146233088</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;Source&quot;</span>: <span class=\"string\">&quot;AspectCore.Core&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">&quot;WatsonBuckets&quot;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">&quot;StatusCode&quot;</span>: <span class=\"string\">&quot;sys-error&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;ErrorMessage&quot;</span>: <span class=\"string\">&quot;系统异常，请联系管理员&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;Message&quot;</span>: <span class=\"string\">&quot;系统异常:[sys-error]&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过相同的雪花 Id 最后会清晰的分析出整个调用过程中的过程，并且如果能够结合 <a href=\"https://github.com/odinsam/OdinPlugin\">OdinPlugs</a> 框架,可以监控到 controller 中 api 的调用记录，包括入参、时间、返回信息等会更加详细。</p>\n<p>具体的代码在 <a href=\"https://github.com/odinsam/OdinPlugs.ApiLinkMonitor\">GitHub</a> <a href=\"https://www.nuget.org/packages/OdinPlugs.ApiLinkMonitor\"><img src=\"https://img.shields.io/nuget/v/OdinPlugs.ApiLinkMonitor\" alt=\"nuget\" /></a></p>"},{"title":"Flutter - OdinDio 基于Dio的封装","author":"OdinSam","abbrlink":"b092","date":"2022-11-28T08:52:00.000Z","_content":">Dio是Flutter中较为流行的http操作类。 OdinDio基于Dio封装,完整代码可以在 [GitHub](https://github.com/odinsam/OdinPlugin/tree/feature/1.0.0/odindio) 。\n\n<!--more-->\n\n#### OdinDio\nOdinDio单例模式，基于dio封装   \n![plateform](https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow) ![version](https://img.shields.io/badge/pub.dev-1.0.1-greenyellow)\n\n```yaml\npubspec.yaml\n  dependencies:\n    json_annotation: ^4.4.0\n    odindio: ^1.0.1\n  dev_dependencies:\n    json_serializable: ^6.2.0\n    build_runner: any\n```\n\n```dart\nimport 'dart:convert';\nimport 'package:dio/dio.dart';\nimport 'package:flutter_test/flutter_test.dart';\nimport 'package:odindio/odin_dio_interceptor.dart';\nimport 'package:odindio/odindio.dart';\nimport 'package:odindio/odindio_platform_interface.dart';\nimport 'package:odindio/odindio_method_channel.dart';\nimport 'package:plugin_platform_interface/plugin_platform_interface.dart';\nimport 'models/post_model.dart';\nimport 'models/student_model.dart';\nimport 'models/ten_model.dart';\nimport 'models/test_model.dart';\nimport 'package:path/path.dart' as path;\nimport 'dart:io';\nimport 'odindio_test.reflectable.dart';\n\nclass MockOdindioPlatform\n    with MockPlatformInterfaceMixin\n    implements OdindioPlatform {\n  @override\n  Future<String?> getPlatformVersion() => Future.value('42');\n}\n\n/// 多请求\nclass MultiRequest {\n  static Future<Response<dynamic>> req1<T>() async {\n    OdinDio odindioPlugin = OdinDio();\n    odindioPlugin.setBaseUrl(\"http://httpbin.org\");\n    return await odindioPlugin.get('/json');\n  }\n\n  static Future<Response<dynamic>> req2<T>() async {\n    var odindioPlugin = OdinDio();\n    odindioPlugin.setBaseUrl(\"http://tenapi.cn\");\n    return await odindioPlugin.get('/acg');\n  }\n}\n\nvoid main() {\n  initializeReflectable();\n  final OdindioPlatform initialPlatform = OdindioPlatform.instance;\n\n  test('$MethodChannelOdindio is the default instance', () {\n    expect(initialPlatform, isInstanceOf<MethodChannelOdindio>());\n  });\n  \n  /// get request return Model \n  test('getJson-1', () async {\n    // getJson no param\n    OdinDio odindioPlugin = OdinDio();\n    odindioPlugin.setBaseUrl(\"http://httpbin.org\");\n    odindioPlugin.removeDioLog();\n    //定义拦截器\n    var odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) {\n      print(\"onRequestHandler1\");\n    }, onResponseHandler: (response, handler) {\n      print(\"onResponseHandler1\");\n    }, onErrorHandler: (err, handler) {\n      print(\"err1\");\n    });\n    var odi2 = OdinDioInterceptor(onRequestHandler: (request, handler) {\n      print(\"onRequestHandler2\");\n    }, onResponseHandler: (response, handler) {\n      print(\"onResponseHandler2\");\n    }, onErrorHandler: (err, handler) {\n      print(\"err2\");\n    });\n    //添加拦截器\n    odindioPlugin.interceptors().addAll([odi1, odi2]);\n    //移除拦截器\n    odindioPlugin.interceptors().remove(odi1);\n    var model = await odindioPlugin.getModel<TestModel>('/json');\n    print(json.encode(model));\n    // expect(model.slideshow!.title, 'Sample Slide Show');\n  });\n\t\n  /// get request return Model List\n  test('getJson-2', () async {\n    // getJson no param\n    OdinDio odindioPlugin = OdinDio();\n    odindioPlugin.removeDioLog();\n    odindioPlugin.addDioLog();\n    odindioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var models = await odindioPlugin.getModels<StudentModel>('/stus');\n    print(json.encode(models));\n    expect(models.length, greaterThan(0));\n  });\n\t\n  /// get request by queryParameters return Model List\n  test('getJson-3', () async {\n    // getJson with params\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"https://tenapi.cn\");\n    var model = await odinDioPlugin.getModel<TenModel>(\"/qqname\",\n        queryParameters: {\"qq\": \"123456\"},\n        options: Options(responseType: ResponseType.json));\n    print(json.encode(model));\n    expect(model.name, '腾讯视频');\n  });\n\n  /// get request by Stream\n  test('getStream', () async {\n    // get stream\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var stream = await odinDioPlugin.getStream('/stream');\n    var lst = <int>[];\n    var bytes = await stream.first;\n    lst = List.from(bytes.toList());\n    print(utf8.decode(lst));\n    expect(utf8.decode(lst).length, greaterThan(0));\n  });\n\n  /// get request return Bytes(List<int>)\n  test('getBytes', () async {\n    // get Bytes\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var lst = await odinDioPlugin.getBytes('/stream');\n    print(utf8.decode(lst));\n    expect(utf8.decode(lst).length, greaterThan(0));\n  });\n\n  /// post request return Model\n  test('postStu', () async {\n    // post with param and return Json\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    odinDioPlugin.removeDioLog();\n    var data = odinDioPlugin.dataToFormData({\"name\": \"bakabaka\"});\n    var response5 = await odinDioPlugin.post('/postStu',\n        data: data, options: Options(headers: {\"customNewPost\": \"newPost\"}));\n    var model = odinDioPlugin.dioResultToModel<PostModel>(response5.data);\n    print(\"model: ${json.encode(model)}\");\n    expect(model.code, 0);\n  });\n\n  /// multirequest\n  test('multirequest', () async {\n    var odinDioPlugin = OdinDio();\n    var response6 = await odinDioPlugin\n        .multiRequest([MultiRequest.req1(), MultiRequest.req2()]);\n    var rep1 = response6[0];\n    var rep1model = odinDioPlugin.dioResultToModel<TestModel>(rep1.data);\n    print(json.encode(rep1model));\n    expect(rep1model.slideshow!.author, \"Yours Truly\");\n    var rep2 = response6[1];\n    print(json.encode(rep2.data.length));\n    expect(rep2.data!.length, greaterThan(0));\n  });\n\n  /// downloadFile\n  test('downloadFile', () async {\n    double currentProgress = 0.0;\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    final cur = path.dirname(Platform.script.path).substring(1);\n    var savePath = path.join(cur, 'download.txt');\n    var response7 = await odinDioPlugin.downloadFile(\n        '/static/output.txt', savePath, onReceiveProgress: (received, total) {\n      if (total != -1) {\n        ///当前下载的百分比例\n        var downloadRatio = (received / total * 100).toStringAsFixed(0);\n        currentProgress = received / total;\n      }\n    });\n    var f = File(savePath);\n    expect(f.readAsStringSync(), equals('I am a text file'));\n    f.deleteSync(recursive: false);\n  });\n\n  /// upload file\n  test('uploadFile', () async {\n    var odinDioPlugin = OdinDio();\n    final cur = path.dirname(Platform.script.path).substring(1);\n    var uploadFile1 = path.join(cur, 'upload1.txt');\n    var uploadFile2 = path.join(cur, 'upload2.txt');\n    var uploadFile3 = path.join(cur, 'upload3.txt');\n    var formData = odinDioPlugin.dataToFormData({\n      'name': 'wendux',\n      'age': 25,\n      'file':\n          await MultipartFile.fromFile(uploadFile1, filename: 'upload1.txt'),\n      'files': [\n        await MultipartFile.fromFile(uploadFile2, filename: 'upload2.txt'),\n        await MultipartFile.fromFile(uploadFile3, filename: 'upload3.txt'),\n      ]\n    });\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var response6 = await odinDioPlugin.post('/upload', data: formData);\n    print(response6.data);\n  });\n\n  /// post stream data\n  test('post stream data', () async {\n    var odinDioPlugin = OdinDio();\n    var formData = {'name': 'wendux', 'age': 25};\n    var lst = utf8.encode(formData.toString());\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var response6 = await odinDioPlugin.postDataByStream('/stu',\n        data: odinDioPlugin.listIntToStreamFormData(lst),\n        options: Options(headers: {\n          Headers.contentLengthHeader: lst.length, // 设置content-length\n        }));\n    print(response6.data);\n  });\n\n  /// 完成和终止请求/响应\n  test('resolve', () async {\n    // getJson no param\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://httpbin.org\");\n    //定义拦截器\n    var odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) {\n      print(\"onRequestHandler1\");\n      return handler\n          .resolve(Response(requestOptions: request, data: 'fake data'));\n    }, onResponseHandler: (response, handler) {\n      print(\"onResponseHandler1\");\n    }, onErrorHandler: (err, handler) {\n      print(\"err1\");\n    });\n    odinDioPlugin.interceptors().add(odi1);\n    try {\n      var model = await odinDioPlugin.get('/json');\n    } on DioError catch (e) {\n      if (e.response != null) {\n        print(e.response!.data);\n        print(e.response!.headers);\n        print(e.response!.requestOptions);\n      } else {\n        // Something happened in setting up or sending the request that triggered an Error\n        print(e.requestOptions);\n        print(e.message);\n      }\n    }\n    // expect(model.slideshow!.title, 'Sample Slide Show');\n  });\n}\n```\n\npub.dev发布地址：[odinSam-Flutter - OdinDio封装](https://pub.dev/packages/odindio)\n","source":"_posts/Flutter-OdinDio-基于Dio的封装.md","raw":"title: Flutter - OdinDio 基于Dio的封装\nauthor: OdinSam\ntags:\n  - Dio\n  - Flutter\ncategories:\n  - Flutter\nabbrlink: b092\ndate: 2022-11-28 16:52:00\n---\n>Dio是Flutter中较为流行的http操作类。 OdinDio基于Dio封装,完整代码可以在 [GitHub](https://github.com/odinsam/OdinPlugin/tree/feature/1.0.0/odindio) 。\n\n<!--more-->\n\n#### OdinDio\nOdinDio单例模式，基于dio封装   \n![plateform](https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow) ![version](https://img.shields.io/badge/pub.dev-1.0.1-greenyellow)\n\n```yaml\npubspec.yaml\n  dependencies:\n    json_annotation: ^4.4.0\n    odindio: ^1.0.1\n  dev_dependencies:\n    json_serializable: ^6.2.0\n    build_runner: any\n```\n\n```dart\nimport 'dart:convert';\nimport 'package:dio/dio.dart';\nimport 'package:flutter_test/flutter_test.dart';\nimport 'package:odindio/odin_dio_interceptor.dart';\nimport 'package:odindio/odindio.dart';\nimport 'package:odindio/odindio_platform_interface.dart';\nimport 'package:odindio/odindio_method_channel.dart';\nimport 'package:plugin_platform_interface/plugin_platform_interface.dart';\nimport 'models/post_model.dart';\nimport 'models/student_model.dart';\nimport 'models/ten_model.dart';\nimport 'models/test_model.dart';\nimport 'package:path/path.dart' as path;\nimport 'dart:io';\nimport 'odindio_test.reflectable.dart';\n\nclass MockOdindioPlatform\n    with MockPlatformInterfaceMixin\n    implements OdindioPlatform {\n  @override\n  Future<String?> getPlatformVersion() => Future.value('42');\n}\n\n/// 多请求\nclass MultiRequest {\n  static Future<Response<dynamic>> req1<T>() async {\n    OdinDio odindioPlugin = OdinDio();\n    odindioPlugin.setBaseUrl(\"http://httpbin.org\");\n    return await odindioPlugin.get('/json');\n  }\n\n  static Future<Response<dynamic>> req2<T>() async {\n    var odindioPlugin = OdinDio();\n    odindioPlugin.setBaseUrl(\"http://tenapi.cn\");\n    return await odindioPlugin.get('/acg');\n  }\n}\n\nvoid main() {\n  initializeReflectable();\n  final OdindioPlatform initialPlatform = OdindioPlatform.instance;\n\n  test('$MethodChannelOdindio is the default instance', () {\n    expect(initialPlatform, isInstanceOf<MethodChannelOdindio>());\n  });\n  \n  /// get request return Model \n  test('getJson-1', () async {\n    // getJson no param\n    OdinDio odindioPlugin = OdinDio();\n    odindioPlugin.setBaseUrl(\"http://httpbin.org\");\n    odindioPlugin.removeDioLog();\n    //定义拦截器\n    var odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) {\n      print(\"onRequestHandler1\");\n    }, onResponseHandler: (response, handler) {\n      print(\"onResponseHandler1\");\n    }, onErrorHandler: (err, handler) {\n      print(\"err1\");\n    });\n    var odi2 = OdinDioInterceptor(onRequestHandler: (request, handler) {\n      print(\"onRequestHandler2\");\n    }, onResponseHandler: (response, handler) {\n      print(\"onResponseHandler2\");\n    }, onErrorHandler: (err, handler) {\n      print(\"err2\");\n    });\n    //添加拦截器\n    odindioPlugin.interceptors().addAll([odi1, odi2]);\n    //移除拦截器\n    odindioPlugin.interceptors().remove(odi1);\n    var model = await odindioPlugin.getModel<TestModel>('/json');\n    print(json.encode(model));\n    // expect(model.slideshow!.title, 'Sample Slide Show');\n  });\n\t\n  /// get request return Model List\n  test('getJson-2', () async {\n    // getJson no param\n    OdinDio odindioPlugin = OdinDio();\n    odindioPlugin.removeDioLog();\n    odindioPlugin.addDioLog();\n    odindioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var models = await odindioPlugin.getModels<StudentModel>('/stus');\n    print(json.encode(models));\n    expect(models.length, greaterThan(0));\n  });\n\t\n  /// get request by queryParameters return Model List\n  test('getJson-3', () async {\n    // getJson with params\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"https://tenapi.cn\");\n    var model = await odinDioPlugin.getModel<TenModel>(\"/qqname\",\n        queryParameters: {\"qq\": \"123456\"},\n        options: Options(responseType: ResponseType.json));\n    print(json.encode(model));\n    expect(model.name, '腾讯视频');\n  });\n\n  /// get request by Stream\n  test('getStream', () async {\n    // get stream\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var stream = await odinDioPlugin.getStream('/stream');\n    var lst = <int>[];\n    var bytes = await stream.first;\n    lst = List.from(bytes.toList());\n    print(utf8.decode(lst));\n    expect(utf8.decode(lst).length, greaterThan(0));\n  });\n\n  /// get request return Bytes(List<int>)\n  test('getBytes', () async {\n    // get Bytes\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var lst = await odinDioPlugin.getBytes('/stream');\n    print(utf8.decode(lst));\n    expect(utf8.decode(lst).length, greaterThan(0));\n  });\n\n  /// post request return Model\n  test('postStu', () async {\n    // post with param and return Json\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    odinDioPlugin.removeDioLog();\n    var data = odinDioPlugin.dataToFormData({\"name\": \"bakabaka\"});\n    var response5 = await odinDioPlugin.post('/postStu',\n        data: data, options: Options(headers: {\"customNewPost\": \"newPost\"}));\n    var model = odinDioPlugin.dioResultToModel<PostModel>(response5.data);\n    print(\"model: ${json.encode(model)}\");\n    expect(model.code, 0);\n  });\n\n  /// multirequest\n  test('multirequest', () async {\n    var odinDioPlugin = OdinDio();\n    var response6 = await odinDioPlugin\n        .multiRequest([MultiRequest.req1(), MultiRequest.req2()]);\n    var rep1 = response6[0];\n    var rep1model = odinDioPlugin.dioResultToModel<TestModel>(rep1.data);\n    print(json.encode(rep1model));\n    expect(rep1model.slideshow!.author, \"Yours Truly\");\n    var rep2 = response6[1];\n    print(json.encode(rep2.data.length));\n    expect(rep2.data!.length, greaterThan(0));\n  });\n\n  /// downloadFile\n  test('downloadFile', () async {\n    double currentProgress = 0.0;\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    final cur = path.dirname(Platform.script.path).substring(1);\n    var savePath = path.join(cur, 'download.txt');\n    var response7 = await odinDioPlugin.downloadFile(\n        '/static/output.txt', savePath, onReceiveProgress: (received, total) {\n      if (total != -1) {\n        ///当前下载的百分比例\n        var downloadRatio = (received / total * 100).toStringAsFixed(0);\n        currentProgress = received / total;\n      }\n    });\n    var f = File(savePath);\n    expect(f.readAsStringSync(), equals('I am a text file'));\n    f.deleteSync(recursive: false);\n  });\n\n  /// upload file\n  test('uploadFile', () async {\n    var odinDioPlugin = OdinDio();\n    final cur = path.dirname(Platform.script.path).substring(1);\n    var uploadFile1 = path.join(cur, 'upload1.txt');\n    var uploadFile2 = path.join(cur, 'upload2.txt');\n    var uploadFile3 = path.join(cur, 'upload3.txt');\n    var formData = odinDioPlugin.dataToFormData({\n      'name': 'wendux',\n      'age': 25,\n      'file':\n          await MultipartFile.fromFile(uploadFile1, filename: 'upload1.txt'),\n      'files': [\n        await MultipartFile.fromFile(uploadFile2, filename: 'upload2.txt'),\n        await MultipartFile.fromFile(uploadFile3, filename: 'upload3.txt'),\n      ]\n    });\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var response6 = await odinDioPlugin.post('/upload', data: formData);\n    print(response6.data);\n  });\n\n  /// post stream data\n  test('post stream data', () async {\n    var odinDioPlugin = OdinDio();\n    var formData = {'name': 'wendux', 'age': 25};\n    var lst = utf8.encode(formData.toString());\n    odinDioPlugin.setBaseUrl(\"http://192.168.1.145:8899\");\n    var response6 = await odinDioPlugin.postDataByStream('/stu',\n        data: odinDioPlugin.listIntToStreamFormData(lst),\n        options: Options(headers: {\n          Headers.contentLengthHeader: lst.length, // 设置content-length\n        }));\n    print(response6.data);\n  });\n\n  /// 完成和终止请求/响应\n  test('resolve', () async {\n    // getJson no param\n    var odinDioPlugin = OdinDio();\n    odinDioPlugin.setBaseUrl(\"http://httpbin.org\");\n    //定义拦截器\n    var odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) {\n      print(\"onRequestHandler1\");\n      return handler\n          .resolve(Response(requestOptions: request, data: 'fake data'));\n    }, onResponseHandler: (response, handler) {\n      print(\"onResponseHandler1\");\n    }, onErrorHandler: (err, handler) {\n      print(\"err1\");\n    });\n    odinDioPlugin.interceptors().add(odi1);\n    try {\n      var model = await odinDioPlugin.get('/json');\n    } on DioError catch (e) {\n      if (e.response != null) {\n        print(e.response!.data);\n        print(e.response!.headers);\n        print(e.response!.requestOptions);\n      } else {\n        // Something happened in setting up or sending the request that triggered an Error\n        print(e.requestOptions);\n        print(e.message);\n      }\n    }\n    // expect(model.slideshow!.title, 'Sample Slide Show');\n  });\n}\n```\n\npub.dev发布地址：[odinSam-Flutter - OdinDio封装](https://pub.dev/packages/odindio)\n","slug":"Flutter-OdinDio-基于Dio的封装","published":1,"updated":"2023-03-10T08:56:02.002Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza1v00035cs9f0ikh3cf","content":"<blockquote>\n<p>Dio是Flutter中较为流行的http操作类。 OdinDio基于Dio封装,完整代码可以在 <a href=\"https://github.com/odinsam/OdinPlugin/tree/feature/1.0.0/odindio\">GitHub</a> 。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"odindio\"><a class=\"markdownIt-Anchor\" href=\"#odindio\"></a> OdinDio</h4>\n<p>OdinDio单例模式，基于dio封装<br />\n<img src=\"https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow\" alt=\"plateform\" /> <img src=\"https://img.shields.io/badge/pub.dev-1.0.1-greenyellow\" alt=\"version\" /></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">pubspec.yaml</span></span><br><span class=\"line\">  <span class=\"attr\">dependencies:</span></span><br><span class=\"line\">    <span class=\"attr\">json_annotation:</span> <span class=\"string\">^4.4.0</span></span><br><span class=\"line\">    <span class=\"attr\">odindio:</span> <span class=\"string\">^1.0.1</span></span><br><span class=\"line\">  <span class=\"attr\">dev_dependencies:</span></span><br><span class=\"line\">    <span class=\"attr\">json_serializable:</span> <span class=\"string\">^6.2.0</span></span><br><span class=\"line\">    <span class=\"attr\">build_runner:</span> <span class=\"string\">any</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:convert&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:dio/dio.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter_test/flutter_test.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odin_dio_interceptor.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odindio.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odindio_platform_interface.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odindio_method_channel.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:plugin_platform_interface/plugin_platform_interface.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;models/post_model.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;models/student_model.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;models/ten_model.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;models/test_model.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:path/path.dart&#x27;</span> <span class=\"keyword\">as</span> path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:io&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;odindio_test.reflectable.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MockOdindioPlatform</span></span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">with</span> <span class=\"title\">MockPlatformInterfaceMixin</span></span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"keyword\">implements</span> <span class=\"title\">OdindioPlatform</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Future&lt;<span class=\"built_in\">String?</span>&gt; getPlatformVersion() =&gt; Future.value(<span class=\"string\">&#x27;42&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">多请求</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MultiRequest</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;Response&lt;<span class=\"built_in\">dynamic</span>&gt;&gt; req1&lt;T&gt;() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    OdinDio odindioPlugin = OdinDio();</span><br><span class=\"line\">    odindioPlugin.setBaseUrl(<span class=\"string\">&quot;http://httpbin.org&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> odindioPlugin.<span class=\"keyword\">get</span>(<span class=\"string\">&#x27;/json&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;Response&lt;<span class=\"built_in\">dynamic</span>&gt;&gt; req2&lt;T&gt;() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odindioPlugin = OdinDio();</span><br><span class=\"line\">    odindioPlugin.setBaseUrl(<span class=\"string\">&quot;http://tenapi.cn&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> odindioPlugin.<span class=\"keyword\">get</span>(<span class=\"string\">&#x27;/acg&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  initializeReflectable();</span><br><span class=\"line\">  <span class=\"keyword\">final</span> OdindioPlatform initialPlatform = OdindioPlatform.instance;</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;<span class=\"subst\">$MethodChannelOdindio</span> is the default instance&#x27;</span>, () &#123;</span><br><span class=\"line\">    expect(initialPlatform, isInstanceOf&lt;MethodChannelOdindio&gt;());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request return Model </span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getJson-1&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getJson no param</span></span><br><span class=\"line\">    OdinDio odindioPlugin = OdinDio();</span><br><span class=\"line\">    odindioPlugin.setBaseUrl(<span class=\"string\">&quot;http://httpbin.org&quot;</span>);</span><br><span class=\"line\">    odindioPlugin.removeDioLog();</span><br><span class=\"line\">    <span class=\"comment\">//定义拦截器</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onRequestHandler1&quot;</span>);</span><br><span class=\"line\">    &#125;, onResponseHandler: (response, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onResponseHandler1&quot;</span>);</span><br><span class=\"line\">    &#125;, onErrorHandler: (err, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;err1&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odi2 = OdinDioInterceptor(onRequestHandler: (request, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onRequestHandler2&quot;</span>);</span><br><span class=\"line\">    &#125;, onResponseHandler: (response, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onResponseHandler2&quot;</span>);</span><br><span class=\"line\">    &#125;, onErrorHandler: (err, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;err2&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//添加拦截器</span></span><br><span class=\"line\">    odindioPlugin.interceptors().addAll([odi1, odi2]);</span><br><span class=\"line\">    <span class=\"comment\">//移除拦截器</span></span><br><span class=\"line\">    odindioPlugin.interceptors().remove(odi1);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> model = <span class=\"keyword\">await</span> odindioPlugin.getModel&lt;TestModel&gt;(<span class=\"string\">&#x27;/json&#x27;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(model));</span><br><span class=\"line\">    <span class=\"comment\">// expect(model.slideshow!.title, &#x27;Sample Slide Show&#x27;);</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request return Model List</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getJson-2&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getJson no param</span></span><br><span class=\"line\">    OdinDio odindioPlugin = OdinDio();</span><br><span class=\"line\">    odindioPlugin.removeDioLog();</span><br><span class=\"line\">    odindioPlugin.addDioLog();</span><br><span class=\"line\">    odindioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> models = <span class=\"keyword\">await</span> odindioPlugin.getModels&lt;StudentModel&gt;(<span class=\"string\">&#x27;/stus&#x27;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(models));</span><br><span class=\"line\">    expect(models.length, greaterThan(<span class=\"number\">0</span>));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request by queryParameters return Model List</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getJson-3&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getJson with params</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;https://tenapi.cn&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> model = <span class=\"keyword\">await</span> odinDioPlugin.getModel&lt;TenModel&gt;(<span class=\"string\">&quot;/qqname&quot;</span>,</span><br><span class=\"line\">        queryParameters: &#123;<span class=\"string\">&quot;qq&quot;</span>: <span class=\"string\">&quot;123456&quot;</span>&#125;,</span><br><span class=\"line\">        options: Options(responseType: ResponseType.json));</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(model));</span><br><span class=\"line\">    expect(model.name, <span class=\"string\">&#x27;腾讯视频&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request by Stream</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getStream&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// get stream</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> stream = <span class=\"keyword\">await</span> odinDioPlugin.getStream(<span class=\"string\">&#x27;/stream&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lst = &lt;<span class=\"built_in\">int</span>&gt;[];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> bytes = <span class=\"keyword\">await</span> stream.first;</span><br><span class=\"line\">    lst = <span class=\"built_in\">List</span>.from(bytes.toList());</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(utf8.decode(lst));</span><br><span class=\"line\">    expect(utf8.decode(lst).length, greaterThan(<span class=\"number\">0</span>));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request return Bytes(List<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">int</span>&gt;</span></span>)</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getBytes&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// get Bytes</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lst = <span class=\"keyword\">await</span> odinDioPlugin.getBytes(<span class=\"string\">&#x27;/stream&#x27;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(utf8.decode(lst));</span><br><span class=\"line\">    expect(utf8.decode(lst).length, greaterThan(<span class=\"number\">0</span>));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">post request return Model</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;postStu&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// post with param and return Json</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    odinDioPlugin.removeDioLog();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> data = odinDioPlugin.dataToFormData(&#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;bakabaka&quot;</span>&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response5 = <span class=\"keyword\">await</span> odinDioPlugin.post(<span class=\"string\">&#x27;/postStu&#x27;</span>,</span><br><span class=\"line\">        data: data, options: Options(headers: &#123;<span class=\"string\">&quot;customNewPost&quot;</span>: <span class=\"string\">&quot;newPost&quot;</span>&#125;));</span><br><span class=\"line\">    <span class=\"keyword\">var</span> model = odinDioPlugin.dioResultToModel&lt;PostModel&gt;(response5.data);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;model: <span class=\"subst\">$&#123;json.encode(model)&#125;</span>&quot;</span>);</span><br><span class=\"line\">    expect(model.code, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">multirequest</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;multirequest&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response6 = <span class=\"keyword\">await</span> odinDioPlugin</span><br><span class=\"line\">        .multiRequest([MultiRequest.req1(), MultiRequest.req2()]);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rep1 = response6[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rep1model = odinDioPlugin.dioResultToModel&lt;TestModel&gt;(rep1.data);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(rep1model));</span><br><span class=\"line\">    expect(rep1model.slideshow!.author, <span class=\"string\">&quot;Yours Truly&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rep2 = response6[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(rep2.data.length));</span><br><span class=\"line\">    expect(rep2.data!.length, greaterThan(<span class=\"number\">0</span>));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">downloadFile</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;downloadFile&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">double</span> currentProgress = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">final</span> cur = path.dirname(Platform.script.path).substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> savePath = path.join(cur, <span class=\"string\">&#x27;download.txt&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response7 = <span class=\"keyword\">await</span> odinDioPlugin.downloadFile(</span><br><span class=\"line\">        <span class=\"string\">&#x27;/static/output.txt&#x27;</span>, savePath, onReceiveProgress: (received, total) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (total != <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">///<span class=\"markdown\">当前下载的百分比例</span></span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> downloadRatio = (received / total * <span class=\"number\">100</span>).toStringAsFixed(<span class=\"number\">0</span>);</span><br><span class=\"line\">        currentProgress = received / total;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> f = File(savePath);</span><br><span class=\"line\">    expect(f.readAsStringSync(), equals(<span class=\"string\">&#x27;I am a text file&#x27;</span>));</span><br><span class=\"line\">    f.deleteSync(recursive: <span class=\"keyword\">false</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">upload file</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;uploadFile&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    <span class=\"keyword\">final</span> cur = path.dirname(Platform.script.path).substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadFile1 = path.join(cur, <span class=\"string\">&#x27;upload1.txt&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadFile2 = path.join(cur, <span class=\"string\">&#x27;upload2.txt&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadFile3 = path.join(cur, <span class=\"string\">&#x27;upload3.txt&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> formData = odinDioPlugin.dataToFormData(&#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;wendux&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;age&#x27;</span>: <span class=\"number\">25</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;file&#x27;</span>:</span><br><span class=\"line\">          <span class=\"keyword\">await</span> MultipartFile.fromFile(uploadFile1, filename: <span class=\"string\">&#x27;upload1.txt&#x27;</span>),</span><br><span class=\"line\">      <span class=\"string\">&#x27;files&#x27;</span>: [</span><br><span class=\"line\">        <span class=\"keyword\">await</span> MultipartFile.fromFile(uploadFile2, filename: <span class=\"string\">&#x27;upload2.txt&#x27;</span>),</span><br><span class=\"line\">        <span class=\"keyword\">await</span> MultipartFile.fromFile(uploadFile3, filename: <span class=\"string\">&#x27;upload3.txt&#x27;</span>),</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response6 = <span class=\"keyword\">await</span> odinDioPlugin.post(<span class=\"string\">&#x27;/upload&#x27;</span>, data: formData);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(response6.data);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">post stream data</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;post stream data&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> formData = &#123;<span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;wendux&#x27;</span>, <span class=\"string\">&#x27;age&#x27;</span>: <span class=\"number\">25</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lst = utf8.encode(formData.toString());</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response6 = <span class=\"keyword\">await</span> odinDioPlugin.postDataByStream(<span class=\"string\">&#x27;/stu&#x27;</span>,</span><br><span class=\"line\">        data: odinDioPlugin.listIntToStreamFormData(lst),</span><br><span class=\"line\">        options: Options(headers: &#123;</span><br><span class=\"line\">          Headers.contentLengthHeader: lst.length, <span class=\"comment\">// 设置content-length</span></span><br><span class=\"line\">        &#125;));</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(response6.data);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">完成和终止请求/响应</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;resolve&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getJson no param</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://httpbin.org&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//定义拦截器</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onRequestHandler1&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> handler</span><br><span class=\"line\">          .resolve(Response(requestOptions: request, data: <span class=\"string\">&#x27;fake data&#x27;</span>));</span><br><span class=\"line\">    &#125;, onResponseHandler: (response, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onResponseHandler1&quot;</span>);</span><br><span class=\"line\">    &#125;, onErrorHandler: (err, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;err1&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    odinDioPlugin.interceptors().add(odi1);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> model = <span class=\"keyword\">await</span> odinDioPlugin.<span class=\"keyword\">get</span>(<span class=\"string\">&#x27;/json&#x27;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">on</span> DioError <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (e.response != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.response!.data);</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.response!.headers);</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.response!.requestOptions);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Something happened in setting up or sending the request that triggered an Error</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.requestOptions);</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.message);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// expect(model.slideshow!.title, &#x27;Sample Slide Show&#x27;);</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>pub.dev发布地址：<a href=\"https://pub.dev/packages/odindio\">odinSam-Flutter - OdinDio封装</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Dio是Flutter中较为流行的http操作类。 OdinDio基于Dio封装,完整代码可以在 <a href=\"https://github.com/odinsam/OdinPlugin/tree/feature/1.0.0/odindio\">GitHub</a> 。</p>\n</blockquote>","more":"<h4 id=\"odindio\"><a class=\"markdownIt-Anchor\" href=\"#odindio\"></a> OdinDio</h4>\n<p>OdinDio单例模式，基于dio封装<br />\n<img src=\"https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow\" alt=\"plateform\" /> <img src=\"https://img.shields.io/badge/pub.dev-1.0.1-greenyellow\" alt=\"version\" /></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">pubspec.yaml</span></span><br><span class=\"line\">  <span class=\"attr\">dependencies:</span></span><br><span class=\"line\">    <span class=\"attr\">json_annotation:</span> <span class=\"string\">^4.4.0</span></span><br><span class=\"line\">    <span class=\"attr\">odindio:</span> <span class=\"string\">^1.0.1</span></span><br><span class=\"line\">  <span class=\"attr\">dev_dependencies:</span></span><br><span class=\"line\">    <span class=\"attr\">json_serializable:</span> <span class=\"string\">^6.2.0</span></span><br><span class=\"line\">    <span class=\"attr\">build_runner:</span> <span class=\"string\">any</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:convert&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:dio/dio.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:flutter_test/flutter_test.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odin_dio_interceptor.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odindio.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odindio_platform_interface.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odindio_method_channel.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:plugin_platform_interface/plugin_platform_interface.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;models/post_model.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;models/student_model.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;models/ten_model.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;models/test_model.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:path/path.dart&#x27;</span> <span class=\"keyword\">as</span> path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;dart:io&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;odindio_test.reflectable.dart&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MockOdindioPlatform</span></span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">with</span> <span class=\"title\">MockPlatformInterfaceMixin</span></span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"keyword\">implements</span> <span class=\"title\">OdindioPlatform</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  Future&lt;<span class=\"built_in\">String?</span>&gt; getPlatformVersion() =&gt; Future.value(<span class=\"string\">&#x27;42&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/// <span class=\"markdown\">多请求</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MultiRequest</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;Response&lt;<span class=\"built_in\">dynamic</span>&gt;&gt; req1&lt;T&gt;() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    OdinDio odindioPlugin = OdinDio();</span><br><span class=\"line\">    odindioPlugin.setBaseUrl(<span class=\"string\">&quot;http://httpbin.org&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> odindioPlugin.<span class=\"keyword\">get</span>(<span class=\"string\">&#x27;/json&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> Future&lt;Response&lt;<span class=\"built_in\">dynamic</span>&gt;&gt; req2&lt;T&gt;() <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odindioPlugin = OdinDio();</span><br><span class=\"line\">    odindioPlugin.setBaseUrl(<span class=\"string\">&quot;http://tenapi.cn&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> odindioPlugin.<span class=\"keyword\">get</span>(<span class=\"string\">&#x27;/acg&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> main() &#123;</span><br><span class=\"line\">  initializeReflectable();</span><br><span class=\"line\">  <span class=\"keyword\">final</span> OdindioPlatform initialPlatform = OdindioPlatform.instance;</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;<span class=\"subst\">$MethodChannelOdindio</span> is the default instance&#x27;</span>, () &#123;</span><br><span class=\"line\">    expect(initialPlatform, isInstanceOf&lt;MethodChannelOdindio&gt;());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request return Model </span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getJson-1&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getJson no param</span></span><br><span class=\"line\">    OdinDio odindioPlugin = OdinDio();</span><br><span class=\"line\">    odindioPlugin.setBaseUrl(<span class=\"string\">&quot;http://httpbin.org&quot;</span>);</span><br><span class=\"line\">    odindioPlugin.removeDioLog();</span><br><span class=\"line\">    <span class=\"comment\">//定义拦截器</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onRequestHandler1&quot;</span>);</span><br><span class=\"line\">    &#125;, onResponseHandler: (response, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onResponseHandler1&quot;</span>);</span><br><span class=\"line\">    &#125;, onErrorHandler: (err, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;err1&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odi2 = OdinDioInterceptor(onRequestHandler: (request, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onRequestHandler2&quot;</span>);</span><br><span class=\"line\">    &#125;, onResponseHandler: (response, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onResponseHandler2&quot;</span>);</span><br><span class=\"line\">    &#125;, onErrorHandler: (err, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;err2&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//添加拦截器</span></span><br><span class=\"line\">    odindioPlugin.interceptors().addAll([odi1, odi2]);</span><br><span class=\"line\">    <span class=\"comment\">//移除拦截器</span></span><br><span class=\"line\">    odindioPlugin.interceptors().remove(odi1);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> model = <span class=\"keyword\">await</span> odindioPlugin.getModel&lt;TestModel&gt;(<span class=\"string\">&#x27;/json&#x27;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(model));</span><br><span class=\"line\">    <span class=\"comment\">// expect(model.slideshow!.title, &#x27;Sample Slide Show&#x27;);</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request return Model List</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getJson-2&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getJson no param</span></span><br><span class=\"line\">    OdinDio odindioPlugin = OdinDio();</span><br><span class=\"line\">    odindioPlugin.removeDioLog();</span><br><span class=\"line\">    odindioPlugin.addDioLog();</span><br><span class=\"line\">    odindioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> models = <span class=\"keyword\">await</span> odindioPlugin.getModels&lt;StudentModel&gt;(<span class=\"string\">&#x27;/stus&#x27;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(models));</span><br><span class=\"line\">    expect(models.length, greaterThan(<span class=\"number\">0</span>));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request by queryParameters return Model List</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getJson-3&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getJson with params</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;https://tenapi.cn&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> model = <span class=\"keyword\">await</span> odinDioPlugin.getModel&lt;TenModel&gt;(<span class=\"string\">&quot;/qqname&quot;</span>,</span><br><span class=\"line\">        queryParameters: &#123;<span class=\"string\">&quot;qq&quot;</span>: <span class=\"string\">&quot;123456&quot;</span>&#125;,</span><br><span class=\"line\">        options: Options(responseType: ResponseType.json));</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(model));</span><br><span class=\"line\">    expect(model.name, <span class=\"string\">&#x27;腾讯视频&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request by Stream</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getStream&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// get stream</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> stream = <span class=\"keyword\">await</span> odinDioPlugin.getStream(<span class=\"string\">&#x27;/stream&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lst = &lt;<span class=\"built_in\">int</span>&gt;[];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> bytes = <span class=\"keyword\">await</span> stream.first;</span><br><span class=\"line\">    lst = <span class=\"built_in\">List</span>.from(bytes.toList());</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(utf8.decode(lst));</span><br><span class=\"line\">    expect(utf8.decode(lst).length, greaterThan(<span class=\"number\">0</span>));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">get request return Bytes(List<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">int</span>&gt;</span></span>)</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getBytes&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// get Bytes</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lst = <span class=\"keyword\">await</span> odinDioPlugin.getBytes(<span class=\"string\">&#x27;/stream&#x27;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(utf8.decode(lst));</span><br><span class=\"line\">    expect(utf8.decode(lst).length, greaterThan(<span class=\"number\">0</span>));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">post request return Model</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;postStu&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// post with param and return Json</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    odinDioPlugin.removeDioLog();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> data = odinDioPlugin.dataToFormData(&#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;bakabaka&quot;</span>&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response5 = <span class=\"keyword\">await</span> odinDioPlugin.post(<span class=\"string\">&#x27;/postStu&#x27;</span>,</span><br><span class=\"line\">        data: data, options: Options(headers: &#123;<span class=\"string\">&quot;customNewPost&quot;</span>: <span class=\"string\">&quot;newPost&quot;</span>&#125;));</span><br><span class=\"line\">    <span class=\"keyword\">var</span> model = odinDioPlugin.dioResultToModel&lt;PostModel&gt;(response5.data);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;model: <span class=\"subst\">$&#123;json.encode(model)&#125;</span>&quot;</span>);</span><br><span class=\"line\">    expect(model.code, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">multirequest</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;multirequest&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response6 = <span class=\"keyword\">await</span> odinDioPlugin</span><br><span class=\"line\">        .multiRequest([MultiRequest.req1(), MultiRequest.req2()]);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rep1 = response6[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rep1model = odinDioPlugin.dioResultToModel&lt;TestModel&gt;(rep1.data);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(rep1model));</span><br><span class=\"line\">    expect(rep1model.slideshow!.author, <span class=\"string\">&quot;Yours Truly&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rep2 = response6[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(json.encode(rep2.data.length));</span><br><span class=\"line\">    expect(rep2.data!.length, greaterThan(<span class=\"number\">0</span>));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">downloadFile</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;downloadFile&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">double</span> currentProgress = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">final</span> cur = path.dirname(Platform.script.path).substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> savePath = path.join(cur, <span class=\"string\">&#x27;download.txt&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response7 = <span class=\"keyword\">await</span> odinDioPlugin.downloadFile(</span><br><span class=\"line\">        <span class=\"string\">&#x27;/static/output.txt&#x27;</span>, savePath, onReceiveProgress: (received, total) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (total != <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">///<span class=\"markdown\">当前下载的百分比例</span></span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> downloadRatio = (received / total * <span class=\"number\">100</span>).toStringAsFixed(<span class=\"number\">0</span>);</span><br><span class=\"line\">        currentProgress = received / total;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> f = File(savePath);</span><br><span class=\"line\">    expect(f.readAsStringSync(), equals(<span class=\"string\">&#x27;I am a text file&#x27;</span>));</span><br><span class=\"line\">    f.deleteSync(recursive: <span class=\"keyword\">false</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">upload file</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;uploadFile&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    <span class=\"keyword\">final</span> cur = path.dirname(Platform.script.path).substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadFile1 = path.join(cur, <span class=\"string\">&#x27;upload1.txt&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadFile2 = path.join(cur, <span class=\"string\">&#x27;upload2.txt&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadFile3 = path.join(cur, <span class=\"string\">&#x27;upload3.txt&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> formData = odinDioPlugin.dataToFormData(&#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;wendux&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;age&#x27;</span>: <span class=\"number\">25</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;file&#x27;</span>:</span><br><span class=\"line\">          <span class=\"keyword\">await</span> MultipartFile.fromFile(uploadFile1, filename: <span class=\"string\">&#x27;upload1.txt&#x27;</span>),</span><br><span class=\"line\">      <span class=\"string\">&#x27;files&#x27;</span>: [</span><br><span class=\"line\">        <span class=\"keyword\">await</span> MultipartFile.fromFile(uploadFile2, filename: <span class=\"string\">&#x27;upload2.txt&#x27;</span>),</span><br><span class=\"line\">        <span class=\"keyword\">await</span> MultipartFile.fromFile(uploadFile3, filename: <span class=\"string\">&#x27;upload3.txt&#x27;</span>),</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response6 = <span class=\"keyword\">await</span> odinDioPlugin.post(<span class=\"string\">&#x27;/upload&#x27;</span>, data: formData);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(response6.data);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">post stream data</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;post stream data&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> formData = &#123;<span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;wendux&#x27;</span>, <span class=\"string\">&#x27;age&#x27;</span>: <span class=\"number\">25</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lst = utf8.encode(formData.toString());</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> response6 = <span class=\"keyword\">await</span> odinDioPlugin.postDataByStream(<span class=\"string\">&#x27;/stu&#x27;</span>,</span><br><span class=\"line\">        data: odinDioPlugin.listIntToStreamFormData(lst),</span><br><span class=\"line\">        options: Options(headers: &#123;</span><br><span class=\"line\">          Headers.contentLengthHeader: lst.length, <span class=\"comment\">// 设置content-length</span></span><br><span class=\"line\">        &#125;));</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(response6.data);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">完成和终止请求/响应</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;resolve&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// getJson no param</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odinDioPlugin = OdinDio();</span><br><span class=\"line\">    odinDioPlugin.setBaseUrl(<span class=\"string\">&quot;http://httpbin.org&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//定义拦截器</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onRequestHandler1&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> handler</span><br><span class=\"line\">          .resolve(Response(requestOptions: request, data: <span class=\"string\">&#x27;fake data&#x27;</span>));</span><br><span class=\"line\">    &#125;, onResponseHandler: (response, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;onResponseHandler1&quot;</span>);</span><br><span class=\"line\">    &#125;, onErrorHandler: (err, handler) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;err1&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    odinDioPlugin.interceptors().add(odi1);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> model = <span class=\"keyword\">await</span> odinDioPlugin.<span class=\"keyword\">get</span>(<span class=\"string\">&#x27;/json&#x27;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">on</span> DioError <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (e.response != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.response!.data);</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.response!.headers);</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.response!.requestOptions);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Something happened in setting up or sending the request that triggered an Error</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.requestOptions);</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(e.message);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// expect(model.slideshow!.title, &#x27;Sample Slide Show&#x27;);</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>pub.dev发布地址：<a href=\"https://pub.dev/packages/odindio\">odinSam-Flutter - OdinDio封装</a></p>"},{"title":"Flutter - OdinUtils封装","author":"OdinSam","abbrlink":"eff3","date":"2022-12-03T09:00:00.000Z","_content":"> Flutter - OdinUtils封装 完整代码可以在 [GitHub](https://github.com/odinsam/OdinPlugin/tree/master/odinUtils)\n\n<!--more-->\n\n#### Flutter - OdinUtils封装 ![plateform](https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow) ![version](https://img.shields.io/badge/pub.dev-1.0.1-greenyellow)\n```yaml \ndependencies:\n  # dart linq function\n  flinq: ^2.0.2\n  # dart crypto\n  crypto: ^3.0.2 \n```\n\n1. OdinUtils 扩展方法包括内容如下:\n\n|扩展类型|方法名称|方法描述|\n|--|--|--|\n|String|\tcompareIgnoreCase|\t忽略大小写比较|\n|String|\tisChinaCardId|\t判断中国身份号码格式|\n|String|\tisChinaMobile|\t判断中国移动电话号码格式|\n|String|\tisIpAddress|\t判断Ip地址格式|\n|String|\tisEmail|\t判断邮箱地址格式|\n|String|\tisUrl|\t判断url地址格式|\n|String|\ttoMd5|\tstring进行md5加密|\n|String|\ttoSHA1|\tstring进行SHA1加密|\n|String|\ttoCharList|\t转CharList List类型|\n|int|\tunixTimerToTimer|\tUnixTimer时间戳转DateTime|\n|DatTime|\ttoUnixTime|\tDateTime转UnixTimer时间戳|\n|DatTime|\t减运算符 - 运算符重载|\t时间差|\n|DatTime|\tisLeapYear|\t是否是闰年|\n|Random|\todinNextInt|\t随机 A-B 之间的int随机数|\n|Random|\todinNextDouble|\t随机 A-B 之间的double随机数|\n|ParamsSignUtils|\turlAddSign|\turl添加sign签名|\n|ParamsSignUtils|\tvalidateSign|\t验证url sign签名 是否正确|\n|ParamsSignUtils|\tcreateUrlSign|\t创建 sign签名 是否正确|\n\n2. OdinUtils Utils方法包括内容如下:\n\n|工具类类型|\t方法名称\t|方法描述|\n|--|--|--|\n|String|\tOdinStringUtils.generationCode|\t按长度生成对应的字符串|\n|String|\tOdinStringUtils.generationLimpidCode|\t按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字|\n|OdinAlgorithm|\tOdinAlgorithm.getRandomListByWeight|\t按权重返回对应需要个数的数组|\n|OdinRandomUtils|\tOdinRandomUtils.createRandom|\t创建random随机对象|\n|OdinTransformUtils|\tOdinTransformUtils.convertNumberToChineseMoneyWords|\t数字转人民币大写|\n|OdinTransformUtils|\tOdinTransformUtils.convertNumberToChineseNumber|\t数字转中文大写|\n|OdinTransformUtils|\tOdinTransformUtils.convertDateToChineseDate|\t日期转中文大写|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseCalendarHoliday|\t计算中国农历节日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).weekDayHoliday|\t按某月第几周第几日计算的节日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).dateHoliday|\t按公历日计算的节日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).weekDayStr\t|周几的字符|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).dateString\t|公历日期中文表示法 如一九九七年七月一日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).isLeapYear\t|当前是否公历闰年|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseConstellation\t|28星宿计算|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseHour\t|时辰|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).isChineseLeapMonth\t|是否闰月|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).isChineseLeapYear\t|当年是否有闰月|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseDay\t|农历日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseDayString\t|农历日中文表示|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseMonth\t|农历的月份|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseMonthString\t|农历月份字符串|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseYear\t|取农历年份|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseYearString\t|中文纪年|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseDateString\t|取农历日期表示法：农历一九九七年正月初五|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseTwentyFourDay\t|当前日期后一个最近节气|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).constellation\t计算指定日期的星座序号|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).animal\t|计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的 鼠年为1,其它类推|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).animalString\t|取属相字符串|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).ganZhiYearString\t|取农历年的干支表示法如 乙丑年|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).ganZhiMonthString\t|取干支的月表示字符串，注意农历的闰月不记干支|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).ganZhiDayString\t|取干支日表示法|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).ganZhiDateString\t|取当前日期的干支表示法如 甲子年乙丑月丙庚日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).nextDay\t|取下一天|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).pervDay\t|取前一天|\n\n\n3. test\n```dart\ntest('createUrlSign',(){\n    var url = \"name=odinsam&age=19\";\n    var signUrl = ParamsSignUtils();\n    var newUrl = signUrl.urlAddSign(url, \"abc\");\n    print(newUrl);\n  });\n\n  test('validateUrlSign',(){\n    var url = \"age=19&name=odinsam&sign=34fa599226a44fc7f2431c78a6b15393\";\n    var signUrl = ParamsSignUtils();\n    var flag = signUrl.validateSign(url, \"abc\");\n    print(\"验证结果:$flag\");\n    expect(flag, true);\n  });\n\n  test('paramsSign',(){\n    var kv = SplayTreeMap();\n    kv.addAll({\"b\":\"b\"});\n    kv.addAll({\"a\":\"a\"});\n    for(var k in kv.entries){\n      print(\"key:${k.key}\\tvalue:${k.value}\");\n    }\n    print(kv['c']);\n  });\n\n  test('OdinChineseCalendar',(){\n    var str = OdinChineseCalendar(DateTime.now()).chineseCalendarHoliday();\n    print(str);\n  });\n\n  test('transformChineseDate',(){\n    var date = DateTime.now().toString().split(' ')[0];\n    var str = OdinTransformUtils.convertDateToChineseDate(date);\n    print(str);\n  });\n\n  test('transformChineseNumber',(){\n    var str = OdinTransformUtils.convertNumberToChineseNumber(\"100002001.32\");\n    print(str);\n  });\n\n  test('transformMoneyWork',(){\n    var str = OdinTransformUtils.convertNumberToChineseMoneyWords(\"30003.3275\");\n    print(str);\n  });\n\n  test('timer',(){\n    var dt = OdinChineseCalendar(DateTime.now());\n    print(dt.dateString());\n    print(dt.ganZhiDateString());\n  });\n\n  test('listSum',(){\n    var lst = <Map<Stu, int>>[\n      {Stu(\"odinsam1\",120):6},{Stu(\"odinsam2\",220):30},{Stu(\"odinsam3\",120):130},{Stu(\"odinsam4\",420):834}\n    ];\n    var i1=0,i2=0,i3=0,i4=0;\n    for(var i =0;i<100;i++){\n      var wlst = OdinAlgorithm.getRandomListByWeight(lst, 1);\n      if(wlst[0].keys.first.name==\"odinsam1\"){\n        i1+=1;\n      }\n      if(wlst[0].keys.first.name==\"odinsam2\"){\n        i2+=1;\n      }\n      if(wlst[0].keys.first.name==\"odinsam3\"){\n        i3+=1;\n      }\n      if(wlst[0].keys.first.name==\"odinsam4\"){\n        i4+=1;\n      }\n    }\n    print(\"1:${i1}\\t\\t2:${i2}\\t\\t3:${i3}\\t\\t4:${i4}\");\n  });\n\n  test('stringUtils',(){\n    String str=\"abc\";\n    expect(str.compareIgnoreCase(\"ABC\"), true);\n    expect(str.compareIgnoreCase(\"ABC\",ignoreCase: false), false);\n  });\n\n  /// 判断中国身份号码格式\n  test('stringRegex-中国身份号码格式',(){\n    String str=\"62010419820729029x\";\n    expect(str.isChinaCardId(), true);\n  });\n\n  /// 判断中国移动电话号码格式\n  test('stringRegex-中国移动电话号码格式',(){\n    String str=\"17377777777\";\n    expect(str.isChinaMobile(), true);\n  });\n\n  /// 判断邮箱地址格式\n  test('stringRegex-邮箱地址格式',(){\n    String str=\"123456@qq.com\";\n    expect(str.isEmail(), true);\n  });\n\n  /// 判断url地址格式\n  test('stringRegex-url地址格式',(){\n    String str=\"https://www.baidu.com\";\n    expect(str.isUrl(), true);\n  });\n\n  /// 判断Ip地址格式\n  test('stringRegex-Ip地址格式',(){\n    String str=\"127.0.0.1\";\n    expect(str.isIpAddress(), true);\n  });\n\n  /// string进行md5加密\n  test('stringMd5',(){\n    var str = \"odinsam\";\n    expect(str.toMd5(), \"6f61c3e668ff2fc275895b843044829c\");\n    expect(str.toMd5(upperCase: true), \"6F61C3E668FF2FC275895B843044829C\");\n  });\n\n  /// string进行SHA1加密\n  test('stringSHA1',(){\n    var str = \"odinsam\";\n    expect(str.toSHA1(), \"6d07eb5c4263173417428f226655438d346471f9\");\n    expect(str.toSHA1(upperCase: true), \"6D07EB5C4263173417428F226655438D346471F9\");\n  });\n\n  /// UnixTimer时间戳转DateTime  DateTime转UnixTimer时间戳\n  test('time',(){\n    var dt = DateTime.now();\n    int unixTime = dt.toUnixTime();\n    print(dt.toString());\n    print(unixTime);\n    print(unixTime.unixTimerToTimer());\n  });\n\n  /// 按长度生成对应的字符串\n  test('generationCode',(){\n    var str = OdinStringUtils.generationCode(4);\n    print(str);\n    expect(str.length, 4);\n  });\n\n  /// 按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字\n  test('generationLimpidCode',(){\n    var str = OdinStringUtils.generationLimpidCode(6);\n    print(str);\n    expect(str.length, 6);\n  });\n\n  test('$MethodChannelOdinutils is the default instance', () {\n    expect(initialPlatform, isInstanceOf<MethodChannelOdinutils>());\n  });\n\n  test('getPlatformVersion', () async {\n    Odinutils odinutilsPlugin = Odinutils();\n    MockOdinutilsPlatform fakePlatform = MockOdinutilsPlatform();\n    OdinutilsPlatform.instance = fakePlatform;\n\n    expect(await odinutilsPlugin.getPlatformVersion(), '42');\n  });\n```\n\n#### Getting Started\npub.dev发布地址：[odinSam-Flutter - OdinUtils 工具类封装](https://pub.dev/packages/odinutils)\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Flutter-OdinUtils封装.md","raw":"title: Flutter - OdinUtils封装\nauthor: OdinSam\ntags:\n  - OdinUtils\n  - Flutter\ncategories:\n  - Flutter\nabbrlink: eff3\ndate: 2022-12-03 17:00:00\n---\n> Flutter - OdinUtils封装 完整代码可以在 [GitHub](https://github.com/odinsam/OdinPlugin/tree/master/odinUtils)\n\n<!--more-->\n\n#### Flutter - OdinUtils封装 ![plateform](https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow) ![version](https://img.shields.io/badge/pub.dev-1.0.1-greenyellow)\n```yaml \ndependencies:\n  # dart linq function\n  flinq: ^2.0.2\n  # dart crypto\n  crypto: ^3.0.2 \n```\n\n1. OdinUtils 扩展方法包括内容如下:\n\n|扩展类型|方法名称|方法描述|\n|--|--|--|\n|String|\tcompareIgnoreCase|\t忽略大小写比较|\n|String|\tisChinaCardId|\t判断中国身份号码格式|\n|String|\tisChinaMobile|\t判断中国移动电话号码格式|\n|String|\tisIpAddress|\t判断Ip地址格式|\n|String|\tisEmail|\t判断邮箱地址格式|\n|String|\tisUrl|\t判断url地址格式|\n|String|\ttoMd5|\tstring进行md5加密|\n|String|\ttoSHA1|\tstring进行SHA1加密|\n|String|\ttoCharList|\t转CharList List类型|\n|int|\tunixTimerToTimer|\tUnixTimer时间戳转DateTime|\n|DatTime|\ttoUnixTime|\tDateTime转UnixTimer时间戳|\n|DatTime|\t减运算符 - 运算符重载|\t时间差|\n|DatTime|\tisLeapYear|\t是否是闰年|\n|Random|\todinNextInt|\t随机 A-B 之间的int随机数|\n|Random|\todinNextDouble|\t随机 A-B 之间的double随机数|\n|ParamsSignUtils|\turlAddSign|\turl添加sign签名|\n|ParamsSignUtils|\tvalidateSign|\t验证url sign签名 是否正确|\n|ParamsSignUtils|\tcreateUrlSign|\t创建 sign签名 是否正确|\n\n2. OdinUtils Utils方法包括内容如下:\n\n|工具类类型|\t方法名称\t|方法描述|\n|--|--|--|\n|String|\tOdinStringUtils.generationCode|\t按长度生成对应的字符串|\n|String|\tOdinStringUtils.generationLimpidCode|\t按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字|\n|OdinAlgorithm|\tOdinAlgorithm.getRandomListByWeight|\t按权重返回对应需要个数的数组|\n|OdinRandomUtils|\tOdinRandomUtils.createRandom|\t创建random随机对象|\n|OdinTransformUtils|\tOdinTransformUtils.convertNumberToChineseMoneyWords|\t数字转人民币大写|\n|OdinTransformUtils|\tOdinTransformUtils.convertNumberToChineseNumber|\t数字转中文大写|\n|OdinTransformUtils|\tOdinTransformUtils.convertDateToChineseDate|\t日期转中文大写|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseCalendarHoliday|\t计算中国农历节日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).weekDayHoliday|\t按某月第几周第几日计算的节日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).dateHoliday|\t按公历日计算的节日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).weekDayStr\t|周几的字符|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).dateString\t|公历日期中文表示法 如一九九七年七月一日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).isLeapYear\t|当前是否公历闰年|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseConstellation\t|28星宿计算|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseHour\t|时辰|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).isChineseLeapMonth\t|是否闰月|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).isChineseLeapYear\t|当年是否有闰月|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseDay\t|农历日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseDayString\t|农历日中文表示|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseMonth\t|农历的月份|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseMonthString\t|农历月份字符串|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseYear\t|取农历年份|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseYearString\t|中文纪年|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseDateString\t|取农历日期表示法：农历一九九七年正月初五|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).chineseTwentyFourDay\t|当前日期后一个最近节气|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).constellation\t计算指定日期的星座序号|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).animal\t|计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的 鼠年为1,其它类推|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).animalString\t|取属相字符串|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).ganZhiYearString\t|取农历年的干支表示法如 乙丑年|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).ganZhiMonthString\t|取干支的月表示字符串，注意农历的闰月不记干支|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).ganZhiDayString\t|取干支日表示法|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).ganZhiDateString\t|取当前日期的干支表示法如 甲子年乙丑月丙庚日|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).nextDay\t|取下一天|\n|OdinChineseCalendar|\tOdinChineseCalendar(Date类型).pervDay\t|取前一天|\n\n\n3. test\n```dart\ntest('createUrlSign',(){\n    var url = \"name=odinsam&age=19\";\n    var signUrl = ParamsSignUtils();\n    var newUrl = signUrl.urlAddSign(url, \"abc\");\n    print(newUrl);\n  });\n\n  test('validateUrlSign',(){\n    var url = \"age=19&name=odinsam&sign=34fa599226a44fc7f2431c78a6b15393\";\n    var signUrl = ParamsSignUtils();\n    var flag = signUrl.validateSign(url, \"abc\");\n    print(\"验证结果:$flag\");\n    expect(flag, true);\n  });\n\n  test('paramsSign',(){\n    var kv = SplayTreeMap();\n    kv.addAll({\"b\":\"b\"});\n    kv.addAll({\"a\":\"a\"});\n    for(var k in kv.entries){\n      print(\"key:${k.key}\\tvalue:${k.value}\");\n    }\n    print(kv['c']);\n  });\n\n  test('OdinChineseCalendar',(){\n    var str = OdinChineseCalendar(DateTime.now()).chineseCalendarHoliday();\n    print(str);\n  });\n\n  test('transformChineseDate',(){\n    var date = DateTime.now().toString().split(' ')[0];\n    var str = OdinTransformUtils.convertDateToChineseDate(date);\n    print(str);\n  });\n\n  test('transformChineseNumber',(){\n    var str = OdinTransformUtils.convertNumberToChineseNumber(\"100002001.32\");\n    print(str);\n  });\n\n  test('transformMoneyWork',(){\n    var str = OdinTransformUtils.convertNumberToChineseMoneyWords(\"30003.3275\");\n    print(str);\n  });\n\n  test('timer',(){\n    var dt = OdinChineseCalendar(DateTime.now());\n    print(dt.dateString());\n    print(dt.ganZhiDateString());\n  });\n\n  test('listSum',(){\n    var lst = <Map<Stu, int>>[\n      {Stu(\"odinsam1\",120):6},{Stu(\"odinsam2\",220):30},{Stu(\"odinsam3\",120):130},{Stu(\"odinsam4\",420):834}\n    ];\n    var i1=0,i2=0,i3=0,i4=0;\n    for(var i =0;i<100;i++){\n      var wlst = OdinAlgorithm.getRandomListByWeight(lst, 1);\n      if(wlst[0].keys.first.name==\"odinsam1\"){\n        i1+=1;\n      }\n      if(wlst[0].keys.first.name==\"odinsam2\"){\n        i2+=1;\n      }\n      if(wlst[0].keys.first.name==\"odinsam3\"){\n        i3+=1;\n      }\n      if(wlst[0].keys.first.name==\"odinsam4\"){\n        i4+=1;\n      }\n    }\n    print(\"1:${i1}\\t\\t2:${i2}\\t\\t3:${i3}\\t\\t4:${i4}\");\n  });\n\n  test('stringUtils',(){\n    String str=\"abc\";\n    expect(str.compareIgnoreCase(\"ABC\"), true);\n    expect(str.compareIgnoreCase(\"ABC\",ignoreCase: false), false);\n  });\n\n  /// 判断中国身份号码格式\n  test('stringRegex-中国身份号码格式',(){\n    String str=\"62010419820729029x\";\n    expect(str.isChinaCardId(), true);\n  });\n\n  /// 判断中国移动电话号码格式\n  test('stringRegex-中国移动电话号码格式',(){\n    String str=\"17377777777\";\n    expect(str.isChinaMobile(), true);\n  });\n\n  /// 判断邮箱地址格式\n  test('stringRegex-邮箱地址格式',(){\n    String str=\"123456@qq.com\";\n    expect(str.isEmail(), true);\n  });\n\n  /// 判断url地址格式\n  test('stringRegex-url地址格式',(){\n    String str=\"https://www.baidu.com\";\n    expect(str.isUrl(), true);\n  });\n\n  /// 判断Ip地址格式\n  test('stringRegex-Ip地址格式',(){\n    String str=\"127.0.0.1\";\n    expect(str.isIpAddress(), true);\n  });\n\n  /// string进行md5加密\n  test('stringMd5',(){\n    var str = \"odinsam\";\n    expect(str.toMd5(), \"6f61c3e668ff2fc275895b843044829c\");\n    expect(str.toMd5(upperCase: true), \"6F61C3E668FF2FC275895B843044829C\");\n  });\n\n  /// string进行SHA1加密\n  test('stringSHA1',(){\n    var str = \"odinsam\";\n    expect(str.toSHA1(), \"6d07eb5c4263173417428f226655438d346471f9\");\n    expect(str.toSHA1(upperCase: true), \"6D07EB5C4263173417428F226655438D346471F9\");\n  });\n\n  /// UnixTimer时间戳转DateTime  DateTime转UnixTimer时间戳\n  test('time',(){\n    var dt = DateTime.now();\n    int unixTime = dt.toUnixTime();\n    print(dt.toString());\n    print(unixTime);\n    print(unixTime.unixTimerToTimer());\n  });\n\n  /// 按长度生成对应的字符串\n  test('generationCode',(){\n    var str = OdinStringUtils.generationCode(4);\n    print(str);\n    expect(str.length, 4);\n  });\n\n  /// 按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字\n  test('generationLimpidCode',(){\n    var str = OdinStringUtils.generationLimpidCode(6);\n    print(str);\n    expect(str.length, 6);\n  });\n\n  test('$MethodChannelOdinutils is the default instance', () {\n    expect(initialPlatform, isInstanceOf<MethodChannelOdinutils>());\n  });\n\n  test('getPlatformVersion', () async {\n    Odinutils odinutilsPlugin = Odinutils();\n    MockOdinutilsPlatform fakePlatform = MockOdinutilsPlatform();\n    OdinutilsPlatform.instance = fakePlatform;\n\n    expect(await odinutilsPlugin.getPlatformVersion(), '42');\n  });\n```\n\n#### Getting Started\npub.dev发布地址：[odinSam-Flutter - OdinUtils 工具类封装](https://pub.dev/packages/odinutils)\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Flutter-OdinUtils封装","published":1,"updated":"2023-03-10T09:09:07.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza1y00075cs9cp0i3p7p","content":"<blockquote>\n<p>Flutter - OdinUtils封装 完整代码可以在 <a href=\"https://github.com/odinsam/OdinPlugin/tree/master/odinUtils\">GitHub</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"flutter-odinutils封装-plateform-version\"><a class=\"markdownIt-Anchor\" href=\"#flutter-odinutils封装-plateform-version\"></a> Flutter - OdinUtils封装 <img src=\"https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow\" alt=\"plateform\" /> <img src=\"https://img.shields.io/badge/pub.dev-1.0.1-greenyellow\" alt=\"version\" /></h4>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">dependencies:</span></span><br><span class=\"line\">  <span class=\"comment\"># dart linq function</span></span><br><span class=\"line\">  <span class=\"attr\">flinq:</span> <span class=\"string\">^2.0.2</span></span><br><span class=\"line\">  <span class=\"comment\"># dart crypto</span></span><br><span class=\"line\">  <span class=\"attr\">crypto:</span> <span class=\"string\">^3.0.2</span> </span><br></pre></td></tr></table></figure>\n<ol>\n<li>OdinUtils 扩展方法包括内容如下:</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>扩展类型</th>\n<th>方法名称</th>\n<th>方法描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>compareIgnoreCase</td>\n<td>忽略大小写比较</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isChinaCardId</td>\n<td>判断中国身份号码格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isChinaMobile</td>\n<td>判断中国移动电话号码格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isIpAddress</td>\n<td>判断Ip地址格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isEmail</td>\n<td>判断邮箱地址格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isUrl</td>\n<td>判断url地址格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>toMd5</td>\n<td>string进行md5加密</td>\n</tr>\n<tr>\n<td>String</td>\n<td>toSHA1</td>\n<td>string进行SHA1加密</td>\n</tr>\n<tr>\n<td>String</td>\n<td>toCharList</td>\n<td>转CharList List类型</td>\n</tr>\n<tr>\n<td>int</td>\n<td>unixTimerToTimer</td>\n<td>UnixTimer时间戳转DateTime</td>\n</tr>\n<tr>\n<td>DatTime</td>\n<td>toUnixTime</td>\n<td>DateTime转UnixTimer时间戳</td>\n</tr>\n<tr>\n<td>DatTime</td>\n<td>减运算符 - 运算符重载</td>\n<td>时间差</td>\n</tr>\n<tr>\n<td>DatTime</td>\n<td>isLeapYear</td>\n<td>是否是闰年</td>\n</tr>\n<tr>\n<td>Random</td>\n<td>odinNextInt</td>\n<td>随机 A-B 之间的int随机数</td>\n</tr>\n<tr>\n<td>Random</td>\n<td>odinNextDouble</td>\n<td>随机 A-B 之间的double随机数</td>\n</tr>\n<tr>\n<td>ParamsSignUtils</td>\n<td>urlAddSign</td>\n<td>url添加sign签名</td>\n</tr>\n<tr>\n<td>ParamsSignUtils</td>\n<td>validateSign</td>\n<td>验证url sign签名 是否正确</td>\n</tr>\n<tr>\n<td>ParamsSignUtils</td>\n<td>createUrlSign</td>\n<td>创建 sign签名 是否正确</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"2\">\n<li>OdinUtils Utils方法包括内容如下:</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>工具类类型</th>\n<th>方法名称</th>\n<th>方法描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>OdinStringUtils.generationCode</td>\n<td>按长度生成对应的字符串</td>\n</tr>\n<tr>\n<td>String</td>\n<td>OdinStringUtils.generationLimpidCode</td>\n<td>按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字</td>\n</tr>\n<tr>\n<td>OdinAlgorithm</td>\n<td>OdinAlgorithm.getRandomListByWeight</td>\n<td>按权重返回对应需要个数的数组</td>\n</tr>\n<tr>\n<td>OdinRandomUtils</td>\n<td>OdinRandomUtils.createRandom</td>\n<td>创建random随机对象</td>\n</tr>\n<tr>\n<td>OdinTransformUtils</td>\n<td>OdinTransformUtils.convertNumberToChineseMoneyWords</td>\n<td>数字转人民币大写</td>\n</tr>\n<tr>\n<td>OdinTransformUtils</td>\n<td>OdinTransformUtils.convertNumberToChineseNumber</td>\n<td>数字转中文大写</td>\n</tr>\n<tr>\n<td>OdinTransformUtils</td>\n<td>OdinTransformUtils.convertDateToChineseDate</td>\n<td>日期转中文大写</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseCalendarHoliday</td>\n<td>计算中国农历节日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).weekDayHoliday</td>\n<td>按某月第几周第几日计算的节日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).dateHoliday</td>\n<td>按公历日计算的节日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).weekDayStr</td>\n<td>周几的字符</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).dateString</td>\n<td>公历日期中文表示法 如一九九七年七月一日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).isLeapYear</td>\n<td>当前是否公历闰年</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseConstellation</td>\n<td>28星宿计算</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseHour</td>\n<td>时辰</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).isChineseLeapMonth</td>\n<td>是否闰月</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).isChineseLeapYear</td>\n<td>当年是否有闰月</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseDay</td>\n<td>农历日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseDayString</td>\n<td>农历日中文表示</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseMonth</td>\n<td>农历的月份</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseMonthString</td>\n<td>农历月份字符串</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseYear</td>\n<td>取农历年份</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseYearString</td>\n<td>中文纪年</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseDateString</td>\n<td>取农历日期表示法：农历一九九七年正月初五</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseTwentyFourDay</td>\n<td>当前日期后一个最近节气</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).constellation\t计算指定日期的星座序号</td>\n<td></td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).animal</td>\n<td>计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的 鼠年为1,其它类推</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).animalString</td>\n<td>取属相字符串</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).ganZhiYearString</td>\n<td>取农历年的干支表示法如 乙丑年</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).ganZhiMonthString</td>\n<td>取干支的月表示字符串，注意农历的闰月不记干支</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).ganZhiDayString</td>\n<td>取干支日表示法</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).ganZhiDateString</td>\n<td>取当前日期的干支表示法如 甲子年乙丑月丙庚日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).nextDay</td>\n<td>取下一天</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).pervDay</td>\n<td>取前一天</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>test</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test(<span class=\"string\">&#x27;createUrlSign&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> url = <span class=\"string\">&quot;name=odinsam&amp;age=19&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> signUrl = ParamsSignUtils();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newUrl = signUrl.urlAddSign(url, <span class=\"string\">&quot;abc&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(newUrl);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;validateUrlSign&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> url = <span class=\"string\">&quot;age=19&amp;name=odinsam&amp;sign=34fa599226a44fc7f2431c78a6b15393&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> signUrl = ParamsSignUtils();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flag = signUrl.validateSign(url, <span class=\"string\">&quot;abc&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;验证结果:<span class=\"subst\">$flag</span>&quot;</span>);</span><br><span class=\"line\">    expect(flag, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;paramsSign&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> kv = SplayTreeMap();</span><br><span class=\"line\">    kv.addAll(&#123;<span class=\"string\">&quot;b&quot;</span>:<span class=\"string\">&quot;b&quot;</span>&#125;);</span><br><span class=\"line\">    kv.addAll(&#123;<span class=\"string\">&quot;a&quot;</span>:<span class=\"string\">&quot;a&quot;</span>&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> kv.entries)&#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;key:<span class=\"subst\">$&#123;k.key&#125;</span>\\tvalue:<span class=\"subst\">$&#123;k.value&#125;</span>&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(kv[<span class=\"string\">&#x27;c&#x27;</span>]);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;OdinChineseCalendar&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinChineseCalendar(<span class=\"built_in\">DateTime</span>.now()).chineseCalendarHoliday();</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;transformChineseDate&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"built_in\">DateTime</span>.now().toString().split(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinTransformUtils.convertDateToChineseDate(date);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;transformChineseNumber&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinTransformUtils.convertNumberToChineseNumber(<span class=\"string\">&quot;100002001.32&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;transformMoneyWork&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinTransformUtils.convertNumberToChineseMoneyWords(<span class=\"string\">&quot;30003.3275&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;timer&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dt = OdinChineseCalendar(<span class=\"built_in\">DateTime</span>.now());</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(dt.dateString());</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(dt.ganZhiDateString());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;listSum&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lst = &lt;<span class=\"built_in\">Map</span>&lt;Stu, <span class=\"built_in\">int</span>&gt;&gt;[</span><br><span class=\"line\">      &#123;Stu(<span class=\"string\">&quot;odinsam1&quot;</span>,<span class=\"number\">120</span>):<span class=\"number\">6</span>&#125;,&#123;Stu(<span class=\"string\">&quot;odinsam2&quot;</span>,<span class=\"number\">220</span>):<span class=\"number\">30</span>&#125;,&#123;Stu(<span class=\"string\">&quot;odinsam3&quot;</span>,<span class=\"number\">120</span>):<span class=\"number\">130</span>&#125;,&#123;Stu(<span class=\"string\">&quot;odinsam4&quot;</span>,<span class=\"number\">420</span>):<span class=\"number\">834</span>&#125;</span><br><span class=\"line\">    ];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i1=<span class=\"number\">0</span>,i2=<span class=\"number\">0</span>,i3=<span class=\"number\">0</span>,i4=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i =<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> wlst = OdinAlgorithm.getRandomListByWeight(lst, <span class=\"number\">1</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(wlst[<span class=\"number\">0</span>].keys.first.name==<span class=\"string\">&quot;odinsam1&quot;</span>)&#123;</span><br><span class=\"line\">        i1+=<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(wlst[<span class=\"number\">0</span>].keys.first.name==<span class=\"string\">&quot;odinsam2&quot;</span>)&#123;</span><br><span class=\"line\">        i2+=<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(wlst[<span class=\"number\">0</span>].keys.first.name==<span class=\"string\">&quot;odinsam3&quot;</span>)&#123;</span><br><span class=\"line\">        i3+=<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(wlst[<span class=\"number\">0</span>].keys.first.name==<span class=\"string\">&quot;odinsam4&quot;</span>)&#123;</span><br><span class=\"line\">        i4+=<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;1:<span class=\"subst\">$&#123;i1&#125;</span>\\t\\t2:<span class=\"subst\">$&#123;i2&#125;</span>\\t\\t3:<span class=\"subst\">$&#123;i3&#125;</span>\\t\\t4:<span class=\"subst\">$&#123;i4&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringUtils&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;abc&quot;</span>;</span><br><span class=\"line\">    expect(str.compareIgnoreCase(<span class=\"string\">&quot;ABC&quot;</span>), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    expect(str.compareIgnoreCase(<span class=\"string\">&quot;ABC&quot;</span>,ignoreCase: <span class=\"keyword\">false</span>), <span class=\"keyword\">false</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断中国身份号码格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-中国身份号码格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;62010419820729029x&quot;</span>;</span><br><span class=\"line\">    expect(str.isChinaCardId(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断中国移动电话号码格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-中国移动电话号码格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;17377777777&quot;</span>;</span><br><span class=\"line\">    expect(str.isChinaMobile(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断邮箱地址格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-邮箱地址格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;123456@qq.com&quot;</span>;</span><br><span class=\"line\">    expect(str.isEmail(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断url地址格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-url地址格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;https://www.baidu.com&quot;</span>;</span><br><span class=\"line\">    expect(str.isUrl(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断Ip地址格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-Ip地址格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;127.0.0.1&quot;</span>;</span><br><span class=\"line\">    expect(str.isIpAddress(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">string进行md5加密</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringMd5&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;odinsam&quot;</span>;</span><br><span class=\"line\">    expect(str.toMd5(), <span class=\"string\">&quot;6f61c3e668ff2fc275895b843044829c&quot;</span>);</span><br><span class=\"line\">    expect(str.toMd5(upperCase: <span class=\"keyword\">true</span>), <span class=\"string\">&quot;6F61C3E668FF2FC275895B843044829C&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">string进行SHA1加密</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringSHA1&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;odinsam&quot;</span>;</span><br><span class=\"line\">    expect(str.toSHA1(), <span class=\"string\">&quot;6d07eb5c4263173417428f226655438d346471f9&quot;</span>);</span><br><span class=\"line\">    expect(str.toSHA1(upperCase: <span class=\"keyword\">true</span>), <span class=\"string\">&quot;6D07EB5C4263173417428F226655438D346471F9&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">UnixTimer时间戳转DateTime  DateTime转UnixTimer时间戳</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;time&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dt = <span class=\"built_in\">DateTime</span>.now();</span><br><span class=\"line\">    <span class=\"built_in\">int</span> unixTime = dt.toUnixTime();</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(dt.toString());</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(unixTime);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(unixTime.unixTimerToTimer());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">按长度生成对应的字符串</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;generationCode&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinStringUtils.generationCode(<span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">    expect(str.length, <span class=\"number\">4</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;generationLimpidCode&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinStringUtils.generationLimpidCode(<span class=\"number\">6</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">    expect(str.length, <span class=\"number\">6</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;<span class=\"subst\">$MethodChannelOdinutils</span> is the default instance&#x27;</span>, () &#123;</span><br><span class=\"line\">    expect(initialPlatform, isInstanceOf&lt;MethodChannelOdinutils&gt;());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getPlatformVersion&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    Odinutils odinutilsPlugin = Odinutils();</span><br><span class=\"line\">    MockOdinutilsPlatform fakePlatform = MockOdinutilsPlatform();</span><br><span class=\"line\">    OdinutilsPlatform.instance = fakePlatform;</span><br><span class=\"line\"></span><br><span class=\"line\">    expect(<span class=\"keyword\">await</span> odinutilsPlugin.getPlatformVersion(), <span class=\"string\">&#x27;42&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"getting-started\"><a class=\"markdownIt-Anchor\" href=\"#getting-started\"></a> Getting Started</h4>\n<p>pub.dev发布地址：<a href=\"https://pub.dev/packages/odinutils\">odinSam-Flutter - OdinUtils 工具类封装</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Flutter - OdinUtils封装 完整代码可以在 <a href=\"https://github.com/odinsam/OdinPlugin/tree/master/odinUtils\">GitHub</a></p>\n</blockquote>","more":"<h4 id=\"flutter-odinutils封装-plateform-version\"><a class=\"markdownIt-Anchor\" href=\"#flutter-odinutils封装-plateform-version\"></a> Flutter - OdinUtils封装 <img src=\"https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow\" alt=\"plateform\" /> <img src=\"https://img.shields.io/badge/pub.dev-1.0.1-greenyellow\" alt=\"version\" /></h4>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">dependencies:</span></span><br><span class=\"line\">  <span class=\"comment\"># dart linq function</span></span><br><span class=\"line\">  <span class=\"attr\">flinq:</span> <span class=\"string\">^2.0.2</span></span><br><span class=\"line\">  <span class=\"comment\"># dart crypto</span></span><br><span class=\"line\">  <span class=\"attr\">crypto:</span> <span class=\"string\">^3.0.2</span> </span><br></pre></td></tr></table></figure>\n<ol>\n<li>OdinUtils 扩展方法包括内容如下:</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>扩展类型</th>\n<th>方法名称</th>\n<th>方法描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>compareIgnoreCase</td>\n<td>忽略大小写比较</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isChinaCardId</td>\n<td>判断中国身份号码格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isChinaMobile</td>\n<td>判断中国移动电话号码格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isIpAddress</td>\n<td>判断Ip地址格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isEmail</td>\n<td>判断邮箱地址格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>isUrl</td>\n<td>判断url地址格式</td>\n</tr>\n<tr>\n<td>String</td>\n<td>toMd5</td>\n<td>string进行md5加密</td>\n</tr>\n<tr>\n<td>String</td>\n<td>toSHA1</td>\n<td>string进行SHA1加密</td>\n</tr>\n<tr>\n<td>String</td>\n<td>toCharList</td>\n<td>转CharList List类型</td>\n</tr>\n<tr>\n<td>int</td>\n<td>unixTimerToTimer</td>\n<td>UnixTimer时间戳转DateTime</td>\n</tr>\n<tr>\n<td>DatTime</td>\n<td>toUnixTime</td>\n<td>DateTime转UnixTimer时间戳</td>\n</tr>\n<tr>\n<td>DatTime</td>\n<td>减运算符 - 运算符重载</td>\n<td>时间差</td>\n</tr>\n<tr>\n<td>DatTime</td>\n<td>isLeapYear</td>\n<td>是否是闰年</td>\n</tr>\n<tr>\n<td>Random</td>\n<td>odinNextInt</td>\n<td>随机 A-B 之间的int随机数</td>\n</tr>\n<tr>\n<td>Random</td>\n<td>odinNextDouble</td>\n<td>随机 A-B 之间的double随机数</td>\n</tr>\n<tr>\n<td>ParamsSignUtils</td>\n<td>urlAddSign</td>\n<td>url添加sign签名</td>\n</tr>\n<tr>\n<td>ParamsSignUtils</td>\n<td>validateSign</td>\n<td>验证url sign签名 是否正确</td>\n</tr>\n<tr>\n<td>ParamsSignUtils</td>\n<td>createUrlSign</td>\n<td>创建 sign签名 是否正确</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"2\">\n<li>OdinUtils Utils方法包括内容如下:</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>工具类类型</th>\n<th>方法名称</th>\n<th>方法描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>OdinStringUtils.generationCode</td>\n<td>按长度生成对应的字符串</td>\n</tr>\n<tr>\n<td>String</td>\n<td>OdinStringUtils.generationLimpidCode</td>\n<td>按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字</td>\n</tr>\n<tr>\n<td>OdinAlgorithm</td>\n<td>OdinAlgorithm.getRandomListByWeight</td>\n<td>按权重返回对应需要个数的数组</td>\n</tr>\n<tr>\n<td>OdinRandomUtils</td>\n<td>OdinRandomUtils.createRandom</td>\n<td>创建random随机对象</td>\n</tr>\n<tr>\n<td>OdinTransformUtils</td>\n<td>OdinTransformUtils.convertNumberToChineseMoneyWords</td>\n<td>数字转人民币大写</td>\n</tr>\n<tr>\n<td>OdinTransformUtils</td>\n<td>OdinTransformUtils.convertNumberToChineseNumber</td>\n<td>数字转中文大写</td>\n</tr>\n<tr>\n<td>OdinTransformUtils</td>\n<td>OdinTransformUtils.convertDateToChineseDate</td>\n<td>日期转中文大写</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseCalendarHoliday</td>\n<td>计算中国农历节日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).weekDayHoliday</td>\n<td>按某月第几周第几日计算的节日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).dateHoliday</td>\n<td>按公历日计算的节日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).weekDayStr</td>\n<td>周几的字符</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).dateString</td>\n<td>公历日期中文表示法 如一九九七年七月一日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).isLeapYear</td>\n<td>当前是否公历闰年</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseConstellation</td>\n<td>28星宿计算</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseHour</td>\n<td>时辰</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).isChineseLeapMonth</td>\n<td>是否闰月</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).isChineseLeapYear</td>\n<td>当年是否有闰月</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseDay</td>\n<td>农历日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseDayString</td>\n<td>农历日中文表示</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseMonth</td>\n<td>农历的月份</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseMonthString</td>\n<td>农历月份字符串</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseYear</td>\n<td>取农历年份</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseYearString</td>\n<td>中文纪年</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseDateString</td>\n<td>取农历日期表示法：农历一九九七年正月初五</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).chineseTwentyFourDay</td>\n<td>当前日期后一个最近节气</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).constellation\t计算指定日期的星座序号</td>\n<td></td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).animal</td>\n<td>计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的 鼠年为1,其它类推</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).animalString</td>\n<td>取属相字符串</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).ganZhiYearString</td>\n<td>取农历年的干支表示法如 乙丑年</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).ganZhiMonthString</td>\n<td>取干支的月表示字符串，注意农历的闰月不记干支</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).ganZhiDayString</td>\n<td>取干支日表示法</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).ganZhiDateString</td>\n<td>取当前日期的干支表示法如 甲子年乙丑月丙庚日</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).nextDay</td>\n<td>取下一天</td>\n</tr>\n<tr>\n<td>OdinChineseCalendar</td>\n<td>OdinChineseCalendar(Date类型).pervDay</td>\n<td>取前一天</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>test</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test(<span class=\"string\">&#x27;createUrlSign&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> url = <span class=\"string\">&quot;name=odinsam&amp;age=19&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> signUrl = ParamsSignUtils();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newUrl = signUrl.urlAddSign(url, <span class=\"string\">&quot;abc&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(newUrl);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;validateUrlSign&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> url = <span class=\"string\">&quot;age=19&amp;name=odinsam&amp;sign=34fa599226a44fc7f2431c78a6b15393&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> signUrl = ParamsSignUtils();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> flag = signUrl.validateSign(url, <span class=\"string\">&quot;abc&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;验证结果:<span class=\"subst\">$flag</span>&quot;</span>);</span><br><span class=\"line\">    expect(flag, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;paramsSign&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> kv = SplayTreeMap();</span><br><span class=\"line\">    kv.addAll(&#123;<span class=\"string\">&quot;b&quot;</span>:<span class=\"string\">&quot;b&quot;</span>&#125;);</span><br><span class=\"line\">    kv.addAll(&#123;<span class=\"string\">&quot;a&quot;</span>:<span class=\"string\">&quot;a&quot;</span>&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> kv.entries)&#123;</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;key:<span class=\"subst\">$&#123;k.key&#125;</span>\\tvalue:<span class=\"subst\">$&#123;k.value&#125;</span>&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(kv[<span class=\"string\">&#x27;c&#x27;</span>]);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;OdinChineseCalendar&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinChineseCalendar(<span class=\"built_in\">DateTime</span>.now()).chineseCalendarHoliday();</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;transformChineseDate&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"built_in\">DateTime</span>.now().toString().split(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinTransformUtils.convertDateToChineseDate(date);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;transformChineseNumber&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinTransformUtils.convertNumberToChineseNumber(<span class=\"string\">&quot;100002001.32&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;transformMoneyWork&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinTransformUtils.convertNumberToChineseMoneyWords(<span class=\"string\">&quot;30003.3275&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;timer&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dt = OdinChineseCalendar(<span class=\"built_in\">DateTime</span>.now());</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(dt.dateString());</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(dt.ganZhiDateString());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;listSum&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lst = &lt;<span class=\"built_in\">Map</span>&lt;Stu, <span class=\"built_in\">int</span>&gt;&gt;[</span><br><span class=\"line\">      &#123;Stu(<span class=\"string\">&quot;odinsam1&quot;</span>,<span class=\"number\">120</span>):<span class=\"number\">6</span>&#125;,&#123;Stu(<span class=\"string\">&quot;odinsam2&quot;</span>,<span class=\"number\">220</span>):<span class=\"number\">30</span>&#125;,&#123;Stu(<span class=\"string\">&quot;odinsam3&quot;</span>,<span class=\"number\">120</span>):<span class=\"number\">130</span>&#125;,&#123;Stu(<span class=\"string\">&quot;odinsam4&quot;</span>,<span class=\"number\">420</span>):<span class=\"number\">834</span>&#125;</span><br><span class=\"line\">    ];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i1=<span class=\"number\">0</span>,i2=<span class=\"number\">0</span>,i3=<span class=\"number\">0</span>,i4=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i =<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> wlst = OdinAlgorithm.getRandomListByWeight(lst, <span class=\"number\">1</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(wlst[<span class=\"number\">0</span>].keys.first.name==<span class=\"string\">&quot;odinsam1&quot;</span>)&#123;</span><br><span class=\"line\">        i1+=<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(wlst[<span class=\"number\">0</span>].keys.first.name==<span class=\"string\">&quot;odinsam2&quot;</span>)&#123;</span><br><span class=\"line\">        i2+=<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(wlst[<span class=\"number\">0</span>].keys.first.name==<span class=\"string\">&quot;odinsam3&quot;</span>)&#123;</span><br><span class=\"line\">        i3+=<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(wlst[<span class=\"number\">0</span>].keys.first.name==<span class=\"string\">&quot;odinsam4&quot;</span>)&#123;</span><br><span class=\"line\">        i4+=<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;1:<span class=\"subst\">$&#123;i1&#125;</span>\\t\\t2:<span class=\"subst\">$&#123;i2&#125;</span>\\t\\t3:<span class=\"subst\">$&#123;i3&#125;</span>\\t\\t4:<span class=\"subst\">$&#123;i4&#125;</span>&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringUtils&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;abc&quot;</span>;</span><br><span class=\"line\">    expect(str.compareIgnoreCase(<span class=\"string\">&quot;ABC&quot;</span>), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    expect(str.compareIgnoreCase(<span class=\"string\">&quot;ABC&quot;</span>,ignoreCase: <span class=\"keyword\">false</span>), <span class=\"keyword\">false</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断中国身份号码格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-中国身份号码格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;62010419820729029x&quot;</span>;</span><br><span class=\"line\">    expect(str.isChinaCardId(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断中国移动电话号码格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-中国移动电话号码格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;17377777777&quot;</span>;</span><br><span class=\"line\">    expect(str.isChinaMobile(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断邮箱地址格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-邮箱地址格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;123456@qq.com&quot;</span>;</span><br><span class=\"line\">    expect(str.isEmail(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断url地址格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-url地址格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;https://www.baidu.com&quot;</span>;</span><br><span class=\"line\">    expect(str.isUrl(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">判断Ip地址格式</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringRegex-Ip地址格式&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">String</span> str=<span class=\"string\">&quot;127.0.0.1&quot;</span>;</span><br><span class=\"line\">    expect(str.isIpAddress(), <span class=\"keyword\">true</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">string进行md5加密</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringMd5&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;odinsam&quot;</span>;</span><br><span class=\"line\">    expect(str.toMd5(), <span class=\"string\">&quot;6f61c3e668ff2fc275895b843044829c&quot;</span>);</span><br><span class=\"line\">    expect(str.toMd5(upperCase: <span class=\"keyword\">true</span>), <span class=\"string\">&quot;6F61C3E668FF2FC275895B843044829C&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">string进行SHA1加密</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;stringSHA1&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;odinsam&quot;</span>;</span><br><span class=\"line\">    expect(str.toSHA1(), <span class=\"string\">&quot;6d07eb5c4263173417428f226655438d346471f9&quot;</span>);</span><br><span class=\"line\">    expect(str.toSHA1(upperCase: <span class=\"keyword\">true</span>), <span class=\"string\">&quot;6D07EB5C4263173417428F226655438D346471F9&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">UnixTimer时间戳转DateTime  DateTime转UnixTimer时间戳</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;time&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dt = <span class=\"built_in\">DateTime</span>.now();</span><br><span class=\"line\">    <span class=\"built_in\">int</span> unixTime = dt.toUnixTime();</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(dt.toString());</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(unixTime);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(unixTime.unixTimerToTimer());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">按长度生成对应的字符串</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;generationCode&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinStringUtils.generationCode(<span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">    expect(str.length, <span class=\"number\">4</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/// <span class=\"markdown\">按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字</span></span></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;generationLimpidCode&#x27;</span>,()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = OdinStringUtils.generationLimpidCode(<span class=\"number\">6</span>);</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(str);</span><br><span class=\"line\">    expect(str.length, <span class=\"number\">6</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;<span class=\"subst\">$MethodChannelOdinutils</span> is the default instance&#x27;</span>, () &#123;</span><br><span class=\"line\">    expect(initialPlatform, isInstanceOf&lt;MethodChannelOdinutils&gt;());</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  test(<span class=\"string\">&#x27;getPlatformVersion&#x27;</span>, () <span class=\"keyword\">async</span> &#123;</span><br><span class=\"line\">    Odinutils odinutilsPlugin = Odinutils();</span><br><span class=\"line\">    MockOdinutilsPlatform fakePlatform = MockOdinutilsPlatform();</span><br><span class=\"line\">    OdinutilsPlatform.instance = fakePlatform;</span><br><span class=\"line\"></span><br><span class=\"line\">    expect(<span class=\"keyword\">await</span> odinutilsPlugin.getPlatformVersion(), <span class=\"string\">&#x27;42&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"getting-started\"><a class=\"markdownIt-Anchor\" href=\"#getting-started\"></a> Getting Started</h4>\n<p>pub.dev发布地址：<a href=\"https://pub.dev/packages/odinutils\">odinSam-Flutter - OdinUtils 工具类封装</a></p>"},{"title":"Flutter - Plugin发布","author":"OdinSam","abbrlink":"c804","date":"2022-12-01T08:56:00.000Z","_content":">Flutter - Plugin发布\n\n<!--more-->\n\n#### Plugin发布\n\n1. 执行 flutter pub publish --dry-run 检查是否具备发布条件\n\n遇到的问题\n\nIt‘s strongly recommended to include a “homepage“ or “repository“ field\n\n解决方案：\n\n在 pubspec.yaml 中配置 主页 homepage 地址 :\nhomepage: https://github.com/author/gitname.git\ncurl google.com 检测终端代理是否成功连接google服务器\nexport http_proxy=http://127.0.0.1:10818\nexport https_proxy=http://127.0.0.1:10818\n仅能保证当前终端一次性连接成功\n\n```text vi ~/.zshrc\n# proxy\nproxy () {\n  export http_proxy=\"http://127.0.0.1:10818\"\n  export https_proxy=$http_proxy\n  echo \"HTTP Proxy on\"\n}\n\n# noproxy\nnoproxy () {\n  unset http_proxy\n  unset https_proxy\n  echo \"HTTP Proxy off\"\n}\n```\nsource ~/.zshrc\n\n2. 终端命令\nproxy 开启代理\nnoproxy 关闭代理\n\n3. 发布插件\n```cmd 终端执行\nflutter packages pub publish --server=https://pub.dartlang.org \n```\n","source":"_posts/Flutter-Plugin发布.md","raw":"title: Flutter - Plugin发布\nauthor: OdinSam\ntags:\n  - Plugin\n  - Flutter\ncategories:\n  - Flutter\nabbrlink: c804\ndate: 2022-12-01 16:56:00\n---\n>Flutter - Plugin发布\n\n<!--more-->\n\n#### Plugin发布\n\n1. 执行 flutter pub publish --dry-run 检查是否具备发布条件\n\n遇到的问题\n\nIt‘s strongly recommended to include a “homepage“ or “repository“ field\n\n解决方案：\n\n在 pubspec.yaml 中配置 主页 homepage 地址 :\nhomepage: https://github.com/author/gitname.git\ncurl google.com 检测终端代理是否成功连接google服务器\nexport http_proxy=http://127.0.0.1:10818\nexport https_proxy=http://127.0.0.1:10818\n仅能保证当前终端一次性连接成功\n\n```text vi ~/.zshrc\n# proxy\nproxy () {\n  export http_proxy=\"http://127.0.0.1:10818\"\n  export https_proxy=$http_proxy\n  echo \"HTTP Proxy on\"\n}\n\n# noproxy\nnoproxy () {\n  unset http_proxy\n  unset https_proxy\n  echo \"HTTP Proxy off\"\n}\n```\nsource ~/.zshrc\n\n2. 终端命令\nproxy 开启代理\nnoproxy 关闭代理\n\n3. 发布插件\n```cmd 终端执行\nflutter packages pub publish --server=https://pub.dartlang.org \n```\n","slug":"Flutter-Plugin发布","published":1,"updated":"2023-03-10T09:00:23.446Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2000095cs9hh8k203h","content":"<blockquote>\n<p>Flutter - Plugin发布</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"plugin发布\"><a class=\"markdownIt-Anchor\" href=\"#plugin发布\"></a> Plugin发布</h4>\n<ol>\n<li>执行 flutter pub publish --dry-run 检查是否具备发布条件</li>\n</ol>\n<p>遇到的问题</p>\n<p>It‘s strongly recommended to include a “homepage“ or “repository“ field</p>\n<p>解决方案：</p>\n<p>在 pubspec.yaml 中配置 主页 homepage 地址 :<br />\nhomepage: <a href=\"https://github.com/author/gitname.git\">https://github.com/author/gitname.git</a><br />\ncurl <a href=\"http://google.com\">google.com</a> 检测终端代理是否成功连接google服务器<br />\nexport http_proxy=http://127.0.0.1:10818<br />\nexport https_proxy=http://127.0.0.1:10818<br />\n仅能保证当前终端一次性连接成功</p>\n<figure class=\"highlight plaintext\"><figcaption><span>vi ~/.zshrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># proxy</span><br><span class=\"line\">proxy () &#123;</span><br><span class=\"line\">  export http_proxy=&quot;http://127.0.0.1:10818&quot;</span><br><span class=\"line\">  export https_proxy=$http_proxy</span><br><span class=\"line\">  echo &quot;HTTP Proxy on&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># noproxy</span><br><span class=\"line\">noproxy () &#123;</span><br><span class=\"line\">  unset http_proxy</span><br><span class=\"line\">  unset https_proxy</span><br><span class=\"line\">  echo &quot;HTTP Proxy off&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>source ~/.zshrc</p>\n<ol start=\"2\">\n<li>\n<p>终端命令<br />\nproxy 开启代理<br />\nnoproxy 关闭代理</p>\n</li>\n<li>\n<p>发布插件</p>\n</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>终端执行</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter packages pub publish --server=https://pub.dartlang.org </span><br></pre></td></tr></table></figure>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Flutter - Plugin发布</p>\n</blockquote>","more":"<h4 id=\"plugin发布\"><a class=\"markdownIt-Anchor\" href=\"#plugin发布\"></a> Plugin发布</h4>\n<ol>\n<li>执行 flutter pub publish --dry-run 检查是否具备发布条件</li>\n</ol>\n<p>遇到的问题</p>\n<p>It‘s strongly recommended to include a “homepage“ or “repository“ field</p>\n<p>解决方案：</p>\n<p>在 pubspec.yaml 中配置 主页 homepage 地址 :<br />\nhomepage: <a href=\"https://github.com/author/gitname.git\">https://github.com/author/gitname.git</a><br />\ncurl <a href=\"http://google.com\">google.com</a> 检测终端代理是否成功连接google服务器<br />\nexport http_proxy=http://127.0.0.1:10818<br />\nexport https_proxy=http://127.0.0.1:10818<br />\n仅能保证当前终端一次性连接成功</p>\n<figure class=\"highlight plaintext\"><figcaption><span>vi ~/.zshrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># proxy</span><br><span class=\"line\">proxy () &#123;</span><br><span class=\"line\">  export http_proxy=&quot;http://127.0.0.1:10818&quot;</span><br><span class=\"line\">  export https_proxy=$http_proxy</span><br><span class=\"line\">  echo &quot;HTTP Proxy on&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># noproxy</span><br><span class=\"line\">noproxy () &#123;</span><br><span class=\"line\">  unset http_proxy</span><br><span class=\"line\">  unset https_proxy</span><br><span class=\"line\">  echo &quot;HTTP Proxy off&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>source ~/.zshrc</p>\n<ol start=\"2\">\n<li>\n<p>终端命令<br />\nproxy 开启代理<br />\nnoproxy 关闭代理</p>\n</li>\n<li>\n<p>发布插件</p>\n</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>终端执行</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter packages pub publish --server=https://pub.dartlang.org </span><br></pre></td></tr></table></figure>"},{"title":"Flutter - source-gen 命令与配置","author":"OdinSam","abbrlink":"a7f","date":"2022-11-28T08:46:00.000Z","_content":">Flutter 通过 source-gen 生成对应的model类\n\n<!--more-->\n\n#### 1. 命令\n\n1. 引入 part ‘xxx.g.dart’; 生成对应 xxx.g.dart 文件\n\n```cmd 终端执行\nflutter pub run build_runner clean && flutter pub run build_runner build --delete-conflicting-outputs\n```\n\n2. 生成配置\n```yaml 根目录下新建文件 build.yaml\ntargets:\n  $default:\n    builders:\n      reflectable:\n        generate_for:\n          - test/**.dart\n        options:\n          formatted: true\n```","source":"_posts/Flutter-source-gen-命令与配置.md","raw":"title: Flutter - source-gen 命令与配置\nauthor: OdinSam\ntags:\n  - source-gen\n  - Flutter\ncategories:\n  - Flutter\nabbrlink: a7f\ndate: 2022-11-28 16:46:00\n---\n>Flutter 通过 source-gen 生成对应的model类\n\n<!--more-->\n\n#### 1. 命令\n\n1. 引入 part ‘xxx.g.dart’; 生成对应 xxx.g.dart 文件\n\n```cmd 终端执行\nflutter pub run build_runner clean && flutter pub run build_runner build --delete-conflicting-outputs\n```\n\n2. 生成配置\n```yaml 根目录下新建文件 build.yaml\ntargets:\n  $default:\n    builders:\n      reflectable:\n        generate_for:\n          - test/**.dart\n        options:\n          formatted: true\n```","slug":"Flutter-source-gen-命令与配置","published":1,"updated":"2023-03-10T08:48:27.810Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza21000b5cs9ebx4ggul","content":"<blockquote>\n<p>Flutter 通过 source-gen 生成对应的model类</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-命令\"><a class=\"markdownIt-Anchor\" href=\"#1-命令\"></a> 1. 命令</h4>\n<ol>\n<li>引入 part ‘xxx.g.dart’; 生成对应 xxx.g.dart 文件</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>终端执行</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter pub run build_runner clean &amp;&amp; flutter pub run build_runner build --delete-conflicting-outputs</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>生成配置</li>\n</ol>\n<figure class=\"highlight yaml\"><figcaption><span>根目录下新建文件 build.yaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">targets:</span></span><br><span class=\"line\">  <span class=\"string\">$default:</span></span><br><span class=\"line\">    <span class=\"attr\">builders:</span></span><br><span class=\"line\">      <span class=\"attr\">reflectable:</span></span><br><span class=\"line\">        <span class=\"attr\">generate_for:</span></span><br><span class=\"line\">          <span class=\"bullet\">-</span> <span class=\"string\">test/**.dart</span></span><br><span class=\"line\">        <span class=\"attr\">options:</span></span><br><span class=\"line\">          <span class=\"attr\">formatted:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Flutter 通过 source-gen 生成对应的model类</p>\n</blockquote>","more":"<h4 id=\"1-命令\"><a class=\"markdownIt-Anchor\" href=\"#1-命令\"></a> 1. 命令</h4>\n<ol>\n<li>引入 part ‘xxx.g.dart’; 生成对应 xxx.g.dart 文件</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>终端执行</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter pub run build_runner clean &amp;&amp; flutter pub run build_runner build --delete-conflicting-outputs</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>生成配置</li>\n</ol>\n<figure class=\"highlight yaml\"><figcaption><span>根目录下新建文件 build.yaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">targets:</span></span><br><span class=\"line\">  <span class=\"string\">$default:</span></span><br><span class=\"line\">    <span class=\"attr\">builders:</span></span><br><span class=\"line\">      <span class=\"attr\">reflectable:</span></span><br><span class=\"line\">        <span class=\"attr\">generate_for:</span></span><br><span class=\"line\">          <span class=\"bullet\">-</span> <span class=\"string\">test/**.dart</span></span><br><span class=\"line\">        <span class=\"attr\">options:</span></span><br><span class=\"line\">          <span class=\"attr\">formatted:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>"},{"title":"Flutter - 基于reflectable反射以及调用","author":"OdinSam","abbrlink":"4998","date":"2022-11-28T08:49:00.000Z","_content":">Flutter默认不允许反射。可以利用基于reflectable反射以及调用。\n\n<!--more-->\n\n1. 引入类库\n```yaml\ndependencies:\n  reflectable: ^3.0.10\n```\n2. 反射帮助类\n```dart \nimport 'package:reflectable/reflectable.dart';\nclass Reflector extends Reflectable {\n  const Reflector()\n      : super(\n      invokingCapability,\n      declarationsCapability,\n      typeRelationsCapability,\n      libraryCapability); // Request the capability to invoke methods.\n}\n```\n\n3. 反射注解类\n\n```dart\nimport 'package:odindio/reflector.dart';\nimport 'package:reflectable/mirrors.dart';\nconst odinReflectable = Reflector();\nclass OdinReflect {\n  static T reflectInstanceFromMap<T>(Map<String, dynamic> map,\n      {methodName = \"fromJson\"}) {\n    //反射T类型\n    ClassMirror classMirror = odinReflectable.reflectType(T) as ClassMirror;\n    // 调用工厂构造函数\n    var instance = classMirror.newInstance(methodName, [map]) as T;\n    return instance;\n  }\n}\n```\n\n4. model类\n\n```dart\nimport 'package:json_annotation/json_annotation.dart';\nimport 'package:odindio/odin_reflect.dart';\npart 'post_model.g.dart';\n//反射注解\n@odinReflectable\n@JsonSerializable()\nclass PostModel {\n  final int? code;\n  final String? message;\n  final List<Data>? data;\n\n  PostModel({\n    this.code,\n    this.message,\n    this.data,\n  });\n\n  factory PostModel.fromJson(Map<String, dynamic> json) =>\n      _$PostModelFromJson(json);\n\n  @override\n  Map<String, dynamic> toJson() => _$PostModelToJson(this);\n\n  @override\n  fromJson(Map<String, dynamic> json) {\n    // TODO: implement fromJson\n    throw UnimplementedError();\n  }\n}\n\n@JsonSerializable()\nclass Data {\n  final int? id;\n  final String? stuName;\n  final int? age;\n\n  Data({\n    this.id,\n    this.stuName,\n    this.age,\n  });\n\n  factory Data.fromJson(Map<String, dynamic> json) =>\n      _$DataFromJson(json);\n\n  Map<String, dynamic> toJson() => _$DataToJson(this);\n}\n```\n\n5. 具体使用:\n```dart \nimport 'odindio_test.reflectable.dart';\nvoid main(){\n  initializeReflectable();\n}\n```\n\n```dart\nT dioResultToModel<T>(dynamic data){\n  var value = OdinReflect.reflectInstanceFromMap<T>(data);\n  return value;\n}\n```\n```cmd 终端执行 生成反射辅助类\nflutter pub run build_runner clean && flutter pub run build_runner build --delete-conflicting-outputs \n```","source":"_posts/Flutter-基于reflectable反射以及调用.md","raw":"title: Flutter - 基于reflectable反射以及调用\nauthor: OdinSam\ntags:\n  - Flutter\n  - reflectable\ncategories:\n  - Flutter\nabbrlink: '4998'\ndate: 2022-11-28 16:49:00\n---\n>Flutter默认不允许反射。可以利用基于reflectable反射以及调用。\n\n<!--more-->\n\n1. 引入类库\n```yaml\ndependencies:\n  reflectable: ^3.0.10\n```\n2. 反射帮助类\n```dart \nimport 'package:reflectable/reflectable.dart';\nclass Reflector extends Reflectable {\n  const Reflector()\n      : super(\n      invokingCapability,\n      declarationsCapability,\n      typeRelationsCapability,\n      libraryCapability); // Request the capability to invoke methods.\n}\n```\n\n3. 反射注解类\n\n```dart\nimport 'package:odindio/reflector.dart';\nimport 'package:reflectable/mirrors.dart';\nconst odinReflectable = Reflector();\nclass OdinReflect {\n  static T reflectInstanceFromMap<T>(Map<String, dynamic> map,\n      {methodName = \"fromJson\"}) {\n    //反射T类型\n    ClassMirror classMirror = odinReflectable.reflectType(T) as ClassMirror;\n    // 调用工厂构造函数\n    var instance = classMirror.newInstance(methodName, [map]) as T;\n    return instance;\n  }\n}\n```\n\n4. model类\n\n```dart\nimport 'package:json_annotation/json_annotation.dart';\nimport 'package:odindio/odin_reflect.dart';\npart 'post_model.g.dart';\n//反射注解\n@odinReflectable\n@JsonSerializable()\nclass PostModel {\n  final int? code;\n  final String? message;\n  final List<Data>? data;\n\n  PostModel({\n    this.code,\n    this.message,\n    this.data,\n  });\n\n  factory PostModel.fromJson(Map<String, dynamic> json) =>\n      _$PostModelFromJson(json);\n\n  @override\n  Map<String, dynamic> toJson() => _$PostModelToJson(this);\n\n  @override\n  fromJson(Map<String, dynamic> json) {\n    // TODO: implement fromJson\n    throw UnimplementedError();\n  }\n}\n\n@JsonSerializable()\nclass Data {\n  final int? id;\n  final String? stuName;\n  final int? age;\n\n  Data({\n    this.id,\n    this.stuName,\n    this.age,\n  });\n\n  factory Data.fromJson(Map<String, dynamic> json) =>\n      _$DataFromJson(json);\n\n  Map<String, dynamic> toJson() => _$DataToJson(this);\n}\n```\n\n5. 具体使用:\n```dart \nimport 'odindio_test.reflectable.dart';\nvoid main(){\n  initializeReflectable();\n}\n```\n\n```dart\nT dioResultToModel<T>(dynamic data){\n  var value = OdinReflect.reflectInstanceFromMap<T>(data);\n  return value;\n}\n```\n```cmd 终端执行 生成反射辅助类\nflutter pub run build_runner clean && flutter pub run build_runner build --delete-conflicting-outputs \n```","slug":"Flutter-基于reflectable反射以及调用","published":1,"updated":"2023-03-10T08:52:08.193Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza22000f5cs960jt855e","content":"<blockquote>\n<p>Flutter默认不允许反射。可以利用基于reflectable反射以及调用。</p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>引入类库</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">dependencies:</span></span><br><span class=\"line\">  <span class=\"attr\">reflectable:</span> <span class=\"string\">^3.0.10</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>反射帮助类</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:reflectable/reflectable.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Reflector</span> <span class=\"keyword\">extends</span> <span class=\"title\">Reflectable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> Reflector()</span><br><span class=\"line\">      : <span class=\"keyword\">super</span>(</span><br><span class=\"line\">      invokingCapability,</span><br><span class=\"line\">      declarationsCapability,</span><br><span class=\"line\">      typeRelationsCapability,</span><br><span class=\"line\">      libraryCapability); <span class=\"comment\">// Request the capability to invoke methods.</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>反射注解类</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/reflector.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:reflectable/mirrors.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> odinReflectable = Reflector();</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OdinReflect</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> T reflectInstanceFromMap&lt;T&gt;(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; map,</span><br><span class=\"line\">      &#123;methodName = <span class=\"string\">&quot;fromJson&quot;</span>&#125;) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//反射T类型</span></span><br><span class=\"line\">    ClassMirror classMirror = odinReflectable.reflectType(T) <span class=\"keyword\">as</span> ClassMirror;</span><br><span class=\"line\">    <span class=\"comment\">// 调用工厂构造函数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> instance = classMirror.newInstance(methodName, [map]) <span class=\"keyword\">as</span> T;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>model类</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:json_annotation/json_annotation.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odin_reflect.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">part</span> <span class=\"string\">&#x27;post_model.g.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">//反射注解</span></span><br><span class=\"line\"><span class=\"meta\">@odinReflectable</span></span><br><span class=\"line\"><span class=\"meta\">@JsonSerializable</span>()</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PostModel</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">int?</span> code;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">String?</span> message;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">List</span>&lt;Data&gt;? data;</span><br><span class=\"line\"></span><br><span class=\"line\">  PostModel(&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.code,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.message,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.data,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">factory</span> PostModel.fromJson(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; json) =&gt;</span><br><span class=\"line\">      _$PostModelFromJson(json);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; toJson() =&gt; _$PostModelToJson(<span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  fromJson(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; json) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement fromJson</span></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> UnimplementedError();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@JsonSerializable</span>()</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Data</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">int?</span> id;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">String?</span> stuName;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">int?</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">  Data(&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.id,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.stuName,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">factory</span> Data.fromJson(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; json) =&gt;</span><br><span class=\"line\">      _$DataFromJson(json);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; toJson() =&gt; _$DataToJson(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>具体使用:</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;odindio_test.reflectable.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  initializeReflectable();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T dioResultToModel&lt;T&gt;(<span class=\"built_in\">dynamic</span> data)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> value = OdinReflect.reflectInstanceFromMap&lt;T&gt;(data);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><figcaption><span>终端执行 生成反射辅助类</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter pub run build_runner clean &amp;&amp; flutter pub run build_runner build --delete-conflicting-outputs </span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Flutter默认不允许反射。可以利用基于reflectable反射以及调用。</p>\n</blockquote>","more":"<ol>\n<li>引入类库</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">dependencies:</span></span><br><span class=\"line\">  <span class=\"attr\">reflectable:</span> <span class=\"string\">^3.0.10</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>反射帮助类</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:reflectable/reflectable.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Reflector</span> <span class=\"keyword\">extends</span> <span class=\"title\">Reflectable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> Reflector()</span><br><span class=\"line\">      : <span class=\"keyword\">super</span>(</span><br><span class=\"line\">      invokingCapability,</span><br><span class=\"line\">      declarationsCapability,</span><br><span class=\"line\">      typeRelationsCapability,</span><br><span class=\"line\">      libraryCapability); <span class=\"comment\">// Request the capability to invoke methods.</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>反射注解类</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/reflector.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:reflectable/mirrors.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> odinReflectable = Reflector();</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OdinReflect</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> T reflectInstanceFromMap&lt;T&gt;(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; map,</span><br><span class=\"line\">      &#123;methodName = <span class=\"string\">&quot;fromJson&quot;</span>&#125;) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//反射T类型</span></span><br><span class=\"line\">    ClassMirror classMirror = odinReflectable.reflectType(T) <span class=\"keyword\">as</span> ClassMirror;</span><br><span class=\"line\">    <span class=\"comment\">// 调用工厂构造函数</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> instance = classMirror.newInstance(methodName, [map]) <span class=\"keyword\">as</span> T;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> instance;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>model类</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:json_annotation/json_annotation.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;package:odindio/odin_reflect.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">part</span> <span class=\"string\">&#x27;post_model.g.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">//反射注解</span></span><br><span class=\"line\"><span class=\"meta\">@odinReflectable</span></span><br><span class=\"line\"><span class=\"meta\">@JsonSerializable</span>()</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PostModel</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">int?</span> code;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">String?</span> message;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">List</span>&lt;Data&gt;? data;</span><br><span class=\"line\"></span><br><span class=\"line\">  PostModel(&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.code,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.message,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.data,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">factory</span> PostModel.fromJson(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; json) =&gt;</span><br><span class=\"line\">      _$PostModelFromJson(json);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; toJson() =&gt; _$PostModelToJson(<span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@override</span></span><br><span class=\"line\">  fromJson(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; json) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> implement fromJson</span></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> UnimplementedError();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@JsonSerializable</span>()</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Data</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">int?</span> id;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">String?</span> stuName;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"built_in\">int?</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">  Data(&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.id,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.stuName,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">factory</span> Data.fromJson(<span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; json) =&gt;</span><br><span class=\"line\">      _$DataFromJson(json);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">dynamic</span>&gt; toJson() =&gt; _$DataToJson(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>具体使用:</li>\n</ol>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;odindio_test.reflectable.dart&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">void</span> main()&#123;</span><br><span class=\"line\">  initializeReflectable();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T dioResultToModel&lt;T&gt;(<span class=\"built_in\">dynamic</span> data)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> value = OdinReflect.reflectInstanceFromMap&lt;T&gt;(data);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><figcaption><span>终端执行 生成反射辅助类</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter pub run build_runner clean &amp;&amp; flutter pub run build_runner build --delete-conflicting-outputs </span><br></pre></td></tr></table></figure>"},{"title":"Hexo Pure主题给Post页面添加keywords","author":"OdinSam","abbrlink":"409f","date":"2021-06-09T00:51:00.000Z","_content":"> Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。https://hexo.io/zh-cn/ 这里是他的中文文档，无论是结合 Github、Gitee 或者是在私人的云端都可以快速部署，非常高效快捷。为了更好的seo优化，使用pure主题给每一个post页面添加keywords 关键字。\n\n<!-- more -->\n\n#### 找到主题 pure/layout/_common/head.ejs 文件，在 title 标签后添加以下代码:\n\n```js\n<% if (post.tags && post.tags.length) { %> \n\t<% var kw = \"\";post.tags.forEach(t=>{ kw+=t.name+',' });kw = kw.substr(0,kw.length-1) %>\n\t<meta name=\"keywords\" content=\"<%= kw %>\" />\n\t<% } else if (config.keywords){ %>\n\t<meta name=\"keywords\" content=\"<%= config.keywords %>\" />\n<%} %>\n```\n\n#### 这样每一个页面都可以依据发布时的tag生成keywords标签\n\n```html\n<meta name=\"keywords\" content=\"Hexo,Seo,Pure\">\n```\n\n#### 如果发布时没有tag，那么会依据hexo的配置文件(<font color=\"red\">注意不是pure的配置文件</font>) _config.yml 中的 keywords 生成对应的 meta 标签\n\n```html\n<meta name=\"keywords\" content=\".Net Core,javascript,typescript,html5,css,css3,linux,react,vue,js\">\n```","source":"_posts/Hexo-Pure主题给Post页面添加keywords.md","raw":"title: Hexo Pure主题给Post页面添加keywords\nauthor: OdinSam\ntags:\n  - Hexo\n  - Seo\n  - Pure\ncategories:\n  - Hexo\nabbrlink: 409f\ndate: 2021-06-09 08:51:00\n---\n> Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。https://hexo.io/zh-cn/ 这里是他的中文文档，无论是结合 Github、Gitee 或者是在私人的云端都可以快速部署，非常高效快捷。为了更好的seo优化，使用pure主题给每一个post页面添加keywords 关键字。\n\n<!-- more -->\n\n#### 找到主题 pure/layout/_common/head.ejs 文件，在 title 标签后添加以下代码:\n\n```js\n<% if (post.tags && post.tags.length) { %> \n\t<% var kw = \"\";post.tags.forEach(t=>{ kw+=t.name+',' });kw = kw.substr(0,kw.length-1) %>\n\t<meta name=\"keywords\" content=\"<%= kw %>\" />\n\t<% } else if (config.keywords){ %>\n\t<meta name=\"keywords\" content=\"<%= config.keywords %>\" />\n<%} %>\n```\n\n#### 这样每一个页面都可以依据发布时的tag生成keywords标签\n\n```html\n<meta name=\"keywords\" content=\"Hexo,Seo,Pure\">\n```\n\n#### 如果发布时没有tag，那么会依据hexo的配置文件(<font color=\"red\">注意不是pure的配置文件</font>) _config.yml 中的 keywords 生成对应的 meta 标签\n\n```html\n<meta name=\"keywords\" content=\".Net Core,javascript,typescript,html5,css,css3,linux,react,vue,js\">\n```","slug":"Hexo-Pure主题给Post页面添加keywords","published":1,"updated":"2021-06-10T10:15:38.606Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza24000h5cs9d8nh2x1t","content":"<blockquote>\n<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a> 这里是他的中文文档，无论是结合 Github、Gitee 或者是在私人的云端都可以快速部署，非常高效快捷。为了更好的seo优化，使用pure主题给每一个post页面添加keywords 关键字。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"找到主题-purelayout_commonheadejs-文件在-title-标签后添加以下代码\"><a class=\"markdownIt-Anchor\" href=\"#找到主题-purelayout_commonheadejs-文件在-title-标签后添加以下代码\"></a> 找到主题 pure/layout/_common/head.ejs 文件，在 title 标签后添加以下代码:</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (post.tags &amp;&amp; post.tags.length) &#123; %&gt; </span><br><span class=\"line\">\t&lt;% <span class=\"keyword\">var</span> kw = <span class=\"string\">&quot;&quot;</span>;post.tags.forEach(<span class=\"function\"><span class=\"params\">t</span>=&gt;</span>&#123; kw+=t.name+<span class=\"string\">&#x27;,&#x27;</span> &#125;);kw = kw.substr(<span class=\"number\">0</span>,kw.length-<span class=\"number\">1</span>) %&gt;</span><br><span class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;&lt;%= kw %&gt;&quot;</span> /&gt;</span></span></span><br><span class=\"line\">\t&lt;% &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (config.keywords)&#123; %&gt;</span><br><span class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;&lt;%= config.keywords %&gt;&quot;</span> /&gt;</span></span></span><br><span class=\"line\">&lt;%&#125; %&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"这样每一个页面都可以依据发布时的tag生成keywords标签\"><a class=\"markdownIt-Anchor\" href=\"#这样每一个页面都可以依据发布时的tag生成keywords标签\"></a> 这样每一个页面都可以依据发布时的tag生成keywords标签</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;Hexo,Seo,Pure&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"如果发布时没有tag那么会依据hexo的配置文件font-colorred注意不是pure的配置文件font-_configyml-中的-keywords-生成对应的-meta-标签\"><a class=\"markdownIt-Anchor\" href=\"#如果发布时没有tag那么会依据hexo的配置文件font-colorred注意不是pure的配置文件font-_configyml-中的-keywords-生成对应的-meta-标签\"></a> 如果发布时没有tag，那么会依据hexo的配置文件(<font color=\"red\">注意不是pure的配置文件</font>) _config.yml 中的 keywords 生成对应的 meta 标签</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;.Net Core,javascript,typescript,html5,css,css3,linux,react,vue,js&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a> 这里是他的中文文档，无论是结合 Github、Gitee 或者是在私人的云端都可以快速部署，非常高效快捷。为了更好的seo优化，使用pure主题给每一个post页面添加keywords 关键字。</p>\n</blockquote>","more":"<h4 id=\"找到主题-purelayout_commonheadejs-文件在-title-标签后添加以下代码\"><a class=\"markdownIt-Anchor\" href=\"#找到主题-purelayout_commonheadejs-文件在-title-标签后添加以下代码\"></a> 找到主题 pure/layout/_common/head.ejs 文件，在 title 标签后添加以下代码:</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (post.tags &amp;&amp; post.tags.length) &#123; %&gt; </span><br><span class=\"line\">\t&lt;% <span class=\"keyword\">var</span> kw = <span class=\"string\">&quot;&quot;</span>;post.tags.forEach(<span class=\"function\"><span class=\"params\">t</span>=&gt;</span>&#123; kw+=t.name+<span class=\"string\">&#x27;,&#x27;</span> &#125;);kw = kw.substr(<span class=\"number\">0</span>,kw.length-<span class=\"number\">1</span>) %&gt;</span><br><span class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;&lt;%= kw %&gt;&quot;</span> /&gt;</span></span></span><br><span class=\"line\">\t&lt;% &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (config.keywords)&#123; %&gt;</span><br><span class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;&lt;%= config.keywords %&gt;&quot;</span> /&gt;</span></span></span><br><span class=\"line\">&lt;%&#125; %&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"这样每一个页面都可以依据发布时的tag生成keywords标签\"><a class=\"markdownIt-Anchor\" href=\"#这样每一个页面都可以依据发布时的tag生成keywords标签\"></a> 这样每一个页面都可以依据发布时的tag生成keywords标签</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;Hexo,Seo,Pure&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"如果发布时没有tag那么会依据hexo的配置文件font-colorred注意不是pure的配置文件font-_configyml-中的-keywords-生成对应的-meta-标签\"><a class=\"markdownIt-Anchor\" href=\"#如果发布时没有tag那么会依据hexo的配置文件font-colorred注意不是pure的配置文件font-_configyml-中的-keywords-生成对应的-meta-标签\"></a> 如果发布时没有tag，那么会依据hexo的配置文件(<font color=\"red\">注意不是pure的配置文件</font>) _config.yml 中的 keywords 生成对应的 meta 标签</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keywords&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;.Net Core,javascript,typescript,html5,css,css3,linux,react,vue,js&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"IdentityServer结合Mysql","author":"odinsam","abbrlink":"7094","date":"2021-06-06T03:23:00.000Z","_content":"> IdentityServer4 是为 Asp.Net Core 2.0+ 系列量身打造的一款基于 OpenID Connect 和 OAuth 2.0 认证框架，官网提供了对应持久化到SQL Server数据库的方法。但是在持久化到Mysql数据库时，会出现 <font color=\"red\">Specified key was too long</font> 的错误。我们可以通过重写 OnModelCreating 方法的方式解决问题。\n\n<!-- more -->\n\n1. 使用 MySql.EntityFrameworkCore\n\n2. ConfigureServices 添加代码如下:\n\n   ```csharp\n    const string connectionString = @\"Server=ip;database=databasename;uid=userid;pwd=password;\";\n    var migrationsAssembly = typeof(Startup).GetTypeInfo().Assembly.GetName().Name;\n    var mysqlVersion = new MySqlServerVersion(new Version(8, 0, 21));\n    services.AddIdentityServer()\n                    .AddDeveloperSigningCredential()\n                    // 客户端和资源的数据库存储\n                    // ConfigurationDbContext\n                    // dotnet ef migrations add ConfigDbContext -c ConfigurationDbContext -o Data/Migrations/IdentityServer/ConfiguragtionDb\n                    // dotnet ef database update -c ConfigurationDbContext\n                    .AddConfigurationStore(opt =>\n                    {\n                        opt.ConfigureDbContext = context =>\n                        {\n                            context.UseMySQL(_Options.DbEntity.ConnectionString, sql => sql.MigrationsAssembly(migrationsAssembly));\n                        };\n                    })\n                    // 令牌和授权码的数据库存储\n                    // PersistedGrantDbContext\n                    // dotnet ef migrations add OperationContext -c PersistedGrantDbContext  -o Data/Migrations/IdentityServer/OperationDb\n                    // dotnet ef database update -c PersistedGrantDbContext\n                    .AddOperationalStore(opt =>\n                    {\n                        opt.ConfigureDbContext = context =>\n                            context.UseMySQL(_Options.DbEntity.ConnectionString, sql => sql.MigrationsAssembly(migrationsAssembly));\n                        opt.EnableTokenCleanup = true;\n                        opt.TokenCleanupInterval = 30;\n                    });\n\n                services.AddIdentityServerDbContext<ConfigurationDbContext>(options =>\n                        {\n                            options.ConfigureDbContext = builder => builder.UseMySQL(_Options.DbEntity.ConnectionString, db => db.MigrationsAssembly(migrationsAssembly));\n                        })\n                        .AddIdentityServerDbContext<PersistedGrantDbContext>(options =>\n                        {\n                            options.ConfigureDbContext = builder => builder.UseMySQL(_Options.DbEntity.ConnectionString, db => db.MigrationsAssembly(migrationsAssembly));\n                        });\n\n                // 更改Identity中关于用户和角色的处理到Entityframework\n                // dotnet ef migrations add UserStoreContext -c OdinIdentityEntities -o Data/Migrations/IdentityServer/UserDb\n                // dotnet ef database update -c OdinIdentityEntities\n            }\n   ```\n\n3. 安装包如下\n\n   IdentityServer4<br />\n   IdentityServer4.EntityFramework<br />\n   Microsoft.EntityFrameworkCore.Tools<br />\n   Microsoft.AspNet.Identity.EntityFramework<br />\n   Microsoft.EntityFrameworkCore<br />\n   IdentityServer4.AspNetIdentity<br />\n\n4. 添加 ApplicationDbContext.cs、ApplicationUser.cs 和 ApplicationRole.cs\n\n```csharp\npublic class ApplicationDbContext : Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<ApplicationUser, ApplicationRole, Guid>\n{\n    public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) : base(options)\n    {\n    }\n    public DbSet<IdUser> IdentityUsers { get; set; }\n    public DbSet<IdUser> IdentityRoles { get; set; }\n    public DbSet<IdentityUserClaim> IdentityUserClaim { get; set; }\n    // 其他表\n    protected override void OnModelCreating(ModelBuilder builder)\n    {\n        base.OnModelCreating(builder);\n        // mysql 修改索引长度 解决  Specified key was too long; max key length is 3072 bytes\n        builder.Entity(\"Microsoft.AspNetCore.Identity.IdentityRole\", b =>\n                  {\n                      b.Property<string>(\"Id\")\n                          .HasColumnType(\"varchar(256)\");\n                  });\n       \tbuilder.Entity(\"Microsoft.AspNetCore.Identity.IdentityUser\", b =>\n              {\n                  b.Property<string>(\"Id\")\n                      .HasColumnType(\"varchar(256)\");\n              });\n       builder.Entity(\"Microsoft.AspNetCore.Identity.IdentityUserLogin<string>\", b =>\n              {\n                  b.Property<string>(\"LoginProvider\")\n                          .HasColumnType(\"varchar(256)\");\n\n                  b.Property<string>(\"ProviderKey\")\n                      .HasColumnType(\"varchar(256)\");\n              });\n       builder.Entity(\"Microsoft.AspNetCore.Identity.IdentityUserToken<string>\", b =>\n                  {\n\n                      b.Property<string>(\"LoginProvider\")\n                          .HasColumnType(\"varchar(256)\");\n\n                      b.Property<string>(\"Name\")\n                          .HasColumnType(\"varchar(256)\");\n                  });\n       builder.Entity(\"OdinOIS.Models.DbModels.IdentityUserStore.IdentityUserClaim\", b =>\n              {\n                  b.Property<string>(\"ClaimId\")\n                      .HasColumnType(\"varchar(256)\");\n\n              });\n    }\n}\n```\n\n```csharp\npublic class ApplicationUser : Microsoft.AspNetCore.Identity.IdentityUser<Guid>\n{\n    //可以在这里扩展\n}\n```\n\n```csharp\npublic class ApplicationRole : Microsoft.AspNetCore.Identity.IdentityRole<Guid>\n{\n\n}\n```\n\n5. 控制台输入\n\n   dotnet ef migrations add ConfigDbContext -c ConfigurationDbContext -o Date\\Migrations\\IdentityServer\\ConfiguragtionDb<br />\n   dotnet ef database update ConfigDbContext -c ConfigurationDbContext<br />\n   dotnet ef migrations add ConfigDbContext -c PersistedGrantDbContext -o Date\\Migrations\\IdentityServer\\PersistedGrantDb<br />\n   dotnet ef database update ConfigDbContext -c PersistedGrantDbContext<br />\n   dotnet ef migrations add UserStoreContext -c OdinIdentityEntities -o Data/Migrations/IdentityServer/UserDb<br />\n   dotnet ef database update -c OdinIdentityEntities","source":"_posts/IdentityServer结合Mysql.md","raw":"title: IdentityServer结合Mysql\nauthor: odinsam\ntags:\n  - IdentityServer4\n  - Mysql\n  - .Net Core\ncategories:\n  - .Net Core\nabbrlink: '7094'\ndate: 2021-06-06 11:23:00\n---\n> IdentityServer4 是为 Asp.Net Core 2.0+ 系列量身打造的一款基于 OpenID Connect 和 OAuth 2.0 认证框架，官网提供了对应持久化到SQL Server数据库的方法。但是在持久化到Mysql数据库时，会出现 <font color=\"red\">Specified key was too long</font> 的错误。我们可以通过重写 OnModelCreating 方法的方式解决问题。\n\n<!-- more -->\n\n1. 使用 MySql.EntityFrameworkCore\n\n2. ConfigureServices 添加代码如下:\n\n   ```csharp\n    const string connectionString = @\"Server=ip;database=databasename;uid=userid;pwd=password;\";\n    var migrationsAssembly = typeof(Startup).GetTypeInfo().Assembly.GetName().Name;\n    var mysqlVersion = new MySqlServerVersion(new Version(8, 0, 21));\n    services.AddIdentityServer()\n                    .AddDeveloperSigningCredential()\n                    // 客户端和资源的数据库存储\n                    // ConfigurationDbContext\n                    // dotnet ef migrations add ConfigDbContext -c ConfigurationDbContext -o Data/Migrations/IdentityServer/ConfiguragtionDb\n                    // dotnet ef database update -c ConfigurationDbContext\n                    .AddConfigurationStore(opt =>\n                    {\n                        opt.ConfigureDbContext = context =>\n                        {\n                            context.UseMySQL(_Options.DbEntity.ConnectionString, sql => sql.MigrationsAssembly(migrationsAssembly));\n                        };\n                    })\n                    // 令牌和授权码的数据库存储\n                    // PersistedGrantDbContext\n                    // dotnet ef migrations add OperationContext -c PersistedGrantDbContext  -o Data/Migrations/IdentityServer/OperationDb\n                    // dotnet ef database update -c PersistedGrantDbContext\n                    .AddOperationalStore(opt =>\n                    {\n                        opt.ConfigureDbContext = context =>\n                            context.UseMySQL(_Options.DbEntity.ConnectionString, sql => sql.MigrationsAssembly(migrationsAssembly));\n                        opt.EnableTokenCleanup = true;\n                        opt.TokenCleanupInterval = 30;\n                    });\n\n                services.AddIdentityServerDbContext<ConfigurationDbContext>(options =>\n                        {\n                            options.ConfigureDbContext = builder => builder.UseMySQL(_Options.DbEntity.ConnectionString, db => db.MigrationsAssembly(migrationsAssembly));\n                        })\n                        .AddIdentityServerDbContext<PersistedGrantDbContext>(options =>\n                        {\n                            options.ConfigureDbContext = builder => builder.UseMySQL(_Options.DbEntity.ConnectionString, db => db.MigrationsAssembly(migrationsAssembly));\n                        });\n\n                // 更改Identity中关于用户和角色的处理到Entityframework\n                // dotnet ef migrations add UserStoreContext -c OdinIdentityEntities -o Data/Migrations/IdentityServer/UserDb\n                // dotnet ef database update -c OdinIdentityEntities\n            }\n   ```\n\n3. 安装包如下\n\n   IdentityServer4<br />\n   IdentityServer4.EntityFramework<br />\n   Microsoft.EntityFrameworkCore.Tools<br />\n   Microsoft.AspNet.Identity.EntityFramework<br />\n   Microsoft.EntityFrameworkCore<br />\n   IdentityServer4.AspNetIdentity<br />\n\n4. 添加 ApplicationDbContext.cs、ApplicationUser.cs 和 ApplicationRole.cs\n\n```csharp\npublic class ApplicationDbContext : Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext<ApplicationUser, ApplicationRole, Guid>\n{\n    public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) : base(options)\n    {\n    }\n    public DbSet<IdUser> IdentityUsers { get; set; }\n    public DbSet<IdUser> IdentityRoles { get; set; }\n    public DbSet<IdentityUserClaim> IdentityUserClaim { get; set; }\n    // 其他表\n    protected override void OnModelCreating(ModelBuilder builder)\n    {\n        base.OnModelCreating(builder);\n        // mysql 修改索引长度 解决  Specified key was too long; max key length is 3072 bytes\n        builder.Entity(\"Microsoft.AspNetCore.Identity.IdentityRole\", b =>\n                  {\n                      b.Property<string>(\"Id\")\n                          .HasColumnType(\"varchar(256)\");\n                  });\n       \tbuilder.Entity(\"Microsoft.AspNetCore.Identity.IdentityUser\", b =>\n              {\n                  b.Property<string>(\"Id\")\n                      .HasColumnType(\"varchar(256)\");\n              });\n       builder.Entity(\"Microsoft.AspNetCore.Identity.IdentityUserLogin<string>\", b =>\n              {\n                  b.Property<string>(\"LoginProvider\")\n                          .HasColumnType(\"varchar(256)\");\n\n                  b.Property<string>(\"ProviderKey\")\n                      .HasColumnType(\"varchar(256)\");\n              });\n       builder.Entity(\"Microsoft.AspNetCore.Identity.IdentityUserToken<string>\", b =>\n                  {\n\n                      b.Property<string>(\"LoginProvider\")\n                          .HasColumnType(\"varchar(256)\");\n\n                      b.Property<string>(\"Name\")\n                          .HasColumnType(\"varchar(256)\");\n                  });\n       builder.Entity(\"OdinOIS.Models.DbModels.IdentityUserStore.IdentityUserClaim\", b =>\n              {\n                  b.Property<string>(\"ClaimId\")\n                      .HasColumnType(\"varchar(256)\");\n\n              });\n    }\n}\n```\n\n```csharp\npublic class ApplicationUser : Microsoft.AspNetCore.Identity.IdentityUser<Guid>\n{\n    //可以在这里扩展\n}\n```\n\n```csharp\npublic class ApplicationRole : Microsoft.AspNetCore.Identity.IdentityRole<Guid>\n{\n\n}\n```\n\n5. 控制台输入\n\n   dotnet ef migrations add ConfigDbContext -c ConfigurationDbContext -o Date\\Migrations\\IdentityServer\\ConfiguragtionDb<br />\n   dotnet ef database update ConfigDbContext -c ConfigurationDbContext<br />\n   dotnet ef migrations add ConfigDbContext -c PersistedGrantDbContext -o Date\\Migrations\\IdentityServer\\PersistedGrantDb<br />\n   dotnet ef database update ConfigDbContext -c PersistedGrantDbContext<br />\n   dotnet ef migrations add UserStoreContext -c OdinIdentityEntities -o Data/Migrations/IdentityServer/UserDb<br />\n   dotnet ef database update -c OdinIdentityEntities","slug":"IdentityServer结合Mysql","published":1,"updated":"2021-06-09T05:36:28.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza26000m5cs9fj0qfyw9","content":"<blockquote>\n<p>IdentityServer4 是为 <a href=\"http://Asp.Net\">Asp.Net</a> Core 2.0+ 系列量身打造的一款基于 OpenID Connect 和 OAuth 2.0 认证框架，官网提供了对应持久化到SQL Server数据库的方法。但是在持久化到Mysql数据库时，会出现 <font color=\"red\">Specified key was too long</font> 的错误。我们可以通过重写 OnModelCreating 方法的方式解决问题。</p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>\n<p>使用 MySql.EntityFrameworkCore</p>\n</li>\n<li>\n<p>ConfigureServices 添加代码如下:</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"built_in\">string</span> connectionString = <span class=\"string\">@&quot;Server=ip;database=databasename;uid=userid;pwd=password;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> migrationsAssembly = <span class=\"keyword\">typeof</span>(Startup).GetTypeInfo().Assembly.GetName().Name;</span><br><span class=\"line\"><span class=\"keyword\">var</span> mysqlVersion = <span class=\"keyword\">new</span> MySqlServerVersion(<span class=\"keyword\">new</span> Version(<span class=\"number\">8</span>, <span class=\"number\">0</span>, <span class=\"number\">21</span>));</span><br><span class=\"line\">services.AddIdentityServer()</span><br><span class=\"line\">                .AddDeveloperSigningCredential()</span><br><span class=\"line\">                <span class=\"comment\">// 客户端和资源的数据库存储</span></span><br><span class=\"line\">                <span class=\"comment\">// ConfigurationDbContext</span></span><br><span class=\"line\">                <span class=\"comment\">// dotnet ef migrations add ConfigDbContext -c ConfigurationDbContext -o Data/Migrations/IdentityServer/ConfiguragtionDb</span></span><br><span class=\"line\">                <span class=\"comment\">// dotnet ef database update -c ConfigurationDbContext</span></span><br><span class=\"line\">                .AddConfigurationStore(opt =&gt;</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    opt.ConfigureDbContext = context =&gt;</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        context.UseMySQL(_Options.DbEntity.ConnectionString, sql =&gt; sql.MigrationsAssembly(migrationsAssembly));</span><br><span class=\"line\">                    &#125;;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                <span class=\"comment\">// 令牌和授权码的数据库存储</span></span><br><span class=\"line\">                <span class=\"comment\">// PersistedGrantDbContext</span></span><br><span class=\"line\">                <span class=\"comment\">// dotnet ef migrations add OperationContext -c PersistedGrantDbContext  -o Data/Migrations/IdentityServer/OperationDb</span></span><br><span class=\"line\">                <span class=\"comment\">// dotnet ef database update -c PersistedGrantDbContext</span></span><br><span class=\"line\">                .AddOperationalStore(opt =&gt;</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    opt.ConfigureDbContext = context =&gt;</span><br><span class=\"line\">                        context.UseMySQL(_Options.DbEntity.ConnectionString, sql =&gt; sql.MigrationsAssembly(migrationsAssembly));</span><br><span class=\"line\">                    opt.EnableTokenCleanup = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    opt.TokenCleanupInterval = <span class=\"number\">30</span>;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            services.AddIdentityServerDbContext&lt;ConfigurationDbContext&gt;(options =&gt;</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        options.ConfigureDbContext = builder =&gt; builder.UseMySQL(_Options.DbEntity.ConnectionString, db =&gt; db.MigrationsAssembly(migrationsAssembly));</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">                    .AddIdentityServerDbContext&lt;PersistedGrantDbContext&gt;(options =&gt;</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        options.ConfigureDbContext = builder =&gt; builder.UseMySQL(_Options.DbEntity.ConnectionString, db =&gt; db.MigrationsAssembly(migrationsAssembly));</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 更改Identity中关于用户和角色的处理到Entityframework</span></span><br><span class=\"line\">            <span class=\"comment\">// dotnet ef migrations add UserStoreContext -c OdinIdentityEntities -o Data/Migrations/IdentityServer/UserDb</span></span><br><span class=\"line\">            <span class=\"comment\">// dotnet ef database update -c OdinIdentityEntities</span></span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装包如下</p>\n<p>IdentityServer4<br /><br />\nIdentityServer4.EntityFramework<br /><br />\nMicrosoft.EntityFrameworkCore.Tools<br /><br />\nMicrosoft.AspNet.Identity.EntityFramework<br /><br />\nMicrosoft.EntityFrameworkCore<br /><br />\nIdentityServer4.AspNetIdentity<br /></p>\n</li>\n<li>\n<p>添加 ApplicationDbContext.cs、ApplicationUser.cs 和 ApplicationRole.cs</p>\n</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ApplicationDbContext</span> : <span class=\"title\">Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext</span>&lt;<span class=\"title\">ApplicationUser</span>, <span class=\"title\">ApplicationRole</span>, <span class=\"title\">Guid</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ApplicationDbContext</span>(<span class=\"params\">DbContextOptions&lt;ApplicationDbContext&gt; options</span>) : <span class=\"title\">base</span>(<span class=\"params\">options</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DbSet&lt;IdUser&gt; IdentityUsers &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DbSet&lt;IdUser&gt; IdentityRoles &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DbSet&lt;IdentityUserClaim&gt; IdentityUserClaim &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 其他表</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">OnModelCreating</span>(<span class=\"params\">ModelBuilder builder</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">base</span>.OnModelCreating(builder);</span><br><span class=\"line\">        <span class=\"comment\">// mysql 修改索引长度 解决  Specified key was too long; max key length is 3072 bytes</span></span><br><span class=\"line\">        builder.Entity(<span class=\"string\">&quot;Microsoft.AspNetCore.Identity.IdentityRole&quot;</span>, b =&gt;</span><br><span class=\"line\">                  &#123;</span><br><span class=\"line\">                      b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;Id&quot;</span>)</span><br><span class=\"line\">                          .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\">                  &#125;);</span><br><span class=\"line\">       \tbuilder.Entity(<span class=\"string\">&quot;Microsoft.AspNetCore.Identity.IdentityUser&quot;</span>, b =&gt;</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;Id&quot;</span>)</span><br><span class=\"line\">                      .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">       builder.Entity(<span class=\"string\">&quot;Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;string&gt;&quot;</span>, b =&gt;</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;LoginProvider&quot;</span>)</span><br><span class=\"line\">                          .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                  b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;ProviderKey&quot;</span>)</span><br><span class=\"line\">                      .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">       builder.Entity(<span class=\"string\">&quot;Microsoft.AspNetCore.Identity.IdentityUserToken&lt;string&gt;&quot;</span>, b =&gt;</span><br><span class=\"line\">                  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                      b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;LoginProvider&quot;</span>)</span><br><span class=\"line\">                          .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                      b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;Name&quot;</span>)</span><br><span class=\"line\">                          .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\">                  &#125;);</span><br><span class=\"line\">       builder.Entity(<span class=\"string\">&quot;OdinOIS.Models.DbModels.IdentityUserStore.IdentityUserClaim&quot;</span>, b =&gt;</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;ClaimId&quot;</span>)</span><br><span class=\"line\">                      .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ApplicationUser</span> : <span class=\"title\">Microsoft.AspNetCore.Identity.IdentityUser</span>&lt;<span class=\"title\">Guid</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//可以在这里扩展</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ApplicationRole</span> : <span class=\"title\">Microsoft.AspNetCore.Identity.IdentityRole</span>&lt;<span class=\"title\">Guid</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>\n<p>控制台输入</p>\n<p>dotnet ef migrations add ConfigDbContext -c ConfigurationDbContext -o Date\\Migrations\\IdentityServer\\ConfiguragtionDb<br /><br />\ndotnet ef database update ConfigDbContext -c ConfigurationDbContext<br /><br />\ndotnet ef migrations add ConfigDbContext -c PersistedGrantDbContext -o Date\\Migrations\\IdentityServer\\PersistedGrantDb<br /><br />\ndotnet ef database update ConfigDbContext -c PersistedGrantDbContext<br /><br />\ndotnet ef migrations add UserStoreContext -c OdinIdentityEntities -o Data/Migrations/IdentityServer/UserDb<br /><br />\ndotnet ef database update -c OdinIdentityEntities</p>\n</li>\n</ol>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>IdentityServer4 是为 <a href=\"http://Asp.Net\">Asp.Net</a> Core 2.0+ 系列量身打造的一款基于 OpenID Connect 和 OAuth 2.0 认证框架，官网提供了对应持久化到SQL Server数据库的方法。但是在持久化到Mysql数据库时，会出现 <font color=\"red\">Specified key was too long</font> 的错误。我们可以通过重写 OnModelCreating 方法的方式解决问题。</p>\n</blockquote>","more":"<ol>\n<li>\n<p>使用 MySql.EntityFrameworkCore</p>\n</li>\n<li>\n<p>ConfigureServices 添加代码如下:</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"built_in\">string</span> connectionString = <span class=\"string\">@&quot;Server=ip;database=databasename;uid=userid;pwd=password;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> migrationsAssembly = <span class=\"keyword\">typeof</span>(Startup).GetTypeInfo().Assembly.GetName().Name;</span><br><span class=\"line\"><span class=\"keyword\">var</span> mysqlVersion = <span class=\"keyword\">new</span> MySqlServerVersion(<span class=\"keyword\">new</span> Version(<span class=\"number\">8</span>, <span class=\"number\">0</span>, <span class=\"number\">21</span>));</span><br><span class=\"line\">services.AddIdentityServer()</span><br><span class=\"line\">                .AddDeveloperSigningCredential()</span><br><span class=\"line\">                <span class=\"comment\">// 客户端和资源的数据库存储</span></span><br><span class=\"line\">                <span class=\"comment\">// ConfigurationDbContext</span></span><br><span class=\"line\">                <span class=\"comment\">// dotnet ef migrations add ConfigDbContext -c ConfigurationDbContext -o Data/Migrations/IdentityServer/ConfiguragtionDb</span></span><br><span class=\"line\">                <span class=\"comment\">// dotnet ef database update -c ConfigurationDbContext</span></span><br><span class=\"line\">                .AddConfigurationStore(opt =&gt;</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    opt.ConfigureDbContext = context =&gt;</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        context.UseMySQL(_Options.DbEntity.ConnectionString, sql =&gt; sql.MigrationsAssembly(migrationsAssembly));</span><br><span class=\"line\">                    &#125;;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                <span class=\"comment\">// 令牌和授权码的数据库存储</span></span><br><span class=\"line\">                <span class=\"comment\">// PersistedGrantDbContext</span></span><br><span class=\"line\">                <span class=\"comment\">// dotnet ef migrations add OperationContext -c PersistedGrantDbContext  -o Data/Migrations/IdentityServer/OperationDb</span></span><br><span class=\"line\">                <span class=\"comment\">// dotnet ef database update -c PersistedGrantDbContext</span></span><br><span class=\"line\">                .AddOperationalStore(opt =&gt;</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    opt.ConfigureDbContext = context =&gt;</span><br><span class=\"line\">                        context.UseMySQL(_Options.DbEntity.ConnectionString, sql =&gt; sql.MigrationsAssembly(migrationsAssembly));</span><br><span class=\"line\">                    opt.EnableTokenCleanup = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    opt.TokenCleanupInterval = <span class=\"number\">30</span>;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            services.AddIdentityServerDbContext&lt;ConfigurationDbContext&gt;(options =&gt;</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        options.ConfigureDbContext = builder =&gt; builder.UseMySQL(_Options.DbEntity.ConnectionString, db =&gt; db.MigrationsAssembly(migrationsAssembly));</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">                    .AddIdentityServerDbContext&lt;PersistedGrantDbContext&gt;(options =&gt;</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        options.ConfigureDbContext = builder =&gt; builder.UseMySQL(_Options.DbEntity.ConnectionString, db =&gt; db.MigrationsAssembly(migrationsAssembly));</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 更改Identity中关于用户和角色的处理到Entityframework</span></span><br><span class=\"line\">            <span class=\"comment\">// dotnet ef migrations add UserStoreContext -c OdinIdentityEntities -o Data/Migrations/IdentityServer/UserDb</span></span><br><span class=\"line\">            <span class=\"comment\">// dotnet ef database update -c OdinIdentityEntities</span></span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装包如下</p>\n<p>IdentityServer4<br /><br />\nIdentityServer4.EntityFramework<br /><br />\nMicrosoft.EntityFrameworkCore.Tools<br /><br />\nMicrosoft.AspNet.Identity.EntityFramework<br /><br />\nMicrosoft.EntityFrameworkCore<br /><br />\nIdentityServer4.AspNetIdentity<br /></p>\n</li>\n<li>\n<p>添加 ApplicationDbContext.cs、ApplicationUser.cs 和 ApplicationRole.cs</p>\n</li>\n</ol>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ApplicationDbContext</span> : <span class=\"title\">Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext</span>&lt;<span class=\"title\">ApplicationUser</span>, <span class=\"title\">ApplicationRole</span>, <span class=\"title\">Guid</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ApplicationDbContext</span>(<span class=\"params\">DbContextOptions&lt;ApplicationDbContext&gt; options</span>) : <span class=\"title\">base</span>(<span class=\"params\">options</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DbSet&lt;IdUser&gt; IdentityUsers &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DbSet&lt;IdUser&gt; IdentityRoles &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DbSet&lt;IdentityUserClaim&gt; IdentityUserClaim &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 其他表</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">OnModelCreating</span>(<span class=\"params\">ModelBuilder builder</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">base</span>.OnModelCreating(builder);</span><br><span class=\"line\">        <span class=\"comment\">// mysql 修改索引长度 解决  Specified key was too long; max key length is 3072 bytes</span></span><br><span class=\"line\">        builder.Entity(<span class=\"string\">&quot;Microsoft.AspNetCore.Identity.IdentityRole&quot;</span>, b =&gt;</span><br><span class=\"line\">                  &#123;</span><br><span class=\"line\">                      b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;Id&quot;</span>)</span><br><span class=\"line\">                          .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\">                  &#125;);</span><br><span class=\"line\">       \tbuilder.Entity(<span class=\"string\">&quot;Microsoft.AspNetCore.Identity.IdentityUser&quot;</span>, b =&gt;</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;Id&quot;</span>)</span><br><span class=\"line\">                      .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">       builder.Entity(<span class=\"string\">&quot;Microsoft.AspNetCore.Identity.IdentityUserLogin&lt;string&gt;&quot;</span>, b =&gt;</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;LoginProvider&quot;</span>)</span><br><span class=\"line\">                          .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                  b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;ProviderKey&quot;</span>)</span><br><span class=\"line\">                      .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">       builder.Entity(<span class=\"string\">&quot;Microsoft.AspNetCore.Identity.IdentityUserToken&lt;string&gt;&quot;</span>, b =&gt;</span><br><span class=\"line\">                  &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                      b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;LoginProvider&quot;</span>)</span><br><span class=\"line\">                          .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                      b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;Name&quot;</span>)</span><br><span class=\"line\">                          .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\">                  &#125;);</span><br><span class=\"line\">       builder.Entity(<span class=\"string\">&quot;OdinOIS.Models.DbModels.IdentityUserStore.IdentityUserClaim&quot;</span>, b =&gt;</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                  b.Property&lt;<span class=\"built_in\">string</span>&gt;(<span class=\"string\">&quot;ClaimId&quot;</span>)</span><br><span class=\"line\">                      .HasColumnType(<span class=\"string\">&quot;varchar(256)&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ApplicationUser</span> : <span class=\"title\">Microsoft.AspNetCore.Identity.IdentityUser</span>&lt;<span class=\"title\">Guid</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//可以在这里扩展</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ApplicationRole</span> : <span class=\"title\">Microsoft.AspNetCore.Identity.IdentityRole</span>&lt;<span class=\"title\">Guid</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>\n<p>控制台输入</p>\n<p>dotnet ef migrations add ConfigDbContext -c ConfigurationDbContext -o Date\\Migrations\\IdentityServer\\ConfiguragtionDb<br /><br />\ndotnet ef database update ConfigDbContext -c ConfigurationDbContext<br /><br />\ndotnet ef migrations add ConfigDbContext -c PersistedGrantDbContext -o Date\\Migrations\\IdentityServer\\PersistedGrantDb<br /><br />\ndotnet ef database update ConfigDbContext -c PersistedGrantDbContext<br /><br />\ndotnet ef migrations add UserStoreContext -c OdinIdentityEntities -o Data/Migrations/IdentityServer/UserDb<br /><br />\ndotnet ef database update -c OdinIdentityEntities</p>\n</li>\n</ol>"},{"title":".Net Core使用SqlSugar和Cap","author":"OdinSam","abbrlink":"ed30","date":"2021-06-16T15:21:00.000Z","_content":"> 近期的一次面试当中聊起了 .Net Core 中的 EF 框架和分布式的事务，因为在项目中也遇到过并发导致 EF Core 性能和报错的各种问题，所以就和面试官吐槽了一下，面试官说他们公司用的 SqlSugar 。这个开源组件库我以前知道的，但很久没有关注。回家看了一下发现这个东西已经非常完善，特此将项目中的 EF Core 变更为了 SqlSugar并且加入了 Cap，顺便记录一下遇到的问题。\n\n<!--more-->\n\n#### 1. SqlSugar简介\n\t\n\n&ensp;&ensp; SqlSugar是一款 老牌 .NET 开源ORM框架，由果糖大数据科技团队维护和更新 ，Github star数仅次于EF 和 Dapper。优点： 简单易用、功能齐全、高性能、轻量级、服务齐全、有专业技术支持一天18小时服务。支持数据库有 MySql、SqlServer、Sqlite、Oracle 、 postgresql、达梦、人大金仓。我的项目习惯了Code First，第一次使用也不知道是否正确。\n\n**Startup.cs** - SqlSugar 注入代码\n```csharp\nservices.AddTransient<OdinProjectSugarDbContext>();\nOdinInjectHelper.ServiceProvider = services.BuildServiceProvider();\nvar sugarEntity = OdinInjectHelper.GetService<OdinProjectSugarDbContext>();\n#region 初始化数据库\n//修改cnf.config Host配置的链接字符串  enable修改为true，即可自动化初识数据库\nif (_Options.DbEntity.InitDb)\n{\n\tsugarEntity.CreateTable(\"db_odinCore\", false);\n}\n```\n\n**OdinProjectSugarDbContext.cs** - DbContext定义以及初始化数据库\n```csharp\npublic class OdinProjectSugarDbContext\n{\n    SqlSugarClient db;\n    public OdinProjectSugarDbContext()\n    {\n        db = DbScoped.Sugar;\n    }\n    public void CreateTable(string databaseName, bool Backup = false)\n    {\n\n        var flag = false;\n        try\n        {\t\n            // 判断数据库是否存在，如果不存在这里会有异常\n            flag = db.DbMaintenance.GetDataBaseList(db).Contains(databaseName);\n        }\n        catch\n        {\n            // 如果不存在 初始化创建数据库\n            db.DbMaintenance.CreateDatabase(databaseName);\n        }\n        finally\n        {\n            if (!flag)\n            {\n                Log.Logger.Information($\"【 自动创建数据库 】\");\n                db.DbMaintenance.CreateDatabase(databaseName);\n                // 我在所有的表后边都实现了一个自己的接口 IDbTable \n                var dbTable = typeof(IDbTable);\n                // 找到所有实现了 IDbTable 的类 就是Mysql中对应的表\n                var types = this.GetType().Assembly.GetTypes().Where(t => dbTable.IsAssignableFrom(t));\n                // 是否备份表\n                if (Backup)\n                {\n                    foreach (var item in types)\n                    {\n                        // 判断表是否存在  如果不存在则新建表\n                        if (!OdinSugarHelper.CheckTable(item))\n                        {\n                            DbScoped.Sugar.CodeFirst.BackupTable().InitTables(item);\n                            Log.Logger.Information($\"创建数据表【 {item.ToString()} 】\");\n                        }\n\n                    }\n\n                }\n                else\n                {\n                    foreach (var item in types)\n                    {\n                        if (!OdinSugarHelper.CheckTable(item))\n                        {\n                            DbScoped.Sugar.CodeFirst.InitTables(item);\n                            Log.Logger.Information($\"创建数据表【 {item.ToString()} 】\");\n                        }\n                    }\n\n                }\n                Log.Logger.Information($\"启用【 数据库初始化 】---开始配置\");\n                SampleData.Init();\n            }\n        }\n    }\n\n    public OdinSugarDbSet<Aop_ApiInvokerCatch_DbModel> ApiInvokerCatchs { get { return new OdinSugarDbSet<Aop_ApiInvokerCatch_DbModel>(db); } }\n\n    public OdinSugarDbSet<Aop_ApiInvokerRecord_DbModel> ApiInvokerRecords { get { return new OdinSugarDbSet<Aop_ApiInvokerRecord_DbModel>(db); } }\n\n    public OdinSugarDbSet<ErrorCode_DbModel> ErrorCodes { get { return new OdinSugarDbSet<ErrorCode_DbModel>(db); } }\n}\n```\n\n**OdinSugarHelper.cs**\n```csharp \npublic class OdinSugarHelper\n{\n    static SqlSugarClient Db = DbScoped.Sugar;\n    /// <summary>\n    /// 检查表是否存在\n    /// </summary>\n    /// <param name=\"type\"></param>\n    /// <returns></returns>\n    public static bool CheckTable(Type type)\n    {\n        string tableName = Db.EntityMaintenance.GetTableName(type);\n        return Db.DbMaintenance.IsAnyTable(tableName, false);\n    }\n\n    /// <summary>\n    /// 检查表是否存在\n    /// </summary>\n    /// <typeparam name=\"T\"></typeparam>\n    /// <returns></returns>\n    public static bool CheckTable<T>()\n    {\n        string tableName = Db.EntityMaintenance.GetTableName(typeof(T));\n        return Db.DbMaintenance.IsAnyTable(tableName, false);\n    }\n\n    /// <summary>\n    /// 检查表是否存在\n    /// </summary>\n    /// <param name=\"TableName\"></param>\n    /// <returns></returns>\n    public static bool CheckTable(string TableName)\n    {\n        return Db.DbMaintenance.IsAnyTable(TableName, false);\n    }\n}\n```\n\n这样程序在运行的时候就基于DbContext的定义可以在数据库新建表。\n\n#### 2. 基于 SqlSugar 使用 cap\n\n&ensp;&ensp;CAP 是一个在分布式系统中（SOA，MicroService）实现事件总线及最终一致性（分布式事务）的一个开源的 C# 库，她具有轻量级，高性能，易使用等特点。\n\n**Startup.cs** - SqlSugar 注入代码\n\n```csharp\nservices.AddOdinCapInject(_Options.DbEntity.ConnectionString, _Options.MongoDb.MongoConnection, _Options.RabbitMQ);\n```\n\n**AddOdinCapInject** - 方法\n```csharp\npublic static IServiceCollection AddOdinCapInject(this IServiceCollection services, string mysqlConnectionString, string mongoConnectionString, RabbitMQOptions rabbitMQOptions)\n{\n    services.AddCap(x =>\n    {\n\n        //如果你使用的ADO.NET，根据数据库选择进行配置：\n        // x.UseSqlServer(\"数据库连接字符串\");\n        x.UseMySql(mysqlConnectionString);\n        // x.UsePostgreSql(\"数据库连接字符串\");\n\n        //如果你使用的 MongoDB，你可以添加如下配置：\n        // x.UseMongoDB(mongoConnectionString);  //注意，仅支持MongoDB 4.0+集群\n\n        //CAP支持 RabbitMQ、Kafka、AzureServiceBus 等作为MQ，根据使用选择配置：\n        x.UseRabbitMQ(rb =>\n        {\n            rb.HostName = rabbitMQOptions.HostNames[0];\n            rb.UserName = rabbitMQOptions.Account.UserName;\n            rb.Password = rabbitMQOptions.Account.Password;\n            rb.VirtualHost = rabbitMQOptions.VirtualHost;\n            rb.Port = rabbitMQOptions.Port;\n\n        });\n        // x.UseKafka(\"ConnectionStrings\");\n        // x.UseAzureServiceBus(\"ConnectionStrings\");\n        x.UseDashboard();\n    });\n    return services;\n}\n```\n\n**OdinCapHelper.cs** - 封装，注入到service中即可使用\n```csharp\npublic class OdinCapHelper : IOdinCapHelper\n{\n    public void CapPublish<T>(string publishName, T contentObj, Action action = null)\n    {\n        var db = DbScoped.Sugar;\n        var capBus = OdinInjectHelper.GetService<ICapPublisher>();\n        using (var connection = (MySqlConnection)db.Ado.Connection)\n        {\n            using (var transaction = connection.BeginTransaction(capBus, autoCommit: false))\n            {\n                if (connection.State != ConnectionState.Open)\n                {\n                    connection.Open();\n                }\n                db.Ado.Transaction = (IDbTransaction)transaction.DbTransaction;//这行很重要\n                if (action != null) action();\n                capBus.Publish<T>(publishName, contentObj);\n                transaction.Commit();\n            }\n        }\n    }\n}\n```\n<font color=\"red\">这里需要注意的是，如果和我一样是使用mysql数据库，那么需要讲nuget包由 SqlSugarCore 替换为 SqlSugarCore.MySqlConnector 切记！！！ 切记！！！</font>\n\n** Controller ** - Action方法中发布消息\n```csharp\nvar db = DbScoped.Sugar;\nOdinCapHelper.CapPublish(\"Sample.RabbitMQ.MySql\", DateTime.Now, () =>\n    {\n        System.Console.WriteLine(\"to do something\");\n    });\n```\n\n\n**Controller** - Action方法中订阅消费消息\n```csharp\n[CapSubscribe(\"Sample.RabbitMQ.MySql\")]\npublic async Task<Task> CheckReceivedMessage(DateTime time)\n{\n    Console.WriteLine(time);\n    return Task.CompletedTask;\n}\n```\n完整代码可以在 [GitHub](https://github.com/odinsam/OdinMA)中找到。\n\n    \n\t","source":"_posts/Net-Core使用SqlSugar和Cap.md","raw":"title: .Net Core使用SqlSugar和Cap\nauthor: OdinSam\ntags:\n  - SqlSugar\n  - Cap\ncategories:\n  - .Net Core\nabbrlink: ed30\ndate: 2021-06-16 23:21:00\n---\n> 近期的一次面试当中聊起了 .Net Core 中的 EF 框架和分布式的事务，因为在项目中也遇到过并发导致 EF Core 性能和报错的各种问题，所以就和面试官吐槽了一下，面试官说他们公司用的 SqlSugar 。这个开源组件库我以前知道的，但很久没有关注。回家看了一下发现这个东西已经非常完善，特此将项目中的 EF Core 变更为了 SqlSugar并且加入了 Cap，顺便记录一下遇到的问题。\n\n<!--more-->\n\n#### 1. SqlSugar简介\n\t\n\n&ensp;&ensp; SqlSugar是一款 老牌 .NET 开源ORM框架，由果糖大数据科技团队维护和更新 ，Github star数仅次于EF 和 Dapper。优点： 简单易用、功能齐全、高性能、轻量级、服务齐全、有专业技术支持一天18小时服务。支持数据库有 MySql、SqlServer、Sqlite、Oracle 、 postgresql、达梦、人大金仓。我的项目习惯了Code First，第一次使用也不知道是否正确。\n\n**Startup.cs** - SqlSugar 注入代码\n```csharp\nservices.AddTransient<OdinProjectSugarDbContext>();\nOdinInjectHelper.ServiceProvider = services.BuildServiceProvider();\nvar sugarEntity = OdinInjectHelper.GetService<OdinProjectSugarDbContext>();\n#region 初始化数据库\n//修改cnf.config Host配置的链接字符串  enable修改为true，即可自动化初识数据库\nif (_Options.DbEntity.InitDb)\n{\n\tsugarEntity.CreateTable(\"db_odinCore\", false);\n}\n```\n\n**OdinProjectSugarDbContext.cs** - DbContext定义以及初始化数据库\n```csharp\npublic class OdinProjectSugarDbContext\n{\n    SqlSugarClient db;\n    public OdinProjectSugarDbContext()\n    {\n        db = DbScoped.Sugar;\n    }\n    public void CreateTable(string databaseName, bool Backup = false)\n    {\n\n        var flag = false;\n        try\n        {\t\n            // 判断数据库是否存在，如果不存在这里会有异常\n            flag = db.DbMaintenance.GetDataBaseList(db).Contains(databaseName);\n        }\n        catch\n        {\n            // 如果不存在 初始化创建数据库\n            db.DbMaintenance.CreateDatabase(databaseName);\n        }\n        finally\n        {\n            if (!flag)\n            {\n                Log.Logger.Information($\"【 自动创建数据库 】\");\n                db.DbMaintenance.CreateDatabase(databaseName);\n                // 我在所有的表后边都实现了一个自己的接口 IDbTable \n                var dbTable = typeof(IDbTable);\n                // 找到所有实现了 IDbTable 的类 就是Mysql中对应的表\n                var types = this.GetType().Assembly.GetTypes().Where(t => dbTable.IsAssignableFrom(t));\n                // 是否备份表\n                if (Backup)\n                {\n                    foreach (var item in types)\n                    {\n                        // 判断表是否存在  如果不存在则新建表\n                        if (!OdinSugarHelper.CheckTable(item))\n                        {\n                            DbScoped.Sugar.CodeFirst.BackupTable().InitTables(item);\n                            Log.Logger.Information($\"创建数据表【 {item.ToString()} 】\");\n                        }\n\n                    }\n\n                }\n                else\n                {\n                    foreach (var item in types)\n                    {\n                        if (!OdinSugarHelper.CheckTable(item))\n                        {\n                            DbScoped.Sugar.CodeFirst.InitTables(item);\n                            Log.Logger.Information($\"创建数据表【 {item.ToString()} 】\");\n                        }\n                    }\n\n                }\n                Log.Logger.Information($\"启用【 数据库初始化 】---开始配置\");\n                SampleData.Init();\n            }\n        }\n    }\n\n    public OdinSugarDbSet<Aop_ApiInvokerCatch_DbModel> ApiInvokerCatchs { get { return new OdinSugarDbSet<Aop_ApiInvokerCatch_DbModel>(db); } }\n\n    public OdinSugarDbSet<Aop_ApiInvokerRecord_DbModel> ApiInvokerRecords { get { return new OdinSugarDbSet<Aop_ApiInvokerRecord_DbModel>(db); } }\n\n    public OdinSugarDbSet<ErrorCode_DbModel> ErrorCodes { get { return new OdinSugarDbSet<ErrorCode_DbModel>(db); } }\n}\n```\n\n**OdinSugarHelper.cs**\n```csharp \npublic class OdinSugarHelper\n{\n    static SqlSugarClient Db = DbScoped.Sugar;\n    /// <summary>\n    /// 检查表是否存在\n    /// </summary>\n    /// <param name=\"type\"></param>\n    /// <returns></returns>\n    public static bool CheckTable(Type type)\n    {\n        string tableName = Db.EntityMaintenance.GetTableName(type);\n        return Db.DbMaintenance.IsAnyTable(tableName, false);\n    }\n\n    /// <summary>\n    /// 检查表是否存在\n    /// </summary>\n    /// <typeparam name=\"T\"></typeparam>\n    /// <returns></returns>\n    public static bool CheckTable<T>()\n    {\n        string tableName = Db.EntityMaintenance.GetTableName(typeof(T));\n        return Db.DbMaintenance.IsAnyTable(tableName, false);\n    }\n\n    /// <summary>\n    /// 检查表是否存在\n    /// </summary>\n    /// <param name=\"TableName\"></param>\n    /// <returns></returns>\n    public static bool CheckTable(string TableName)\n    {\n        return Db.DbMaintenance.IsAnyTable(TableName, false);\n    }\n}\n```\n\n这样程序在运行的时候就基于DbContext的定义可以在数据库新建表。\n\n#### 2. 基于 SqlSugar 使用 cap\n\n&ensp;&ensp;CAP 是一个在分布式系统中（SOA，MicroService）实现事件总线及最终一致性（分布式事务）的一个开源的 C# 库，她具有轻量级，高性能，易使用等特点。\n\n**Startup.cs** - SqlSugar 注入代码\n\n```csharp\nservices.AddOdinCapInject(_Options.DbEntity.ConnectionString, _Options.MongoDb.MongoConnection, _Options.RabbitMQ);\n```\n\n**AddOdinCapInject** - 方法\n```csharp\npublic static IServiceCollection AddOdinCapInject(this IServiceCollection services, string mysqlConnectionString, string mongoConnectionString, RabbitMQOptions rabbitMQOptions)\n{\n    services.AddCap(x =>\n    {\n\n        //如果你使用的ADO.NET，根据数据库选择进行配置：\n        // x.UseSqlServer(\"数据库连接字符串\");\n        x.UseMySql(mysqlConnectionString);\n        // x.UsePostgreSql(\"数据库连接字符串\");\n\n        //如果你使用的 MongoDB，你可以添加如下配置：\n        // x.UseMongoDB(mongoConnectionString);  //注意，仅支持MongoDB 4.0+集群\n\n        //CAP支持 RabbitMQ、Kafka、AzureServiceBus 等作为MQ，根据使用选择配置：\n        x.UseRabbitMQ(rb =>\n        {\n            rb.HostName = rabbitMQOptions.HostNames[0];\n            rb.UserName = rabbitMQOptions.Account.UserName;\n            rb.Password = rabbitMQOptions.Account.Password;\n            rb.VirtualHost = rabbitMQOptions.VirtualHost;\n            rb.Port = rabbitMQOptions.Port;\n\n        });\n        // x.UseKafka(\"ConnectionStrings\");\n        // x.UseAzureServiceBus(\"ConnectionStrings\");\n        x.UseDashboard();\n    });\n    return services;\n}\n```\n\n**OdinCapHelper.cs** - 封装，注入到service中即可使用\n```csharp\npublic class OdinCapHelper : IOdinCapHelper\n{\n    public void CapPublish<T>(string publishName, T contentObj, Action action = null)\n    {\n        var db = DbScoped.Sugar;\n        var capBus = OdinInjectHelper.GetService<ICapPublisher>();\n        using (var connection = (MySqlConnection)db.Ado.Connection)\n        {\n            using (var transaction = connection.BeginTransaction(capBus, autoCommit: false))\n            {\n                if (connection.State != ConnectionState.Open)\n                {\n                    connection.Open();\n                }\n                db.Ado.Transaction = (IDbTransaction)transaction.DbTransaction;//这行很重要\n                if (action != null) action();\n                capBus.Publish<T>(publishName, contentObj);\n                transaction.Commit();\n            }\n        }\n    }\n}\n```\n<font color=\"red\">这里需要注意的是，如果和我一样是使用mysql数据库，那么需要讲nuget包由 SqlSugarCore 替换为 SqlSugarCore.MySqlConnector 切记！！！ 切记！！！</font>\n\n** Controller ** - Action方法中发布消息\n```csharp\nvar db = DbScoped.Sugar;\nOdinCapHelper.CapPublish(\"Sample.RabbitMQ.MySql\", DateTime.Now, () =>\n    {\n        System.Console.WriteLine(\"to do something\");\n    });\n```\n\n\n**Controller** - Action方法中订阅消费消息\n```csharp\n[CapSubscribe(\"Sample.RabbitMQ.MySql\")]\npublic async Task<Task> CheckReceivedMessage(DateTime time)\n{\n    Console.WriteLine(time);\n    return Task.CompletedTask;\n}\n```\n完整代码可以在 [GitHub](https://github.com/odinsam/OdinMA)中找到。\n\n    \n\t","slug":"Net-Core使用SqlSugar和Cap","published":1,"updated":"2021-06-16T16:13:08.984Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza27000n5cs9cqemewh5","content":"<blockquote>\n<p>近期的一次面试当中聊起了 .Net Core 中的 EF 框架和分布式的事务，因为在项目中也遇到过并发导致 EF Core 性能和报错的各种问题，所以就和面试官吐槽了一下，面试官说他们公司用的 SqlSugar 。这个开源组件库我以前知道的，但很久没有关注。回家看了一下发现这个东西已经非常完善，特此将项目中的 EF Core 变更为了 SqlSugar并且加入了 Cap，顺便记录一下遇到的问题。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-sqlsugar简介\"><a class=\"markdownIt-Anchor\" href=\"#1-sqlsugar简介\"></a> 1. SqlSugar简介</h4>\n<p>   SqlSugar是一款 老牌 .NET 开源ORM框架，由果糖大数据科技团队维护和更新 ，Github star数仅次于EF 和 Dapper。优点： 简单易用、功能齐全、高性能、轻量级、服务齐全、有专业技术支持一天18小时服务。支持数据库有 MySql、SqlServer、Sqlite、Oracle 、 postgresql、达梦、人大金仓。我的项目习惯了Code First，第一次使用也不知道是否正确。</p>\n<p><strong>Startup.cs</strong> - SqlSugar 注入代码</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddTransient&lt;OdinProjectSugarDbContext&gt;();</span><br><span class=\"line\">OdinInjectHelper.ServiceProvider = services.BuildServiceProvider();</span><br><span class=\"line\"><span class=\"keyword\">var</span> sugarEntity = OdinInjectHelper.GetService&lt;OdinProjectSugarDbContext&gt;();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">region</span> 初始化数据库</span></span><br><span class=\"line\"><span class=\"comment\">//修改cnf.config Host配置的链接字符串  enable修改为true，即可自动化初识数据库</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (_Options.DbEntity.InitDb)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tsugarEntity.CreateTable(<span class=\"string\">&quot;db_odinCore&quot;</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>OdinProjectSugarDbContext.cs</strong> - DbContext定义以及初始化数据库</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinProjectSugarDbContext</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SqlSugarClient db;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinProjectSugarDbContext</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        db = DbScoped.Sugar;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateTable</span>(<span class=\"params\"><span class=\"built_in\">string</span> databaseName, <span class=\"built_in\">bool</span> Backup = <span class=\"literal\">false</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">        &#123;\t</span><br><span class=\"line\">            <span class=\"comment\">// 判断数据库是否存在，如果不存在这里会有异常</span></span><br><span class=\"line\">            flag = db.DbMaintenance.GetDataBaseList(db).Contains(databaseName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果不存在 初始化创建数据库</span></span><br><span class=\"line\">            db.DbMaintenance.CreateDatabase(databaseName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">finally</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!flag)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Log.Logger.Information(<span class=\"string\">$&quot;【 自动创建数据库 】&quot;</span>);</span><br><span class=\"line\">                db.DbMaintenance.CreateDatabase(databaseName);</span><br><span class=\"line\">                <span class=\"comment\">// 我在所有的表后边都实现了一个自己的接口 IDbTable </span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> dbTable = <span class=\"keyword\">typeof</span>(IDbTable);</span><br><span class=\"line\">                <span class=\"comment\">// 找到所有实现了 IDbTable 的类 就是Mysql中对应的表</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> types = <span class=\"keyword\">this</span>.GetType().Assembly.GetTypes().Where(t =&gt; dbTable.IsAssignableFrom(t));</span><br><span class=\"line\">                <span class=\"comment\">// 是否备份表</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Backup)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> types)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 判断表是否存在  如果不存在则新建表</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!OdinSugarHelper.CheckTable(item))</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            DbScoped.Sugar.CodeFirst.BackupTable().InitTables(item);</span><br><span class=\"line\">                            Log.Logger.Information(<span class=\"string\">$&quot;创建数据表【 <span class=\"subst\">&#123;item.ToString()&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> types)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!OdinSugarHelper.CheckTable(item))</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            DbScoped.Sugar.CodeFirst.InitTables(item);</span><br><span class=\"line\">                            Log.Logger.Information(<span class=\"string\">$&quot;创建数据表【 <span class=\"subst\">&#123;item.ToString()&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Log.Logger.Information(<span class=\"string\">$&quot;启用【 数据库初始化 】---开始配置&quot;</span>);</span><br><span class=\"line\">                SampleData.Init();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinSugarDbSet</span>&lt;<span class=\"title\">Aop_ApiInvokerCatch_DbModel</span>&gt; ApiInvokerCatchs</span> &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> OdinSugarDbSet&lt;Aop_ApiInvokerCatch_DbModel&gt;(db); &#125; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinSugarDbSet</span>&lt;<span class=\"title\">Aop_ApiInvokerRecord_DbModel</span>&gt; ApiInvokerRecords</span> &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> OdinSugarDbSet&lt;Aop_ApiInvokerRecord_DbModel&gt;(db); &#125; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinSugarDbSet</span>&lt;<span class=\"title\">ErrorCode_DbModel</span>&gt; ErrorCodes</span> &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> OdinSugarDbSet&lt;ErrorCode_DbModel&gt;(db); &#125; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>OdinSugarHelper.cs</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinSugarHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> SqlSugarClient Db = DbScoped.Sugar;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 检查表是否存在</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;type&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">CheckTable</span>(<span class=\"params\">Type type</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> tableName = Db.EntityMaintenance.GetTableName(type);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db.DbMaintenance.IsAnyTable(tableName, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 检查表是否存在</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;typeparam name=&quot;T&quot;&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">CheckTable</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> tableName = Db.EntityMaintenance.GetTableName(<span class=\"keyword\">typeof</span>(T));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db.DbMaintenance.IsAnyTable(tableName, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 检查表是否存在</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;TableName&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">CheckTable</span>(<span class=\"params\"><span class=\"built_in\">string</span> TableName</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db.DbMaintenance.IsAnyTable(TableName, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样程序在运行的时候就基于DbContext的定义可以在数据库新建表。</p>\n<h4 id=\"2-基于-sqlsugar-使用-cap\"><a class=\"markdownIt-Anchor\" href=\"#2-基于-sqlsugar-使用-cap\"></a> 2. 基于 SqlSugar 使用 cap</h4>\n<p>  CAP 是一个在分布式系统中（SOA，MicroService）实现事件总线及最终一致性（分布式事务）的一个开源的 C# 库，她具有轻量级，高性能，易使用等特点。</p>\n<p><strong>Startup.cs</strong> - SqlSugar 注入代码</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinCapInject(_Options.DbEntity.ConnectionString, _Options.MongoDb.MongoConnection, _Options.RabbitMQ);</span><br></pre></td></tr></table></figure>\n<p><strong>AddOdinCapInject</strong> - 方法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> IServiceCollection <span class=\"title\">AddOdinCapInject</span>(<span class=\"params\"><span class=\"keyword\">this</span> IServiceCollection services, <span class=\"built_in\">string</span> mysqlConnectionString, <span class=\"built_in\">string</span> mongoConnectionString, RabbitMQOptions rabbitMQOptions</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    services.AddCap(x =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果你使用的ADO.NET，根据数据库选择进行配置：</span></span><br><span class=\"line\">        <span class=\"comment\">// x.UseSqlServer(&quot;数据库连接字符串&quot;);</span></span><br><span class=\"line\">        x.UseMySql(mysqlConnectionString);</span><br><span class=\"line\">        <span class=\"comment\">// x.UsePostgreSql(&quot;数据库连接字符串&quot;);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果你使用的 MongoDB，你可以添加如下配置：</span></span><br><span class=\"line\">        <span class=\"comment\">// x.UseMongoDB(mongoConnectionString);  //注意，仅支持MongoDB 4.0+集群</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//CAP支持 RabbitMQ、Kafka、AzureServiceBus 等作为MQ，根据使用选择配置：</span></span><br><span class=\"line\">        x.UseRabbitMQ(rb =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            rb.HostName = rabbitMQOptions.HostNames[<span class=\"number\">0</span>];</span><br><span class=\"line\">            rb.UserName = rabbitMQOptions.Account.UserName;</span><br><span class=\"line\">            rb.Password = rabbitMQOptions.Account.Password;</span><br><span class=\"line\">            rb.VirtualHost = rabbitMQOptions.VirtualHost;</span><br><span class=\"line\">            rb.Port = rabbitMQOptions.Port;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">// x.UseKafka(&quot;ConnectionStrings&quot;);</span></span><br><span class=\"line\">        <span class=\"comment\">// x.UseAzureServiceBus(&quot;ConnectionStrings&quot;);</span></span><br><span class=\"line\">        x.UseDashboard();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> services;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>OdinCapHelper.cs</strong> - 封装，注入到service中即可使用</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinCapHelper</span> : <span class=\"title\">IOdinCapHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">CapPublish</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> publishName, T contentObj, Action action = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> db = DbScoped.Sugar;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> capBus = OdinInjectHelper.GetService&lt;ICapPublisher&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">using</span> (<span class=\"keyword\">var</span> connection = (MySqlConnection)db.Ado.Connection)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">using</span> (<span class=\"keyword\">var</span> transaction = connection.BeginTransaction(capBus, autoCommit: <span class=\"literal\">false</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (connection.State != ConnectionState.Open)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    connection.Open();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                db.Ado.Transaction = (IDbTransaction)transaction.DbTransaction;<span class=\"comment\">//这行很重要</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (action != <span class=\"literal\">null</span>) action();</span><br><span class=\"line\">                capBus.Publish&lt;T&gt;(publishName, contentObj);</span><br><span class=\"line\">                transaction.Commit();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">这里需要注意的是，如果和我一样是使用mysql数据库，那么需要讲nuget包由 SqlSugarCore 替换为 SqlSugarCore.MySqlConnector 切记！！！ 切记！！！</font></p>\n<p>** Controller ** - Action方法中发布消息</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> db = DbScoped.Sugar;</span><br><span class=\"line\">OdinCapHelper.CapPublish(<span class=\"string\">&quot;Sample.RabbitMQ.MySql&quot;</span>, DateTime.Now, () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        System.Console.WriteLine(<span class=\"string\">&quot;to do something&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<p><strong>Controller</strong> - Action方法中订阅消费消息</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">CapSubscribe(<span class=\"meta-string\">&quot;Sample.RabbitMQ.MySql&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">async</span> Task&lt;Task&gt; <span class=\"title\">CheckReceivedMessage</span>(<span class=\"params\">DateTime time</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Console.WriteLine(time);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Task.CompletedTask;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/OdinMA\">GitHub</a>中找到。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>近期的一次面试当中聊起了 .Net Core 中的 EF 框架和分布式的事务，因为在项目中也遇到过并发导致 EF Core 性能和报错的各种问题，所以就和面试官吐槽了一下，面试官说他们公司用的 SqlSugar 。这个开源组件库我以前知道的，但很久没有关注。回家看了一下发现这个东西已经非常完善，特此将项目中的 EF Core 变更为了 SqlSugar并且加入了 Cap，顺便记录一下遇到的问题。</p>\n</blockquote>","more":"<h4 id=\"1-sqlsugar简介\"><a class=\"markdownIt-Anchor\" href=\"#1-sqlsugar简介\"></a> 1. SqlSugar简介</h4>\n<p>   SqlSugar是一款 老牌 .NET 开源ORM框架，由果糖大数据科技团队维护和更新 ，Github star数仅次于EF 和 Dapper。优点： 简单易用、功能齐全、高性能、轻量级、服务齐全、有专业技术支持一天18小时服务。支持数据库有 MySql、SqlServer、Sqlite、Oracle 、 postgresql、达梦、人大金仓。我的项目习惯了Code First，第一次使用也不知道是否正确。</p>\n<p><strong>Startup.cs</strong> - SqlSugar 注入代码</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddTransient&lt;OdinProjectSugarDbContext&gt;();</span><br><span class=\"line\">OdinInjectHelper.ServiceProvider = services.BuildServiceProvider();</span><br><span class=\"line\"><span class=\"keyword\">var</span> sugarEntity = OdinInjectHelper.GetService&lt;OdinProjectSugarDbContext&gt;();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">region</span> 初始化数据库</span></span><br><span class=\"line\"><span class=\"comment\">//修改cnf.config Host配置的链接字符串  enable修改为true，即可自动化初识数据库</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (_Options.DbEntity.InitDb)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tsugarEntity.CreateTable(<span class=\"string\">&quot;db_odinCore&quot;</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>OdinProjectSugarDbContext.cs</strong> - DbContext定义以及初始化数据库</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinProjectSugarDbContext</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SqlSugarClient db;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinProjectSugarDbContext</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        db = DbScoped.Sugar;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateTable</span>(<span class=\"params\"><span class=\"built_in\">string</span> databaseName, <span class=\"built_in\">bool</span> Backup = <span class=\"literal\">false</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">        &#123;\t</span><br><span class=\"line\">            <span class=\"comment\">// 判断数据库是否存在，如果不存在这里会有异常</span></span><br><span class=\"line\">            flag = db.DbMaintenance.GetDataBaseList(db).Contains(databaseName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果不存在 初始化创建数据库</span></span><br><span class=\"line\">            db.DbMaintenance.CreateDatabase(databaseName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">finally</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!flag)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Log.Logger.Information(<span class=\"string\">$&quot;【 自动创建数据库 】&quot;</span>);</span><br><span class=\"line\">                db.DbMaintenance.CreateDatabase(databaseName);</span><br><span class=\"line\">                <span class=\"comment\">// 我在所有的表后边都实现了一个自己的接口 IDbTable </span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> dbTable = <span class=\"keyword\">typeof</span>(IDbTable);</span><br><span class=\"line\">                <span class=\"comment\">// 找到所有实现了 IDbTable 的类 就是Mysql中对应的表</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> types = <span class=\"keyword\">this</span>.GetType().Assembly.GetTypes().Where(t =&gt; dbTable.IsAssignableFrom(t));</span><br><span class=\"line\">                <span class=\"comment\">// 是否备份表</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Backup)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> types)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 判断表是否存在  如果不存在则新建表</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!OdinSugarHelper.CheckTable(item))</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            DbScoped.Sugar.CodeFirst.BackupTable().InitTables(item);</span><br><span class=\"line\">                            Log.Logger.Information(<span class=\"string\">$&quot;创建数据表【 <span class=\"subst\">&#123;item.ToString()&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> types)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!OdinSugarHelper.CheckTable(item))</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            DbScoped.Sugar.CodeFirst.InitTables(item);</span><br><span class=\"line\">                            Log.Logger.Information(<span class=\"string\">$&quot;创建数据表【 <span class=\"subst\">&#123;item.ToString()&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Log.Logger.Information(<span class=\"string\">$&quot;启用【 数据库初始化 】---开始配置&quot;</span>);</span><br><span class=\"line\">                SampleData.Init();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinSugarDbSet</span>&lt;<span class=\"title\">Aop_ApiInvokerCatch_DbModel</span>&gt; ApiInvokerCatchs</span> &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> OdinSugarDbSet&lt;Aop_ApiInvokerCatch_DbModel&gt;(db); &#125; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinSugarDbSet</span>&lt;<span class=\"title\">Aop_ApiInvokerRecord_DbModel</span>&gt; ApiInvokerRecords</span> &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> OdinSugarDbSet&lt;Aop_ApiInvokerRecord_DbModel&gt;(db); &#125; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinSugarDbSet</span>&lt;<span class=\"title\">ErrorCode_DbModel</span>&gt; ErrorCodes</span> &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> OdinSugarDbSet&lt;ErrorCode_DbModel&gt;(db); &#125; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>OdinSugarHelper.cs</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinSugarHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> SqlSugarClient Db = DbScoped.Sugar;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 检查表是否存在</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;type&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">CheckTable</span>(<span class=\"params\">Type type</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> tableName = Db.EntityMaintenance.GetTableName(type);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db.DbMaintenance.IsAnyTable(tableName, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 检查表是否存在</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;typeparam name=&quot;T&quot;&gt;</span><span class=\"doctag\">&lt;/typeparam&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">CheckTable</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> tableName = Db.EntityMaintenance.GetTableName(<span class=\"keyword\">typeof</span>(T));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db.DbMaintenance.IsAnyTable(tableName, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 检查表是否存在</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;TableName&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">CheckTable</span>(<span class=\"params\"><span class=\"built_in\">string</span> TableName</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Db.DbMaintenance.IsAnyTable(TableName, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样程序在运行的时候就基于DbContext的定义可以在数据库新建表。</p>\n<h4 id=\"2-基于-sqlsugar-使用-cap\"><a class=\"markdownIt-Anchor\" href=\"#2-基于-sqlsugar-使用-cap\"></a> 2. 基于 SqlSugar 使用 cap</h4>\n<p>  CAP 是一个在分布式系统中（SOA，MicroService）实现事件总线及最终一致性（分布式事务）的一个开源的 C# 库，她具有轻量级，高性能，易使用等特点。</p>\n<p><strong>Startup.cs</strong> - SqlSugar 注入代码</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinCapInject(_Options.DbEntity.ConnectionString, _Options.MongoDb.MongoConnection, _Options.RabbitMQ);</span><br></pre></td></tr></table></figure>\n<p><strong>AddOdinCapInject</strong> - 方法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> IServiceCollection <span class=\"title\">AddOdinCapInject</span>(<span class=\"params\"><span class=\"keyword\">this</span> IServiceCollection services, <span class=\"built_in\">string</span> mysqlConnectionString, <span class=\"built_in\">string</span> mongoConnectionString, RabbitMQOptions rabbitMQOptions</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    services.AddCap(x =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果你使用的ADO.NET，根据数据库选择进行配置：</span></span><br><span class=\"line\">        <span class=\"comment\">// x.UseSqlServer(&quot;数据库连接字符串&quot;);</span></span><br><span class=\"line\">        x.UseMySql(mysqlConnectionString);</span><br><span class=\"line\">        <span class=\"comment\">// x.UsePostgreSql(&quot;数据库连接字符串&quot;);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果你使用的 MongoDB，你可以添加如下配置：</span></span><br><span class=\"line\">        <span class=\"comment\">// x.UseMongoDB(mongoConnectionString);  //注意，仅支持MongoDB 4.0+集群</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//CAP支持 RabbitMQ、Kafka、AzureServiceBus 等作为MQ，根据使用选择配置：</span></span><br><span class=\"line\">        x.UseRabbitMQ(rb =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            rb.HostName = rabbitMQOptions.HostNames[<span class=\"number\">0</span>];</span><br><span class=\"line\">            rb.UserName = rabbitMQOptions.Account.UserName;</span><br><span class=\"line\">            rb.Password = rabbitMQOptions.Account.Password;</span><br><span class=\"line\">            rb.VirtualHost = rabbitMQOptions.VirtualHost;</span><br><span class=\"line\">            rb.Port = rabbitMQOptions.Port;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">// x.UseKafka(&quot;ConnectionStrings&quot;);</span></span><br><span class=\"line\">        <span class=\"comment\">// x.UseAzureServiceBus(&quot;ConnectionStrings&quot;);</span></span><br><span class=\"line\">        x.UseDashboard();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> services;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>OdinCapHelper.cs</strong> - 封装，注入到service中即可使用</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinCapHelper</span> : <span class=\"title\">IOdinCapHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">CapPublish</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> publishName, T contentObj, Action action = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> db = DbScoped.Sugar;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> capBus = OdinInjectHelper.GetService&lt;ICapPublisher&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">using</span> (<span class=\"keyword\">var</span> connection = (MySqlConnection)db.Ado.Connection)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">using</span> (<span class=\"keyword\">var</span> transaction = connection.BeginTransaction(capBus, autoCommit: <span class=\"literal\">false</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (connection.State != ConnectionState.Open)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    connection.Open();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                db.Ado.Transaction = (IDbTransaction)transaction.DbTransaction;<span class=\"comment\">//这行很重要</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (action != <span class=\"literal\">null</span>) action();</span><br><span class=\"line\">                capBus.Publish&lt;T&gt;(publishName, contentObj);</span><br><span class=\"line\">                transaction.Commit();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">这里需要注意的是，如果和我一样是使用mysql数据库，那么需要讲nuget包由 SqlSugarCore 替换为 SqlSugarCore.MySqlConnector 切记！！！ 切记！！！</font></p>\n<p>** Controller ** - Action方法中发布消息</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> db = DbScoped.Sugar;</span><br><span class=\"line\">OdinCapHelper.CapPublish(<span class=\"string\">&quot;Sample.RabbitMQ.MySql&quot;</span>, DateTime.Now, () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        System.Console.WriteLine(<span class=\"string\">&quot;to do something&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<p><strong>Controller</strong> - Action方法中订阅消费消息</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">CapSubscribe(<span class=\"meta-string\">&quot;Sample.RabbitMQ.MySql&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">async</span> Task&lt;Task&gt; <span class=\"title\">CheckReceivedMessage</span>(<span class=\"params\">DateTime time</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Console.WriteLine(time);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Task.CompletedTask;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/OdinMA\">GitHub</a>中找到。</p>"},{"title":".Net中关于Json序列化Long类型数据的解决办法","author":"OdinSam","abbrlink":"4ad7","date":"2021-07-06T04:58:00.000Z","_content":">在分布式的项目中，我们的数据库Id不能再像以前一样使用int类型自动增长，这时候我们需要一个在网络当中都要能够保持唯一的值，通常情况我们会使用Guid来解决这个问题，但是作为string类型，他并不适合作为主键。尤其是在查询等需要索引操作的时候显得尤为重要。\n\n<!--more-->\n\n##### 1. 这时候我们通常会选择使用雪花Id来解决这个问题，他是一个能在网络当中能够保证唯一的数值number类型的数字，对应在csharp中是long类型。具体雪花Id的原理网上都有，这里直接上生成雪花Id的代码：\n\n```csharp\npublic class OdinSnowFlake : IOdinSnowFlake\n{\n    // 开始时间截((new DateTime(2020, 1, 1, 0, 0, 0, DateTimeKind.Utc)-Jan1st1970).TotalMilliseconds)\n    private readonly long twepoch;\n    // 机器id所占的位数\n    private const int workerIdBits = 5;\n    // 数据标识id所占的位数\n    private const int datacenterIdBits = 5;\n    // 支持的最大机器id，结果是31 (这个移位算法可以很快的计算出几位二进制数所能表示的最大十进制数)\n    private const long maxWorkerId = -1L ^ (-1L << workerIdBits);\n    // 支持的最大数据标识id，结果是31\n    private const long maxDatacenterId = -1L ^ (-1L << datacenterIdBits);\n    // 序列在id中占的位数\n    private const int sequenceBits = 12;\n    // 数据标识id向左移17位(12+5)\n    private const int datacenterIdShift = sequenceBits + workerIdBits;\n    // 机器ID向左移12位\n    private const int workerIdShift = sequenceBits;\n    // 时间截向左移22位(5+5+12)\n    private const int timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits;\n    // 生成序列的掩码，这里为4095 (0b111111111111=0xfff=4095)\n    private const long sequenceMask = -1L ^ (-1L << sequenceBits);\n    // 数据中心ID(0~31)\n    public long datacenterId { get; private set; }\n    // 工作机器ID(0~31)\n    public long workerId { get; private set; }\n    // 毫秒内序列(0~4095)\n    public long sequence { get; private set; }\n    // 上次生成ID的时间截\n    public long lastTimestamp { get; private set; }\n    private static Dictionary<long, long> dicContainer = null;\n\n\n    /// <summary>\n    /// 雪花ID\n    /// </summary>\n    /// <param name=\"datacenterId\">数据中心ID</param>\n    /// <param name=\"workerId\">工作机器ID</param>\n    public OdinSnowFlake(long datacenterId, long workerId)\n    {\n        this.twepoch = (long)((new DateTime(2020, 1, 1, 0, 0, 0, DateTimeKind.Utc) - Jan1st1970).TotalMilliseconds);\n        if (datacenterId > maxDatacenterId || datacenterId < 0)\n        {\n            throw new Exception(string.Format(\"datacenter Id can't be greater than {0} or less than 0\", maxDatacenterId));\n        }\n        if (workerId > maxWorkerId || workerId < 0)\n        {\n            throw new Exception(string.Format(\"worker Id can't be greater than {0} or less than 0\", maxWorkerId));\n        }\n        this.workerId = workerId;\n        this.datacenterId = datacenterId;\n        this.sequence = 0L;\n        this.lastTimestamp = -1L;\n        if (dicContainer == null)\n            dicContainer = new Dictionary<long, long>();\n    }\n\n    public void InitDic()\n    {\n        if (dicContainer == null)\n            dicContainer = new Dictionary<long, long>();\n    }\n\n    public void ClearDic()\n    {\n        if (dicContainer != null)\n            dicContainer.Clear();\n    }\n\n    /// <summary>\n    /// 获得下一个ID\n    /// </summary>\n    /// <returns></returns>\n    public long NextId()\n    {\n        lock (this)\n        {\n            long timestamp = GetCurrentTimestamp();\n            if (timestamp > lastTimestamp) //时间戳改变，毫秒内序列重置\n            {\n                sequence = 0L;\n            }\n            else if (timestamp == lastTimestamp) //如果是同一时间生成的，则进行毫秒内序列\n            {\n                sequence = (sequence + 1) & sequenceMask;\n                if (sequence == 0) //毫秒内序列溢出\n                {\n                    timestamp = GetNextTimestamp(lastTimestamp); //阻塞到下一个毫秒,获得新的时间戳\n                }\n            }\n            else //当前时间小于上一次ID生成的时间戳，证明系统时钟被回拨，此时需要做回拨处理\n            {\n                sequence = (sequence + 1) & sequenceMask;\n                if (sequence > 0)\n                {\n                    timestamp = lastTimestamp; //停留在最后一次时间戳上，等待系统时间追上后即完全度过了时钟回拨问题。\n                }\n                else //毫秒内序列溢出\n                {\n                    timestamp = lastTimestamp + 1; //直接进位到下一个毫秒\n                }\n                //throw new Exception(string.Format(\"Clock moved backwards.  Refusing to generate id for {0} milliseconds\", lastTimestamp - timestamp));\n            }\n\n            lastTimestamp = timestamp; //上次生成ID的时间截\n\n            //移位并通过或运算拼到一起组成64位的ID\n            var id = ((timestamp - twepoch) << timestampLeftShift) |\n                (datacenterId << datacenterIdShift) |\n                (workerId << workerIdShift) |\n                sequence;\n            if (!dicContainer.ContainsKey(id))\n            {\n                dicContainer.Add(id, id);\n                return id;\n            }\n            else\n            {\n                Thread.Sleep(1);\n                return NextId();\n            }\n        }\n    }\n\n    /// <summary>\n    /// 解析雪花ID\n    /// </summary>\n    /// <returns></returns>\n    public string AnalyzeId(long Id)\n    {\n        StringBuilder sb = new StringBuilder();\n        var timestamp = (Id >> timestampLeftShift);\n        var time = Jan1st1970.AddMilliseconds(timestamp + twepoch);\n        sb.Append(time.ToLocalTime().ToString(\"yyyy-MM-dd HH:mm:ss:fff\"));\n        var datacenterId = (Id ^ (timestamp << timestampLeftShift)) >> datacenterIdShift;\n        sb.Append(\"_\" + datacenterId);\n        var workerId = (Id ^ ((timestamp << timestampLeftShift) | (datacenterId << datacenterIdShift))) >> workerIdShift;\n        sb.Append(\"_\" + workerId);\n        var sequence = Id & sequenceMask;\n        sb.Append(\"_\" + sequence);\n        return sb.ToString();\n    }\n\n    /// <summary>\n    /// 阻塞到下一个毫秒，直到获得新的时间戳\n    /// </summary>\n    /// <param name=\"lastTimestamp\">上次生成ID的时间截</param>\n    /// <returns>当前时间戳</returns>\n    private static long GetNextTimestamp(long lastTimestamp)\n    {\n        long timestamp = GetCurrentTimestamp();\n        while (timestamp <= lastTimestamp)\n        {\n            timestamp = GetCurrentTimestamp();\n        }\n        return timestamp;\n    }\n\n    /// <summary>\n    /// 获取当前时间戳\n    /// </summary>\n    /// <returns></returns>\n    private static long GetCurrentTimestamp()\n    {\n        return (long)(DateTime.UtcNow - Jan1st1970).TotalMilliseconds;\n    }\n\n    private static readonly DateTime Jan1st1970 = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);\n\n}\n```\n\n#### 代码解释：\n\n1. 提供了构造函数，其中datacenterId为当前数据中心Id:一般从1开始。workerId是机器Id,需要注意的是在网络节点当中的服务器，这个Id不能重复\n\n2. 代码的 NextId() 方法将会生成一个 18位长的long类型的雪花Id。\n\n3. AnalyzeId() 方法可以简单的解析一个long的数值是不是符合雪花Id的规范。这个解析不精准，只能判断格式大致是否正确具体解析规则可以看代码。\n\n4. 有了这个Id，我们通常可以开心的在代码当中以application/json格式返回一个对象，比如\n\n![代码解释](/images/4ad7/code.png)\n\n输出的结果是\n\n![输出结果](/images/4ad7/result.png)\n\n##### <font color='red'>这是因为 JavaScript 数值精度是32位，如果整数数度超过32位，就会被当作浮点数处理。换句话说，如果从服务端生成的JSON，某个值是64位整数，传到前端JavaScript，再传回服务端，不做任何运算，都可能出现失真。</font>\n\n解决问题的办法：将long作为string类型序列化输出 代码如下：\n\n```csharp\npublic class Stu\n{\n    [JsonConverter(typeof(JsonConverterLong))]\n    public long id { get; set; }\n    public string name { get; set; }\n    public int age { get; set; }\n}\n```\n\nJsonConverterLong 类\n\n```csharp\npublic class JsonConverterLong : JsonConverter\n{\n    /// <summary>\n    /// 是否可以转换\n    /// </summary>\n    /// <param name=\"objectType\"></param>\n    /// <returns></returns>\n    public override bool CanConvert(Type objectType)\n    {\n        return true;\n    }\n\n    /// <summary>\n    /// 读json\n    /// </summary>\n    /// <param name=\"reader\"></param>\n    /// <param name=\"objectType\"></param>\n    /// <param name=\"existingValue\"></param>\n    /// <param name=\"serializer\"></param>\n    /// <returns></returns>\n    public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\n    {\n        if ((reader.ValueType == null || reader.ValueType == typeof(long?)) && reader.Value == null)\n        {\n            return null;\n        }\n        else\n        {\n            long.TryParse(reader.Value != null ? reader.Value.ToString() : \"\", out long value);\n            return value;\n        }\n    }\n\n    /// <summary>\n    /// 写json\n    /// </summary>\n    /// <param name=\"writer\"></param>\n    /// <param name=\"value\"></param>\n    /// <param name=\"serializer\"></param>\n    public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)\n    {\n        if (value == null)\n            writer.WriteValue(value);\n        else\n            writer.WriteValue(value + \"\");\n    }\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```","source":"_posts/Net中关于Json序列化Long类型数据的解决办法.md","raw":"title: .Net中关于Json序列化Long类型数据的解决办法\nauthor: OdinSam\ntags:\n  - .Net Core\n  - Json\n  - Long类型数据\ncategories:\n  - .Net Core\nabbrlink: 4ad7\ndate: 2021-07-06 12:58:00\n---\n>在分布式的项目中，我们的数据库Id不能再像以前一样使用int类型自动增长，这时候我们需要一个在网络当中都要能够保持唯一的值，通常情况我们会使用Guid来解决这个问题，但是作为string类型，他并不适合作为主键。尤其是在查询等需要索引操作的时候显得尤为重要。\n\n<!--more-->\n\n##### 1. 这时候我们通常会选择使用雪花Id来解决这个问题，他是一个能在网络当中能够保证唯一的数值number类型的数字，对应在csharp中是long类型。具体雪花Id的原理网上都有，这里直接上生成雪花Id的代码：\n\n```csharp\npublic class OdinSnowFlake : IOdinSnowFlake\n{\n    // 开始时间截((new DateTime(2020, 1, 1, 0, 0, 0, DateTimeKind.Utc)-Jan1st1970).TotalMilliseconds)\n    private readonly long twepoch;\n    // 机器id所占的位数\n    private const int workerIdBits = 5;\n    // 数据标识id所占的位数\n    private const int datacenterIdBits = 5;\n    // 支持的最大机器id，结果是31 (这个移位算法可以很快的计算出几位二进制数所能表示的最大十进制数)\n    private const long maxWorkerId = -1L ^ (-1L << workerIdBits);\n    // 支持的最大数据标识id，结果是31\n    private const long maxDatacenterId = -1L ^ (-1L << datacenterIdBits);\n    // 序列在id中占的位数\n    private const int sequenceBits = 12;\n    // 数据标识id向左移17位(12+5)\n    private const int datacenterIdShift = sequenceBits + workerIdBits;\n    // 机器ID向左移12位\n    private const int workerIdShift = sequenceBits;\n    // 时间截向左移22位(5+5+12)\n    private const int timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits;\n    // 生成序列的掩码，这里为4095 (0b111111111111=0xfff=4095)\n    private const long sequenceMask = -1L ^ (-1L << sequenceBits);\n    // 数据中心ID(0~31)\n    public long datacenterId { get; private set; }\n    // 工作机器ID(0~31)\n    public long workerId { get; private set; }\n    // 毫秒内序列(0~4095)\n    public long sequence { get; private set; }\n    // 上次生成ID的时间截\n    public long lastTimestamp { get; private set; }\n    private static Dictionary<long, long> dicContainer = null;\n\n\n    /// <summary>\n    /// 雪花ID\n    /// </summary>\n    /// <param name=\"datacenterId\">数据中心ID</param>\n    /// <param name=\"workerId\">工作机器ID</param>\n    public OdinSnowFlake(long datacenterId, long workerId)\n    {\n        this.twepoch = (long)((new DateTime(2020, 1, 1, 0, 0, 0, DateTimeKind.Utc) - Jan1st1970).TotalMilliseconds);\n        if (datacenterId > maxDatacenterId || datacenterId < 0)\n        {\n            throw new Exception(string.Format(\"datacenter Id can't be greater than {0} or less than 0\", maxDatacenterId));\n        }\n        if (workerId > maxWorkerId || workerId < 0)\n        {\n            throw new Exception(string.Format(\"worker Id can't be greater than {0} or less than 0\", maxWorkerId));\n        }\n        this.workerId = workerId;\n        this.datacenterId = datacenterId;\n        this.sequence = 0L;\n        this.lastTimestamp = -1L;\n        if (dicContainer == null)\n            dicContainer = new Dictionary<long, long>();\n    }\n\n    public void InitDic()\n    {\n        if (dicContainer == null)\n            dicContainer = new Dictionary<long, long>();\n    }\n\n    public void ClearDic()\n    {\n        if (dicContainer != null)\n            dicContainer.Clear();\n    }\n\n    /// <summary>\n    /// 获得下一个ID\n    /// </summary>\n    /// <returns></returns>\n    public long NextId()\n    {\n        lock (this)\n        {\n            long timestamp = GetCurrentTimestamp();\n            if (timestamp > lastTimestamp) //时间戳改变，毫秒内序列重置\n            {\n                sequence = 0L;\n            }\n            else if (timestamp == lastTimestamp) //如果是同一时间生成的，则进行毫秒内序列\n            {\n                sequence = (sequence + 1) & sequenceMask;\n                if (sequence == 0) //毫秒内序列溢出\n                {\n                    timestamp = GetNextTimestamp(lastTimestamp); //阻塞到下一个毫秒,获得新的时间戳\n                }\n            }\n            else //当前时间小于上一次ID生成的时间戳，证明系统时钟被回拨，此时需要做回拨处理\n            {\n                sequence = (sequence + 1) & sequenceMask;\n                if (sequence > 0)\n                {\n                    timestamp = lastTimestamp; //停留在最后一次时间戳上，等待系统时间追上后即完全度过了时钟回拨问题。\n                }\n                else //毫秒内序列溢出\n                {\n                    timestamp = lastTimestamp + 1; //直接进位到下一个毫秒\n                }\n                //throw new Exception(string.Format(\"Clock moved backwards.  Refusing to generate id for {0} milliseconds\", lastTimestamp - timestamp));\n            }\n\n            lastTimestamp = timestamp; //上次生成ID的时间截\n\n            //移位并通过或运算拼到一起组成64位的ID\n            var id = ((timestamp - twepoch) << timestampLeftShift) |\n                (datacenterId << datacenterIdShift) |\n                (workerId << workerIdShift) |\n                sequence;\n            if (!dicContainer.ContainsKey(id))\n            {\n                dicContainer.Add(id, id);\n                return id;\n            }\n            else\n            {\n                Thread.Sleep(1);\n                return NextId();\n            }\n        }\n    }\n\n    /// <summary>\n    /// 解析雪花ID\n    /// </summary>\n    /// <returns></returns>\n    public string AnalyzeId(long Id)\n    {\n        StringBuilder sb = new StringBuilder();\n        var timestamp = (Id >> timestampLeftShift);\n        var time = Jan1st1970.AddMilliseconds(timestamp + twepoch);\n        sb.Append(time.ToLocalTime().ToString(\"yyyy-MM-dd HH:mm:ss:fff\"));\n        var datacenterId = (Id ^ (timestamp << timestampLeftShift)) >> datacenterIdShift;\n        sb.Append(\"_\" + datacenterId);\n        var workerId = (Id ^ ((timestamp << timestampLeftShift) | (datacenterId << datacenterIdShift))) >> workerIdShift;\n        sb.Append(\"_\" + workerId);\n        var sequence = Id & sequenceMask;\n        sb.Append(\"_\" + sequence);\n        return sb.ToString();\n    }\n\n    /// <summary>\n    /// 阻塞到下一个毫秒，直到获得新的时间戳\n    /// </summary>\n    /// <param name=\"lastTimestamp\">上次生成ID的时间截</param>\n    /// <returns>当前时间戳</returns>\n    private static long GetNextTimestamp(long lastTimestamp)\n    {\n        long timestamp = GetCurrentTimestamp();\n        while (timestamp <= lastTimestamp)\n        {\n            timestamp = GetCurrentTimestamp();\n        }\n        return timestamp;\n    }\n\n    /// <summary>\n    /// 获取当前时间戳\n    /// </summary>\n    /// <returns></returns>\n    private static long GetCurrentTimestamp()\n    {\n        return (long)(DateTime.UtcNow - Jan1st1970).TotalMilliseconds;\n    }\n\n    private static readonly DateTime Jan1st1970 = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);\n\n}\n```\n\n#### 代码解释：\n\n1. 提供了构造函数，其中datacenterId为当前数据中心Id:一般从1开始。workerId是机器Id,需要注意的是在网络节点当中的服务器，这个Id不能重复\n\n2. 代码的 NextId() 方法将会生成一个 18位长的long类型的雪花Id。\n\n3. AnalyzeId() 方法可以简单的解析一个long的数值是不是符合雪花Id的规范。这个解析不精准，只能判断格式大致是否正确具体解析规则可以看代码。\n\n4. 有了这个Id，我们通常可以开心的在代码当中以application/json格式返回一个对象，比如\n\n![代码解释](/images/4ad7/code.png)\n\n输出的结果是\n\n![输出结果](/images/4ad7/result.png)\n\n##### <font color='red'>这是因为 JavaScript 数值精度是32位，如果整数数度超过32位，就会被当作浮点数处理。换句话说，如果从服务端生成的JSON，某个值是64位整数，传到前端JavaScript，再传回服务端，不做任何运算，都可能出现失真。</font>\n\n解决问题的办法：将long作为string类型序列化输出 代码如下：\n\n```csharp\npublic class Stu\n{\n    [JsonConverter(typeof(JsonConverterLong))]\n    public long id { get; set; }\n    public string name { get; set; }\n    public int age { get; set; }\n}\n```\n\nJsonConverterLong 类\n\n```csharp\npublic class JsonConverterLong : JsonConverter\n{\n    /// <summary>\n    /// 是否可以转换\n    /// </summary>\n    /// <param name=\"objectType\"></param>\n    /// <returns></returns>\n    public override bool CanConvert(Type objectType)\n    {\n        return true;\n    }\n\n    /// <summary>\n    /// 读json\n    /// </summary>\n    /// <param name=\"reader\"></param>\n    /// <param name=\"objectType\"></param>\n    /// <param name=\"existingValue\"></param>\n    /// <param name=\"serializer\"></param>\n    /// <returns></returns>\n    public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\n    {\n        if ((reader.ValueType == null || reader.ValueType == typeof(long?)) && reader.Value == null)\n        {\n            return null;\n        }\n        else\n        {\n            long.TryParse(reader.Value != null ? reader.Value.ToString() : \"\", out long value);\n            return value;\n        }\n    }\n\n    /// <summary>\n    /// 写json\n    /// </summary>\n    /// <param name=\"writer\"></param>\n    /// <param name=\"value\"></param>\n    /// <param name=\"serializer\"></param>\n    public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)\n    {\n        if (value == null)\n            writer.WriteValue(value);\n        else\n            writer.WriteValue(value + \"\");\n    }\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```","slug":"Net中关于Json序列化Long类型数据的解决办法","published":1,"updated":"2023-03-10T05:12:05.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza28000r5cs9gy88drz5","content":"<blockquote>\n<p>在分布式的项目中，我们的数据库Id不能再像以前一样使用int类型自动增长，这时候我们需要一个在网络当中都要能够保持唯一的值，通常情况我们会使用Guid来解决这个问题，但是作为string类型，他并不适合作为主键。尤其是在查询等需要索引操作的时候显得尤为重要。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h5 id=\"1-这时候我们通常会选择使用雪花id来解决这个问题他是一个能在网络当中能够保证唯一的数值number类型的数字对应在csharp中是long类型-具体雪花id的原理网上都有这里直接上生成雪花id的代码\"><a class=\"markdownIt-Anchor\" href=\"#1-这时候我们通常会选择使用雪花id来解决这个问题他是一个能在网络当中能够保证唯一的数值number类型的数字对应在csharp中是long类型-具体雪花id的原理网上都有这里直接上生成雪花id的代码\"></a> 1. 这时候我们通常会选择使用雪花Id来解决这个问题，他是一个能在网络当中能够保证唯一的数值number类型的数字，对应在csharp中是long类型。具体雪花Id的原理网上都有，这里直接上生成雪花Id的代码：</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinSnowFlake</span> : <span class=\"title\">IOdinSnowFlake</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 开始时间截((new DateTime(2020, 1, 1, 0, 0, 0, DateTimeKind.Utc)-Jan1st1970).TotalMilliseconds)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> <span class=\"built_in\">long</span> twepoch;</span><br><span class=\"line\">    <span class=\"comment\">// 机器id所占的位数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> workerIdBits = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 数据标识id所占的位数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> datacenterIdBits = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 支持的最大机器id，结果是31 (这个移位算法可以很快的计算出几位二进制数所能表示的最大十进制数)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">long</span> maxWorkerId = <span class=\"number\">-1L</span> ^ (<span class=\"number\">-1L</span> &lt;&lt; workerIdBits);</span><br><span class=\"line\">    <span class=\"comment\">// 支持的最大数据标识id，结果是31</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">long</span> maxDatacenterId = <span class=\"number\">-1L</span> ^ (<span class=\"number\">-1L</span> &lt;&lt; datacenterIdBits);</span><br><span class=\"line\">    <span class=\"comment\">// 序列在id中占的位数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> sequenceBits = <span class=\"number\">12</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 数据标识id向左移17位(12+5)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> datacenterIdShift = sequenceBits + workerIdBits;</span><br><span class=\"line\">    <span class=\"comment\">// 机器ID向左移12位</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> workerIdShift = sequenceBits;</span><br><span class=\"line\">    <span class=\"comment\">// 时间截向左移22位(5+5+12)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits;</span><br><span class=\"line\">    <span class=\"comment\">// 生成序列的掩码，这里为4095 (0b111111111111=0xfff=4095)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">long</span> sequenceMask = <span class=\"number\">-1L</span> ^ (<span class=\"number\">-1L</span> &lt;&lt; sequenceBits);</span><br><span class=\"line\">    <span class=\"comment\">// 数据中心ID(0~31)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> datacenterId &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">private</span> <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 工作机器ID(0~31)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> workerId &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">private</span> <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 毫秒内序列(0~4095)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> sequence &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">private</span> <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 上次生成ID的时间截</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> lastTimestamp &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">private</span> <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Dictionary&lt;<span class=\"built_in\">long</span>, <span class=\"built_in\">long</span>&gt; dicContainer = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 雪花ID</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;datacenterId&quot;&gt;</span>数据中心ID<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;workerId&quot;&gt;</span>工作机器ID<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinSnowFlake</span>(<span class=\"params\"><span class=\"built_in\">long</span> datacenterId, <span class=\"built_in\">long</span> workerId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.twepoch = (<span class=\"built_in\">long</span>)((<span class=\"keyword\">new</span> DateTime(<span class=\"number\">2020</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, DateTimeKind.Utc) - Jan1st1970).TotalMilliseconds);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (datacenterId &gt; maxDatacenterId || datacenterId &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;datacenter Id can&#x27;t be greater than &#123;0&#125; or less than 0&quot;</span>, maxDatacenterId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (workerId &gt; maxWorkerId || workerId &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;worker Id can&#x27;t be greater than &#123;0&#125; or less than 0&quot;</span>, maxWorkerId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.workerId = workerId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.datacenterId = datacenterId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.sequence = <span class=\"number\">0L</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.lastTimestamp = <span class=\"number\">-1L</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dicContainer == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            dicContainer = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">long</span>, <span class=\"built_in\">long</span>&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">InitDic</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dicContainer == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            dicContainer = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">long</span>, <span class=\"built_in\">long</span>&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ClearDic</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dicContainer != <span class=\"literal\">null</span>)</span><br><span class=\"line\">            dicContainer.Clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 获得下一个ID</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">long</span> <span class=\"title\">NextId</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">lock</span> (<span class=\"keyword\">this</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">long</span> timestamp = GetCurrentTimestamp();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (timestamp &gt; lastTimestamp) <span class=\"comment\">//时间戳改变，毫秒内序列重置</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sequence = <span class=\"number\">0L</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (timestamp == lastTimestamp) <span class=\"comment\">//如果是同一时间生成的，则进行毫秒内序列</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sequence = (sequence + <span class=\"number\">1</span>) &amp; sequenceMask;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sequence == <span class=\"number\">0</span>) <span class=\"comment\">//毫秒内序列溢出</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    timestamp = GetNextTimestamp(lastTimestamp); <span class=\"comment\">//阻塞到下一个毫秒,获得新的时间戳</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"comment\">//当前时间小于上一次ID生成的时间戳，证明系统时钟被回拨，此时需要做回拨处理</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sequence = (sequence + <span class=\"number\">1</span>) &amp; sequenceMask;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sequence &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    timestamp = lastTimestamp; <span class=\"comment\">//停留在最后一次时间戳上，等待系统时间追上后即完全度过了时钟回拨问题。</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"comment\">//毫秒内序列溢出</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    timestamp = lastTimestamp + <span class=\"number\">1</span>; <span class=\"comment\">//直接进位到下一个毫秒</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">//throw new Exception(string.Format(&quot;Clock moved backwards.  Refusing to generate id for &#123;0&#125; milliseconds&quot;, lastTimestamp - timestamp));</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            lastTimestamp = timestamp; <span class=\"comment\">//上次生成ID的时间截</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//移位并通过或运算拼到一起组成64位的ID</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> id = ((timestamp - twepoch) &lt;&lt; timestampLeftShift) |</span><br><span class=\"line\">                (datacenterId &lt;&lt; datacenterIdShift) |</span><br><span class=\"line\">                (workerId &lt;&lt; workerIdShift) |</span><br><span class=\"line\">                sequence;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!dicContainer.ContainsKey(id))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dicContainer.Add(id, id);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Thread.Sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> NextId();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 解析雪花ID</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">AnalyzeId</span>(<span class=\"params\"><span class=\"built_in\">long</span> Id</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> timestamp = (Id &gt;&gt; timestampLeftShift);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> time = Jan1st1970.AddMilliseconds(timestamp + twepoch);</span><br><span class=\"line\">        sb.Append(time.ToLocalTime().ToString(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss:fff&quot;</span>));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> datacenterId = (Id ^ (timestamp &lt;&lt; timestampLeftShift)) &gt;&gt; datacenterIdShift;</span><br><span class=\"line\">        sb.Append(<span class=\"string\">&quot;_&quot;</span> + datacenterId);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> workerId = (Id ^ ((timestamp &lt;&lt; timestampLeftShift) | (datacenterId &lt;&lt; datacenterIdShift))) &gt;&gt; workerIdShift;</span><br><span class=\"line\">        sb.Append(<span class=\"string\">&quot;_&quot;</span> + workerId);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> sequence = Id &amp; sequenceMask;</span><br><span class=\"line\">        sb.Append(<span class=\"string\">&quot;_&quot;</span> + sequence);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sb.ToString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 阻塞到下一个毫秒，直到获得新的时间戳</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;lastTimestamp&quot;&gt;</span>上次生成ID的时间截<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>当前时间戳<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">long</span> <span class=\"title\">GetNextTimestamp</span>(<span class=\"params\"><span class=\"built_in\">long</span> lastTimestamp</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">long</span> timestamp = GetCurrentTimestamp();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (timestamp &lt;= lastTimestamp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            timestamp = GetCurrentTimestamp();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> timestamp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 获取当前时间戳</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">long</span> <span class=\"title\">GetCurrentTimestamp</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"built_in\">long</span>)(DateTime.UtcNow - Jan1st1970).TotalMilliseconds;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DateTime Jan1st1970 = <span class=\"keyword\">new</span> DateTime(<span class=\"number\">1970</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, DateTimeKind.Utc);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"代码解释\"><a class=\"markdownIt-Anchor\" href=\"#代码解释\"></a> 代码解释：</h4>\n<ol>\n<li>\n<p>提供了构造函数，其中datacenterId为当前数据中心Id:一般从1开始。workerId是机器Id,需要注意的是在网络节点当中的服务器，这个Id不能重复</p>\n</li>\n<li>\n<p>代码的 NextId() 方法将会生成一个 18位长的long类型的雪花Id。</p>\n</li>\n<li>\n<p>AnalyzeId() 方法可以简单的解析一个long的数值是不是符合雪花Id的规范。这个解析不精准，只能判断格式大致是否正确具体解析规则可以看代码。</p>\n</li>\n<li>\n<p>有了这个Id，我们通常可以开心的在代码当中以application/json格式返回一个对象，比如</p>\n</li>\n</ol>\n<p><img src=\"/images/4ad7/code.png\" alt=\"代码解释\" /></p>\n<p>输出的结果是</p>\n<p><img src=\"/images/4ad7/result.png\" alt=\"输出结果\" /></p>\n<h5 id=\"font-colorred这是因为-javascript-数值精度是32位如果整数数度超过32位就会被当作浮点数处理-换句话说如果从服务端生成的json某个值是64位整数传到前端javascript再传回服务端不做任何运算都可能出现失真-font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorred这是因为-javascript-数值精度是32位如果整数数度超过32位就会被当作浮点数处理-换句话说如果从服务端生成的json某个值是64位整数传到前端javascript再传回服务端不做任何运算都可能出现失真-font\"></a> <font color='red'>这是因为 JavaScript 数值精度是32位，如果整数数度超过32位，就会被当作浮点数处理。换句话说，如果从服务端生成的JSON，某个值是64位整数，传到前端JavaScript，再传回服务端，不做任何运算，都可能出现失真。</font></h5>\n<p>解决问题的办法：将long作为string类型序列化输出 代码如下：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Stu</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">JsonConverter(typeof(JsonConverterLong))</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> id &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> age &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JsonConverterLong 类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">JsonConverterLong</span> : <span class=\"title\">JsonConverter</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 是否可以转换</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;objectType&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"built_in\">bool</span> <span class=\"title\">CanConvert</span>(<span class=\"params\">Type objectType</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 读json</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;reader&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;objectType&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;existingValue&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;serializer&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"built_in\">object</span> <span class=\"title\">ReadJson</span>(<span class=\"params\">JsonReader reader, Type objectType, <span class=\"built_in\">object</span> existingValue, JsonSerializer serializer</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((reader.ValueType == <span class=\"literal\">null</span> || reader.ValueType == <span class=\"keyword\">typeof</span>(<span class=\"built_in\">long</span>?)) &amp;&amp; reader.Value == <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">long</span>.TryParse(reader.Value != <span class=\"literal\">null</span> ? reader.Value.ToString() : <span class=\"string\">&quot;&quot;</span>, <span class=\"keyword\">out</span> <span class=\"built_in\">long</span> <span class=\"keyword\">value</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 写json</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;writer&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;value&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;serializer&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">WriteJson</span>(<span class=\"params\">JsonWriter writer, <span class=\"built_in\">object</span> <span class=\"keyword\">value</span>, JsonSerializer serializer</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">value</span> == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            writer.WriteValue(<span class=\"keyword\">value</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            writer.WriteValue(<span class=\"keyword\">value</span> + <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre class=\"highlight\"><code class=\"\"></code></pre>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>在分布式的项目中，我们的数据库Id不能再像以前一样使用int类型自动增长，这时候我们需要一个在网络当中都要能够保持唯一的值，通常情况我们会使用Guid来解决这个问题，但是作为string类型，他并不适合作为主键。尤其是在查询等需要索引操作的时候显得尤为重要。</p>\n</blockquote>","more":"<h5 id=\"1-这时候我们通常会选择使用雪花id来解决这个问题他是一个能在网络当中能够保证唯一的数值number类型的数字对应在csharp中是long类型-具体雪花id的原理网上都有这里直接上生成雪花id的代码\"><a class=\"markdownIt-Anchor\" href=\"#1-这时候我们通常会选择使用雪花id来解决这个问题他是一个能在网络当中能够保证唯一的数值number类型的数字对应在csharp中是long类型-具体雪花id的原理网上都有这里直接上生成雪花id的代码\"></a> 1. 这时候我们通常会选择使用雪花Id来解决这个问题，他是一个能在网络当中能够保证唯一的数值number类型的数字，对应在csharp中是long类型。具体雪花Id的原理网上都有，这里直接上生成雪花Id的代码：</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinSnowFlake</span> : <span class=\"title\">IOdinSnowFlake</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 开始时间截((new DateTime(2020, 1, 1, 0, 0, 0, DateTimeKind.Utc)-Jan1st1970).TotalMilliseconds)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> <span class=\"built_in\">long</span> twepoch;</span><br><span class=\"line\">    <span class=\"comment\">// 机器id所占的位数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> workerIdBits = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 数据标识id所占的位数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> datacenterIdBits = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 支持的最大机器id，结果是31 (这个移位算法可以很快的计算出几位二进制数所能表示的最大十进制数)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">long</span> maxWorkerId = <span class=\"number\">-1L</span> ^ (<span class=\"number\">-1L</span> &lt;&lt; workerIdBits);</span><br><span class=\"line\">    <span class=\"comment\">// 支持的最大数据标识id，结果是31</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">long</span> maxDatacenterId = <span class=\"number\">-1L</span> ^ (<span class=\"number\">-1L</span> &lt;&lt; datacenterIdBits);</span><br><span class=\"line\">    <span class=\"comment\">// 序列在id中占的位数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> sequenceBits = <span class=\"number\">12</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 数据标识id向左移17位(12+5)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> datacenterIdShift = sequenceBits + workerIdBits;</span><br><span class=\"line\">    <span class=\"comment\">// 机器ID向左移12位</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> workerIdShift = sequenceBits;</span><br><span class=\"line\">    <span class=\"comment\">// 时间截向左移22位(5+5+12)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">int</span> timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits;</span><br><span class=\"line\">    <span class=\"comment\">// 生成序列的掩码，这里为4095 (0b111111111111=0xfff=4095)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">long</span> sequenceMask = <span class=\"number\">-1L</span> ^ (<span class=\"number\">-1L</span> &lt;&lt; sequenceBits);</span><br><span class=\"line\">    <span class=\"comment\">// 数据中心ID(0~31)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> datacenterId &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">private</span> <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 工作机器ID(0~31)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> workerId &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">private</span> <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 毫秒内序列(0~4095)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> sequence &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">private</span> <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 上次生成ID的时间截</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> lastTimestamp &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">private</span> <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Dictionary&lt;<span class=\"built_in\">long</span>, <span class=\"built_in\">long</span>&gt; dicContainer = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 雪花ID</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;datacenterId&quot;&gt;</span>数据中心ID<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;workerId&quot;&gt;</span>工作机器ID<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinSnowFlake</span>(<span class=\"params\"><span class=\"built_in\">long</span> datacenterId, <span class=\"built_in\">long</span> workerId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.twepoch = (<span class=\"built_in\">long</span>)((<span class=\"keyword\">new</span> DateTime(<span class=\"number\">2020</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, DateTimeKind.Utc) - Jan1st1970).TotalMilliseconds);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (datacenterId &gt; maxDatacenterId || datacenterId &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;datacenter Id can&#x27;t be greater than &#123;0&#125; or less than 0&quot;</span>, maxDatacenterId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (workerId &gt; maxWorkerId || workerId &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;worker Id can&#x27;t be greater than &#123;0&#125; or less than 0&quot;</span>, maxWorkerId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.workerId = workerId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.datacenterId = datacenterId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.sequence = <span class=\"number\">0L</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.lastTimestamp = <span class=\"number\">-1L</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dicContainer == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            dicContainer = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">long</span>, <span class=\"built_in\">long</span>&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">InitDic</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dicContainer == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            dicContainer = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">long</span>, <span class=\"built_in\">long</span>&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ClearDic</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dicContainer != <span class=\"literal\">null</span>)</span><br><span class=\"line\">            dicContainer.Clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 获得下一个ID</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">long</span> <span class=\"title\">NextId</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">lock</span> (<span class=\"keyword\">this</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">long</span> timestamp = GetCurrentTimestamp();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (timestamp &gt; lastTimestamp) <span class=\"comment\">//时间戳改变，毫秒内序列重置</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sequence = <span class=\"number\">0L</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (timestamp == lastTimestamp) <span class=\"comment\">//如果是同一时间生成的，则进行毫秒内序列</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sequence = (sequence + <span class=\"number\">1</span>) &amp; sequenceMask;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sequence == <span class=\"number\">0</span>) <span class=\"comment\">//毫秒内序列溢出</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    timestamp = GetNextTimestamp(lastTimestamp); <span class=\"comment\">//阻塞到下一个毫秒,获得新的时间戳</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"comment\">//当前时间小于上一次ID生成的时间戳，证明系统时钟被回拨，此时需要做回拨处理</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sequence = (sequence + <span class=\"number\">1</span>) &amp; sequenceMask;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sequence &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    timestamp = lastTimestamp; <span class=\"comment\">//停留在最后一次时间戳上，等待系统时间追上后即完全度过了时钟回拨问题。</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"comment\">//毫秒内序列溢出</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    timestamp = lastTimestamp + <span class=\"number\">1</span>; <span class=\"comment\">//直接进位到下一个毫秒</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">//throw new Exception(string.Format(&quot;Clock moved backwards.  Refusing to generate id for &#123;0&#125; milliseconds&quot;, lastTimestamp - timestamp));</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            lastTimestamp = timestamp; <span class=\"comment\">//上次生成ID的时间截</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//移位并通过或运算拼到一起组成64位的ID</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> id = ((timestamp - twepoch) &lt;&lt; timestampLeftShift) |</span><br><span class=\"line\">                (datacenterId &lt;&lt; datacenterIdShift) |</span><br><span class=\"line\">                (workerId &lt;&lt; workerIdShift) |</span><br><span class=\"line\">                sequence;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!dicContainer.ContainsKey(id))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dicContainer.Add(id, id);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Thread.Sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> NextId();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 解析雪花ID</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">AnalyzeId</span>(<span class=\"params\"><span class=\"built_in\">long</span> Id</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> timestamp = (Id &gt;&gt; timestampLeftShift);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> time = Jan1st1970.AddMilliseconds(timestamp + twepoch);</span><br><span class=\"line\">        sb.Append(time.ToLocalTime().ToString(<span class=\"string\">&quot;yyyy-MM-dd HH:mm:ss:fff&quot;</span>));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> datacenterId = (Id ^ (timestamp &lt;&lt; timestampLeftShift)) &gt;&gt; datacenterIdShift;</span><br><span class=\"line\">        sb.Append(<span class=\"string\">&quot;_&quot;</span> + datacenterId);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> workerId = (Id ^ ((timestamp &lt;&lt; timestampLeftShift) | (datacenterId &lt;&lt; datacenterIdShift))) &gt;&gt; workerIdShift;</span><br><span class=\"line\">        sb.Append(<span class=\"string\">&quot;_&quot;</span> + workerId);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> sequence = Id &amp; sequenceMask;</span><br><span class=\"line\">        sb.Append(<span class=\"string\">&quot;_&quot;</span> + sequence);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sb.ToString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 阻塞到下一个毫秒，直到获得新的时间戳</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;lastTimestamp&quot;&gt;</span>上次生成ID的时间截<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>当前时间戳<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">long</span> <span class=\"title\">GetNextTimestamp</span>(<span class=\"params\"><span class=\"built_in\">long</span> lastTimestamp</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">long</span> timestamp = GetCurrentTimestamp();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (timestamp &lt;= lastTimestamp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            timestamp = GetCurrentTimestamp();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> timestamp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 获取当前时间戳</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">long</span> <span class=\"title\">GetCurrentTimestamp</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"built_in\">long</span>)(DateTime.UtcNow - Jan1st1970).TotalMilliseconds;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DateTime Jan1st1970 = <span class=\"keyword\">new</span> DateTime(<span class=\"number\">1970</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, DateTimeKind.Utc);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"代码解释\"><a class=\"markdownIt-Anchor\" href=\"#代码解释\"></a> 代码解释：</h4>\n<ol>\n<li>\n<p>提供了构造函数，其中datacenterId为当前数据中心Id:一般从1开始。workerId是机器Id,需要注意的是在网络节点当中的服务器，这个Id不能重复</p>\n</li>\n<li>\n<p>代码的 NextId() 方法将会生成一个 18位长的long类型的雪花Id。</p>\n</li>\n<li>\n<p>AnalyzeId() 方法可以简单的解析一个long的数值是不是符合雪花Id的规范。这个解析不精准，只能判断格式大致是否正确具体解析规则可以看代码。</p>\n</li>\n<li>\n<p>有了这个Id，我们通常可以开心的在代码当中以application/json格式返回一个对象，比如</p>\n</li>\n</ol>\n<p><img src=\"/images/4ad7/code.png\" alt=\"代码解释\" /></p>\n<p>输出的结果是</p>\n<p><img src=\"/images/4ad7/result.png\" alt=\"输出结果\" /></p>\n<h5 id=\"font-colorred这是因为-javascript-数值精度是32位如果整数数度超过32位就会被当作浮点数处理-换句话说如果从服务端生成的json某个值是64位整数传到前端javascript再传回服务端不做任何运算都可能出现失真-font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorred这是因为-javascript-数值精度是32位如果整数数度超过32位就会被当作浮点数处理-换句话说如果从服务端生成的json某个值是64位整数传到前端javascript再传回服务端不做任何运算都可能出现失真-font\"></a> <font color='red'>这是因为 JavaScript 数值精度是32位，如果整数数度超过32位，就会被当作浮点数处理。换句话说，如果从服务端生成的JSON，某个值是64位整数，传到前端JavaScript，再传回服务端，不做任何运算，都可能出现失真。</font></h5>\n<p>解决问题的办法：将long作为string类型序列化输出 代码如下：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Stu</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">JsonConverter(typeof(JsonConverterLong))</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">long</span> id &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> age &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JsonConverterLong 类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">JsonConverterLong</span> : <span class=\"title\">JsonConverter</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 是否可以转换</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;objectType&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"built_in\">bool</span> <span class=\"title\">CanConvert</span>(<span class=\"params\">Type objectType</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 读json</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;reader&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;objectType&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;existingValue&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;serializer&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"built_in\">object</span> <span class=\"title\">ReadJson</span>(<span class=\"params\">JsonReader reader, Type objectType, <span class=\"built_in\">object</span> existingValue, JsonSerializer serializer</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((reader.ValueType == <span class=\"literal\">null</span> || reader.ValueType == <span class=\"keyword\">typeof</span>(<span class=\"built_in\">long</span>?)) &amp;&amp; reader.Value == <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">long</span>.TryParse(reader.Value != <span class=\"literal\">null</span> ? reader.Value.ToString() : <span class=\"string\">&quot;&quot;</span>, <span class=\"keyword\">out</span> <span class=\"built_in\">long</span> <span class=\"keyword\">value</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 写json</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;writer&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;value&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=&quot;serializer&quot;&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">WriteJson</span>(<span class=\"params\">JsonWriter writer, <span class=\"built_in\">object</span> <span class=\"keyword\">value</span>, JsonSerializer serializer</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">value</span> == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            writer.WriteValue(<span class=\"keyword\">value</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            writer.WriteValue(<span class=\"keyword\">value</span> + <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre class=\"highlight\"><code class=\"\"></code></pre>"},{"title":"OdinLog 组件","author":"OdinSam","abbrlink":"86b2","date":"2022-07-03T05:39:00.000Z","_content":">自定义简单的一个日志组件。可以存储本地文件，也可以存储到数据库(目前仅支持 mysql 和 sqlServer 数据库)。后期扩展和ELK结合。具体源代码在github可以查看。\n\n<!--more-->\n\n#### 1. 简介\n\n组件可以生成对应日志文件( bin 目录下)，可用于winform、webapi项目。如果存储在本地，以日志级别 Info、Debug、Error生成文件夹，内部以 yyyy-MM-dd 格式生成文件夹。日志文件以数字标识，如果单个日志文件大小超过5M则另生成日志文件。\n\n#### 2. 组件使用\n\n可以使用依赖注入，也可以在配置Config后直接使用\n\n```csharp 依赖注入\nbuilder.Services.AddOdinSingletonOdinLogs(opt=>\n  opt.Config=new LogConfig {\n      LogSaveType=new EnumLogSaveType[]{EnumLogSaveType.All},\n      ConnectionString = \"server=xxxx;Database=xxxx;Uid=xxx;Pwd=xxx;\"});\n```\n\n```csharp 直接配置\nOdinLog.Core.OdinLogs = new OdinLogs(new LogConfig {\n       LogSaveType=new EnumLogSaveType[]{EnumLogSaveType.All},\n       ConnectionString = \"server=xxxx;Database=xxxx;Uid=xxx;Pwd=xxx;\"});)\n```\n\n```csharp 调用\nOdinLogs.Info(new LogInfo(){LogContent = \"log info test\",LogMark=\"log mark\", });\n     OdinLogs.Error(\n         new ExceptionLog(){\n             LogContent = \"log exception test\",\n             LogMark=\"log mark\",\n             LogException = new Exception(\"custom exceptioni\")});\n```\n\n#### 3. 存储表结构\n\n[https://github.com/odinsam/OdinLog/tree/master/OdinLog/doc/DDL/scripts](https://github.com/odinsam/OdinLog/tree/master/OdinLog/doc/DDL/scripts)\n\n#### 4. 文件夹结构、文件内容格式如下：\n\n```text\n-- logs\n\t--Info\n      -- 2022-06-01\n\t\t\t0.txt\n\t\t\t1.txt\n\t--Debug\n      -- 2022-06-01\n\t\t\t0.txt\n\t--Error\n      -- 2022-06-01\n\t\t\t0.txt\n```\n\nInfo、Debug 文件内容格式如下:\n\n```text\n【 LogId 】: 766c769d349d494daf82fca503666d5d \n【 Log Level 】: Info \n【 LogTime 】: 2022-07-03 17:59:44 \n【 LogContent 】:\nlog info test\n****************************************************************************************************\n```\n\nError 文件内容格式如下:\n\n```text\n【 LogId 】: 57c2978db92a44959e613f7a1e733d8b \n【 Log Level 】: Error \n【 LogTime 】: 2022-07-03 18:10:51 \n【 Exception Message 】: custom exceptioni\n【 Exception Info 】: \n{\n    \"ClassName\": \"System.Exception\",\n    \"Message\": \"custom exceptioni\",\n    \"Data\": null,\n    \"InnerException\": null,\n    \"HelpURL\": null,\n    \"StackTraceString\": null,\n    \"RemoteStackTraceString\": null,\n    \"RemoteStackIndex\": 0,\n    \"ExceptionMethod\": null,\n    \"HResult\": -2146233088,\n    \"Source\": null,\n    \"WatsonBuckets\": null\n}\n****************************************************************************************************\n```\n\n\n具体的代码在 [GitHub](https://github.com/odinsam/OdinLog) [![nuget](https://img.shields.io/nuget/v/OdinLog)](https://www.nuget.org/packages/OdinLog)","source":"_posts/OdinLog-组件.md","raw":"title: OdinLog 组件\nauthor: OdinSam\ntags:\n  - .Net Core\n  - Log\ncategories:\n  - .Net Core\nabbrlink: 86b2\ndate: 2022-07-03 13:39:00\n---\n>自定义简单的一个日志组件。可以存储本地文件，也可以存储到数据库(目前仅支持 mysql 和 sqlServer 数据库)。后期扩展和ELK结合。具体源代码在github可以查看。\n\n<!--more-->\n\n#### 1. 简介\n\n组件可以生成对应日志文件( bin 目录下)，可用于winform、webapi项目。如果存储在本地，以日志级别 Info、Debug、Error生成文件夹，内部以 yyyy-MM-dd 格式生成文件夹。日志文件以数字标识，如果单个日志文件大小超过5M则另生成日志文件。\n\n#### 2. 组件使用\n\n可以使用依赖注入，也可以在配置Config后直接使用\n\n```csharp 依赖注入\nbuilder.Services.AddOdinSingletonOdinLogs(opt=>\n  opt.Config=new LogConfig {\n      LogSaveType=new EnumLogSaveType[]{EnumLogSaveType.All},\n      ConnectionString = \"server=xxxx;Database=xxxx;Uid=xxx;Pwd=xxx;\"});\n```\n\n```csharp 直接配置\nOdinLog.Core.OdinLogs = new OdinLogs(new LogConfig {\n       LogSaveType=new EnumLogSaveType[]{EnumLogSaveType.All},\n       ConnectionString = \"server=xxxx;Database=xxxx;Uid=xxx;Pwd=xxx;\"});)\n```\n\n```csharp 调用\nOdinLogs.Info(new LogInfo(){LogContent = \"log info test\",LogMark=\"log mark\", });\n     OdinLogs.Error(\n         new ExceptionLog(){\n             LogContent = \"log exception test\",\n             LogMark=\"log mark\",\n             LogException = new Exception(\"custom exceptioni\")});\n```\n\n#### 3. 存储表结构\n\n[https://github.com/odinsam/OdinLog/tree/master/OdinLog/doc/DDL/scripts](https://github.com/odinsam/OdinLog/tree/master/OdinLog/doc/DDL/scripts)\n\n#### 4. 文件夹结构、文件内容格式如下：\n\n```text\n-- logs\n\t--Info\n      -- 2022-06-01\n\t\t\t0.txt\n\t\t\t1.txt\n\t--Debug\n      -- 2022-06-01\n\t\t\t0.txt\n\t--Error\n      -- 2022-06-01\n\t\t\t0.txt\n```\n\nInfo、Debug 文件内容格式如下:\n\n```text\n【 LogId 】: 766c769d349d494daf82fca503666d5d \n【 Log Level 】: Info \n【 LogTime 】: 2022-07-03 17:59:44 \n【 LogContent 】:\nlog info test\n****************************************************************************************************\n```\n\nError 文件内容格式如下:\n\n```text\n【 LogId 】: 57c2978db92a44959e613f7a1e733d8b \n【 Log Level 】: Error \n【 LogTime 】: 2022-07-03 18:10:51 \n【 Exception Message 】: custom exceptioni\n【 Exception Info 】: \n{\n    \"ClassName\": \"System.Exception\",\n    \"Message\": \"custom exceptioni\",\n    \"Data\": null,\n    \"InnerException\": null,\n    \"HelpURL\": null,\n    \"StackTraceString\": null,\n    \"RemoteStackTraceString\": null,\n    \"RemoteStackIndex\": 0,\n    \"ExceptionMethod\": null,\n    \"HResult\": -2146233088,\n    \"Source\": null,\n    \"WatsonBuckets\": null\n}\n****************************************************************************************************\n```\n\n\n具体的代码在 [GitHub](https://github.com/odinsam/OdinLog) [![nuget](https://img.shields.io/nuget/v/OdinLog)](https://www.nuget.org/packages/OdinLog)","slug":"OdinLog-组件","published":1,"updated":"2023-03-10T05:45:48.559Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza29000u5cs97gwy0cni","content":"<blockquote>\n<p>自定义简单的一个日志组件。可以存储本地文件，也可以存储到数据库(目前仅支持 mysql 和 sqlServer 数据库)。后期扩展和ELK结合。具体源代码在github可以查看。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-简介\"><a class=\"markdownIt-Anchor\" href=\"#1-简介\"></a> 1. 简介</h4>\n<p>组件可以生成对应日志文件( bin 目录下)，可用于winform、webapi项目。如果存储在本地，以日志级别 Info、Debug、Error生成文件夹，内部以 yyyy-MM-dd 格式生成文件夹。日志文件以数字标识，如果单个日志文件大小超过5M则另生成日志文件。</p>\n<h4 id=\"2-组件使用\"><a class=\"markdownIt-Anchor\" href=\"#2-组件使用\"></a> 2. 组件使用</h4>\n<p>可以使用依赖注入，也可以在配置Config后直接使用</p>\n<figure class=\"highlight csharp\"><figcaption><span>依赖注入</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">builder.Services.AddOdinSingletonOdinLogs(opt=&gt;</span><br><span class=\"line\">  opt.Config=<span class=\"keyword\">new</span> LogConfig &#123;</span><br><span class=\"line\">      LogSaveType=<span class=\"keyword\">new</span> EnumLogSaveType[]&#123;EnumLogSaveType.All&#125;,</span><br><span class=\"line\">      ConnectionString = <span class=\"string\">&quot;server=xxxx;Database=xxxx;Uid=xxx;Pwd=xxx;&quot;</span>&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><figcaption><span>直接配置</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OdinLog.Core.OdinLogs = <span class=\"keyword\">new</span> OdinLogs(<span class=\"keyword\">new</span> LogConfig &#123;</span><br><span class=\"line\">       LogSaveType=<span class=\"keyword\">new</span> EnumLogSaveType[]&#123;EnumLogSaveType.All&#125;,</span><br><span class=\"line\">       ConnectionString = <span class=\"string\">&quot;server=xxxx;Database=xxxx;Uid=xxx;Pwd=xxx;&quot;</span>&#125;);)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><figcaption><span>调用</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OdinLogs.Info(<span class=\"keyword\">new</span> LogInfo()&#123;LogContent = <span class=\"string\">&quot;log info test&quot;</span>,LogMark=<span class=\"string\">&quot;log mark&quot;</span>, &#125;);</span><br><span class=\"line\">     OdinLogs.Error(</span><br><span class=\"line\">         <span class=\"keyword\">new</span> ExceptionLog()&#123;</span><br><span class=\"line\">             LogContent = <span class=\"string\">&quot;log exception test&quot;</span>,</span><br><span class=\"line\">             LogMark=<span class=\"string\">&quot;log mark&quot;</span>,</span><br><span class=\"line\">             LogException = <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;custom exceptioni&quot;</span>)&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-存储表结构\"><a class=\"markdownIt-Anchor\" href=\"#3-存储表结构\"></a> 3. 存储表结构</h4>\n<p><a href=\"https://github.com/odinsam/OdinLog/tree/master/OdinLog/doc/DDL/scripts\">https://github.com/odinsam/OdinLog/tree/master/OdinLog/doc/DDL/scripts</a></p>\n<h4 id=\"4-文件夹结构-文件内容格式如下\"><a class=\"markdownIt-Anchor\" href=\"#4-文件夹结构-文件内容格式如下\"></a> 4. 文件夹结构、文件内容格式如下：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- logs</span><br><span class=\"line\">\t--Info</span><br><span class=\"line\">      -- 2022-06-01</span><br><span class=\"line\">\t\t\t0.txt</span><br><span class=\"line\">\t\t\t1.txt</span><br><span class=\"line\">\t--Debug</span><br><span class=\"line\">      -- 2022-06-01</span><br><span class=\"line\">\t\t\t0.txt</span><br><span class=\"line\">\t--Error</span><br><span class=\"line\">      -- 2022-06-01</span><br><span class=\"line\">\t\t\t0.txt</span><br></pre></td></tr></table></figure>\n<p>Info、Debug 文件内容格式如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【 LogId 】: 766c769d349d494daf82fca503666d5d </span><br><span class=\"line\">【 Log Level 】: Info </span><br><span class=\"line\">【 LogTime 】: 2022-07-03 17:59:44 </span><br><span class=\"line\">【 LogContent 】:</span><br><span class=\"line\">log info test</span><br><span class=\"line\">****************************************************************************************************</span><br></pre></td></tr></table></figure>\n<p>Error 文件内容格式如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【 LogId 】: 57c2978db92a44959e613f7a1e733d8b </span><br><span class=\"line\">【 Log Level 】: Error </span><br><span class=\"line\">【 LogTime 】: 2022-07-03 18:10:51 </span><br><span class=\"line\">【 Exception Message 】: custom exceptioni</span><br><span class=\"line\">【 Exception Info 】: </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;ClassName&quot;: &quot;System.Exception&quot;,</span><br><span class=\"line\">    &quot;Message&quot;: &quot;custom exceptioni&quot;,</span><br><span class=\"line\">    &quot;Data&quot;: null,</span><br><span class=\"line\">    &quot;InnerException&quot;: null,</span><br><span class=\"line\">    &quot;HelpURL&quot;: null,</span><br><span class=\"line\">    &quot;StackTraceString&quot;: null,</span><br><span class=\"line\">    &quot;RemoteStackTraceString&quot;: null,</span><br><span class=\"line\">    &quot;RemoteStackIndex&quot;: 0,</span><br><span class=\"line\">    &quot;ExceptionMethod&quot;: null,</span><br><span class=\"line\">    &quot;HResult&quot;: -2146233088,</span><br><span class=\"line\">    &quot;Source&quot;: null,</span><br><span class=\"line\">    &quot;WatsonBuckets&quot;: null</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">****************************************************************************************************</span><br></pre></td></tr></table></figure>\n<p>具体的代码在 <a href=\"https://github.com/odinsam/OdinLog\">GitHub</a> <a href=\"https://www.nuget.org/packages/OdinLog\"><img src=\"https://img.shields.io/nuget/v/OdinLog\" alt=\"nuget\" /></a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>自定义简单的一个日志组件。可以存储本地文件，也可以存储到数据库(目前仅支持 mysql 和 sqlServer 数据库)。后期扩展和ELK结合。具体源代码在github可以查看。</p>\n</blockquote>","more":"<h4 id=\"1-简介\"><a class=\"markdownIt-Anchor\" href=\"#1-简介\"></a> 1. 简介</h4>\n<p>组件可以生成对应日志文件( bin 目录下)，可用于winform、webapi项目。如果存储在本地，以日志级别 Info、Debug、Error生成文件夹，内部以 yyyy-MM-dd 格式生成文件夹。日志文件以数字标识，如果单个日志文件大小超过5M则另生成日志文件。</p>\n<h4 id=\"2-组件使用\"><a class=\"markdownIt-Anchor\" href=\"#2-组件使用\"></a> 2. 组件使用</h4>\n<p>可以使用依赖注入，也可以在配置Config后直接使用</p>\n<figure class=\"highlight csharp\"><figcaption><span>依赖注入</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">builder.Services.AddOdinSingletonOdinLogs(opt=&gt;</span><br><span class=\"line\">  opt.Config=<span class=\"keyword\">new</span> LogConfig &#123;</span><br><span class=\"line\">      LogSaveType=<span class=\"keyword\">new</span> EnumLogSaveType[]&#123;EnumLogSaveType.All&#125;,</span><br><span class=\"line\">      ConnectionString = <span class=\"string\">&quot;server=xxxx;Database=xxxx;Uid=xxx;Pwd=xxx;&quot;</span>&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><figcaption><span>直接配置</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OdinLog.Core.OdinLogs = <span class=\"keyword\">new</span> OdinLogs(<span class=\"keyword\">new</span> LogConfig &#123;</span><br><span class=\"line\">       LogSaveType=<span class=\"keyword\">new</span> EnumLogSaveType[]&#123;EnumLogSaveType.All&#125;,</span><br><span class=\"line\">       ConnectionString = <span class=\"string\">&quot;server=xxxx;Database=xxxx;Uid=xxx;Pwd=xxx;&quot;</span>&#125;);)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><figcaption><span>调用</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OdinLogs.Info(<span class=\"keyword\">new</span> LogInfo()&#123;LogContent = <span class=\"string\">&quot;log info test&quot;</span>,LogMark=<span class=\"string\">&quot;log mark&quot;</span>, &#125;);</span><br><span class=\"line\">     OdinLogs.Error(</span><br><span class=\"line\">         <span class=\"keyword\">new</span> ExceptionLog()&#123;</span><br><span class=\"line\">             LogContent = <span class=\"string\">&quot;log exception test&quot;</span>,</span><br><span class=\"line\">             LogMark=<span class=\"string\">&quot;log mark&quot;</span>,</span><br><span class=\"line\">             LogException = <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;custom exceptioni&quot;</span>)&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-存储表结构\"><a class=\"markdownIt-Anchor\" href=\"#3-存储表结构\"></a> 3. 存储表结构</h4>\n<p><a href=\"https://github.com/odinsam/OdinLog/tree/master/OdinLog/doc/DDL/scripts\">https://github.com/odinsam/OdinLog/tree/master/OdinLog/doc/DDL/scripts</a></p>\n<h4 id=\"4-文件夹结构-文件内容格式如下\"><a class=\"markdownIt-Anchor\" href=\"#4-文件夹结构-文件内容格式如下\"></a> 4. 文件夹结构、文件内容格式如下：</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- logs</span><br><span class=\"line\">\t--Info</span><br><span class=\"line\">      -- 2022-06-01</span><br><span class=\"line\">\t\t\t0.txt</span><br><span class=\"line\">\t\t\t1.txt</span><br><span class=\"line\">\t--Debug</span><br><span class=\"line\">      -- 2022-06-01</span><br><span class=\"line\">\t\t\t0.txt</span><br><span class=\"line\">\t--Error</span><br><span class=\"line\">      -- 2022-06-01</span><br><span class=\"line\">\t\t\t0.txt</span><br></pre></td></tr></table></figure>\n<p>Info、Debug 文件内容格式如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【 LogId 】: 766c769d349d494daf82fca503666d5d </span><br><span class=\"line\">【 Log Level 】: Info </span><br><span class=\"line\">【 LogTime 】: 2022-07-03 17:59:44 </span><br><span class=\"line\">【 LogContent 】:</span><br><span class=\"line\">log info test</span><br><span class=\"line\">****************************************************************************************************</span><br></pre></td></tr></table></figure>\n<p>Error 文件内容格式如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【 LogId 】: 57c2978db92a44959e613f7a1e733d8b </span><br><span class=\"line\">【 Log Level 】: Error </span><br><span class=\"line\">【 LogTime 】: 2022-07-03 18:10:51 </span><br><span class=\"line\">【 Exception Message 】: custom exceptioni</span><br><span class=\"line\">【 Exception Info 】: </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;ClassName&quot;: &quot;System.Exception&quot;,</span><br><span class=\"line\">    &quot;Message&quot;: &quot;custom exceptioni&quot;,</span><br><span class=\"line\">    &quot;Data&quot;: null,</span><br><span class=\"line\">    &quot;InnerException&quot;: null,</span><br><span class=\"line\">    &quot;HelpURL&quot;: null,</span><br><span class=\"line\">    &quot;StackTraceString&quot;: null,</span><br><span class=\"line\">    &quot;RemoteStackTraceString&quot;: null,</span><br><span class=\"line\">    &quot;RemoteStackIndex&quot;: 0,</span><br><span class=\"line\">    &quot;ExceptionMethod&quot;: null,</span><br><span class=\"line\">    &quot;HResult&quot;: -2146233088,</span><br><span class=\"line\">    &quot;Source&quot;: null,</span><br><span class=\"line\">    &quot;WatsonBuckets&quot;: null</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">****************************************************************************************************</span><br></pre></td></tr></table></figure>\n<p>具体的代码在 <a href=\"https://github.com/odinsam/OdinLog\">GitHub</a> <a href=\"https://www.nuget.org/packages/OdinLog\"><img src=\"https://img.shields.io/nuget/v/OdinLog\" alt=\"nuget\" /></a></p>"},{"title":"Serilog封装扩展并写入Mysql","author":"odinsam","abbrlink":"b919","date":"2021-06-06T20:45:00.000Z","_content":"> Serilog是 .NET 中最著名的结构化日志类库。大多数情况下，中小型项目会将日志直接记录在一个对应的文件夹中比如Logs文件夹，并且可以按照日志的等级创建子文件夹比如errror、debug等等，再按照日期创建子文件最后按照日志文件大小上限做日志文件的划分。在一些大型项目中需要将日志写入数据库，文章讲述如何使用Serilog日志类库在mysql数据库中自动创建logs表并将日志写入表中。\n\n<!-- more --> \n \n 1. 封装模型：\n\n\tLogWriteFileModel.cs\n   \n   ```csharp\n   public class LogWriteFileModel\n   {\n       public string FileName { get; set; }\n       public int FileSizeLimitBytes { get; set; } = 1000000;\n       public bool RollOnFileSizeLimit { get; set; } = true;\n       public bool Shared { get; set; } = true;\n       public TimeSpan FlushToDiskInterval { get; set; } = TimeSpan.FromSeconds(1);\n\n   }\n   ```\n   \n   LogWriteToConsoleModel.cs\n   \n   ```csharp\n   public class LogWriteToConsoleModel\n   {\n       public string OutputTemplate { get; set; }\n       public SystemConsoleTheme ConsoleTheme { get; set; } = SystemConsoleTheme.Colored;\n   }\n   ```\n   \n   LogWriteMySqlModel.cs\n   \n   ```csharp\n   public class LogWriteMySqlModel\n   {\n       public string ConnectionString { get; set; }\n   }\n   ```\n\n2. 扩展类\n\n\t安装package Serilog.Sinks.MySQL, Version=4.0.0.0，LoggerConfigurationExtends.cs\n   \n   ```csharp\n   public static class LoggerConfigurationExtends\n    {\n        public static LoggerConfiguration OdinWriteLog(this LoggerConfiguration loggerConfiguration, LogWriteFileModel logWriteFileModel, LogWriteToConsoleModel logWriteToConsole, LogWriteMySqlModel logWriteMySqlModel)\n        {\n            return loggerConfiguration\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Debug, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                )\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Error, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                )\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Fatal, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                )\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Information, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                )\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Warning, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                );\n        }\n        public static LoggerConfiguration OdinWrite(this LoggerSinkConfiguration loggerSinkConfiguration, LogEventLevel logLevel, LogWriteFileModel logWriteFileModel, LogWriteToConsoleModel logWriteToConsole, LogWriteMySqlModel logWriteMySqlModel)\n        {\n            return loggerSinkConfiguration.Logger(fileLogger =>\n            {\n                var config = SerilogHelper.OdinWriteToFile(fileLogger, logLevel, logWriteFileModel);\n                if (logWriteToConsole != null)\n                {\n                    config.WriteTo.Console(\n                        outputTemplate:\n                            string.IsNullOrEmpty(logWriteToConsole.OutputTemplate)\n                            ?\n                            \"{Timestamp:yyyy-MM-dd HH:mm:ss} [{Level}] {Message}{NewLine}{Exception}\"\n                            :\n                            logWriteToConsole.OutputTemplate,\n                        theme: logWriteToConsole.ConsoleTheme\n                    );\n                }\n                if (logWriteMySqlModel != null)\n                    config.WriteTo.MySQL(connectionString: logWriteMySqlModel.ConnectionString);\n            });\n        }\n    }\n   ```\n\n3. 封装类:  SerilogHelper.cs\n\n    ```csharp\n    public class SerilogHelper\n    {\n        public static LoggerConfiguration OdinWriteToFile(LoggerConfiguration fileLogger, LogEventLevel logLevel, LogWriteFileModel logWriteModel)\n        {\n\n            return fileLogger.Filter\n                   .ByIncludingOnly(p => p.Level.Equals(logLevel))\n                   .WriteTo.File(\n                       path:\n                        string.IsNullOrEmpty(logWriteModel.FileName) ?\n                            $\"logs/{DateTime.Now.ToString(\"yyyyMMdd\")}/log-{DateTime.Now.ToString(\"yyyyMMdd\")}-{logLevel.ToString()}.txt\"\n                            :\n                            logWriteModel.FileName,\n                       fileSizeLimitBytes: logWriteModel.FileSizeLimitBytes,\n                       rollOnFileSizeLimit: logWriteModel.RollOnFileSizeLimit,\n                       shared: logWriteModel.Shared,\n                       flushToDiskInterval: logWriteModel.FlushToDiskInterval\n                   );\n        }\n    }\n    ```\n\n4. 使用\n\n    ```csharp\n    #region Log设置\n    Log.Logger = new LoggerConfiguration()\n        // 最小的日志输出级别\n        .MinimumLevel.Information()\n        //.MinimumLevel.Information ()\n        // 日志调用类命名空间如果以 System 开头，覆盖日志输出最小级别为 Information\n        .MinimumLevel.Override(\"System\", LogEventLevel.Information)\n        // 日志调用类命名空间如果以 Microsoft 开头，覆盖日志输出最小级别为 Information\n        .MinimumLevel.Override(\"Microsoft\", LogEventLevel.Information)\n        .OdinWriteLog(\n            new LogWriteFileModel { }, new LogWriteToConsoleModel { }, new LogWriteMySqlModel { ConnectionString = Configuration.GetSection(\"ProjectConfigOptions:DbEntity:ConnectionString\").Value }\n        )\n        .CreateLogger();\n    #endregion\n    ```","source":"_posts/Serilog封装扩展并写入Mysql.md","raw":"title: Serilog封装扩展并写入Mysql\nauthor: odinsam\ntags:\n  - .Net Core\n  - Serilog\n  - Log\ncategories:\n  - .Net Core\nabbrlink: b919\ndate: 2021-06-07 04:45:00\n---\n> Serilog是 .NET 中最著名的结构化日志类库。大多数情况下，中小型项目会将日志直接记录在一个对应的文件夹中比如Logs文件夹，并且可以按照日志的等级创建子文件夹比如errror、debug等等，再按照日期创建子文件最后按照日志文件大小上限做日志文件的划分。在一些大型项目中需要将日志写入数据库，文章讲述如何使用Serilog日志类库在mysql数据库中自动创建logs表并将日志写入表中。\n\n<!-- more --> \n \n 1. 封装模型：\n\n\tLogWriteFileModel.cs\n   \n   ```csharp\n   public class LogWriteFileModel\n   {\n       public string FileName { get; set; }\n       public int FileSizeLimitBytes { get; set; } = 1000000;\n       public bool RollOnFileSizeLimit { get; set; } = true;\n       public bool Shared { get; set; } = true;\n       public TimeSpan FlushToDiskInterval { get; set; } = TimeSpan.FromSeconds(1);\n\n   }\n   ```\n   \n   LogWriteToConsoleModel.cs\n   \n   ```csharp\n   public class LogWriteToConsoleModel\n   {\n       public string OutputTemplate { get; set; }\n       public SystemConsoleTheme ConsoleTheme { get; set; } = SystemConsoleTheme.Colored;\n   }\n   ```\n   \n   LogWriteMySqlModel.cs\n   \n   ```csharp\n   public class LogWriteMySqlModel\n   {\n       public string ConnectionString { get; set; }\n   }\n   ```\n\n2. 扩展类\n\n\t安装package Serilog.Sinks.MySQL, Version=4.0.0.0，LoggerConfigurationExtends.cs\n   \n   ```csharp\n   public static class LoggerConfigurationExtends\n    {\n        public static LoggerConfiguration OdinWriteLog(this LoggerConfiguration loggerConfiguration, LogWriteFileModel logWriteFileModel, LogWriteToConsoleModel logWriteToConsole, LogWriteMySqlModel logWriteMySqlModel)\n        {\n            return loggerConfiguration\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Debug, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                )\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Error, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                )\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Fatal, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                )\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Information, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                )\n                .WriteTo.OdinWrite(\n                    LogEventLevel.Warning, logWriteFileModel, logWriteToConsole, logWriteMySqlModel\n                );\n        }\n        public static LoggerConfiguration OdinWrite(this LoggerSinkConfiguration loggerSinkConfiguration, LogEventLevel logLevel, LogWriteFileModel logWriteFileModel, LogWriteToConsoleModel logWriteToConsole, LogWriteMySqlModel logWriteMySqlModel)\n        {\n            return loggerSinkConfiguration.Logger(fileLogger =>\n            {\n                var config = SerilogHelper.OdinWriteToFile(fileLogger, logLevel, logWriteFileModel);\n                if (logWriteToConsole != null)\n                {\n                    config.WriteTo.Console(\n                        outputTemplate:\n                            string.IsNullOrEmpty(logWriteToConsole.OutputTemplate)\n                            ?\n                            \"{Timestamp:yyyy-MM-dd HH:mm:ss} [{Level}] {Message}{NewLine}{Exception}\"\n                            :\n                            logWriteToConsole.OutputTemplate,\n                        theme: logWriteToConsole.ConsoleTheme\n                    );\n                }\n                if (logWriteMySqlModel != null)\n                    config.WriteTo.MySQL(connectionString: logWriteMySqlModel.ConnectionString);\n            });\n        }\n    }\n   ```\n\n3. 封装类:  SerilogHelper.cs\n\n    ```csharp\n    public class SerilogHelper\n    {\n        public static LoggerConfiguration OdinWriteToFile(LoggerConfiguration fileLogger, LogEventLevel logLevel, LogWriteFileModel logWriteModel)\n        {\n\n            return fileLogger.Filter\n                   .ByIncludingOnly(p => p.Level.Equals(logLevel))\n                   .WriteTo.File(\n                       path:\n                        string.IsNullOrEmpty(logWriteModel.FileName) ?\n                            $\"logs/{DateTime.Now.ToString(\"yyyyMMdd\")}/log-{DateTime.Now.ToString(\"yyyyMMdd\")}-{logLevel.ToString()}.txt\"\n                            :\n                            logWriteModel.FileName,\n                       fileSizeLimitBytes: logWriteModel.FileSizeLimitBytes,\n                       rollOnFileSizeLimit: logWriteModel.RollOnFileSizeLimit,\n                       shared: logWriteModel.Shared,\n                       flushToDiskInterval: logWriteModel.FlushToDiskInterval\n                   );\n        }\n    }\n    ```\n\n4. 使用\n\n    ```csharp\n    #region Log设置\n    Log.Logger = new LoggerConfiguration()\n        // 最小的日志输出级别\n        .MinimumLevel.Information()\n        //.MinimumLevel.Information ()\n        // 日志调用类命名空间如果以 System 开头，覆盖日志输出最小级别为 Information\n        .MinimumLevel.Override(\"System\", LogEventLevel.Information)\n        // 日志调用类命名空间如果以 Microsoft 开头，覆盖日志输出最小级别为 Information\n        .MinimumLevel.Override(\"Microsoft\", LogEventLevel.Information)\n        .OdinWriteLog(\n            new LogWriteFileModel { }, new LogWriteToConsoleModel { }, new LogWriteMySqlModel { ConnectionString = Configuration.GetSection(\"ProjectConfigOptions:DbEntity:ConnectionString\").Value }\n        )\n        .CreateLogger();\n    #endregion\n    ```","slug":"Serilog封装扩展并写入Mysql","published":1,"updated":"2021-06-09T05:36:20.358Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2a000z5cs9bqxp01jw","content":"<blockquote>\n<p>Serilog是 .NET 中最著名的结构化日志类库。大多数情况下，中小型项目会将日志直接记录在一个对应的文件夹中比如Logs文件夹，并且可以按照日志的等级创建子文件夹比如errror、debug等等，再按照日期创建子文件最后按照日志文件大小上限做日志文件的划分。在一些大型项目中需要将日志写入数据库，文章讲述如何使用Serilog日志类库在mysql数据库中自动创建logs表并将日志写入表中。</p>\n</blockquote>\n<span id=\"more\"></span> \n<ol>\n<li>\n<p>封装模型：</p>\n<p>LogWriteFileModel.cs</p>\n</li>\n</ol>\n   <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">LogWriteFileModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> FileName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> FileSizeLimitBytes &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = <span class=\"number\">1000000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> RollOnFileSizeLimit &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> Shared &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TimeSpan FlushToDiskInterval &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = TimeSpan.FromSeconds(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>LogWriteToConsoleModel.cs</p>\n   <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">LogWriteToConsoleModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> OutputTemplate &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SystemConsoleTheme ConsoleTheme &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = SystemConsoleTheme.Colored;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>LogWriteMySqlModel.cs</p>\n   <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">LogWriteMySqlModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> ConnectionString &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>\n<p>扩展类</p>\n<p>安装package Serilog.Sinks.MySQL, Version=4.0.0.0，LoggerConfigurationExtends.cs</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">LoggerConfigurationExtends</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LoggerConfiguration <span class=\"title\">OdinWriteLog</span>(<span class=\"params\"><span class=\"keyword\">this</span> LoggerConfiguration loggerConfiguration, LogWriteFileModel logWriteFileModel, LogWriteToConsoleModel logWriteToConsole, LogWriteMySqlModel logWriteMySqlModel</span>)</span></span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> loggerConfiguration</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Debug, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             )</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Error, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             )</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Fatal, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             )</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Information, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             )</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Warning, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             );</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LoggerConfiguration <span class=\"title\">OdinWrite</span>(<span class=\"params\"><span class=\"keyword\">this</span> LoggerSinkConfiguration loggerSinkConfiguration, LogEventLevel logLevel, LogWriteFileModel logWriteFileModel, LogWriteToConsoleModel logWriteToConsole, LogWriteMySqlModel logWriteMySqlModel</span>)</span></span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> loggerSinkConfiguration.Logger(fileLogger =&gt;</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             <span class=\"keyword\">var</span> config = SerilogHelper.OdinWriteToFile(fileLogger, logLevel, logWriteFileModel);</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (logWriteToConsole != <span class=\"literal\">null</span>)</span><br><span class=\"line\">             &#123;</span><br><span class=\"line\">                 config.WriteTo.Console(</span><br><span class=\"line\">                     outputTemplate:</span><br><span class=\"line\">                         <span class=\"built_in\">string</span>.IsNullOrEmpty(logWriteToConsole.OutputTemplate)</span><br><span class=\"line\">                         ?</span><br><span class=\"line\">                         <span class=\"string\">&quot;&#123;Timestamp:yyyy-MM-dd HH:mm:ss&#125; [&#123;Level&#125;] &#123;Message&#125;&#123;NewLine&#125;&#123;Exception&#125;&quot;</span></span><br><span class=\"line\">                         :</span><br><span class=\"line\">                         logWriteToConsole.OutputTemplate,</span><br><span class=\"line\">                     theme: logWriteToConsole.ConsoleTheme</span><br><span class=\"line\">                 );</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (logWriteMySqlModel != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                 config.WriteTo.MySQL(connectionString: logWriteMySqlModel.ConnectionString);</span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>封装类:  SerilogHelper.cs</p>\n <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SerilogHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LoggerConfiguration <span class=\"title\">OdinWriteToFile</span>(<span class=\"params\">LoggerConfiguration fileLogger, LogEventLevel logLevel, LogWriteFileModel logWriteModel</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> fileLogger.Filter</span><br><span class=\"line\">               .ByIncludingOnly(p =&gt; p.Level.Equals(logLevel))</span><br><span class=\"line\">               .WriteTo.File(</span><br><span class=\"line\">                   path:</span><br><span class=\"line\">                    <span class=\"built_in\">string</span>.IsNullOrEmpty(logWriteModel.FileName) ?</span><br><span class=\"line\">                        <span class=\"string\">$&quot;logs/<span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyyMMdd&quot;</span>)&#125;</span>/log-<span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyyMMdd&quot;</span>)&#125;</span>-<span class=\"subst\">&#123;logLevel.ToString()&#125;</span>.txt&quot;</span></span><br><span class=\"line\">                        :</span><br><span class=\"line\">                        logWriteModel.FileName,</span><br><span class=\"line\">                   fileSizeLimitBytes: logWriteModel.FileSizeLimitBytes,</span><br><span class=\"line\">                   rollOnFileSizeLimit: logWriteModel.RollOnFileSizeLimit,</span><br><span class=\"line\">                   shared: logWriteModel.Shared,</span><br><span class=\"line\">                   flushToDiskInterval: logWriteModel.FlushToDiskInterval</span><br><span class=\"line\">               );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用</p>\n <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">region</span> Log设置</span></span><br><span class=\"line\">Log.Logger = <span class=\"keyword\">new</span> LoggerConfiguration()</span><br><span class=\"line\">    <span class=\"comment\">// 最小的日志输出级别</span></span><br><span class=\"line\">    .MinimumLevel.Information()</span><br><span class=\"line\">    <span class=\"comment\">//.MinimumLevel.Information ()</span></span><br><span class=\"line\">    <span class=\"comment\">// 日志调用类命名空间如果以 System 开头，覆盖日志输出最小级别为 Information</span></span><br><span class=\"line\">    .MinimumLevel.Override(<span class=\"string\">&quot;System&quot;</span>, LogEventLevel.Information)</span><br><span class=\"line\">    <span class=\"comment\">// 日志调用类命名空间如果以 Microsoft 开头，覆盖日志输出最小级别为 Information</span></span><br><span class=\"line\">    .MinimumLevel.Override(<span class=\"string\">&quot;Microsoft&quot;</span>, LogEventLevel.Information)</span><br><span class=\"line\">    .OdinWriteLog(</span><br><span class=\"line\">        <span class=\"keyword\">new</span> LogWriteFileModel &#123; &#125;, <span class=\"keyword\">new</span> LogWriteToConsoleModel &#123; &#125;, <span class=\"keyword\">new</span> LogWriteMySqlModel &#123; ConnectionString = Configuration.GetSection(<span class=\"string\">&quot;ProjectConfigOptions:DbEntity:ConnectionString&quot;</span>).Value &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    .CreateLogger();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endregion</span></span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Serilog是 .NET 中最著名的结构化日志类库。大多数情况下，中小型项目会将日志直接记录在一个对应的文件夹中比如Logs文件夹，并且可以按照日志的等级创建子文件夹比如errror、debug等等，再按照日期创建子文件最后按照日志文件大小上限做日志文件的划分。在一些大型项目中需要将日志写入数据库，文章讲述如何使用Serilog日志类库在mysql数据库中自动创建logs表并将日志写入表中。</p>\n</blockquote>","more":"<ol>\n<li>\n<p>封装模型：</p>\n<p>LogWriteFileModel.cs</p>\n</li>\n</ol>\n   <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">LogWriteFileModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> FileName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> FileSizeLimitBytes &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = <span class=\"number\">1000000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> RollOnFileSizeLimit &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> Shared &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TimeSpan FlushToDiskInterval &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = TimeSpan.FromSeconds(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>LogWriteToConsoleModel.cs</p>\n   <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">LogWriteToConsoleModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> OutputTemplate &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SystemConsoleTheme ConsoleTheme &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; = SystemConsoleTheme.Colored;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>LogWriteMySqlModel.cs</p>\n   <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">LogWriteMySqlModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> ConnectionString &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>\n<p>扩展类</p>\n<p>安装package Serilog.Sinks.MySQL, Version=4.0.0.0，LoggerConfigurationExtends.cs</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">LoggerConfigurationExtends</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LoggerConfiguration <span class=\"title\">OdinWriteLog</span>(<span class=\"params\"><span class=\"keyword\">this</span> LoggerConfiguration loggerConfiguration, LogWriteFileModel logWriteFileModel, LogWriteToConsoleModel logWriteToConsole, LogWriteMySqlModel logWriteMySqlModel</span>)</span></span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> loggerConfiguration</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Debug, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             )</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Error, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             )</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Fatal, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             )</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Information, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             )</span><br><span class=\"line\">             .WriteTo.OdinWrite(</span><br><span class=\"line\">                 LogEventLevel.Warning, logWriteFileModel, logWriteToConsole, logWriteMySqlModel</span><br><span class=\"line\">             );</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LoggerConfiguration <span class=\"title\">OdinWrite</span>(<span class=\"params\"><span class=\"keyword\">this</span> LoggerSinkConfiguration loggerSinkConfiguration, LogEventLevel logLevel, LogWriteFileModel logWriteFileModel, LogWriteToConsoleModel logWriteToConsole, LogWriteMySqlModel logWriteMySqlModel</span>)</span></span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> loggerSinkConfiguration.Logger(fileLogger =&gt;</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             <span class=\"keyword\">var</span> config = SerilogHelper.OdinWriteToFile(fileLogger, logLevel, logWriteFileModel);</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (logWriteToConsole != <span class=\"literal\">null</span>)</span><br><span class=\"line\">             &#123;</span><br><span class=\"line\">                 config.WriteTo.Console(</span><br><span class=\"line\">                     outputTemplate:</span><br><span class=\"line\">                         <span class=\"built_in\">string</span>.IsNullOrEmpty(logWriteToConsole.OutputTemplate)</span><br><span class=\"line\">                         ?</span><br><span class=\"line\">                         <span class=\"string\">&quot;&#123;Timestamp:yyyy-MM-dd HH:mm:ss&#125; [&#123;Level&#125;] &#123;Message&#125;&#123;NewLine&#125;&#123;Exception&#125;&quot;</span></span><br><span class=\"line\">                         :</span><br><span class=\"line\">                         logWriteToConsole.OutputTemplate,</span><br><span class=\"line\">                     theme: logWriteToConsole.ConsoleTheme</span><br><span class=\"line\">                 );</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (logWriteMySqlModel != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                 config.WriteTo.MySQL(connectionString: logWriteMySqlModel.ConnectionString);</span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>封装类:  SerilogHelper.cs</p>\n <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SerilogHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LoggerConfiguration <span class=\"title\">OdinWriteToFile</span>(<span class=\"params\">LoggerConfiguration fileLogger, LogEventLevel logLevel, LogWriteFileModel logWriteModel</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> fileLogger.Filter</span><br><span class=\"line\">               .ByIncludingOnly(p =&gt; p.Level.Equals(logLevel))</span><br><span class=\"line\">               .WriteTo.File(</span><br><span class=\"line\">                   path:</span><br><span class=\"line\">                    <span class=\"built_in\">string</span>.IsNullOrEmpty(logWriteModel.FileName) ?</span><br><span class=\"line\">                        <span class=\"string\">$&quot;logs/<span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyyMMdd&quot;</span>)&#125;</span>/log-<span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyyMMdd&quot;</span>)&#125;</span>-<span class=\"subst\">&#123;logLevel.ToString()&#125;</span>.txt&quot;</span></span><br><span class=\"line\">                        :</span><br><span class=\"line\">                        logWriteModel.FileName,</span><br><span class=\"line\">                   fileSizeLimitBytes: logWriteModel.FileSizeLimitBytes,</span><br><span class=\"line\">                   rollOnFileSizeLimit: logWriteModel.RollOnFileSizeLimit,</span><br><span class=\"line\">                   shared: logWriteModel.Shared,</span><br><span class=\"line\">                   flushToDiskInterval: logWriteModel.FlushToDiskInterval</span><br><span class=\"line\">               );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用</p>\n <figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">region</span> Log设置</span></span><br><span class=\"line\">Log.Logger = <span class=\"keyword\">new</span> LoggerConfiguration()</span><br><span class=\"line\">    <span class=\"comment\">// 最小的日志输出级别</span></span><br><span class=\"line\">    .MinimumLevel.Information()</span><br><span class=\"line\">    <span class=\"comment\">//.MinimumLevel.Information ()</span></span><br><span class=\"line\">    <span class=\"comment\">// 日志调用类命名空间如果以 System 开头，覆盖日志输出最小级别为 Information</span></span><br><span class=\"line\">    .MinimumLevel.Override(<span class=\"string\">&quot;System&quot;</span>, LogEventLevel.Information)</span><br><span class=\"line\">    <span class=\"comment\">// 日志调用类命名空间如果以 Microsoft 开头，覆盖日志输出最小级别为 Information</span></span><br><span class=\"line\">    .MinimumLevel.Override(<span class=\"string\">&quot;Microsoft&quot;</span>, LogEventLevel.Information)</span><br><span class=\"line\">    .OdinWriteLog(</span><br><span class=\"line\">        <span class=\"keyword\">new</span> LogWriteFileModel &#123; &#125;, <span class=\"keyword\">new</span> LogWriteToConsoleModel &#123; &#125;, <span class=\"keyword\">new</span> LogWriteMySqlModel &#123; ConnectionString = Configuration.GetSection(<span class=\"string\">&quot;ProjectConfigOptions:DbEntity:ConnectionString&quot;</span>).Value &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    .CreateLogger();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endregion</span></span></span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"Vue2.0 - 01. hello vue","author":"OdinSam","abbrlink":"1d50","date":"2022-10-15T05:58:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. 需要创建vue实例，且传入一个配置对象\n2. root容器中的代码需要符合html规范，只是加入了vue语法\n3. root容器立的代码被称为 vue 模板\n4. 插值语法 {{ $1 }} 中的内容需要是 js 表达式，且内容可以直接读取到配置的data中所有的属性\n5. vue实例和容器需要时一一对应\n6. 一旦 data 中的数据发生变化，页面会自动更新\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>01.hello案例</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <!--\n            1.  需要创建vue实例，且传入一个配置对象 \n            2.  root容器中的代码需要符合html规范，只是加入了vue语法\n            3.  root容器立的代码被称为 vue 模板\n            4.  插值语法 {{ $1 }} 中的内容需要是 js 表达式，且内容可以直接读取到配置的data中所有的属性\n            5.  vue实例和容器需要时一一对应\n            6.  一旦 data 中的数据发生变化，页面会自动更新\n        -->\n        <div id=\"root\">\n            <h1>hello vue</h1>\n            <h2>{{name}}</h2>\n            <!--当前语法为 vue 的插值语法-->\n            <h2>{{age}}</h2>\n        </div>\n    </body>\n    <script>\n        //阻止 vue 在启动时生成生产提示\n        Vue.config.productionTip = false;\n        //创建vue实例\n        const vm = new Vue({\n            //指定当前vue实例为那个容器服务， css选择器选择对应容器\n            el: '#root',\n            //定义对应的数据，可以在对应的容器 el 中使用\n            data: {\n                name: 'odinsam',\n                age: 20\n            }\n        });\n    </script>\n</html>\n\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-01-hello-vue.md","raw":"---\ntitle: Vue2.0 - 01. hello vue\nauthor: OdinSam\ntags:\n  - vue\n  - 插值语法\ncategories:\n  - 前端\n  - vue2\nabbrlink: 1d50\ndate: 2022-10-15 13:58:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. 需要创建vue实例，且传入一个配置对象\n2. root容器中的代码需要符合html规范，只是加入了vue语法\n3. root容器立的代码被称为 vue 模板\n4. 插值语法 {{ $1 }} 中的内容需要是 js 表达式，且内容可以直接读取到配置的data中所有的属性\n5. vue实例和容器需要时一一对应\n6. 一旦 data 中的数据发生变化，页面会自动更新\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>01.hello案例</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <!--\n            1.  需要创建vue实例，且传入一个配置对象 \n            2.  root容器中的代码需要符合html规范，只是加入了vue语法\n            3.  root容器立的代码被称为 vue 模板\n            4.  插值语法 {{ $1 }} 中的内容需要是 js 表达式，且内容可以直接读取到配置的data中所有的属性\n            5.  vue实例和容器需要时一一对应\n            6.  一旦 data 中的数据发生变化，页面会自动更新\n        -->\n        <div id=\"root\">\n            <h1>hello vue</h1>\n            <h2>{{name}}</h2>\n            <!--当前语法为 vue 的插值语法-->\n            <h2>{{age}}</h2>\n        </div>\n    </body>\n    <script>\n        //阻止 vue 在启动时生成生产提示\n        Vue.config.productionTip = false;\n        //创建vue实例\n        const vm = new Vue({\n            //指定当前vue实例为那个容器服务， css选择器选择对应容器\n            el: '#root',\n            //定义对应的数据，可以在对应的容器 el 中使用\n            data: {\n                name: 'odinsam',\n                age: 20\n            }\n        });\n    </script>\n</html>\n\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-01-hello-vue","published":1,"updated":"2023-03-10T06:01:10.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2b00125cs95ooq8s0u","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>需要创建vue实例，且传入一个配置对象</li>\n<li>root容器中的代码需要符合html规范，只是加入了vue语法</li>\n<li>root容器立的代码被称为 vue 模板</li>\n<li>插值语法  中的内容需要是 js 表达式，且内容可以直接读取到配置的data中所有的属性</li>\n<li>vue实例和容器需要时一一对应</li>\n<li>一旦 data 中的数据发生变化，页面会自动更新</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>01.hello案例<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1.  需要创建vue实例，且传入一个配置对象 </span></span><br><span class=\"line\"><span class=\"comment\">            2.  root容器中的代码需要符合html规范，只是加入了vue语法</span></span><br><span class=\"line\"><span class=\"comment\">            3.  root容器立的代码被称为 vue 模板</span></span><br><span class=\"line\"><span class=\"comment\">            4.  插值语法 &#123;&#123; $1 &#125;&#125; 中的内容需要是 js 表达式，且内容可以直接读取到配置的data中所有的属性</span></span><br><span class=\"line\"><span class=\"comment\">            5.  vue实例和容器需要时一一对应</span></span><br><span class=\"line\"><span class=\"comment\">            6.  一旦 data 中的数据发生变化，页面会自动更新</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>hello vue<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--当前语法为 vue 的插值语法--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;age&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//阻止 vue 在启动时生成生产提示</span></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//创建vue实例</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//指定当前vue实例为那个容器服务， css选择器选择对应容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//定义对应的数据，可以在对应的容器 el 中使用</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">age</span>: <span class=\"number\">20</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>需要创建vue实例，且传入一个配置对象</li>\n<li>root容器中的代码需要符合html规范，只是加入了vue语法</li>\n<li>root容器立的代码被称为 vue 模板</li>\n<li>插值语法  中的内容需要是 js 表达式，且内容可以直接读取到配置的data中所有的属性</li>\n<li>vue实例和容器需要时一一对应</li>\n<li>一旦 data 中的数据发生变化，页面会自动更新</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>01.hello案例<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1.  需要创建vue实例，且传入一个配置对象 </span></span><br><span class=\"line\"><span class=\"comment\">            2.  root容器中的代码需要符合html规范，只是加入了vue语法</span></span><br><span class=\"line\"><span class=\"comment\">            3.  root容器立的代码被称为 vue 模板</span></span><br><span class=\"line\"><span class=\"comment\">            4.  插值语法 &#123;&#123; $1 &#125;&#125; 中的内容需要是 js 表达式，且内容可以直接读取到配置的data中所有的属性</span></span><br><span class=\"line\"><span class=\"comment\">            5.  vue实例和容器需要时一一对应</span></span><br><span class=\"line\"><span class=\"comment\">            6.  一旦 data 中的数据发生变化，页面会自动更新</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>hello vue<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--当前语法为 vue 的插值语法--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;age&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//阻止 vue 在启动时生成生产提示</span></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//创建vue实例</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//指定当前vue实例为那个容器服务， css选择器选择对应容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//定义对应的数据，可以在对应的容器 el 中使用</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">age</span>: <span class=\"number\">20</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 02. 模板语法","author":"OdinSam","abbrlink":"1723","date":"2022-10-15T06:02:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n模板语法有插值语法和指令语法\n指令语法常用语解析标签 包括标签属性、标签内容、标签事件\nv-bind绑定\n\n1. 将 “”中的内容即 url 当做js表达式， url在data中找到对应的链接，所以绑定在a标签的href属性上\n2. v-bind 可以简写为 :\n3. v-bind 仅可以绑定数据，单向数据绑定（从data中获取数据绑定到页面中），页面中的数据发生变化，无法修改data中的内容\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>02.模板语法</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <!--模板语法有插值语法和指令语法-->\n        <div id=\"root\">\n            <!-- 插值语法一般用于显示标签的内容 -->\n            <h1>插值语法: {{title}}</h1>\n            <h2>指令语法</h2>\n            <!--\n                指令语法常用语解析标签 包括标签属性、标签内容、标签事件\n                v-bind绑定\n                1. 将 “”中的内容即 url 当做js表达式， url在data中找到对应的链接，所以绑定在a标签的href属性上\n                2. v-bind 可以简写为 : \n                3. v-bind 仅可以绑定数据，单向数据绑定（从data中获取数据绑定到页面中），页面中的数据发生变化，无法修改data中的内容\n            -->\n            <a v-bind:href=\"url\">odinsam 的博客</a>\n            <br />\n            <a :href=\"Date.now()\">当前时间</a>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root',\n            data: {\n                title: 'hello vue',\n                url: 'http://www.odinsam.com'\n            }\n        });\n    </script>\n</html>\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-02-模板语法.md","raw":"title: Vue2.0 - 02. 模板语法\nauthor: OdinSam\ntags:\n  - 插值语法\n  - v-bind\n  - v-model\n  - 模板语法\n  - vue2\n  - 指令语法\ncategories:\n  - 前端\n  - vue2\nabbrlink: '1723'\ndate: 2022-10-15 14:02:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n模板语法有插值语法和指令语法\n指令语法常用语解析标签 包括标签属性、标签内容、标签事件\nv-bind绑定\n\n1. 将 “”中的内容即 url 当做js表达式， url在data中找到对应的链接，所以绑定在a标签的href属性上\n2. v-bind 可以简写为 :\n3. v-bind 仅可以绑定数据，单向数据绑定（从data中获取数据绑定到页面中），页面中的数据发生变化，无法修改data中的内容\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>02.模板语法</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <!--模板语法有插值语法和指令语法-->\n        <div id=\"root\">\n            <!-- 插值语法一般用于显示标签的内容 -->\n            <h1>插值语法: {{title}}</h1>\n            <h2>指令语法</h2>\n            <!--\n                指令语法常用语解析标签 包括标签属性、标签内容、标签事件\n                v-bind绑定\n                1. 将 “”中的内容即 url 当做js表达式， url在data中找到对应的链接，所以绑定在a标签的href属性上\n                2. v-bind 可以简写为 : \n                3. v-bind 仅可以绑定数据，单向数据绑定（从data中获取数据绑定到页面中），页面中的数据发生变化，无法修改data中的内容\n            -->\n            <a v-bind:href=\"url\">odinsam 的博客</a>\n            <br />\n            <a :href=\"Date.now()\">当前时间</a>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root',\n            data: {\n                title: 'hello vue',\n                url: 'http://www.odinsam.com'\n            }\n        });\n    </script>\n</html>\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-02-模板语法","published":1,"updated":"2023-03-10T06:04:40.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2c00155cs9cugscyn5","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<p>模板语法有插值语法和指令语法<br />\n指令语法常用语解析标签 包括标签属性、标签内容、标签事件<br />\nv-bind绑定</p>\n<ol>\n<li>将 “”中的内容即 url 当做js表达式， url在data中找到对应的链接，所以绑定在a标签的href属性上</li>\n<li>v-bind 可以简写为 :</li>\n<li>v-bind 仅可以绑定数据，单向数据绑定（从data中获取数据绑定到页面中），页面中的数据发生变化，无法修改data中的内容</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>02.模板语法<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--模板语法有插值语法和指令语法--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 插值语法一般用于显示标签的内容 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>插值语法: &#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>指令语法<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                指令语法常用语解析标签 包括标签属性、标签内容、标签事件</span></span><br><span class=\"line\"><span class=\"comment\">                v-bind绑定</span></span><br><span class=\"line\"><span class=\"comment\">                1. 将 “”中的内容即 url 当做js表达式， url在data中找到对应的链接，所以绑定在a标签的href属性上</span></span><br><span class=\"line\"><span class=\"comment\">                2. v-bind 可以简写为 : </span></span><br><span class=\"line\"><span class=\"comment\">                3. v-bind 仅可以绑定数据，单向数据绑定（从data中获取数据绑定到页面中），页面中的数据发生变化，无法修改data中的内容</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>odinsam 的博客<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">&quot;Date.now()&quot;</span>&gt;</span>当前时间<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;hello vue&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://www.odinsam.com&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<p>模板语法有插值语法和指令语法<br />\n指令语法常用语解析标签 包括标签属性、标签内容、标签事件<br />\nv-bind绑定</p>\n<ol>\n<li>将 “”中的内容即 url 当做js表达式， url在data中找到对应的链接，所以绑定在a标签的href属性上</li>\n<li>v-bind 可以简写为 :</li>\n<li>v-bind 仅可以绑定数据，单向数据绑定（从data中获取数据绑定到页面中），页面中的数据发生变化，无法修改data中的内容</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>02.模板语法<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--模板语法有插值语法和指令语法--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 插值语法一般用于显示标签的内容 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>插值语法: &#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>指令语法<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                指令语法常用语解析标签 包括标签属性、标签内容、标签事件</span></span><br><span class=\"line\"><span class=\"comment\">                v-bind绑定</span></span><br><span class=\"line\"><span class=\"comment\">                1. 将 “”中的内容即 url 当做js表达式， url在data中找到对应的链接，所以绑定在a标签的href属性上</span></span><br><span class=\"line\"><span class=\"comment\">                2. v-bind 可以简写为 : </span></span><br><span class=\"line\"><span class=\"comment\">                3. v-bind 仅可以绑定数据，单向数据绑定（从data中获取数据绑定到页面中），页面中的数据发生变化，无法修改data中的内容</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>odinsam 的博客<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">&quot;Date.now()&quot;</span>&gt;</span>当前时间<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;hello vue&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://www.odinsam.com&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 03. 数据绑定","author":"OdinSam","abbrlink":"1ef3","date":"2022-10-15T06:05:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n#### vue有单向数据绑定和双向数据绑定两种\n\n1. 单向绑定 v-bind 数据只能从data流向页面\n2. 双向绑定 v-model 数据不仅可以从data流向页面，当页面发生改变同样可以修改data的内容\n3. 双向绑定一般都应用在表单元素 如 input select 等\n4. v-model:value 可以简写为 v-model 因为 v-model默认收集的就是valuede值\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>03.数据绑定</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <!--\n            vue有单向数据绑定和双向数据绑定两种\n            1. 单向绑定 v-bind 数据只能从data流向页面\n            2. 双向绑定 v-model 数据不仅可以从data流向页面，当页面发生改变同样可以修改data的内容\n            3. 双向绑定一般都应用在表单元素 如 input select 等\n            4. v-model:value 可以简写为 v-model 因为 v-model默认收集的就是valuede值\n        -->\n        <div id=\"root\">\n            <h2>单向数据绑定 : v-bind 的简写</h2>\n            <input type=\"text\" :value=\"title\" />\n            <h2>双向数据绑定 v-model</h2>\n            <input type=\"text\" v-model:value=\"title\" />\n            <!--\n                如下代码是错误的： [Vue warn]: Failed to resolve directive: modle\n            -->\n            <h2 v-modle:value=\"title\"></h2>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root',\n            data: {\n                title: 'hello vue',\n                url: 'http://www.odinsam.com'\n            }\n        });\n    </script>\n</html>\n```\n\n![演示效果](/images/1ef3/03.databind.gif)\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-03-数据绑定.md","raw":"title: Vue2.0 - 03. 数据绑定\nauthor: OdinSam\ntags:\n  - v-bind\n  - v-model\n  - 数据绑定\n  - 单向绑定\n  - 双向绑定\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: 1ef3\ndate: 2022-10-15 14:05:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n#### vue有单向数据绑定和双向数据绑定两种\n\n1. 单向绑定 v-bind 数据只能从data流向页面\n2. 双向绑定 v-model 数据不仅可以从data流向页面，当页面发生改变同样可以修改data的内容\n3. 双向绑定一般都应用在表单元素 如 input select 等\n4. v-model:value 可以简写为 v-model 因为 v-model默认收集的就是valuede值\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>03.数据绑定</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <!--\n            vue有单向数据绑定和双向数据绑定两种\n            1. 单向绑定 v-bind 数据只能从data流向页面\n            2. 双向绑定 v-model 数据不仅可以从data流向页面，当页面发生改变同样可以修改data的内容\n            3. 双向绑定一般都应用在表单元素 如 input select 等\n            4. v-model:value 可以简写为 v-model 因为 v-model默认收集的就是valuede值\n        -->\n        <div id=\"root\">\n            <h2>单向数据绑定 : v-bind 的简写</h2>\n            <input type=\"text\" :value=\"title\" />\n            <h2>双向数据绑定 v-model</h2>\n            <input type=\"text\" v-model:value=\"title\" />\n            <!--\n                如下代码是错误的： [Vue warn]: Failed to resolve directive: modle\n            -->\n            <h2 v-modle:value=\"title\"></h2>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root',\n            data: {\n                title: 'hello vue',\n                url: 'http://www.odinsam.com'\n            }\n        });\n    </script>\n</html>\n```\n\n![演示效果](/images/1ef3/03.databind.gif)\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-03-数据绑定","published":1,"updated":"2023-03-10T06:09:48.103Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2d00195cs91nj7ez2p","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"vue有单向数据绑定和双向数据绑定两种\"><a class=\"markdownIt-Anchor\" href=\"#vue有单向数据绑定和双向数据绑定两种\"></a> vue有单向数据绑定和双向数据绑定两种</h4>\n<ol>\n<li>单向绑定 v-bind 数据只能从data流向页面</li>\n<li>双向绑定 v-model 数据不仅可以从data流向页面，当页面发生改变同样可以修改data的内容</li>\n<li>双向绑定一般都应用在表单元素 如 input select 等</li>\n<li>v-model:value 可以简写为 v-model 因为 v-model默认收集的就是valuede值</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>03.数据绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            vue有单向数据绑定和双向数据绑定两种</span></span><br><span class=\"line\"><span class=\"comment\">            1. 单向绑定 v-bind 数据只能从data流向页面</span></span><br><span class=\"line\"><span class=\"comment\">            2. 双向绑定 v-model 数据不仅可以从data流向页面，当页面发生改变同样可以修改data的内容</span></span><br><span class=\"line\"><span class=\"comment\">            3. 双向绑定一般都应用在表单元素 如 input select 等</span></span><br><span class=\"line\"><span class=\"comment\">            4. v-model:value 可以简写为 v-model 因为 v-model默认收集的就是valuede值</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>单向数据绑定 : v-bind 的简写<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">:value</span>=<span class=\"string\">&quot;title&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>双向数据绑定 v-model<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model:value</span>=<span class=\"string\">&quot;title&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                如下代码是错误的： [Vue warn]: Failed to resolve directive: modle</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">v-modle:value</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;hello vue&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://www.odinsam.com&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/1ef3/03.databind.gif\" alt=\"演示效果\" /></p>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<h4 id=\"vue有单向数据绑定和双向数据绑定两种\"><a class=\"markdownIt-Anchor\" href=\"#vue有单向数据绑定和双向数据绑定两种\"></a> vue有单向数据绑定和双向数据绑定两种</h4>\n<ol>\n<li>单向绑定 v-bind 数据只能从data流向页面</li>\n<li>双向绑定 v-model 数据不仅可以从data流向页面，当页面发生改变同样可以修改data的内容</li>\n<li>双向绑定一般都应用在表单元素 如 input select 等</li>\n<li>v-model:value 可以简写为 v-model 因为 v-model默认收集的就是valuede值</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>03.数据绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            vue有单向数据绑定和双向数据绑定两种</span></span><br><span class=\"line\"><span class=\"comment\">            1. 单向绑定 v-bind 数据只能从data流向页面</span></span><br><span class=\"line\"><span class=\"comment\">            2. 双向绑定 v-model 数据不仅可以从data流向页面，当页面发生改变同样可以修改data的内容</span></span><br><span class=\"line\"><span class=\"comment\">            3. 双向绑定一般都应用在表单元素 如 input select 等</span></span><br><span class=\"line\"><span class=\"comment\">            4. v-model:value 可以简写为 v-model 因为 v-model默认收集的就是valuede值</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>单向数据绑定 : v-bind 的简写<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">:value</span>=<span class=\"string\">&quot;title&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>双向数据绑定 v-model<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model:value</span>=<span class=\"string\">&quot;title&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                如下代码是错误的： [Vue warn]: Failed to resolve directive: modle</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">v-modle:value</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;hello vue&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://www.odinsam.com&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/1ef3/03.databind.gif\" alt=\"演示效果\" /></p>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 04. el与data的两种写法","author":"OdinSam","abbrlink":"3899","date":"2022-10-15T06:10:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\nel 与 data 有两种写法\nel 的两种写法:\n\n1. 在new vue({ el:'#root' }) 时同时指定el的容器 \n2. 在创建vue后 通过实例对象指定el的值  vm.$mount('#root')\ndata 的两种写法\n\n1. 通过对象的形式 data:{ title:'hello vue' }\n2. 使用函数的形式 data() { return { title:'hello vue'  } }\n后期使用函数式组件时，data必须使用函数形式\n\n#### <font color='red'>重点注意:</font>\n\n<font color='red'>由vue管理的函数(例如 data 的函数式写法)，一定不能写箭头函数，否则this指向的实例就会是window对象</font>\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>04.el与data的两种写法</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <div id=\"root\">\n            <h1>通过vue的实例对象挂载数据:{{title}}</h1>\n        </div>\n    </body>\n    <script>\n        /*\n            el 与 data 有两种写法\n            el 的两种写法:\n                1. 在new vue({ el:'#root' }) 时同时指定el的容器 \n                2. 在创建vue后 通过实例对象指定el的值  vm.$mount('#root')\n\n            data 的两种写法\n                1. 通过对象的形式 data:{ title:'hello vue' }\n                2. 使用函数的形式 data() { return { title:'hello vue'  } }\n            后期使用函数式组件时，data必须使用函数形式\n\n            重点注意: 由vue管理的函数(例如 data 的函数式写法)，一定不能写箭头函数，否则this指向的实例就会是window对象\n        */\n        Vue.config.productionTip = false;\n        // 写法1\n        const vm = new Vue({\n            // el: '#root',    // 直接指定vue对应的容器\n            // 使用data对象形式\n            // data: {\n            //     title: 'hello vue',\n            //     url: 'http://www.odinsam.com'\n            // }\n            // 使用函数式\n            data() {\n                return {\n                    title: 'hello vue !!'\n                };\n            }\n        });\n        // 写法2\n        vm.$mount('#root');\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-04-el与data的两种写法.md","raw":"title: Vue2.0 - 04. el与data的两种写法\nauthor: OdinSam\ntags:\n  - el\n  - data\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: '3899'\ndate: 2022-10-15 14:10:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\nel 与 data 有两种写法\nel 的两种写法:\n\n1. 在new vue({ el:'#root' }) 时同时指定el的容器 \n2. 在创建vue后 通过实例对象指定el的值  vm.$mount('#root')\ndata 的两种写法\n\n1. 通过对象的形式 data:{ title:'hello vue' }\n2. 使用函数的形式 data() { return { title:'hello vue'  } }\n后期使用函数式组件时，data必须使用函数形式\n\n#### <font color='red'>重点注意:</font>\n\n<font color='red'>由vue管理的函数(例如 data 的函数式写法)，一定不能写箭头函数，否则this指向的实例就会是window对象</font>\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>04.el与data的两种写法</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <div id=\"root\">\n            <h1>通过vue的实例对象挂载数据:{{title}}</h1>\n        </div>\n    </body>\n    <script>\n        /*\n            el 与 data 有两种写法\n            el 的两种写法:\n                1. 在new vue({ el:'#root' }) 时同时指定el的容器 \n                2. 在创建vue后 通过实例对象指定el的值  vm.$mount('#root')\n\n            data 的两种写法\n                1. 通过对象的形式 data:{ title:'hello vue' }\n                2. 使用函数的形式 data() { return { title:'hello vue'  } }\n            后期使用函数式组件时，data必须使用函数形式\n\n            重点注意: 由vue管理的函数(例如 data 的函数式写法)，一定不能写箭头函数，否则this指向的实例就会是window对象\n        */\n        Vue.config.productionTip = false;\n        // 写法1\n        const vm = new Vue({\n            // el: '#root',    // 直接指定vue对应的容器\n            // 使用data对象形式\n            // data: {\n            //     title: 'hello vue',\n            //     url: 'http://www.odinsam.com'\n            // }\n            // 使用函数式\n            data() {\n                return {\n                    title: 'hello vue !!'\n                };\n            }\n        });\n        // 写法2\n        vm.$mount('#root');\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-04-el与data的两种写法","published":1,"updated":"2023-03-10T06:12:19.533Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2e001d5cs99sj4h4s0","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<p>el 与 data 有两种写法<br />\nel 的两种写法:</p>\n<ol>\n<li>\n<p>在new vue({ el:’#root’ }) 时同时指定el的容器</p>\n</li>\n<li>\n<p>在创建vue后 通过实例对象指定el的值  vm.$mount(’#root’)<br />\ndata 的两种写法</p>\n</li>\n<li>\n<p>通过对象的形式 data:{ title:‘hello vue’ }</p>\n</li>\n<li>\n<p>使用函数的形式 data() { return { title:‘hello vue’  } }<br />\n后期使用函数式组件时，data必须使用函数形式</p>\n</li>\n</ol>\n<h4 id=\"font-colorred重点注意font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorred重点注意font\"></a> <font color='red'>重点注意:</font></h4>\n<p><font color='red'>由vue管理的函数(例如 data 的函数式写法)，一定不能写箭头函数，否则this指向的实例就会是window对象</font></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>04.el与data的两种写法<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>通过vue的实例对象挂载数据:&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            el 与 data 有两种写法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            el 的两种写法:</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                1. 在new vue(&#123; el:&#x27;#root&#x27; &#125;) 时同时指定el的容器 </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                2. 在创建vue后 通过实例对象指定el的值  vm.$mount(&#x27;#root&#x27;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            data 的两种写法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                1. 通过对象的形式 data:&#123; title:&#x27;hello vue&#x27; &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                2. 使用函数的形式 data() &#123; return &#123; title:&#x27;hello vue&#x27;  &#125; &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            后期使用函数式组件时，data必须使用函数形式</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            重点注意: 由vue管理的函数(例如 data 的函数式写法)，一定不能写箭头函数，否则this指向的实例就会是window对象</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        */</span></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 写法1</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// el: &#x27;#root&#x27;,    // 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 使用data对象形式</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// data: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//     title: &#x27;hello vue&#x27;,</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//     url: &#x27;http://www.odinsam.com&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 使用函数式</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;hello vue !!&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 写法2</span></span></span><br><span class=\"line\"><span class=\"javascript\">        vm.$mount(<span class=\"string\">&#x27;#root&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<p>el 与 data 有两种写法<br />\nel 的两种写法:</p>\n<ol>\n<li>\n<p>在new vue({ el:’#root’ }) 时同时指定el的容器</p>\n</li>\n<li>\n<p>在创建vue后 通过实例对象指定el的值  vm.$mount(’#root’)<br />\ndata 的两种写法</p>\n</li>\n<li>\n<p>通过对象的形式 data:{ title:‘hello vue’ }</p>\n</li>\n<li>\n<p>使用函数的形式 data() { return { title:‘hello vue’  } }<br />\n后期使用函数式组件时，data必须使用函数形式</p>\n</li>\n</ol>\n<h4 id=\"font-colorred重点注意font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorred重点注意font\"></a> <font color='red'>重点注意:</font></h4>\n<p><font color='red'>由vue管理的函数(例如 data 的函数式写法)，一定不能写箭头函数，否则this指向的实例就会是window对象</font></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>04.el与data的两种写法<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>通过vue的实例对象挂载数据:&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            el 与 data 有两种写法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            el 的两种写法:</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                1. 在new vue(&#123; el:&#x27;#root&#x27; &#125;) 时同时指定el的容器 </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                2. 在创建vue后 通过实例对象指定el的值  vm.$mount(&#x27;#root&#x27;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            data 的两种写法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                1. 通过对象的形式 data:&#123; title:&#x27;hello vue&#x27; &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                2. 使用函数的形式 data() &#123; return &#123; title:&#x27;hello vue&#x27;  &#125; &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            后期使用函数式组件时，data必须使用函数形式</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            重点注意: 由vue管理的函数(例如 data 的函数式写法)，一定不能写箭头函数，否则this指向的实例就会是window对象</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        */</span></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 写法1</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// el: &#x27;#root&#x27;,    // 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 使用data对象形式</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// data: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//     title: &#x27;hello vue&#x27;,</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//     url: &#x27;http://www.odinsam.com&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// 使用函数式</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;hello vue !!&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 写法2</span></span></span><br><span class=\"line\"><span class=\"javascript\">        vm.$mount(<span class=\"string\">&#x27;#root&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 05. mvvm模型","author":"OdinSam","abbrlink":"a38e","date":"2022-10-15T06:12:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n![mvvm](/images/a38e/05.mvvm.png)\n\nM - 模型 即 data 中的数据\nV - 视图 即 模板 \nVM - viewModel 即 vue的实例对象\n\n##### data bindings 数据以对象的形式存储在data中，通过databindings将数据绑定在 view 页面中\n\n##### view页面改变，通过 dom listeners 修改 data中的数据\n\n##### data中所有的属性，最后都出现在vm立\n\n##### vm所有的属性即vue原型的属性，在vue模板中都可以直接使用\n\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-05-mvvm模型.md","raw":"title: Vue2.0 - 05. mvvm模型\nauthor: OdinSam\ntags:\n  - mvvm\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: a38e\ndate: 2022-10-15 14:12:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n![mvvm](/images/a38e/05.mvvm.png)\n\nM - 模型 即 data 中的数据\nV - 视图 即 模板 \nVM - viewModel 即 vue的实例对象\n\n##### data bindings 数据以对象的形式存储在data中，通过databindings将数据绑定在 view 页面中\n\n##### view页面改变，通过 dom listeners 修改 data中的数据\n\n##### data中所有的属性，最后都出现在vm立\n\n##### vm所有的属性即vue原型的属性，在vue模板中都可以直接使用\n\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-05-mvvm模型","published":1,"updated":"2023-03-10T06:15:33.283Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2h001g5cs93bbf892b","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img src=\"/images/a38e/05.mvvm.png\" alt=\"mvvm\" /></p>\n<p>M - 模型 即 data 中的数据<br />\nV - 视图 即 模板<br />\nVM - viewModel 即 vue的实例对象</p>\n<h5 id=\"data-bindings-数据以对象的形式存储在data中通过databindings将数据绑定在-view-页面中\"><a class=\"markdownIt-Anchor\" href=\"#data-bindings-数据以对象的形式存储在data中通过databindings将数据绑定在-view-页面中\"></a> data bindings 数据以对象的形式存储在data中，通过databindings将数据绑定在 view 页面中</h5>\n<h5 id=\"view页面改变通过-dom-listeners-修改-data中的数据\"><a class=\"markdownIt-Anchor\" href=\"#view页面改变通过-dom-listeners-修改-data中的数据\"></a> view页面改变，通过 dom listeners 修改 data中的数据</h5>\n<h5 id=\"data中所有的属性最后都出现在vm立\"><a class=\"markdownIt-Anchor\" href=\"#data中所有的属性最后都出现在vm立\"></a> data中所有的属性，最后都出现在vm立</h5>\n<h5 id=\"vm所有的属性即vue原型的属性在vue模板中都可以直接使用\"><a class=\"markdownIt-Anchor\" href=\"#vm所有的属性即vue原型的属性在vue模板中都可以直接使用\"></a> vm所有的属性即vue原型的属性，在vue模板中都可以直接使用</h5>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<p><img src=\"/images/a38e/05.mvvm.png\" alt=\"mvvm\" /></p>\n<p>M - 模型 即 data 中的数据<br />\nV - 视图 即 模板<br />\nVM - viewModel 即 vue的实例对象</p>\n<h5 id=\"data-bindings-数据以对象的形式存储在data中通过databindings将数据绑定在-view-页面中\"><a class=\"markdownIt-Anchor\" href=\"#data-bindings-数据以对象的形式存储在data中通过databindings将数据绑定在-view-页面中\"></a> data bindings 数据以对象的形式存储在data中，通过databindings将数据绑定在 view 页面中</h5>\n<h5 id=\"view页面改变通过-dom-listeners-修改-data中的数据\"><a class=\"markdownIt-Anchor\" href=\"#view页面改变通过-dom-listeners-修改-data中的数据\"></a> view页面改变，通过 dom listeners 修改 data中的数据</h5>\n<h5 id=\"data中所有的属性最后都出现在vm立\"><a class=\"markdownIt-Anchor\" href=\"#data中所有的属性最后都出现在vm立\"></a> data中所有的属性，最后都出现在vm立</h5>\n<h5 id=\"vm所有的属性即vue原型的属性在vue模板中都可以直接使用\"><a class=\"markdownIt-Anchor\" href=\"#vm所有的属性即vue原型的属性在vue模板中都可以直接使用\"></a> vm所有的属性即vue原型的属性，在vue模板中都可以直接使用</h5>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 06. 数据代理-Object.defineProperty","author":"OdinSam","abbrlink":"7c3d","date":"2022-10-15T06:15:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n```js\nlet user={name:'odinsam',sex:'男'}\nObject.defineProperty(user,'age',{value:20,enumerable:true,writable:true,configurable:true})\n{name: 'odinsam', sex: '男', age: 20}\nfor(let key in user){ console.log(`user的key-value    key:${key}    value:${user[key]}`) }\n// user的key-value    key:name    value:odinsam\n// user的key-value    key:sex    value:男\n//user的key-value    key:age    value:20\n\nuser.age=30\n30\nuser.age\n30\ndelete user.age\ntrue\nfor(let key in user){ console.log(`user的key-value    key:${key}    value:${user[key]}`) }\nuser的key-value    key:name    value:odinsam\nuser的key-value    key:sex    value:男\n```\n\n#### Object.defineProperty的 get set 用法\n\n```js\nlet number = 20\nlet user={name:'odinsam',sex:'男'}\nObject.defineProperty(user,'age',{ get(){ return number } set(value){ number=value } })\n{name: 'odinsam', sex: '男', age: 20}\nfor(let key in user){ console.log(`user的key-value    key:${key}    value:${user[key]}`) }\n// user的key-value    key:name    value:odinsam\n// user的key-value    key:sex    value:男\n//user的key-value    key:age    value:20\n\nuser.age=30\n30\nuser.age\n30\ndelete user.age\ntrue\nfor(let key in user){ console.log(`user的key-value    key:${key}    value:${user[key]}`) }\nuser的key-value    key:name    value:odinsam\nuser的key-value    key:sex    value:男\n```\n\n#### 原始的数据代理 obj2通过数据代理获取obj1的x属性\n\n```js\n//原始的数据代理\nlet obj1 = { x: 10 };\nlet obj2 = { y: 10 };\nObject.defineProperty(obj2, 'x', {\n    get() {\n        return obj1.x;\n    },\n    set(value) {\n        obj1.x = value;\n    }\n});\n```\n\n#### vue中的数据代理\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>06.数据代理-Object.defineProperty</title>\n    </head>\n    <body></body>\n    <script>\n        /*\n        vue中的数据代理\n        1. 通过vm对象来代理data对象中属性的操作 getter setter\n        2. 更加方便的操作data中的数据\n        3. 通过Object.defineProperty()把data对象中所有的属性添加到vm上\n        4. 为每一个添加到wm上的属性都指定 getter、setter方法\n        5. 在getter、setter内部操作data中对应的属性\n        6. vm._data中的属性不是数据代理而是数据劫持，通过数据劫持监听数据改变从而render页面\n        */\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-06-数据代理-Object-defineProperty.md","raw":"title: Vue2.0 - 06. 数据代理-Object.defineProperty\nauthor: OdinSam\ntags:\n  - vue2\n  - JavaScript\n  - 数据代理\n  - defineProperty\ncategories:\n  - 前端\n  - vue2\nabbrlink: 7c3d\ndate: 2022-10-15 14:15:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n```js\nlet user={name:'odinsam',sex:'男'}\nObject.defineProperty(user,'age',{value:20,enumerable:true,writable:true,configurable:true})\n{name: 'odinsam', sex: '男', age: 20}\nfor(let key in user){ console.log(`user的key-value    key:${key}    value:${user[key]}`) }\n// user的key-value    key:name    value:odinsam\n// user的key-value    key:sex    value:男\n//user的key-value    key:age    value:20\n\nuser.age=30\n30\nuser.age\n30\ndelete user.age\ntrue\nfor(let key in user){ console.log(`user的key-value    key:${key}    value:${user[key]}`) }\nuser的key-value    key:name    value:odinsam\nuser的key-value    key:sex    value:男\n```\n\n#### Object.defineProperty的 get set 用法\n\n```js\nlet number = 20\nlet user={name:'odinsam',sex:'男'}\nObject.defineProperty(user,'age',{ get(){ return number } set(value){ number=value } })\n{name: 'odinsam', sex: '男', age: 20}\nfor(let key in user){ console.log(`user的key-value    key:${key}    value:${user[key]}`) }\n// user的key-value    key:name    value:odinsam\n// user的key-value    key:sex    value:男\n//user的key-value    key:age    value:20\n\nuser.age=30\n30\nuser.age\n30\ndelete user.age\ntrue\nfor(let key in user){ console.log(`user的key-value    key:${key}    value:${user[key]}`) }\nuser的key-value    key:name    value:odinsam\nuser的key-value    key:sex    value:男\n```\n\n#### 原始的数据代理 obj2通过数据代理获取obj1的x属性\n\n```js\n//原始的数据代理\nlet obj1 = { x: 10 };\nlet obj2 = { y: 10 };\nObject.defineProperty(obj2, 'x', {\n    get() {\n        return obj1.x;\n    },\n    set(value) {\n        obj1.x = value;\n    }\n});\n```\n\n#### vue中的数据代理\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>06.数据代理-Object.defineProperty</title>\n    </head>\n    <body></body>\n    <script>\n        /*\n        vue中的数据代理\n        1. 通过vm对象来代理data对象中属性的操作 getter setter\n        2. 更加方便的操作data中的数据\n        3. 通过Object.defineProperty()把data对象中所有的属性添加到vm上\n        4. 为每一个添加到wm上的属性都指定 getter、setter方法\n        5. 在getter、setter内部操作data中对应的属性\n        6. vm._data中的属性不是数据代理而是数据劫持，通过数据劫持监听数据改变从而render页面\n        */\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-06-数据代理-Object-defineProperty","published":1,"updated":"2023-03-10T06:21:29.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2h001j5cs9dq2h8b88","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> user=&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;odinsam&#x27;</span>,<span class=\"attr\">sex</span>:<span class=\"string\">&#x27;男&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(user,<span class=\"string\">&#x27;age&#x27;</span>,&#123;<span class=\"attr\">value</span>:<span class=\"number\">20</span>,<span class=\"attr\">enumerable</span>:<span class=\"literal\">true</span>,<span class=\"attr\">writable</span>:<span class=\"literal\">true</span>,<span class=\"attr\">configurable</span>:<span class=\"literal\">true</span>&#125;)</span><br><span class=\"line\">&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>, <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">20</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> user)&#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">`user的key-value    key:<span class=\"subst\">$&#123;key&#125;</span>    value:<span class=\"subst\">$&#123;user[key]&#125;</span>`</span>) &#125;</span><br><span class=\"line\"><span class=\"comment\">// user的key-value    key:name    value:odinsam</span></span><br><span class=\"line\"><span class=\"comment\">// user的key-value    key:sex    value:男</span></span><br><span class=\"line\"><span class=\"comment\">//user的key-value    key:age    value:20</span></span><br><span class=\"line\"></span><br><span class=\"line\">user.age=<span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"number\">30</span></span><br><span class=\"line\">user.age</span><br><span class=\"line\"><span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> user.age</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> user)&#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">`user的key-value    key:<span class=\"subst\">$&#123;key&#125;</span>    value:<span class=\"subst\">$&#123;user[key]&#125;</span>`</span>) &#125;</span><br><span class=\"line\">user的key-value    key:name    value:odinsam</span><br><span class=\"line\">user的key-value    key:sex    value:男</span><br></pre></td></tr></table></figure>\n<h4 id=\"objectdefineproperty的-get-set-用法\"><a class=\"markdownIt-Anchor\" href=\"#objectdefineproperty的-get-set-用法\"></a> Object.defineProperty的 get set 用法</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> number = <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> user=&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;odinsam&#x27;</span>,<span class=\"attr\">sex</span>:<span class=\"string\">&#x27;男&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(user,<span class=\"string\">&#x27;age&#x27;</span>,&#123; <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"keyword\">return</span> number &#125; <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span>&#123; number=value &#125; &#125;)</span><br><span class=\"line\">&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>, <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">20</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> user)&#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">`user的key-value    key:<span class=\"subst\">$&#123;key&#125;</span>    value:<span class=\"subst\">$&#123;user[key]&#125;</span>`</span>) &#125;</span><br><span class=\"line\"><span class=\"comment\">// user的key-value    key:name    value:odinsam</span></span><br><span class=\"line\"><span class=\"comment\">// user的key-value    key:sex    value:男</span></span><br><span class=\"line\"><span class=\"comment\">//user的key-value    key:age    value:20</span></span><br><span class=\"line\"></span><br><span class=\"line\">user.age=<span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"number\">30</span></span><br><span class=\"line\">user.age</span><br><span class=\"line\"><span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> user.age</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> user)&#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">`user的key-value    key:<span class=\"subst\">$&#123;key&#125;</span>    value:<span class=\"subst\">$&#123;user[key]&#125;</span>`</span>) &#125;</span><br><span class=\"line\">user的key-value    key:name    value:odinsam</span><br><span class=\"line\">user的key-value    key:sex    value:男</span><br></pre></td></tr></table></figure>\n<h4 id=\"原始的数据代理-obj2通过数据代理获取obj1的x属性\"><a class=\"markdownIt-Anchor\" href=\"#原始的数据代理-obj2通过数据代理获取obj1的x属性\"></a> 原始的数据代理 obj2通过数据代理获取obj1的x属性</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//原始的数据代理</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj1 = &#123; <span class=\"attr\">x</span>: <span class=\"number\">10</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2 = &#123; <span class=\"attr\">y</span>: <span class=\"number\">10</span> &#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(obj2, <span class=\"string\">&#x27;x&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj1.x;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span> &#123;</span><br><span class=\"line\">        obj1.x = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"vue中的数据代理\"><a class=\"markdownIt-Anchor\" href=\"#vue中的数据代理\"></a> vue中的数据代理</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>06.数据代理-Object.defineProperty<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        vue中的数据代理</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        1. 通过vm对象来代理data对象中属性的操作 getter setter</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        2. 更加方便的操作data中的数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        3. 通过Object.defineProperty()把data对象中所有的属性添加到vm上</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        4. 为每一个添加到wm上的属性都指定 getter、setter方法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        5. 在getter、setter内部操作data中对应的属性</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        6. vm._data中的属性不是数据代理而是数据劫持，通过数据劫持监听数据改变从而render页面</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        */</span></span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> user=&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;odinsam&#x27;</span>,<span class=\"attr\">sex</span>:<span class=\"string\">&#x27;男&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(user,<span class=\"string\">&#x27;age&#x27;</span>,&#123;<span class=\"attr\">value</span>:<span class=\"number\">20</span>,<span class=\"attr\">enumerable</span>:<span class=\"literal\">true</span>,<span class=\"attr\">writable</span>:<span class=\"literal\">true</span>,<span class=\"attr\">configurable</span>:<span class=\"literal\">true</span>&#125;)</span><br><span class=\"line\">&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>, <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">20</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> user)&#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">`user的key-value    key:<span class=\"subst\">$&#123;key&#125;</span>    value:<span class=\"subst\">$&#123;user[key]&#125;</span>`</span>) &#125;</span><br><span class=\"line\"><span class=\"comment\">// user的key-value    key:name    value:odinsam</span></span><br><span class=\"line\"><span class=\"comment\">// user的key-value    key:sex    value:男</span></span><br><span class=\"line\"><span class=\"comment\">//user的key-value    key:age    value:20</span></span><br><span class=\"line\"></span><br><span class=\"line\">user.age=<span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"number\">30</span></span><br><span class=\"line\">user.age</span><br><span class=\"line\"><span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> user.age</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> user)&#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">`user的key-value    key:<span class=\"subst\">$&#123;key&#125;</span>    value:<span class=\"subst\">$&#123;user[key]&#125;</span>`</span>) &#125;</span><br><span class=\"line\">user的key-value    key:name    value:odinsam</span><br><span class=\"line\">user的key-value    key:sex    value:男</span><br></pre></td></tr></table></figure>\n<h4 id=\"objectdefineproperty的-get-set-用法\"><a class=\"markdownIt-Anchor\" href=\"#objectdefineproperty的-get-set-用法\"></a> Object.defineProperty的 get set 用法</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> number = <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> user=&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;odinsam&#x27;</span>,<span class=\"attr\">sex</span>:<span class=\"string\">&#x27;男&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(user,<span class=\"string\">&#x27;age&#x27;</span>,&#123; <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"keyword\">return</span> number &#125; <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span>&#123; number=value &#125; &#125;)</span><br><span class=\"line\">&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>, <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">20</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> user)&#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">`user的key-value    key:<span class=\"subst\">$&#123;key&#125;</span>    value:<span class=\"subst\">$&#123;user[key]&#125;</span>`</span>) &#125;</span><br><span class=\"line\"><span class=\"comment\">// user的key-value    key:name    value:odinsam</span></span><br><span class=\"line\"><span class=\"comment\">// user的key-value    key:sex    value:男</span></span><br><span class=\"line\"><span class=\"comment\">//user的key-value    key:age    value:20</span></span><br><span class=\"line\"></span><br><span class=\"line\">user.age=<span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"number\">30</span></span><br><span class=\"line\">user.age</span><br><span class=\"line\"><span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> user.age</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> user)&#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">`user的key-value    key:<span class=\"subst\">$&#123;key&#125;</span>    value:<span class=\"subst\">$&#123;user[key]&#125;</span>`</span>) &#125;</span><br><span class=\"line\">user的key-value    key:name    value:odinsam</span><br><span class=\"line\">user的key-value    key:sex    value:男</span><br></pre></td></tr></table></figure>\n<h4 id=\"原始的数据代理-obj2通过数据代理获取obj1的x属性\"><a class=\"markdownIt-Anchor\" href=\"#原始的数据代理-obj2通过数据代理获取obj1的x属性\"></a> 原始的数据代理 obj2通过数据代理获取obj1的x属性</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//原始的数据代理</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj1 = &#123; <span class=\"attr\">x</span>: <span class=\"number\">10</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2 = &#123; <span class=\"attr\">y</span>: <span class=\"number\">10</span> &#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(obj2, <span class=\"string\">&#x27;x&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj1.x;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span> &#123;</span><br><span class=\"line\">        obj1.x = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"vue中的数据代理\"><a class=\"markdownIt-Anchor\" href=\"#vue中的数据代理\"></a> vue中的数据代理</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>06.数据代理-Object.defineProperty<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        vue中的数据代理</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        1. 通过vm对象来代理data对象中属性的操作 getter setter</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        2. 更加方便的操作data中的数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        3. 通过Object.defineProperty()把data对象中所有的属性添加到vm上</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        4. 为每一个添加到wm上的属性都指定 getter、setter方法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        5. 在getter、setter内部操作data中对应的属性</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        6. vm._data中的属性不是数据代理而是数据劫持，通过数据劫持监听数据改变从而render页面</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">        */</span></span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 07. 事件处理","author":"OdinSam","abbrlink":"ec6","date":"2022-10-15T06:18:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. 事件绑定 使用 v-on: 绑定事件\n2. click事件可以简写为 @click\n3. 无参数的事件处理方法 会有一个默认参数 event 代表 eventObject\n4. 带参数的时间处理方法 也可以带 eventObject 使用 $event传递\n5. 事件处理函数需要配置在methods中，最终会体现在vm上\n6. 事件处理函数都是被vue管理的函数，this指向vm或者组件对象实例。不可以使用箭头函数，否则this指向window\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>07.事件处理</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <div id=\"root\">\n            <!--\n                1. 事件绑定 使用 v-on: 绑定事件\n                2. click事件可以简写为 @click\n                3. 无参数的事件处理方法 会有一个默认参数 event 代表 eventObject\n                4. 带参数的时间处理方法 也可以带 eventObject 使用 $event传递\n                5. 事件处理函数需要配置在methods中，最终会体现在vm上\n                6. 事件处理函数都是被vue管理的函数，this指向vm或者组件对象实例。不可以使用箭头函数，否则this指向window\n                7. \n            -->\n            <h2>vue 事件处理</h2>\n            <input type=\"text\" v-model=\"userName\" />\n            <button v-on:click=\"showInfo\">提示信息</button>\n            <button @click=\"showInfoWithParams(userName,$event)\">\n                提示信息2\n            </button>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    userName: 'odinsam'\n                };\n            },\n            methods: {\n                showInfo(event) {\n                    console.log('无参处理函数 showInfo');\n                    console.log(event);\n                },\n                showInfoWithParams(un, event) {\n                    console.log('带参处理函数 showInfoWithParams');\n                    console.log(`input userName: ${un}, event对象:${event}`);\n                }\n            }\n        });\n    </script>\n</html>\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-07-事件处理.md","raw":"title: Vue2.0 - 07. 事件处理\nauthor: OdinSam\ntags:\n  - vue2\n  - '@click'\n  - eventObject\ncategories:\n  - 前端\n  - vue2\nabbrlink: ec6\ndate: 2022-10-15 14:18:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. 事件绑定 使用 v-on: 绑定事件\n2. click事件可以简写为 @click\n3. 无参数的事件处理方法 会有一个默认参数 event 代表 eventObject\n4. 带参数的时间处理方法 也可以带 eventObject 使用 $event传递\n5. 事件处理函数需要配置在methods中，最终会体现在vm上\n6. 事件处理函数都是被vue管理的函数，this指向vm或者组件对象实例。不可以使用箭头函数，否则this指向window\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>07.事件处理</title>\n        <script src=\"../js/vue.js\"></script>\n    </head>\n    <body>\n        <div id=\"root\">\n            <!--\n                1. 事件绑定 使用 v-on: 绑定事件\n                2. click事件可以简写为 @click\n                3. 无参数的事件处理方法 会有一个默认参数 event 代表 eventObject\n                4. 带参数的时间处理方法 也可以带 eventObject 使用 $event传递\n                5. 事件处理函数需要配置在methods中，最终会体现在vm上\n                6. 事件处理函数都是被vue管理的函数，this指向vm或者组件对象实例。不可以使用箭头函数，否则this指向window\n                7. \n            -->\n            <h2>vue 事件处理</h2>\n            <input type=\"text\" v-model=\"userName\" />\n            <button v-on:click=\"showInfo\">提示信息</button>\n            <button @click=\"showInfoWithParams(userName,$event)\">\n                提示信息2\n            </button>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    userName: 'odinsam'\n                };\n            },\n            methods: {\n                showInfo(event) {\n                    console.log('无参处理函数 showInfo');\n                    console.log(event);\n                },\n                showInfoWithParams(un, event) {\n                    console.log('带参处理函数 showInfoWithParams');\n                    console.log(`input userName: ${un}, event对象:${event}`);\n                }\n            }\n        });\n    </script>\n</html>\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-07-事件处理","published":1,"updated":"2023-03-10T06:20:18.412Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2i001m5cs90w2zarh3","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>事件绑定 使用 v-on: 绑定事件</li>\n<li>click事件可以简写为 @click</li>\n<li>无参数的事件处理方法 会有一个默认参数 event 代表 eventObject</li>\n<li>带参数的时间处理方法 也可以带 eventObject 使用 $event传递</li>\n<li>事件处理函数需要配置在methods中，最终会体现在vm上</li>\n<li>事件处理函数都是被vue管理的函数，this指向vm或者组件对象实例。不可以使用箭头函数，否则this指向window</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>07.事件处理<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                1. 事件绑定 使用 v-on: 绑定事件</span></span><br><span class=\"line\"><span class=\"comment\">                2. click事件可以简写为 @click</span></span><br><span class=\"line\"><span class=\"comment\">                3. 无参数的事件处理方法 会有一个默认参数 event 代表 eventObject</span></span><br><span class=\"line\"><span class=\"comment\">                4. 带参数的时间处理方法 也可以带 eventObject 使用 $event传递</span></span><br><span class=\"line\"><span class=\"comment\">                5. 事件处理函数需要配置在methods中，最终会体现在vm上</span></span><br><span class=\"line\"><span class=\"comment\">                6. 事件处理函数都是被vue管理的函数，this指向vm或者组件对象实例。不可以使用箭头函数，否则this指向window</span></span><br><span class=\"line\"><span class=\"comment\">                7. </span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue 事件处理<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userName&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;showInfo&quot;</span>&gt;</span>提示信息<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showInfoWithParams(userName,$event)&quot;</span>&gt;</span></span><br><span class=\"line\">                提示信息2</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">showInfo</span>(<span class=\"params\">event</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;无参处理函数 showInfo&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(event);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">showInfoWithParams</span>(<span class=\"params\">un, event</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;带参处理函数 showInfoWithParams&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">`input userName: <span class=\"subst\">$&#123;un&#125;</span>, event对象:<span class=\"subst\">$&#123;event&#125;</span>`</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>事件绑定 使用 v-on: 绑定事件</li>\n<li>click事件可以简写为 @click</li>\n<li>无参数的事件处理方法 会有一个默认参数 event 代表 eventObject</li>\n<li>带参数的时间处理方法 也可以带 eventObject 使用 $event传递</li>\n<li>事件处理函数需要配置在methods中，最终会体现在vm上</li>\n<li>事件处理函数都是被vue管理的函数，this指向vm或者组件对象实例。不可以使用箭头函数，否则this指向window</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>07.事件处理<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                1. 事件绑定 使用 v-on: 绑定事件</span></span><br><span class=\"line\"><span class=\"comment\">                2. click事件可以简写为 @click</span></span><br><span class=\"line\"><span class=\"comment\">                3. 无参数的事件处理方法 会有一个默认参数 event 代表 eventObject</span></span><br><span class=\"line\"><span class=\"comment\">                4. 带参数的时间处理方法 也可以带 eventObject 使用 $event传递</span></span><br><span class=\"line\"><span class=\"comment\">                5. 事件处理函数需要配置在methods中，最终会体现在vm上</span></span><br><span class=\"line\"><span class=\"comment\">                6. 事件处理函数都是被vue管理的函数，this指向vm或者组件对象实例。不可以使用箭头函数，否则this指向window</span></span><br><span class=\"line\"><span class=\"comment\">                7. </span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue 事件处理<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userName&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;showInfo&quot;</span>&gt;</span>提示信息<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showInfoWithParams(userName,$event)&quot;</span>&gt;</span></span><br><span class=\"line\">                提示信息2</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">showInfo</span>(<span class=\"params\">event</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;无参处理函数 showInfo&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(event);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">showInfoWithParams</span>(<span class=\"params\">un, event</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;带参处理函数 showInfoWithParams&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">`input userName: <span class=\"subst\">$&#123;un&#125;</span>, event对象:<span class=\"subst\">$&#123;event&#125;</span>`</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 09. 键盘事件","author":"OdinSam","abbrlink":"42b7","date":"2022-10-15T06:25:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. vue 中常用的按键别名\n  回车 enter\n  删除 delete\n  退格 backSpace\n  退出 esc\n  空格 space\n  换行 tab\n  上 up\n  下 down\n  左 left\n  右 right\n2. vue未提供别名的按键可以使用按键的原始的key去绑定，但要注意转换为 kebab-case 例如 CapsLock caps-lock\n3. 可以使用 @keyup.按键别名 绑定对应的按键事件\n4. tab无法使用keyup绑定 需要使用keydown绑定\n5. 系统修饰按键 ctrl alt shift meta\n6. 如果配合keyup使用：按下系统修饰键，再按下其他键，随后释放其他键，事件才会触发\n7. 如果配合keydown使用 正常触发\n8. 也可以使用keyCode去绑定，但不推荐 @keyup.keyCode 有可能不同系统不同键盘的keycode不一样导致一些问题\n9. Vue.config.keyCodes 可以自定义键名 Vue.config.keyCodes.自定义名 = 键码\n10. Vue.config.keyCodes.huiche = 13 指定huiche 为按键13 即enter\n11. 按键别名可以组合使用 例如 @keyup.ctrl.y 即ctrl+y 触发事件\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>09.键盘事件</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            1. vue 中常用的按键别名\n                回车    enter\n                删除    delete \n                退格    backSpace\n                退出    esc\n                空格    space\n                换行    tab\n                上      up\n                下      down\n                左      left\n                右      right\n            2. vue未提供别名的按键可以使用按键的原始的key去绑定，但要注意转换为  kebab-case 例如 CapsLock caps-lock\n            3. 可以使用 @keyup.按键别名 绑定对应的按键事件\n            4. tab无法使用keyup绑定 需要使用keydown绑定\n            5. 系统修饰按键  ctrl   alt     shift   meta\n                1. 如果配合keyup使用：按下系统修饰键，再按下其他键，随后释放其他键，事件才会触发\n                2. 如果配合keydown使用 正常触发\n            6. 也可以使用keyCode去绑定，但不推荐  @keyup.keyCode 有可能不同系统不同键盘的keycode不一样导致一些问题\n            7. Vue.config.keyCodes 可以自定义键名   Vue.config.keyCodes.自定义名 = 键码\n                    Vue.config.keyCodes.huiche = 13  指定huiche 为按键13 即enter\n        -->\n        <div id=\"root\">\n            <h2>vue 键盘事件</h2>\n            <label for=\"lbl\">按键按下的是 {{inputKey}}</label>\n            <input type=\"text\" @keyup=\"showinfo\" />\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    userName: 'odinsam',\n                    inputKey: ''\n                };\n            },\n            methods: {\n                showinfo(e) {\n                    this.inputKey = `e.key:${e.key}      e.keyCode=${e.keyCode}`;\n                }\n            }\n        });\n    </script>\n</html>\n\n```\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-09-键盘事件.md","raw":"title: Vue2.0 - 09. 键盘事件\nauthor: OdinSam\ntags:\n  - keydown\n  - keyup\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: 42b7\ndate: 2022-10-15 14:25:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. vue 中常用的按键别名\n  回车 enter\n  删除 delete\n  退格 backSpace\n  退出 esc\n  空格 space\n  换行 tab\n  上 up\n  下 down\n  左 left\n  右 right\n2. vue未提供别名的按键可以使用按键的原始的key去绑定，但要注意转换为 kebab-case 例如 CapsLock caps-lock\n3. 可以使用 @keyup.按键别名 绑定对应的按键事件\n4. tab无法使用keyup绑定 需要使用keydown绑定\n5. 系统修饰按键 ctrl alt shift meta\n6. 如果配合keyup使用：按下系统修饰键，再按下其他键，随后释放其他键，事件才会触发\n7. 如果配合keydown使用 正常触发\n8. 也可以使用keyCode去绑定，但不推荐 @keyup.keyCode 有可能不同系统不同键盘的keycode不一样导致一些问题\n9. Vue.config.keyCodes 可以自定义键名 Vue.config.keyCodes.自定义名 = 键码\n10. Vue.config.keyCodes.huiche = 13 指定huiche 为按键13 即enter\n11. 按键别名可以组合使用 例如 @keyup.ctrl.y 即ctrl+y 触发事件\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>09.键盘事件</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            1. vue 中常用的按键别名\n                回车    enter\n                删除    delete \n                退格    backSpace\n                退出    esc\n                空格    space\n                换行    tab\n                上      up\n                下      down\n                左      left\n                右      right\n            2. vue未提供别名的按键可以使用按键的原始的key去绑定，但要注意转换为  kebab-case 例如 CapsLock caps-lock\n            3. 可以使用 @keyup.按键别名 绑定对应的按键事件\n            4. tab无法使用keyup绑定 需要使用keydown绑定\n            5. 系统修饰按键  ctrl   alt     shift   meta\n                1. 如果配合keyup使用：按下系统修饰键，再按下其他键，随后释放其他键，事件才会触发\n                2. 如果配合keydown使用 正常触发\n            6. 也可以使用keyCode去绑定，但不推荐  @keyup.keyCode 有可能不同系统不同键盘的keycode不一样导致一些问题\n            7. Vue.config.keyCodes 可以自定义键名   Vue.config.keyCodes.自定义名 = 键码\n                    Vue.config.keyCodes.huiche = 13  指定huiche 为按键13 即enter\n        -->\n        <div id=\"root\">\n            <h2>vue 键盘事件</h2>\n            <label for=\"lbl\">按键按下的是 {{inputKey}}</label>\n            <input type=\"text\" @keyup=\"showinfo\" />\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    userName: 'odinsam',\n                    inputKey: ''\n                };\n            },\n            methods: {\n                showinfo(e) {\n                    this.inputKey = `e.key:${e.key}      e.keyCode=${e.keyCode}`;\n                }\n            }\n        });\n    </script>\n</html>\n\n```\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-09-键盘事件","published":1,"updated":"2023-03-10T06:26:47.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2k001q5cs9h2jk9iux","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>vue 中常用的按键别名<br />\n回车 enter<br />\n删除 delete<br />\n退格 backSpace<br />\n退出 esc<br />\n空格 space<br />\n换行 tab<br />\n上 up<br />\n下 down<br />\n左 left<br />\n右 right</li>\n<li>vue未提供别名的按键可以使用按键的原始的key去绑定，但要注意转换为 kebab-case 例如 CapsLock caps-lock</li>\n<li>可以使用 @keyup.按键别名 绑定对应的按键事件</li>\n<li>tab无法使用keyup绑定 需要使用keydown绑定</li>\n<li>系统修饰按键 ctrl alt shift meta</li>\n<li>如果配合keyup使用：按下系统修饰键，再按下其他键，随后释放其他键，事件才会触发</li>\n<li>如果配合keydown使用 正常触发</li>\n<li>也可以使用keyCode去绑定，但不推荐 @keyup.keyCode 有可能不同系统不同键盘的keycode不一样导致一些问题</li>\n<li>Vue.config.keyCodes 可以自定义键名 Vue.config.keyCodes.自定义名 = 键码</li>\n<li>Vue.config.keyCodes.huiche = 13 指定huiche 为按键13 即enter</li>\n<li>按键别名可以组合使用 例如 @keyup.ctrl.y 即ctrl+y 触发事件</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>09.键盘事件<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1. vue 中常用的按键别名</span></span><br><span class=\"line\"><span class=\"comment\">                回车    enter</span></span><br><span class=\"line\"><span class=\"comment\">                删除    delete </span></span><br><span class=\"line\"><span class=\"comment\">                退格    backSpace</span></span><br><span class=\"line\"><span class=\"comment\">                退出    esc</span></span><br><span class=\"line\"><span class=\"comment\">                空格    space</span></span><br><span class=\"line\"><span class=\"comment\">                换行    tab</span></span><br><span class=\"line\"><span class=\"comment\">                上      up</span></span><br><span class=\"line\"><span class=\"comment\">                下      down</span></span><br><span class=\"line\"><span class=\"comment\">                左      left</span></span><br><span class=\"line\"><span class=\"comment\">                右      right</span></span><br><span class=\"line\"><span class=\"comment\">            2. vue未提供别名的按键可以使用按键的原始的key去绑定，但要注意转换为  kebab-case 例如 CapsLock caps-lock</span></span><br><span class=\"line\"><span class=\"comment\">            3. 可以使用 @keyup.按键别名 绑定对应的按键事件</span></span><br><span class=\"line\"><span class=\"comment\">            4. tab无法使用keyup绑定 需要使用keydown绑定</span></span><br><span class=\"line\"><span class=\"comment\">            5. 系统修饰按键  ctrl   alt     shift   meta</span></span><br><span class=\"line\"><span class=\"comment\">                1. 如果配合keyup使用：按下系统修饰键，再按下其他键，随后释放其他键，事件才会触发</span></span><br><span class=\"line\"><span class=\"comment\">                2. 如果配合keydown使用 正常触发</span></span><br><span class=\"line\"><span class=\"comment\">            6. 也可以使用keyCode去绑定，但不推荐  @keyup.keyCode 有可能不同系统不同键盘的keycode不一样导致一些问题</span></span><br><span class=\"line\"><span class=\"comment\">            7. Vue.config.keyCodes 可以自定义键名   Vue.config.keyCodes.自定义名 = 键码</span></span><br><span class=\"line\"><span class=\"comment\">                    Vue.config.keyCodes.huiche = 13  指定huiche 为按键13 即enter</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue 键盘事件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;lbl&quot;</span>&gt;</span>按键按下的是 &#123;&#123;inputKey&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> @<span class=\"attr\">keyup</span>=<span class=\"string\">&quot;showinfo&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">inputKey</span>: <span class=\"string\">&#x27;&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">showinfo</span>(<span class=\"params\">e</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.inputKey = <span class=\"string\">`e.key:<span class=\"subst\">$&#123;e.key&#125;</span>      e.keyCode=<span class=\"subst\">$&#123;e.keyCode&#125;</span>`</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>vue 中常用的按键别名<br />\n回车 enter<br />\n删除 delete<br />\n退格 backSpace<br />\n退出 esc<br />\n空格 space<br />\n换行 tab<br />\n上 up<br />\n下 down<br />\n左 left<br />\n右 right</li>\n<li>vue未提供别名的按键可以使用按键的原始的key去绑定，但要注意转换为 kebab-case 例如 CapsLock caps-lock</li>\n<li>可以使用 @keyup.按键别名 绑定对应的按键事件</li>\n<li>tab无法使用keyup绑定 需要使用keydown绑定</li>\n<li>系统修饰按键 ctrl alt shift meta</li>\n<li>如果配合keyup使用：按下系统修饰键，再按下其他键，随后释放其他键，事件才会触发</li>\n<li>如果配合keydown使用 正常触发</li>\n<li>也可以使用keyCode去绑定，但不推荐 @keyup.keyCode 有可能不同系统不同键盘的keycode不一样导致一些问题</li>\n<li>Vue.config.keyCodes 可以自定义键名 Vue.config.keyCodes.自定义名 = 键码</li>\n<li>Vue.config.keyCodes.huiche = 13 指定huiche 为按键13 即enter</li>\n<li>按键别名可以组合使用 例如 @keyup.ctrl.y 即ctrl+y 触发事件</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>09.键盘事件<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1. vue 中常用的按键别名</span></span><br><span class=\"line\"><span class=\"comment\">                回车    enter</span></span><br><span class=\"line\"><span class=\"comment\">                删除    delete </span></span><br><span class=\"line\"><span class=\"comment\">                退格    backSpace</span></span><br><span class=\"line\"><span class=\"comment\">                退出    esc</span></span><br><span class=\"line\"><span class=\"comment\">                空格    space</span></span><br><span class=\"line\"><span class=\"comment\">                换行    tab</span></span><br><span class=\"line\"><span class=\"comment\">                上      up</span></span><br><span class=\"line\"><span class=\"comment\">                下      down</span></span><br><span class=\"line\"><span class=\"comment\">                左      left</span></span><br><span class=\"line\"><span class=\"comment\">                右      right</span></span><br><span class=\"line\"><span class=\"comment\">            2. vue未提供别名的按键可以使用按键的原始的key去绑定，但要注意转换为  kebab-case 例如 CapsLock caps-lock</span></span><br><span class=\"line\"><span class=\"comment\">            3. 可以使用 @keyup.按键别名 绑定对应的按键事件</span></span><br><span class=\"line\"><span class=\"comment\">            4. tab无法使用keyup绑定 需要使用keydown绑定</span></span><br><span class=\"line\"><span class=\"comment\">            5. 系统修饰按键  ctrl   alt     shift   meta</span></span><br><span class=\"line\"><span class=\"comment\">                1. 如果配合keyup使用：按下系统修饰键，再按下其他键，随后释放其他键，事件才会触发</span></span><br><span class=\"line\"><span class=\"comment\">                2. 如果配合keydown使用 正常触发</span></span><br><span class=\"line\"><span class=\"comment\">            6. 也可以使用keyCode去绑定，但不推荐  @keyup.keyCode 有可能不同系统不同键盘的keycode不一样导致一些问题</span></span><br><span class=\"line\"><span class=\"comment\">            7. Vue.config.keyCodes 可以自定义键名   Vue.config.keyCodes.自定义名 = 键码</span></span><br><span class=\"line\"><span class=\"comment\">                    Vue.config.keyCodes.huiche = 13  指定huiche 为按键13 即enter</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue 键盘事件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;lbl&quot;</span>&gt;</span>按键按下的是 &#123;&#123;inputKey&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> @<span class=\"attr\">keyup</span>=<span class=\"string\">&quot;showinfo&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">inputKey</span>: <span class=\"string\">&#x27;&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">showinfo</span>(<span class=\"params\">e</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.inputKey = <span class=\"string\">`e.key:<span class=\"subst\">$&#123;e.key&#125;</span>      e.keyCode=<span class=\"subst\">$&#123;e.keyCode&#125;</span>`</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 08. 事件修饰符","author":"OdinSam","abbrlink":"48de","date":"2022-10-15T06:22:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. prevent 阻止默认事件\n2. stop 阻止事件冒泡\n3. once 事件只触发一次\n4. capture 事件捕获模式 和 冒泡模式刚好相反\n5. self 是有event.target 是当前操作的元素时才触发\n6. passive 事件的默认行为立即执行，无需等待回调完毕 移动端常用\n7. 修饰符可以连续写，例如 @click.stop.prevent\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>08. 事件修饰符</title>\n        <script src=\"../js/vue.js\"></script>\n        <style>\n            .parentdv {\n                width: 400px;\n                height: 400px;\n                background-color: bisque;\n                text-align: center;\n            }\n            .childdv {\n                width: 300px;\n                height: 200px;\n                margin: 50px;\n                background-color: cadetblue;\n                text-align: center;\n            }\n        </style>\n    </head>\n    <body>\n        <!--\n            1. prevent 阻止默认事件\n            2. stop 阻止事件冒泡\n            3. once 事件只触发一次\n            4. capture 事件捕获模式 和 冒泡模式刚好相反\n            5. self 是有event.target 是当前操作的元素时才触发\n            6. passive 事件的默认行为立即执行，无需等待回调完毕\n        -->\n        <div id=\"root\">\n            <h2>vue  事件修饰符</h2>\n            <input type=\"text\" v-model=\"userName\" />\n            <!--阻止默认事件    @click.prevent-->\n            <a href=\"https://odinsam.com\" @click.prevent=\"clickShow\">\n                点击弹窗，阻止默认事件 - @click.prevent </a\n            ><br /><br />\n            <!--阻止事件冒泡    @click.stop-->\n            <div class=\"parentdv\" @click.capture=\"parentClick\">\n                <span>事件捕获模式 - @click.capture</span>\n                <div class=\"childdv\" @click.stop=\"childClick\">\n                    阻止事件冒泡 - @click.stop\n                </div>\n            </div>\n            <br />\n            <!--事件只触发一次    @click.once-->\n            <button @click.once=\"btnOnceClick\">\n                事件只触发一次 - @click.once</button\n            ><br /><br />\n            <!--当event.target==self才触发事件    @click.self-->\n            <div class=\"parentdv\" @click.self=\"dvselfClick\">\n                @click.self=\"dvselfClick\"\n                <button @click.stop=\"childBtnClick\">\n                    按钮点击会冒泡，但div的click有self修饰符，所以不触发div的click事件\n                </button>\n            </div>\n            <br /><br />\n            <!--事件的默认行为立即执行，无需等待回调完毕    @click.passive-->\n            <span>显示姓名{{showName}}</span>\n            <button @click.passive=\"btnClickPassive\">@click.passive</button>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    userName: 'odinsam',\n                    showName: ''\n                };\n            },\n            methods: {\n                clickShow() {\n                    alert('function clickShow');\n                },\n                parentClick() {\n                    alert('parent click');\n                },\n                childClick() {\n                    alert('child click');\n                },\n                btnOnceClick() {\n                    alert('click once');\n                },\n                dvselfClick() {\n                    alert('div self click');\n                },\n                childBtnClick() {\n                    alert('child Btn Click');\n                },\n                btnClickPassive() {\n                    for (let i = 0; i < 100000; i++) {\n                        console.log('#');\n                    }\n                    this.showName = this.userName;\n                }\n            }\n        });\n    </script>\n</html>\n\n```\n\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-08-事件修饰符.md","raw":"title: Vue2.0 - 08. 事件修饰符\nauthor: OdinSam\ntags:\n  - vue2\n  - prevent\n  - stop\n  - once\n  - capture\n  - self\n  - passive\ncategories:\n  - 前端\n  - vue2\nabbrlink: 48de\ndate: 2022-10-15 14:22:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. prevent 阻止默认事件\n2. stop 阻止事件冒泡\n3. once 事件只触发一次\n4. capture 事件捕获模式 和 冒泡模式刚好相反\n5. self 是有event.target 是当前操作的元素时才触发\n6. passive 事件的默认行为立即执行，无需等待回调完毕 移动端常用\n7. 修饰符可以连续写，例如 @click.stop.prevent\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>08. 事件修饰符</title>\n        <script src=\"../js/vue.js\"></script>\n        <style>\n            .parentdv {\n                width: 400px;\n                height: 400px;\n                background-color: bisque;\n                text-align: center;\n            }\n            .childdv {\n                width: 300px;\n                height: 200px;\n                margin: 50px;\n                background-color: cadetblue;\n                text-align: center;\n            }\n        </style>\n    </head>\n    <body>\n        <!--\n            1. prevent 阻止默认事件\n            2. stop 阻止事件冒泡\n            3. once 事件只触发一次\n            4. capture 事件捕获模式 和 冒泡模式刚好相反\n            5. self 是有event.target 是当前操作的元素时才触发\n            6. passive 事件的默认行为立即执行，无需等待回调完毕\n        -->\n        <div id=\"root\">\n            <h2>vue  事件修饰符</h2>\n            <input type=\"text\" v-model=\"userName\" />\n            <!--阻止默认事件    @click.prevent-->\n            <a href=\"https://odinsam.com\" @click.prevent=\"clickShow\">\n                点击弹窗，阻止默认事件 - @click.prevent </a\n            ><br /><br />\n            <!--阻止事件冒泡    @click.stop-->\n            <div class=\"parentdv\" @click.capture=\"parentClick\">\n                <span>事件捕获模式 - @click.capture</span>\n                <div class=\"childdv\" @click.stop=\"childClick\">\n                    阻止事件冒泡 - @click.stop\n                </div>\n            </div>\n            <br />\n            <!--事件只触发一次    @click.once-->\n            <button @click.once=\"btnOnceClick\">\n                事件只触发一次 - @click.once</button\n            ><br /><br />\n            <!--当event.target==self才触发事件    @click.self-->\n            <div class=\"parentdv\" @click.self=\"dvselfClick\">\n                @click.self=\"dvselfClick\"\n                <button @click.stop=\"childBtnClick\">\n                    按钮点击会冒泡，但div的click有self修饰符，所以不触发div的click事件\n                </button>\n            </div>\n            <br /><br />\n            <!--事件的默认行为立即执行，无需等待回调完毕    @click.passive-->\n            <span>显示姓名{{showName}}</span>\n            <button @click.passive=\"btnClickPassive\">@click.passive</button>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    userName: 'odinsam',\n                    showName: ''\n                };\n            },\n            methods: {\n                clickShow() {\n                    alert('function clickShow');\n                },\n                parentClick() {\n                    alert('parent click');\n                },\n                childClick() {\n                    alert('child click');\n                },\n                btnOnceClick() {\n                    alert('click once');\n                },\n                dvselfClick() {\n                    alert('div self click');\n                },\n                childBtnClick() {\n                    alert('child Btn Click');\n                },\n                btnClickPassive() {\n                    for (let i = 0; i < 100000; i++) {\n                        console.log('#');\n                    }\n                    this.showName = this.userName;\n                }\n            }\n        });\n    </script>\n</html>\n\n```\n\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-08-事件修饰符","published":1,"updated":"2023-03-10T06:23:59.119Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2l001t5cs9e4bner4f","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>prevent 阻止默认事件</li>\n<li>stop 阻止事件冒泡</li>\n<li>once 事件只触发一次</li>\n<li>capture 事件捕获模式 和 冒泡模式刚好相反</li>\n<li>self 是有event.target 是当前操作的元素时才触发</li>\n<li>passive 事件的默认行为立即执行，无需等待回调完毕 移动端常用</li>\n<li>修饰符可以连续写，例如 @click.stop.prevent</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>08. 事件修饰符<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.parentdv</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: bisque;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.childdv</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: cadetblue;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1. prevent 阻止默认事件</span></span><br><span class=\"line\"><span class=\"comment\">            2. stop 阻止事件冒泡</span></span><br><span class=\"line\"><span class=\"comment\">            3. once 事件只触发一次</span></span><br><span class=\"line\"><span class=\"comment\">            4. capture 事件捕获模式 和 冒泡模式刚好相反</span></span><br><span class=\"line\"><span class=\"comment\">            5. self 是有event.target 是当前操作的元素时才触发</span></span><br><span class=\"line\"><span class=\"comment\">            6. passive 事件的默认行为立即执行，无需等待回调完毕</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue  事件修饰符<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userName&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--阻止默认事件    @click.prevent--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://odinsam.com&quot;</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">&quot;clickShow&quot;</span>&gt;</span></span><br><span class=\"line\">                点击弹窗，阻止默认事件 - @click.prevent &lt;/a</span><br><span class=\"line\">            &gt;<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--阻止事件冒泡    @click.stop--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parentdv&quot;</span> @<span class=\"attr\">click.capture</span>=<span class=\"string\">&quot;parentClick&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>事件捕获模式 - @click.capture<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;childdv&quot;</span> @<span class=\"attr\">click.stop</span>=<span class=\"string\">&quot;childClick&quot;</span>&gt;</span></span><br><span class=\"line\">                    阻止事件冒泡 - @click.stop</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--事件只触发一次    @click.once--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.once</span>=<span class=\"string\">&quot;btnOnceClick&quot;</span>&gt;</span></span><br><span class=\"line\">                事件只触发一次 - @click.once&lt;/button</span><br><span class=\"line\">            &gt;<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--当event.target==self才触发事件    @click.self--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parentdv&quot;</span> @<span class=\"attr\">click.self</span>=<span class=\"string\">&quot;dvselfClick&quot;</span>&gt;</span></span><br><span class=\"line\">                @click.self=&quot;dvselfClick&quot;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.stop</span>=<span class=\"string\">&quot;childBtnClick&quot;</span>&gt;</span></span><br><span class=\"line\">                    按钮点击会冒泡，但div的click有self修饰符，所以不触发div的click事件</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--事件的默认行为立即执行，无需等待回调完毕    @click.passive--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>显示姓名&#123;&#123;showName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.passive</span>=<span class=\"string\">&quot;btnClickPassive&quot;</span>&gt;</span>@click.passive<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">showName</span>: <span class=\"string\">&#x27;&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">clickShow</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;function clickShow&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">parentClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;parent click&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">childClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;child click&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnOnceClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;click once&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">dvselfClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;div self click&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">childBtnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;child Btn Click&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnClickPassive</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;#&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.showName = <span class=\"built_in\">this</span>.userName;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>prevent 阻止默认事件</li>\n<li>stop 阻止事件冒泡</li>\n<li>once 事件只触发一次</li>\n<li>capture 事件捕获模式 和 冒泡模式刚好相反</li>\n<li>self 是有event.target 是当前操作的元素时才触发</li>\n<li>passive 事件的默认行为立即执行，无需等待回调完毕 移动端常用</li>\n<li>修饰符可以连续写，例如 @click.stop.prevent</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>08. 事件修饰符<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.parentdv</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: bisque;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.childdv</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: cadetblue;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1. prevent 阻止默认事件</span></span><br><span class=\"line\"><span class=\"comment\">            2. stop 阻止事件冒泡</span></span><br><span class=\"line\"><span class=\"comment\">            3. once 事件只触发一次</span></span><br><span class=\"line\"><span class=\"comment\">            4. capture 事件捕获模式 和 冒泡模式刚好相反</span></span><br><span class=\"line\"><span class=\"comment\">            5. self 是有event.target 是当前操作的元素时才触发</span></span><br><span class=\"line\"><span class=\"comment\">            6. passive 事件的默认行为立即执行，无需等待回调完毕</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue  事件修饰符<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userName&quot;</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--阻止默认事件    @click.prevent--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://odinsam.com&quot;</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">&quot;clickShow&quot;</span>&gt;</span></span><br><span class=\"line\">                点击弹窗，阻止默认事件 - @click.prevent &lt;/a</span><br><span class=\"line\">            &gt;<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--阻止事件冒泡    @click.stop--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parentdv&quot;</span> @<span class=\"attr\">click.capture</span>=<span class=\"string\">&quot;parentClick&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>事件捕获模式 - @click.capture<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;childdv&quot;</span> @<span class=\"attr\">click.stop</span>=<span class=\"string\">&quot;childClick&quot;</span>&gt;</span></span><br><span class=\"line\">                    阻止事件冒泡 - @click.stop</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--事件只触发一次    @click.once--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.once</span>=<span class=\"string\">&quot;btnOnceClick&quot;</span>&gt;</span></span><br><span class=\"line\">                事件只触发一次 - @click.once&lt;/button</span><br><span class=\"line\">            &gt;<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--当event.target==self才触发事件    @click.self--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;parentdv&quot;</span> @<span class=\"attr\">click.self</span>=<span class=\"string\">&quot;dvselfClick&quot;</span>&gt;</span></span><br><span class=\"line\">                @click.self=&quot;dvselfClick&quot;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.stop</span>=<span class=\"string\">&quot;childBtnClick&quot;</span>&gt;</span></span><br><span class=\"line\">                    按钮点击会冒泡，但div的click有self修饰符，所以不触发div的click事件</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--事件的默认行为立即执行，无需等待回调完毕    @click.passive--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>显示姓名&#123;&#123;showName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.passive</span>=<span class=\"string\">&quot;btnClickPassive&quot;</span>&gt;</span>@click.passive<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">showName</span>: <span class=\"string\">&#x27;&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">clickShow</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;function clickShow&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">parentClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;parent click&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">childClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;child click&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnOnceClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;click once&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">dvselfClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;div self click&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">childBtnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    alert(<span class=\"string\">&#x27;child Btn Click&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnClickPassive</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;#&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.showName = <span class=\"built_in\">this</span>.userName;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 10. Computed计算属性","author":"OdinSam","abbrlink":"8c58","date":"2022-10-15T06:27:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. get 当模板读取fullname时，get会被调用，且返回值作为fullname的值\n2. get 的调用时机： 1. 初次读取fullname时 2.所有依赖的数据发生变化时 firstName lastName\n3. 相对于method实现，如果模板多个位置需要显示fullname时 method的方法会调用多次 而计算属性的get只调用一次\n4. 计算属性最终会出现在vm上可以直接使用，例如使用button直接修改fullname\n5. 如果修改计算属性，必须有set方法\n6. 如果计算属性只有get没有set则可以简写\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>10.计算属性</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <div id=\"root\">\n            <h2>vue 计算属性</h2>\n            <span>firstname</span\n            ><input type=\"text\" v-model=\"firstName\" /><br /><br />\n            <span>lastname</span\n            ><input type=\"text\" v-model=\"lastName\" /><br /><br />\n            <span>全名:{{fullname}}</span>\n            <button @click=\"btnClick\">直接修改计算属性fullname</button>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    firstName: 'odin',\n                    lastName: 'sam'\n                };\n            },\n            methods: {\n                btnClick() {\n                    this.fullname = 'suiji-shu';\n                }\n            },\n            computed: {\n                /*\n                1. get 当模板读取fullname时，get会被调用，且返回值作为fullname的值\n                2. get 的调用时机：  1. 初次读取fullname时  2.所有依赖的数据发生变化时 firstName  lastName\n                3. 相对于method实现，如果模板多个位置需要显示fullname时 method的方法会调用多次 而计算属性的get只调用一次\n                4. 计算属性最终会出现在vm上可以直接使用，例如使用button直接修改fullname\n                5. 如果修改计算属性，必须有set方法\n                */\n                fullname: {\n                    get() {\n                        return this.firstName + '-' + this.lastName;\n                    },\n                    set(value) {\n                        const arr = value.split('-');\n                        this.firstName = arr[0];\n                        this.lastName = arr[1];\n                    }\n                }\n                // 6. 如果计算属性只有get没有set则可以简写\n                // fullname(){\n                //     return this.firstName + '-' + this.lastName;\n                // }\n            }\n        });\n    </script>\n</html>\n\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-10-Computed计算属性.md","raw":"---\ntitle: Vue2.0 - 10. Computed计算属性\nauthor: OdinSam\ntags:\n  - vue2\n  - 计算属性\n  - computed\ncategories:\n  - 前端\n  - vue2\nabbrlink: 8c58\ndate: 2022-10-15 14:27:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. get 当模板读取fullname时，get会被调用，且返回值作为fullname的值\n2. get 的调用时机： 1. 初次读取fullname时 2.所有依赖的数据发生变化时 firstName lastName\n3. 相对于method实现，如果模板多个位置需要显示fullname时 method的方法会调用多次 而计算属性的get只调用一次\n4. 计算属性最终会出现在vm上可以直接使用，例如使用button直接修改fullname\n5. 如果修改计算属性，必须有set方法\n6. 如果计算属性只有get没有set则可以简写\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>10.计算属性</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <div id=\"root\">\n            <h2>vue 计算属性</h2>\n            <span>firstname</span\n            ><input type=\"text\" v-model=\"firstName\" /><br /><br />\n            <span>lastname</span\n            ><input type=\"text\" v-model=\"lastName\" /><br /><br />\n            <span>全名:{{fullname}}</span>\n            <button @click=\"btnClick\">直接修改计算属性fullname</button>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    firstName: 'odin',\n                    lastName: 'sam'\n                };\n            },\n            methods: {\n                btnClick() {\n                    this.fullname = 'suiji-shu';\n                }\n            },\n            computed: {\n                /*\n                1. get 当模板读取fullname时，get会被调用，且返回值作为fullname的值\n                2. get 的调用时机：  1. 初次读取fullname时  2.所有依赖的数据发生变化时 firstName  lastName\n                3. 相对于method实现，如果模板多个位置需要显示fullname时 method的方法会调用多次 而计算属性的get只调用一次\n                4. 计算属性最终会出现在vm上可以直接使用，例如使用button直接修改fullname\n                5. 如果修改计算属性，必须有set方法\n                */\n                fullname: {\n                    get() {\n                        return this.firstName + '-' + this.lastName;\n                    },\n                    set(value) {\n                        const arr = value.split('-');\n                        this.firstName = arr[0];\n                        this.lastName = arr[1];\n                    }\n                }\n                // 6. 如果计算属性只有get没有set则可以简写\n                // fullname(){\n                //     return this.firstName + '-' + this.lastName;\n                // }\n            }\n        });\n    </script>\n</html>\n\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-10-Computed计算属性","published":1,"updated":"2023-03-10T06:28:13.423Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2m001v5cs901m1by9m","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>get 当模板读取fullname时，get会被调用，且返回值作为fullname的值</li>\n<li>get 的调用时机： 1. 初次读取fullname时 2.所有依赖的数据发生变化时 firstName lastName</li>\n<li>相对于method实现，如果模板多个位置需要显示fullname时 method的方法会调用多次 而计算属性的get只调用一次</li>\n<li>计算属性最终会出现在vm上可以直接使用，例如使用button直接修改fullname</li>\n<li>如果修改计算属性，必须有set方法</li>\n<li>如果计算属性只有get没有set则可以简写</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>10.计算属性<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue 计算属性<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>firstname&lt;/span</span><br><span class=\"line\">            &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;firstName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>lastname&lt;/span</span><br><span class=\"line\">            &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;lastName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>全名:&#123;&#123;fullname&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick&quot;</span>&gt;</span>直接修改计算属性fullname<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;odin&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">lastName</span>: <span class=\"string\">&#x27;sam&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.fullname = <span class=\"string\">&#x27;suiji-shu&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">computed</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                1. get 当模板读取fullname时，get会被调用，且返回值作为fullname的值</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                2. get 的调用时机：  1. 初次读取fullname时  2.所有依赖的数据发生变化时 firstName  lastName</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                3. 相对于method实现，如果模板多个位置需要显示fullname时 method的方法会调用多次 而计算属性的get只调用一次</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                4. 计算属性最终会出现在vm上可以直接使用，例如使用button直接修改fullname</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                5. 如果修改计算属性，必须有set方法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                */</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">fullname</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.firstName + <span class=\"string\">&#x27;-&#x27;</span> + <span class=\"built_in\">this</span>.lastName;</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">const</span> arr = value.split(<span class=\"string\">&#x27;-&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.firstName = arr[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.lastName = arr[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 6. 如果计算属性只有get没有set则可以简写</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// fullname()&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">//     return this.firstName + &#x27;-&#x27; + this.lastName;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>get 当模板读取fullname时，get会被调用，且返回值作为fullname的值</li>\n<li>get 的调用时机： 1. 初次读取fullname时 2.所有依赖的数据发生变化时 firstName lastName</li>\n<li>相对于method实现，如果模板多个位置需要显示fullname时 method的方法会调用多次 而计算属性的get只调用一次</li>\n<li>计算属性最终会出现在vm上可以直接使用，例如使用button直接修改fullname</li>\n<li>如果修改计算属性，必须有set方法</li>\n<li>如果计算属性只有get没有set则可以简写</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>10.计算属性<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue 计算属性<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>firstname&lt;/span</span><br><span class=\"line\">            &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;firstName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>lastname&lt;/span</span><br><span class=\"line\">            &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;lastName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>全名:&#123;&#123;fullname&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick&quot;</span>&gt;</span>直接修改计算属性fullname<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;odin&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">lastName</span>: <span class=\"string\">&#x27;sam&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.fullname = <span class=\"string\">&#x27;suiji-shu&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">computed</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                1. get 当模板读取fullname时，get会被调用，且返回值作为fullname的值</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                2. get 的调用时机：  1. 初次读取fullname时  2.所有依赖的数据发生变化时 firstName  lastName</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                3. 相对于method实现，如果模板多个位置需要显示fullname时 method的方法会调用多次 而计算属性的get只调用一次</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                4. 计算属性最终会出现在vm上可以直接使用，例如使用button直接修改fullname</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                5. 如果修改计算属性，必须有set方法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                */</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">fullname</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.firstName + <span class=\"string\">&#x27;-&#x27;</span> + <span class=\"built_in\">this</span>.lastName;</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"keyword\">const</span> arr = value.split(<span class=\"string\">&#x27;-&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.firstName = arr[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.lastName = arr[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 6. 如果计算属性只有get没有set则可以简写</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// fullname()&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">//     return this.firstName + &#x27;-&#x27; + this.lastName;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 12. 样式的绑定","author":"OdinSam","abbrlink":"5a60","date":"2022-10-15T06:32:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. :class=’’ 可以绑定对应的class样式 可以是 字符串、数组、对象\n2. :style=’’ 可以绑定对应的style样式 可以是 直接绑定或者是数组、对象\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>12.样式绑定</title>\n        <script src=\"../js/vue.js\"></script>\n        <style>\n            .dvbasic {\n                width: 400px;\n                height: 200px;\n                border: 1px solid black;\n            }\n            .dv1 {\n                background-color: cadetblue;\n            }\n            .dv2 {\n                background-color: coral;\n            }\n            .dv3 {\n                background-color: rgb(222, 216, 50);\n            }\n            .ddvv1 {\n                background-color: rgb(30, 33, 32);\n            }\n            .ddvv2 {\n                color: rgb(241, 227, 227);\n            }\n            .ddvv3 {\n                font-size: 30px;\n            }\n        </style>\n    </head>\n    <body>\n        <!--\n            1. :class='' 可以绑定对应的class样式  可以是 字符串、数组、对象\n            2. :style='' 可以绑定对应的style样式  可以是 直接绑定或者是数组、对象\n        -->\n        <div id=\"root\">\n            <div class=\"dvbasic\" :class=\"dvClass\" @click=\"dv1Click\">\n                div1 - click :class 绑定class样式\n            </div>\n            <br />\n            <div class=\"dvbasic\" :class=\"dv2Class\" @click=\"dv2Click\">\n                div2 - click :class 绑定class样式 数组形式绑定\n            </div>\n            <br />\n            <div class=\"dvbasic\" :class=\"dv3Class\" @click=\"dv3Click\">\n                div3 - click :class 绑定class样式 对象形式绑定\n            </div>\n            <br />\n            <div class=\"dvbasic\" :style=\"{fontSize: fsize+'px'}\">\n                div4 - :style=\"{fontSize: fsize+'px'}\" 绑定style样式\n            </div>\n            <br />\n            <div class=\"dvbasic\" :style=\"styleObject\">\n                div4 - :style=\"styleObject\" 绑定style样式\n            </div>\n            <br />\n            <div class=\"dvbasic\" :style=\"styleArr\">\n                div5 - :style=\"styleArr\" 绑定style样式\n            </div>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    styleArr: [\n                        {\n                            fontSize: '30px'\n                        },\n                        {\n                            backgroundColor: 'green'\n                        }\n                    ],\n                    styleObject: {\n                        fontSize: '20px',\n                        backgroundColor: 'red'\n                    },\n                    fsize: 40,\n                    dvClass: '',\n                    dv2Class: [],\n                    dv3Class: { ddvv1: false, ddvv2: false, ddvv3: false },\n                    dv1ArrClass: ['dv1', 'dv2', 'dv3']\n                };\n            },\n            methods: {\n                dv1Click() {\n                    const index = Math.floor(Math.random() * 3);\n                    console.log(index);\n                    this.dvClass = this.dv1ArrClass[index];\n                },\n                dv2Click() {\n                    if (this.dv2Class.length === 0) {\n                        this.dv2Class.push('ddvv1');\n                        this.dv2Class.push('ddvv2');\n                        this.dv2Class.push('ddvv3');\n                    } else {\n                        this.dv2Class.shift();\n                        this.dv2Class.shift();\n                        this.dv2Class.shift();\n                    }\n                },\n                dv3Click() {\n                    this.dv3Class.ddvv1 = !this.dv3Class.ddvv1;\n                    this.dv3Class.ddvv2 = !this.dv3Class.ddvv2;\n                    this.dv3Class.ddvv3 = !this.dv3Class.ddvv3;\n                }\n            }\n        });\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-12-样式的绑定.md","raw":"title: Vue2.0 - 12. 样式的绑定\nauthor: OdinSam\ntags:\n  - class\n  - style\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: 5a60\ndate: 2022-10-15 14:32:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. :class=’’ 可以绑定对应的class样式 可以是 字符串、数组、对象\n2. :style=’’ 可以绑定对应的style样式 可以是 直接绑定或者是数组、对象\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>12.样式绑定</title>\n        <script src=\"../js/vue.js\"></script>\n        <style>\n            .dvbasic {\n                width: 400px;\n                height: 200px;\n                border: 1px solid black;\n            }\n            .dv1 {\n                background-color: cadetblue;\n            }\n            .dv2 {\n                background-color: coral;\n            }\n            .dv3 {\n                background-color: rgb(222, 216, 50);\n            }\n            .ddvv1 {\n                background-color: rgb(30, 33, 32);\n            }\n            .ddvv2 {\n                color: rgb(241, 227, 227);\n            }\n            .ddvv3 {\n                font-size: 30px;\n            }\n        </style>\n    </head>\n    <body>\n        <!--\n            1. :class='' 可以绑定对应的class样式  可以是 字符串、数组、对象\n            2. :style='' 可以绑定对应的style样式  可以是 直接绑定或者是数组、对象\n        -->\n        <div id=\"root\">\n            <div class=\"dvbasic\" :class=\"dvClass\" @click=\"dv1Click\">\n                div1 - click :class 绑定class样式\n            </div>\n            <br />\n            <div class=\"dvbasic\" :class=\"dv2Class\" @click=\"dv2Click\">\n                div2 - click :class 绑定class样式 数组形式绑定\n            </div>\n            <br />\n            <div class=\"dvbasic\" :class=\"dv3Class\" @click=\"dv3Click\">\n                div3 - click :class 绑定class样式 对象形式绑定\n            </div>\n            <br />\n            <div class=\"dvbasic\" :style=\"{fontSize: fsize+'px'}\">\n                div4 - :style=\"{fontSize: fsize+'px'}\" 绑定style样式\n            </div>\n            <br />\n            <div class=\"dvbasic\" :style=\"styleObject\">\n                div4 - :style=\"styleObject\" 绑定style样式\n            </div>\n            <br />\n            <div class=\"dvbasic\" :style=\"styleArr\">\n                div5 - :style=\"styleArr\" 绑定style样式\n            </div>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    styleArr: [\n                        {\n                            fontSize: '30px'\n                        },\n                        {\n                            backgroundColor: 'green'\n                        }\n                    ],\n                    styleObject: {\n                        fontSize: '20px',\n                        backgroundColor: 'red'\n                    },\n                    fsize: 40,\n                    dvClass: '',\n                    dv2Class: [],\n                    dv3Class: { ddvv1: false, ddvv2: false, ddvv3: false },\n                    dv1ArrClass: ['dv1', 'dv2', 'dv3']\n                };\n            },\n            methods: {\n                dv1Click() {\n                    const index = Math.floor(Math.random() * 3);\n                    console.log(index);\n                    this.dvClass = this.dv1ArrClass[index];\n                },\n                dv2Click() {\n                    if (this.dv2Class.length === 0) {\n                        this.dv2Class.push('ddvv1');\n                        this.dv2Class.push('ddvv2');\n                        this.dv2Class.push('ddvv3');\n                    } else {\n                        this.dv2Class.shift();\n                        this.dv2Class.shift();\n                        this.dv2Class.shift();\n                    }\n                },\n                dv3Click() {\n                    this.dv3Class.ddvv1 = !this.dv3Class.ddvv1;\n                    this.dv3Class.ddvv2 = !this.dv3Class.ddvv2;\n                    this.dv3Class.ddvv3 = !this.dv3Class.ddvv3;\n                }\n            }\n        });\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-12-样式的绑定","published":1,"updated":"2023-03-10T06:33:18.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2n001x5cs9gen4ff6p","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>:class=’’ 可以绑定对应的class样式 可以是 字符串、数组、对象</li>\n<li>:style=’’ 可以绑定对应的style样式 可以是 直接绑定或者是数组、对象</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>12.样式绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.dvbasic</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.dv1</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: cadetblue;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.dv2</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: coral;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.dv3</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">222</span>, <span class=\"number\">216</span>, <span class=\"number\">50</span>);</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.ddvv1</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">30</span>, <span class=\"number\">33</span>, <span class=\"number\">32</span>);</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.ddvv2</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">241</span>, <span class=\"number\">227</span>, <span class=\"number\">227</span>);</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.ddvv3</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1. :class=&#x27;&#x27; 可以绑定对应的class样式  可以是 字符串、数组、对象</span></span><br><span class=\"line\"><span class=\"comment\">            2. :style=&#x27;&#x27; 可以绑定对应的style样式  可以是 直接绑定或者是数组、对象</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;dvClass&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;dv1Click&quot;</span>&gt;</span></span><br><span class=\"line\">                div1 - click :class 绑定class样式</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;dv2Class&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;dv2Click&quot;</span>&gt;</span></span><br><span class=\"line\">                div2 - click :class 绑定class样式 数组形式绑定</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;dv3Class&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;dv3Click&quot;</span>&gt;</span></span><br><span class=\"line\">                div3 - click :class 绑定class样式 对象形式绑定</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;fontSize: fsize+&#x27;px&#x27;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">                div4 - :style=&quot;&#123;fontSize: fsize+&#x27;px&#x27;&#125;&quot; 绑定style样式</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;styleObject&quot;</span>&gt;</span></span><br><span class=\"line\">                div4 - :style=&quot;styleObject&quot; 绑定style样式</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;styleArr&quot;</span>&gt;</span></span><br><span class=\"line\">                div5 - :style=&quot;styleArr&quot; 绑定style样式</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">styleArr</span>: [</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"attr\">fontSize</span>: <span class=\"string\">&#x27;30px&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"attr\">backgroundColor</span>: <span class=\"string\">&#x27;green&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                    ],</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">styleObject</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">fontSize</span>: <span class=\"string\">&#x27;20px&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">backgroundColor</span>: <span class=\"string\">&#x27;red&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">fsize</span>: <span class=\"number\">40</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">dvClass</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">dv2Class</span>: [],</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">dv3Class</span>: &#123; <span class=\"attr\">ddvv1</span>: <span class=\"literal\">false</span>, <span class=\"attr\">ddvv2</span>: <span class=\"literal\">false</span>, <span class=\"attr\">ddvv3</span>: <span class=\"literal\">false</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">dv1ArrClass</span>: [<span class=\"string\">&#x27;dv1&#x27;</span>, <span class=\"string\">&#x27;dv2&#x27;</span>, <span class=\"string\">&#x27;dv3&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">dv1Click</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">const</span> index = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">3</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(index);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.dvClass = <span class=\"built_in\">this</span>.dv1ArrClass[index];</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">dv2Click</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.dv2Class.length === <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.push(<span class=\"string\">&#x27;ddvv1&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.push(<span class=\"string\">&#x27;ddvv2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.push(<span class=\"string\">&#x27;ddvv3&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.shift();</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.shift();</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.shift();</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">dv3Click</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.dv3Class.ddvv1 = !<span class=\"built_in\">this</span>.dv3Class.ddvv1;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.dv3Class.ddvv2 = !<span class=\"built_in\">this</span>.dv3Class.ddvv2;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.dv3Class.ddvv3 = !<span class=\"built_in\">this</span>.dv3Class.ddvv3;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>:class=’’ 可以绑定对应的class样式 可以是 字符串、数组、对象</li>\n<li>:style=’’ 可以绑定对应的style样式 可以是 直接绑定或者是数组、对象</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>12.样式绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.dvbasic</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid black;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.dv1</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: cadetblue;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.dv2</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: coral;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.dv3</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">222</span>, <span class=\"number\">216</span>, <span class=\"number\">50</span>);</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.ddvv1</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">30</span>, <span class=\"number\">33</span>, <span class=\"number\">32</span>);</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.ddvv2</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">241</span>, <span class=\"number\">227</span>, <span class=\"number\">227</span>);</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.ddvv3</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1. :class=&#x27;&#x27; 可以绑定对应的class样式  可以是 字符串、数组、对象</span></span><br><span class=\"line\"><span class=\"comment\">            2. :style=&#x27;&#x27; 可以绑定对应的style样式  可以是 直接绑定或者是数组、对象</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;dvClass&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;dv1Click&quot;</span>&gt;</span></span><br><span class=\"line\">                div1 - click :class 绑定class样式</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;dv2Class&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;dv2Click&quot;</span>&gt;</span></span><br><span class=\"line\">                div2 - click :class 绑定class样式 数组形式绑定</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:class</span>=<span class=\"string\">&quot;dv3Class&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;dv3Click&quot;</span>&gt;</span></span><br><span class=\"line\">                div3 - click :class 绑定class样式 对象形式绑定</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;fontSize: fsize+&#x27;px&#x27;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">                div4 - :style=&quot;&#123;fontSize: fsize+&#x27;px&#x27;&#125;&quot; 绑定style样式</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;styleObject&quot;</span>&gt;</span></span><br><span class=\"line\">                div4 - :style=&quot;styleObject&quot; 绑定style样式</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvbasic&quot;</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;styleArr&quot;</span>&gt;</span></span><br><span class=\"line\">                div5 - :style=&quot;styleArr&quot; 绑定style样式</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">styleArr</span>: [</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"attr\">fontSize</span>: <span class=\"string\">&#x27;30px&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"attr\">backgroundColor</span>: <span class=\"string\">&#x27;green&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                    ],</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">styleObject</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">fontSize</span>: <span class=\"string\">&#x27;20px&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">backgroundColor</span>: <span class=\"string\">&#x27;red&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">fsize</span>: <span class=\"number\">40</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">dvClass</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">dv2Class</span>: [],</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">dv3Class</span>: &#123; <span class=\"attr\">ddvv1</span>: <span class=\"literal\">false</span>, <span class=\"attr\">ddvv2</span>: <span class=\"literal\">false</span>, <span class=\"attr\">ddvv3</span>: <span class=\"literal\">false</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">dv1ArrClass</span>: [<span class=\"string\">&#x27;dv1&#x27;</span>, <span class=\"string\">&#x27;dv2&#x27;</span>, <span class=\"string\">&#x27;dv3&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">dv1Click</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">const</span> index = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">3</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(index);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.dvClass = <span class=\"built_in\">this</span>.dv1ArrClass[index];</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">dv2Click</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.dv2Class.length === <span class=\"number\">0</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.push(<span class=\"string\">&#x27;ddvv1&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.push(<span class=\"string\">&#x27;ddvv2&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.push(<span class=\"string\">&#x27;ddvv3&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.shift();</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.shift();</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.dv2Class.shift();</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">dv3Click</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.dv3Class.ddvv1 = !<span class=\"built_in\">this</span>.dv3Class.ddvv1;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.dv3Class.ddvv2 = !<span class=\"built_in\">this</span>.dv3Class.ddvv2;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.dv3Class.ddvv3 = !<span class=\"built_in\">this</span>.dv3Class.ddvv3;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 13. vue指令","author":"OdinSam","abbrlink":"227f","date":"2022-10-17T06:33:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. v-text 向所在的节点渲染文本内容，html 会原样输出不解析。 并且节点的原始内容会被替换相对于插值语法在此显得更加灵活\n2. v-html 在指定节点中渲染包含 html 结构的内容 容易导致xss攻击\n3. v-cloak 当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性。可搭配样式 [v-cloak]{ display:none; } 解决网速过慢页面展示{{xxx}}的问题\n4. v-once 所在节点在初始动态渲染后，就视为静止内容，以后数据的改动不会引起 v-once 所在的结构的更新，可用于优化性能。\n5. v-pre 跳过所在节点的编译过程，vue不在编译节点内容提升性能\n6. v-show 条件渲染 v-show=“bool值或者返回bool类型的表达式” 。 适用于切换较高的场景。DOM 未被移除，只是通过样式 display:none 隐藏\n7. v-if 条件渲染 v-if=“bool值或者返回bool类型的表达式” 。 适用于切换较低的场景。DOM 被移除，可能无法获取dom元素\n8. v-if 可搭配 v-else-if v-else 但是整体结构不能打断\n9. 整体渲染可以使用但是只能使用 v-if 不能使用v-show\n10. v-for 列表渲染 遍历数组 v-for=“item in array” :key=“item.id”\n11. v-for 列表渲染 遍历对象 v-for=\"(v,k) in object\" :key=“k”\n12. v-for 列表渲染 遍历字符串 v-for=\"(char,index) in string\" :key=“index”\n13. v-for 列表渲染 遍历数值(次数) v-for=\"(num,index) in number\" :key=“index”\n14. key是虚拟dom的标识，当数据发生变化时，会依据key做dom的diff比较运行。如果key使用index在数组进行了逆序的添加、删除等操作破坏了原有顺序会发生bug\n15. key一般最好使用id、手机号、身份证号等唯一标识\n16. 如果没有逆序操作，使用index作为key的值夜没有问题\n17. 自定义指令 示例：\n指令名定义时不加 v- ，使用时加 v-\n指令名如果是多个单词，需要使用 kebab-case 命名方式，不要用驼峰命名\n\n第一种写法\n```js new vue中配置\ndirectives: {\n    big(ele, binding) {\n        // 第一次调用: 当指令与元素成功绑定  第n次调用: 当指令所在模板被重新解析时\n        ele.innerText = binding.value * 10;\n    }\n    //对象是\n}\n```\n\n第二种写法\n\n```js\nbig: {\n    bind() {\n        console.log(\n            '1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素'\n        );\n    },\n    inserted() {\n        console.log(\n            '1或n次调用 - 指令所在的元素被插入页面时调用'\n        );\n    },\n    update() {\n        console.log('1或n次调用: 当指令所在模板被重新解析时');\n    }\n}\n```\n\n全局写法\n\nvm.directive('指令名',配置对象) 或 vm.directive(‘指令名’,回调函数)\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>13.内置指令</title>\n        <script src=\"../js/vue.js\"></script>\n        <style>\n            #root {\n                display: flex;\n                justify-content: space-evenly;\n            }\n            .conditiondv {\n                width: 200px;\n                height: 200px;\n                background-color: bisque;\n            }\n            [v-cloak] {\n                display: none;\n            }\n        </style>\n    </head>\n    <body>\n        <div id=\"root\">\n            <!-- \n                ### 数据绑定\n                1. v-text 向所在的节点渲染文本内容，html 会原样输出不解析。 并且节点的原始内容会被替换（ {{}} 插值语法在此显得更加灵活 ）\n                2. v-html 在指定节点中渲染包含 html 结构的内容 容易导致xss攻击\n                3. v-cloak 当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性。可搭配样式 [v-cloak]{ display:none; } 解决网速过慢页面展示{{xxx}}的问题\n                4. v-once 所在节点在初始动态渲染后，就视为静止内容，以后数据的改动不会引起 v-once 所在的结构的更新，可用于优化性能。\n                5. v-pre 跳过所在节点的编译过程，vue不在编译节点内容提升性能\n            -->\n            <div>\n                <span>v-text</span>\n                <span v-text=\"vtext\">span原有内容</span>\n                <br />\n                <span>v-html</span>\n                <span v-html=\"vhtml\"></span>\n                <br />\n                <span>v-cloak</span>\n                <span v-cloak\n                    >当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性</span\n                >\n                <br />\n                <span>v-once</span>\n                <span v-once>初始onceNum为 {{onceNum}}</span>\n                <span>onceNum当前值为 {{onceNum}}</span>\n                <button @click=\"btnAddNum\">btnAddNum</button>\n                <br />\n                <span v-pre\n                    >跳过所在节点的编译过程，vue不在编译节点内容提升性能</span\n                >\n            </div>\n            <!--\n                ### 条件渲染\n                6. v-show 条件渲染  v-show=\"bool值或者返回bool类型的表达式\" 。  适用于切换较高的场景。DOM 未被移除，只是通过样式 display:none 隐藏\n                7. v-if 条件渲染   v-if=\"bool值或者返回bool类型的表达式\" 。 适用于切换较低的场景。DOM 被移除，可能无法获取dom元素\n                8. v-if 可搭配 v-else-if v-else 但是整体结构不能打断\n                9. 整体渲染可以使用 <template></template> 但是只能使用 v-if 不能使用v-show\n            -->\n            <div>\n                <span>条件渲染</span>\n                <div v-show=\"vshow\" class=\"conditiondv\">v-show=\"vshow\"</div>\n                <button @click=\"vshowBtnClick\">v-show</button><br /><br />\n                <div v-if=\"vif\" class=\"conditiondv\">v-if=\"vif\"</div>\n                <button @click=\"vifBtnClick\">v-show</button>\n                <div v-if=\"num===1\" class=\"conditiondv\">v-if=\"num===1\"</div>\n                <!--<div>整体结构不能打断</div>-->\n                <div v-else-if=\"num===2\" class=\"conditiondv\">\n                    v-else-if=\"num===2\"\n                </div>\n                <div v-else class=\"conditiondv\">v-else</div>\n                <button @click=\"conditionClick\">conditionClick</button>\n            </div>\n            <!--\n                ### 列表渲染\n                10. v-for 列表渲染 遍历数组 v-for=\"item in array\" :key=\"item.id\" \n                11. v-for 列表渲染 遍历对象 v-for=\"(v,k) in object\" :key=\"k\"\n                12. v-for 列表渲染 遍历字符串 v-for=\"(char,index) in string\" :key=\"index\"\n                13. v-for 列表渲染 遍历数值(次数) v-for=\"(num,index) in number\" :key=\"index\"\n                14. key是虚拟dom的标识，当数据发生变化时，会依据key做dom的diff比较运行。如果key使用index在数组进行了逆序的添加、删除等操作破坏了原有顺序会发生bug\n                15. key一般最好使用id、手机号、身份证号等唯一标识\n                16. 如果没有逆序操作，使用index作为key的值夜没有问题\n\n            -->\n            <div>\n                <span>遍历数组 v-for=\"item in array\" :key=\"item.id\" </span>\n                <ul>\n                    <li v-for=\"(user,index) in users\" :key=\"user.id\">\n                        index:{{index}} id:{{user.id}} 姓名:{{user.name}}\n                        年龄:{{user.age}}\n                    </li>\n                </ul>\n                <span>遍历对象 v-for=\"(v,k) in object\" :key=\"k\"</span>\n                <ul>\n                    <li v-for=\"(v,k) in users[0]\" :key=\"k\">\n                        key:{{k}} value:{{v}}\n                    </li>\n                </ul>\n                <span\n                    >遍历字符串 v-for=\"(char,index) in string\"\n                    :key=\"index\"</span\n                >\n                <ul>\n                    <li v-for=\"(char,index) in users[0].name\" :key=\"index\">\n                        char:{{char}} index:{{index}}\n                    </li>\n                </ul>\n                <span\n                    >遍历数值(次数) v-for=\"(num,index) in number\"\n                    :key=\"index\"</span\n                >\n                <ul>\n                    <li v-for=\"(number,index) in 5\" :key=\"index\">\n                        number:{{number}} index:{{index}}\n                    </li>\n                </ul>\n            </div>\n            <div>\n                <!--\n                    17. 自定义指令 示例： <span v-big=\"customNum\"></span>\n                        指令名定义时不加 v- ，使用时加 v-\n                        指令名如果是多个单词，需要使用 kebab-case 命名方式，不要用驼峰命名\n                    第一种写法 \n                    new vue中配置\n                    directives: {\n                        big(ele, binding) {\n                            // 第一次调用: 当指令与元素成功绑定  第n次调用: 当指令所在模板被重新解析时\n                            ele.innerText = binding.value * 10;\n                        }\n                        //对象是\n                    }\n                    第二种写法\n                    big: {\n                        bind(ele, binding) {\n                            console.log(\n                                '1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素'\n                            );\n                        },\n                        inserted(ele, binding) {\n                            console.log(\n                                '1或n次调用 - 指令所在的元素被插入页面时调用'\n                            );\n                        },\n                        update(ele, binding) {\n                            console.log('1或n次调用: 当指令所在模板被重新解析时');\n                        }\n                    }\n                    全局写法\n                    vm.$directive('指令名',配置对象) 或 vm.$directive('指令名',回调函数)\n                -->\n                <span>自定义指令</span>\n                <span>customNum:{{customNum}}</span>\n                <br />\n                <span>放大10倍后的值:</span><span v-big=\"customNum\"></span>\n                <br />\n                <button @click=\"btnCustomNumAdd\">btnCustomNumAdd</button>\n            </div>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    customNum: 5,\n                    onceNum: 1,\n                    num: 1,\n                    vtext: '<span>vtext指令</span>',\n                    vhtml: '<a href=\"http://odinsam.com\">v-html容易导致xss攻击</a>',\n                    vshow: true,\n                    vif: true,\n                    users: [\n                        { id: 'no1', name: 'odinsam1', age: 29 },\n                        { id: 'no2', name: 'odinsam2', age: 14 },\n                        { id: 'no3', name: 'odinsam3', age: 26 }\n                    ]\n                };\n            },\n            methods: {\n                vshowBtnClick() {\n                    console.log('function vshowBtnClick');\n                    this.vshow = !this.vshow;\n                },\n                vifBtnClick() {\n                    console.log('function vifBtnClick');\n                    this.vif = !this.vif;\n                },\n                conditionClick() {\n                    this.num++;\n                    if (this.num > 3) this.num = 1;\n                },\n                btnAddNum() {\n                    this.onceNum++;\n                },\n                btnCustomNumAdd() {\n                    this.customNum++;\n                }\n            },\n            directives: {\n                // big(ele, binding) {\n                //     ele.innerText = binding.value * 10;\n                // }\n                big: {\n                    bind(ele, binding) {\n                        console.log(\n                            '1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素'\n                        );\n                    },\n                    inserted(ele, binding) {\n                        console.log(\n                            '1或n次调用 - 指令所在的元素被插入页面时调用'\n                        );\n                    },\n                    update(ele, binding) {\n                        console.log('1或n次调用: 当指令所在模板被重新解析时');\n                    }\n                }\n            }\n        });\n    </script>\n</html>\n\n```\n\n\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-13-vue指令.md","raw":"title: Vue2.0 - 13. vue指令\nauthor: OdinSam\ntags:\n  - v-指令\n  - vue2\n  - 指令\ncategories:\n  - 前端\n  - vue2\nabbrlink: 227f\ndate: 2022-10-17 14:33:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. v-text 向所在的节点渲染文本内容，html 会原样输出不解析。 并且节点的原始内容会被替换相对于插值语法在此显得更加灵活\n2. v-html 在指定节点中渲染包含 html 结构的内容 容易导致xss攻击\n3. v-cloak 当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性。可搭配样式 [v-cloak]{ display:none; } 解决网速过慢页面展示{{xxx}}的问题\n4. v-once 所在节点在初始动态渲染后，就视为静止内容，以后数据的改动不会引起 v-once 所在的结构的更新，可用于优化性能。\n5. v-pre 跳过所在节点的编译过程，vue不在编译节点内容提升性能\n6. v-show 条件渲染 v-show=“bool值或者返回bool类型的表达式” 。 适用于切换较高的场景。DOM 未被移除，只是通过样式 display:none 隐藏\n7. v-if 条件渲染 v-if=“bool值或者返回bool类型的表达式” 。 适用于切换较低的场景。DOM 被移除，可能无法获取dom元素\n8. v-if 可搭配 v-else-if v-else 但是整体结构不能打断\n9. 整体渲染可以使用但是只能使用 v-if 不能使用v-show\n10. v-for 列表渲染 遍历数组 v-for=“item in array” :key=“item.id”\n11. v-for 列表渲染 遍历对象 v-for=\"(v,k) in object\" :key=“k”\n12. v-for 列表渲染 遍历字符串 v-for=\"(char,index) in string\" :key=“index”\n13. v-for 列表渲染 遍历数值(次数) v-for=\"(num,index) in number\" :key=“index”\n14. key是虚拟dom的标识，当数据发生变化时，会依据key做dom的diff比较运行。如果key使用index在数组进行了逆序的添加、删除等操作破坏了原有顺序会发生bug\n15. key一般最好使用id、手机号、身份证号等唯一标识\n16. 如果没有逆序操作，使用index作为key的值夜没有问题\n17. 自定义指令 示例：\n指令名定义时不加 v- ，使用时加 v-\n指令名如果是多个单词，需要使用 kebab-case 命名方式，不要用驼峰命名\n\n第一种写法\n```js new vue中配置\ndirectives: {\n    big(ele, binding) {\n        // 第一次调用: 当指令与元素成功绑定  第n次调用: 当指令所在模板被重新解析时\n        ele.innerText = binding.value * 10;\n    }\n    //对象是\n}\n```\n\n第二种写法\n\n```js\nbig: {\n    bind() {\n        console.log(\n            '1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素'\n        );\n    },\n    inserted() {\n        console.log(\n            '1或n次调用 - 指令所在的元素被插入页面时调用'\n        );\n    },\n    update() {\n        console.log('1或n次调用: 当指令所在模板被重新解析时');\n    }\n}\n```\n\n全局写法\n\nvm.directive('指令名',配置对象) 或 vm.directive(‘指令名’,回调函数)\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>13.内置指令</title>\n        <script src=\"../js/vue.js\"></script>\n        <style>\n            #root {\n                display: flex;\n                justify-content: space-evenly;\n            }\n            .conditiondv {\n                width: 200px;\n                height: 200px;\n                background-color: bisque;\n            }\n            [v-cloak] {\n                display: none;\n            }\n        </style>\n    </head>\n    <body>\n        <div id=\"root\">\n            <!-- \n                ### 数据绑定\n                1. v-text 向所在的节点渲染文本内容，html 会原样输出不解析。 并且节点的原始内容会被替换（ {{}} 插值语法在此显得更加灵活 ）\n                2. v-html 在指定节点中渲染包含 html 结构的内容 容易导致xss攻击\n                3. v-cloak 当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性。可搭配样式 [v-cloak]{ display:none; } 解决网速过慢页面展示{{xxx}}的问题\n                4. v-once 所在节点在初始动态渲染后，就视为静止内容，以后数据的改动不会引起 v-once 所在的结构的更新，可用于优化性能。\n                5. v-pre 跳过所在节点的编译过程，vue不在编译节点内容提升性能\n            -->\n            <div>\n                <span>v-text</span>\n                <span v-text=\"vtext\">span原有内容</span>\n                <br />\n                <span>v-html</span>\n                <span v-html=\"vhtml\"></span>\n                <br />\n                <span>v-cloak</span>\n                <span v-cloak\n                    >当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性</span\n                >\n                <br />\n                <span>v-once</span>\n                <span v-once>初始onceNum为 {{onceNum}}</span>\n                <span>onceNum当前值为 {{onceNum}}</span>\n                <button @click=\"btnAddNum\">btnAddNum</button>\n                <br />\n                <span v-pre\n                    >跳过所在节点的编译过程，vue不在编译节点内容提升性能</span\n                >\n            </div>\n            <!--\n                ### 条件渲染\n                6. v-show 条件渲染  v-show=\"bool值或者返回bool类型的表达式\" 。  适用于切换较高的场景。DOM 未被移除，只是通过样式 display:none 隐藏\n                7. v-if 条件渲染   v-if=\"bool值或者返回bool类型的表达式\" 。 适用于切换较低的场景。DOM 被移除，可能无法获取dom元素\n                8. v-if 可搭配 v-else-if v-else 但是整体结构不能打断\n                9. 整体渲染可以使用 <template></template> 但是只能使用 v-if 不能使用v-show\n            -->\n            <div>\n                <span>条件渲染</span>\n                <div v-show=\"vshow\" class=\"conditiondv\">v-show=\"vshow\"</div>\n                <button @click=\"vshowBtnClick\">v-show</button><br /><br />\n                <div v-if=\"vif\" class=\"conditiondv\">v-if=\"vif\"</div>\n                <button @click=\"vifBtnClick\">v-show</button>\n                <div v-if=\"num===1\" class=\"conditiondv\">v-if=\"num===1\"</div>\n                <!--<div>整体结构不能打断</div>-->\n                <div v-else-if=\"num===2\" class=\"conditiondv\">\n                    v-else-if=\"num===2\"\n                </div>\n                <div v-else class=\"conditiondv\">v-else</div>\n                <button @click=\"conditionClick\">conditionClick</button>\n            </div>\n            <!--\n                ### 列表渲染\n                10. v-for 列表渲染 遍历数组 v-for=\"item in array\" :key=\"item.id\" \n                11. v-for 列表渲染 遍历对象 v-for=\"(v,k) in object\" :key=\"k\"\n                12. v-for 列表渲染 遍历字符串 v-for=\"(char,index) in string\" :key=\"index\"\n                13. v-for 列表渲染 遍历数值(次数) v-for=\"(num,index) in number\" :key=\"index\"\n                14. key是虚拟dom的标识，当数据发生变化时，会依据key做dom的diff比较运行。如果key使用index在数组进行了逆序的添加、删除等操作破坏了原有顺序会发生bug\n                15. key一般最好使用id、手机号、身份证号等唯一标识\n                16. 如果没有逆序操作，使用index作为key的值夜没有问题\n\n            -->\n            <div>\n                <span>遍历数组 v-for=\"item in array\" :key=\"item.id\" </span>\n                <ul>\n                    <li v-for=\"(user,index) in users\" :key=\"user.id\">\n                        index:{{index}} id:{{user.id}} 姓名:{{user.name}}\n                        年龄:{{user.age}}\n                    </li>\n                </ul>\n                <span>遍历对象 v-for=\"(v,k) in object\" :key=\"k\"</span>\n                <ul>\n                    <li v-for=\"(v,k) in users[0]\" :key=\"k\">\n                        key:{{k}} value:{{v}}\n                    </li>\n                </ul>\n                <span\n                    >遍历字符串 v-for=\"(char,index) in string\"\n                    :key=\"index\"</span\n                >\n                <ul>\n                    <li v-for=\"(char,index) in users[0].name\" :key=\"index\">\n                        char:{{char}} index:{{index}}\n                    </li>\n                </ul>\n                <span\n                    >遍历数值(次数) v-for=\"(num,index) in number\"\n                    :key=\"index\"</span\n                >\n                <ul>\n                    <li v-for=\"(number,index) in 5\" :key=\"index\">\n                        number:{{number}} index:{{index}}\n                    </li>\n                </ul>\n            </div>\n            <div>\n                <!--\n                    17. 自定义指令 示例： <span v-big=\"customNum\"></span>\n                        指令名定义时不加 v- ，使用时加 v-\n                        指令名如果是多个单词，需要使用 kebab-case 命名方式，不要用驼峰命名\n                    第一种写法 \n                    new vue中配置\n                    directives: {\n                        big(ele, binding) {\n                            // 第一次调用: 当指令与元素成功绑定  第n次调用: 当指令所在模板被重新解析时\n                            ele.innerText = binding.value * 10;\n                        }\n                        //对象是\n                    }\n                    第二种写法\n                    big: {\n                        bind(ele, binding) {\n                            console.log(\n                                '1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素'\n                            );\n                        },\n                        inserted(ele, binding) {\n                            console.log(\n                                '1或n次调用 - 指令所在的元素被插入页面时调用'\n                            );\n                        },\n                        update(ele, binding) {\n                            console.log('1或n次调用: 当指令所在模板被重新解析时');\n                        }\n                    }\n                    全局写法\n                    vm.$directive('指令名',配置对象) 或 vm.$directive('指令名',回调函数)\n                -->\n                <span>自定义指令</span>\n                <span>customNum:{{customNum}}</span>\n                <br />\n                <span>放大10倍后的值:</span><span v-big=\"customNum\"></span>\n                <br />\n                <button @click=\"btnCustomNumAdd\">btnCustomNumAdd</button>\n            </div>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    customNum: 5,\n                    onceNum: 1,\n                    num: 1,\n                    vtext: '<span>vtext指令</span>',\n                    vhtml: '<a href=\"http://odinsam.com\">v-html容易导致xss攻击</a>',\n                    vshow: true,\n                    vif: true,\n                    users: [\n                        { id: 'no1', name: 'odinsam1', age: 29 },\n                        { id: 'no2', name: 'odinsam2', age: 14 },\n                        { id: 'no3', name: 'odinsam3', age: 26 }\n                    ]\n                };\n            },\n            methods: {\n                vshowBtnClick() {\n                    console.log('function vshowBtnClick');\n                    this.vshow = !this.vshow;\n                },\n                vifBtnClick() {\n                    console.log('function vifBtnClick');\n                    this.vif = !this.vif;\n                },\n                conditionClick() {\n                    this.num++;\n                    if (this.num > 3) this.num = 1;\n                },\n                btnAddNum() {\n                    this.onceNum++;\n                },\n                btnCustomNumAdd() {\n                    this.customNum++;\n                }\n            },\n            directives: {\n                // big(ele, binding) {\n                //     ele.innerText = binding.value * 10;\n                // }\n                big: {\n                    bind(ele, binding) {\n                        console.log(\n                            '1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素'\n                        );\n                    },\n                    inserted(ele, binding) {\n                        console.log(\n                            '1或n次调用 - 指令所在的元素被插入页面时调用'\n                        );\n                    },\n                    update(ele, binding) {\n                        console.log('1或n次调用: 当指令所在模板被重新解析时');\n                    }\n                }\n            }\n        });\n    </script>\n</html>\n\n```\n\n\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-13-vue指令","published":1,"updated":"2023-03-10T06:38:22.484Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2o001z5cs985qc7paz","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>v-text 向所在的节点渲染文本内容，html 会原样输出不解析。 并且节点的原始内容会被替换相对于插值语法在此显得更加灵活</li>\n<li>v-html 在指定节点中渲染包含 html 结构的内容 容易导致xss攻击</li>\n<li>v-cloak 当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性。可搭配样式 [v-cloak]{ display:none; } 解决网速过慢页面展示的问题</li>\n<li>v-once 所在节点在初始动态渲染后，就视为静止内容，以后数据的改动不会引起 v-once 所在的结构的更新，可用于优化性能。</li>\n<li>v-pre 跳过所在节点的编译过程，vue不在编译节点内容提升性能</li>\n<li>v-show 条件渲染 v-show=“bool值或者返回bool类型的表达式” 。 适用于切换较高的场景。DOM 未被移除，只是通过样式 display:none 隐藏</li>\n<li>v-if 条件渲染 v-if=“bool值或者返回bool类型的表达式” 。 适用于切换较低的场景。DOM 被移除，可能无法获取dom元素</li>\n<li>v-if 可搭配 v-else-if v-else 但是整体结构不能打断</li>\n<li>整体渲染可以使用但是只能使用 v-if 不能使用v-show</li>\n<li>v-for 列表渲染 遍历数组 v-for=“item in array” :key=“<a href=\"http://item.id\">item.id</a>”</li>\n<li>v-for 列表渲染 遍历对象 v-for=&quot;(v,k) in object&quot; :key=“k”</li>\n<li>v-for 列表渲染 遍历字符串 v-for=&quot;(char,index) in string&quot; :key=“index”</li>\n<li>v-for 列表渲染 遍历数值(次数) v-for=&quot;(num,index) in number&quot; :key=“index”</li>\n<li>key是虚拟dom的标识，当数据发生变化时，会依据key做dom的diff比较运行。如果key使用index在数组进行了逆序的添加、删除等操作破坏了原有顺序会发生bug</li>\n<li>key一般最好使用id、手机号、身份证号等唯一标识</li>\n<li>如果没有逆序操作，使用index作为key的值夜没有问题</li>\n<li>自定义指令 示例：<br />\n指令名定义时不加 v- ，使用时加 v-<br />\n指令名如果是多个单词，需要使用 kebab-case 命名方式，不要用驼峰命名</li>\n</ol>\n<p>第一种写法</p>\n<figure class=\"highlight js\"><figcaption><span>new vue中配置</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">directives: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">big</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 第一次调用: 当指令与元素成功绑定  第n次调用: 当指令所在模板被重新解析时</span></span><br><span class=\"line\">        ele.innerText = binding.value * <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//对象是</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第二种写法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">big: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">bind</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">            <span class=\"string\">&#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">inserted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">            <span class=\"string\">&#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">update</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>全局写法</p>\n<p>vm.directive(‘指令名’,配置对象) 或 vm.directive(‘指令名’,回调函数)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>13.内置指令<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-id\">#root</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">justify-content</span>: space-evenly;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.conditiondv</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: bisque;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-attr\">[v-cloak]</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">                ### 数据绑定</span></span><br><span class=\"line\"><span class=\"comment\">                1. v-text 向所在的节点渲染文本内容，html 会原样输出不解析。 并且节点的原始内容会被替换（ &#123;&#123;&#125;&#125; 插值语法在此显得更加灵活 ）</span></span><br><span class=\"line\"><span class=\"comment\">                2. v-html 在指定节点中渲染包含 html 结构的内容 容易导致xss攻击</span></span><br><span class=\"line\"><span class=\"comment\">                3. v-cloak 当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性。可搭配样式 [v-cloak]&#123; display:none; &#125; 解决网速过慢页面展示&#123;&#123;xxx&#125;&#125;的问题</span></span><br><span class=\"line\"><span class=\"comment\">                4. v-once 所在节点在初始动态渲染后，就视为静止内容，以后数据的改动不会引起 v-once 所在的结构的更新，可用于优化性能。</span></span><br><span class=\"line\"><span class=\"comment\">                5. v-pre 跳过所在节点的编译过程，vue不在编译节点内容提升性能</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>v-text<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-text</span>=<span class=\"string\">&quot;vtext&quot;</span>&gt;</span>span原有内容<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>v-html<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;vhtml&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>v-cloak<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-cloak</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>v-once<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-once</span>&gt;</span>初始onceNum为 &#123;&#123;onceNum&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>onceNum当前值为 &#123;&#123;onceNum&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnAddNum&quot;</span>&gt;</span>btnAddNum<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-pre</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>跳过所在节点的编译过程，vue不在编译节点内容提升性能&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                ### 条件渲染</span></span><br><span class=\"line\"><span class=\"comment\">                6. v-show 条件渲染  v-show=&quot;bool值或者返回bool类型的表达式&quot; 。  适用于切换较高的场景。DOM 未被移除，只是通过样式 display:none 隐藏</span></span><br><span class=\"line\"><span class=\"comment\">                7. v-if 条件渲染   v-if=&quot;bool值或者返回bool类型的表达式&quot; 。 适用于切换较低的场景。DOM 被移除，可能无法获取dom元素</span></span><br><span class=\"line\"><span class=\"comment\">                8. v-if 可搭配 v-else-if v-else 但是整体结构不能打断</span></span><br><span class=\"line\"><span class=\"comment\">                9. 整体渲染可以使用 &lt;template&gt;&lt;/template&gt; 但是只能使用 v-if 不能使用v-show</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>条件渲染<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;vshow&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span>v-show=&quot;vshow&quot;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;vshowBtnClick&quot;</span>&gt;</span>v-show<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;vif&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span>v-if=&quot;vif&quot;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;vifBtnClick&quot;</span>&gt;</span>v-show<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;num===1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span>v-if=&quot;num===1&quot;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--&lt;div&gt;整体结构不能打断&lt;/div&gt;--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;num===2&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span></span><br><span class=\"line\">                    v-else-if=&quot;num===2&quot;</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span>v-else<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;conditionClick&quot;</span>&gt;</span>conditionClick<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                ### 列表渲染</span></span><br><span class=\"line\"><span class=\"comment\">                10. v-for 列表渲染 遍历数组 v-for=&quot;item in array&quot; :key=&quot;item.id&quot; </span></span><br><span class=\"line\"><span class=\"comment\">                11. v-for 列表渲染 遍历对象 v-for=&quot;(v,k) in object&quot; :key=&quot;k&quot;</span></span><br><span class=\"line\"><span class=\"comment\">                12. v-for 列表渲染 遍历字符串 v-for=&quot;(char,index) in string&quot; :key=&quot;index&quot;</span></span><br><span class=\"line\"><span class=\"comment\">                13. v-for 列表渲染 遍历数值(次数) v-for=&quot;(num,index) in number&quot; :key=&quot;index&quot;</span></span><br><span class=\"line\"><span class=\"comment\">                14. key是虚拟dom的标识，当数据发生变化时，会依据key做dom的diff比较运行。如果key使用index在数组进行了逆序的添加、删除等操作破坏了原有顺序会发生bug</span></span><br><span class=\"line\"><span class=\"comment\">                15. key一般最好使用id、手机号、身份证号等唯一标识</span></span><br><span class=\"line\"><span class=\"comment\">                16. 如果没有逆序操作，使用index作为key的值夜没有问题</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>遍历数组 v-for=&quot;item in array&quot; :key=&quot;item.id&quot; <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(user,index) in users&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;user.id&quot;</span>&gt;</span></span><br><span class=\"line\">                        index:&#123;&#123;index&#125;&#125; id:&#123;&#123;user.id&#125;&#125; 姓名:&#123;&#123;user.name&#125;&#125;</span><br><span class=\"line\">                        年龄:&#123;&#123;user.age&#125;&#125;</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>遍历对象 v-for=&quot;(v,k) in object&quot; :key=&quot;k&quot;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(v,k) in users[0]&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;k&quot;</span>&gt;</span></span><br><span class=\"line\">                        key:&#123;&#123;k&#125;&#125; value:&#123;&#123;v&#125;&#125;</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>遍历字符串 v-for=&quot;(char,index) in string&quot;</span><br><span class=\"line\">                    :key=&quot;index&quot;&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(char,index) in users[0].name&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span></span><br><span class=\"line\">                        char:&#123;&#123;char&#125;&#125; index:&#123;&#123;index&#125;&#125;</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>遍历数值(次数) v-for=&quot;(num,index) in number&quot;</span><br><span class=\"line\">                    :key=&quot;index&quot;&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(number,index) in 5&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span></span><br><span class=\"line\">                        number:&#123;&#123;number&#125;&#125; index:&#123;&#123;index&#125;&#125;</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                    17. 自定义指令 示例： &lt;span v-big=&quot;customNum&quot;&gt;&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                        指令名定义时不加 v- ，使用时加 v-</span></span><br><span class=\"line\"><span class=\"comment\">                        指令名如果是多个单词，需要使用 kebab-case 命名方式，不要用驼峰命名</span></span><br><span class=\"line\"><span class=\"comment\">                    第一种写法 </span></span><br><span class=\"line\"><span class=\"comment\">                    new vue中配置</span></span><br><span class=\"line\"><span class=\"comment\">                    directives: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                        big(ele, binding) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                            // 第一次调用: 当指令与元素成功绑定  第n次调用: 当指令所在模板被重新解析时</span></span><br><span class=\"line\"><span class=\"comment\">                            ele.innerText = binding.value * 10;</span></span><br><span class=\"line\"><span class=\"comment\">                        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                        //对象是</span></span><br><span class=\"line\"><span class=\"comment\">                    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                    第二种写法</span></span><br><span class=\"line\"><span class=\"comment\">                    big: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                        bind(ele, binding) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                            console.log(</span></span><br><span class=\"line\"><span class=\"comment\">                                &#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">                            );</span></span><br><span class=\"line\"><span class=\"comment\">                        &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">                        inserted(ele, binding) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                            console.log(</span></span><br><span class=\"line\"><span class=\"comment\">                                &#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">                            );</span></span><br><span class=\"line\"><span class=\"comment\">                        &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">                        update(ele, binding) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                            console.log(&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;);</span></span><br><span class=\"line\"><span class=\"comment\">                        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                    全局写法</span></span><br><span class=\"line\"><span class=\"comment\">                    vm.$directive(&#x27;指令名&#x27;,配置对象) 或 vm.$directive(&#x27;指令名&#x27;,回调函数)</span></span><br><span class=\"line\"><span class=\"comment\">                --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>自定义指令<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>customNum:&#123;&#123;customNum&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>放大10倍后的值:<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-big</span>=<span class=\"string\">&quot;customNum&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnCustomNumAdd&quot;</span>&gt;</span>btnCustomNumAdd<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">customNum</span>: <span class=\"number\">5</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">onceNum</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">num</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">vtext</span>: <span class=\"string\">&#x27;&lt;span&gt;vtext指令&lt;/span&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">vhtml</span>: <span class=\"string\">&#x27;&lt;a href=&quot;http://odinsam.com&quot;&gt;v-html容易导致xss攻击&lt;/a&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">vshow</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">vif</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">users</span>: [</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123; <span class=\"attr\">id</span>: <span class=\"string\">&#x27;no1&#x27;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam1&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">29</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123; <span class=\"attr\">id</span>: <span class=\"string\">&#x27;no2&#x27;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam2&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">14</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123; <span class=\"attr\">id</span>: <span class=\"string\">&#x27;no3&#x27;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam3&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">26</span> &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                    ]</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">vshowBtnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function vshowBtnClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.vshow = !<span class=\"built_in\">this</span>.vshow;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">vifBtnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function vifBtnClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.vif = !<span class=\"built_in\">this</span>.vif;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">conditionClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.num++;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.num &gt; <span class=\"number\">3</span>) <span class=\"built_in\">this</span>.num = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnAddNum</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.onceNum++;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnCustomNumAdd</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.customNum++;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">directives</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// big(ele, binding) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">//     ele.innerText = binding.value * 10;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">big</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">bind</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">&#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">inserted</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">&#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">update</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>v-text 向所在的节点渲染文本内容，html 会原样输出不解析。 并且节点的原始内容会被替换相对于插值语法在此显得更加灵活</li>\n<li>v-html 在指定节点中渲染包含 html 结构的内容 容易导致xss攻击</li>\n<li>v-cloak 当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性。可搭配样式 [v-cloak]{ display:none; } 解决网速过慢页面展示的问题</li>\n<li>v-once 所在节点在初始动态渲染后，就视为静止内容，以后数据的改动不会引起 v-once 所在的结构的更新，可用于优化性能。</li>\n<li>v-pre 跳过所在节点的编译过程，vue不在编译节点内容提升性能</li>\n<li>v-show 条件渲染 v-show=“bool值或者返回bool类型的表达式” 。 适用于切换较高的场景。DOM 未被移除，只是通过样式 display:none 隐藏</li>\n<li>v-if 条件渲染 v-if=“bool值或者返回bool类型的表达式” 。 适用于切换较低的场景。DOM 被移除，可能无法获取dom元素</li>\n<li>v-if 可搭配 v-else-if v-else 但是整体结构不能打断</li>\n<li>整体渲染可以使用但是只能使用 v-if 不能使用v-show</li>\n<li>v-for 列表渲染 遍历数组 v-for=“item in array” :key=“<a href=\"http://item.id\">item.id</a>”</li>\n<li>v-for 列表渲染 遍历对象 v-for=&quot;(v,k) in object&quot; :key=“k”</li>\n<li>v-for 列表渲染 遍历字符串 v-for=&quot;(char,index) in string&quot; :key=“index”</li>\n<li>v-for 列表渲染 遍历数值(次数) v-for=&quot;(num,index) in number&quot; :key=“index”</li>\n<li>key是虚拟dom的标识，当数据发生变化时，会依据key做dom的diff比较运行。如果key使用index在数组进行了逆序的添加、删除等操作破坏了原有顺序会发生bug</li>\n<li>key一般最好使用id、手机号、身份证号等唯一标识</li>\n<li>如果没有逆序操作，使用index作为key的值夜没有问题</li>\n<li>自定义指令 示例：<br />\n指令名定义时不加 v- ，使用时加 v-<br />\n指令名如果是多个单词，需要使用 kebab-case 命名方式，不要用驼峰命名</li>\n</ol>\n<p>第一种写法</p>\n<figure class=\"highlight js\"><figcaption><span>new vue中配置</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">directives: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">big</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 第一次调用: 当指令与元素成功绑定  第n次调用: 当指令所在模板被重新解析时</span></span><br><span class=\"line\">        ele.innerText = binding.value * <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//对象是</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>第二种写法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">big: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">bind</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">            <span class=\"string\">&#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">inserted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">            <span class=\"string\">&#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">update</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>全局写法</p>\n<p>vm.directive(‘指令名’,配置对象) 或 vm.directive(‘指令名’,回调函数)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>13.内置指令<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-id\">#root</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">justify-content</span>: space-evenly;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.conditiondv</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: bisque;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-attr\">[v-cloak]</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">                ### 数据绑定</span></span><br><span class=\"line\"><span class=\"comment\">                1. v-text 向所在的节点渲染文本内容，html 会原样输出不解析。 并且节点的原始内容会被替换（ &#123;&#123;&#125;&#125; 插值语法在此显得更加灵活 ）</span></span><br><span class=\"line\"><span class=\"comment\">                2. v-html 在指定节点中渲染包含 html 结构的内容 容易导致xss攻击</span></span><br><span class=\"line\"><span class=\"comment\">                3. v-cloak 当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性。可搭配样式 [v-cloak]&#123; display:none; &#125; 解决网速过慢页面展示&#123;&#123;xxx&#125;&#125;的问题</span></span><br><span class=\"line\"><span class=\"comment\">                4. v-once 所在节点在初始动态渲染后，就视为静止内容，以后数据的改动不会引起 v-once 所在的结构的更新，可用于优化性能。</span></span><br><span class=\"line\"><span class=\"comment\">                5. v-pre 跳过所在节点的编译过程，vue不在编译节点内容提升性能</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>v-text<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-text</span>=<span class=\"string\">&quot;vtext&quot;</span>&gt;</span>span原有内容<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>v-html<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-html</span>=<span class=\"string\">&quot;vhtml&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>v-cloak<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-cloak</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>当 vue 实例创建完毕并接管容器后会移除 v-cloak 属性&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>v-once<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-once</span>&gt;</span>初始onceNum为 &#123;&#123;onceNum&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>onceNum当前值为 &#123;&#123;onceNum&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnAddNum&quot;</span>&gt;</span>btnAddNum<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-pre</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>跳过所在节点的编译过程，vue不在编译节点内容提升性能&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                ### 条件渲染</span></span><br><span class=\"line\"><span class=\"comment\">                6. v-show 条件渲染  v-show=&quot;bool值或者返回bool类型的表达式&quot; 。  适用于切换较高的场景。DOM 未被移除，只是通过样式 display:none 隐藏</span></span><br><span class=\"line\"><span class=\"comment\">                7. v-if 条件渲染   v-if=&quot;bool值或者返回bool类型的表达式&quot; 。 适用于切换较低的场景。DOM 被移除，可能无法获取dom元素</span></span><br><span class=\"line\"><span class=\"comment\">                8. v-if 可搭配 v-else-if v-else 但是整体结构不能打断</span></span><br><span class=\"line\"><span class=\"comment\">                9. 整体渲染可以使用 &lt;template&gt;&lt;/template&gt; 但是只能使用 v-if 不能使用v-show</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>条件渲染<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;vshow&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span>v-show=&quot;vshow&quot;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;vshowBtnClick&quot;</span>&gt;</span>v-show<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;vif&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span>v-if=&quot;vif&quot;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;vifBtnClick&quot;</span>&gt;</span>v-show<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;num===1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span>v-if=&quot;num===1&quot;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--&lt;div&gt;整体结构不能打断&lt;/div&gt;--&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;num===2&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span></span><br><span class=\"line\">                    v-else-if=&quot;num===2&quot;</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;conditiondv&quot;</span>&gt;</span>v-else<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;conditionClick&quot;</span>&gt;</span>conditionClick<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                ### 列表渲染</span></span><br><span class=\"line\"><span class=\"comment\">                10. v-for 列表渲染 遍历数组 v-for=&quot;item in array&quot; :key=&quot;item.id&quot; </span></span><br><span class=\"line\"><span class=\"comment\">                11. v-for 列表渲染 遍历对象 v-for=&quot;(v,k) in object&quot; :key=&quot;k&quot;</span></span><br><span class=\"line\"><span class=\"comment\">                12. v-for 列表渲染 遍历字符串 v-for=&quot;(char,index) in string&quot; :key=&quot;index&quot;</span></span><br><span class=\"line\"><span class=\"comment\">                13. v-for 列表渲染 遍历数值(次数) v-for=&quot;(num,index) in number&quot; :key=&quot;index&quot;</span></span><br><span class=\"line\"><span class=\"comment\">                14. key是虚拟dom的标识，当数据发生变化时，会依据key做dom的diff比较运行。如果key使用index在数组进行了逆序的添加、删除等操作破坏了原有顺序会发生bug</span></span><br><span class=\"line\"><span class=\"comment\">                15. key一般最好使用id、手机号、身份证号等唯一标识</span></span><br><span class=\"line\"><span class=\"comment\">                16. 如果没有逆序操作，使用index作为key的值夜没有问题</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>遍历数组 v-for=&quot;item in array&quot; :key=&quot;item.id&quot; <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(user,index) in users&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;user.id&quot;</span>&gt;</span></span><br><span class=\"line\">                        index:&#123;&#123;index&#125;&#125; id:&#123;&#123;user.id&#125;&#125; 姓名:&#123;&#123;user.name&#125;&#125;</span><br><span class=\"line\">                        年龄:&#123;&#123;user.age&#125;&#125;</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>遍历对象 v-for=&quot;(v,k) in object&quot; :key=&quot;k&quot;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(v,k) in users[0]&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;k&quot;</span>&gt;</span></span><br><span class=\"line\">                        key:&#123;&#123;k&#125;&#125; value:&#123;&#123;v&#125;&#125;</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>遍历字符串 v-for=&quot;(char,index) in string&quot;</span><br><span class=\"line\">                    :key=&quot;index&quot;&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(char,index) in users[0].name&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span></span><br><span class=\"line\">                        char:&#123;&#123;char&#125;&#125; index:&#123;&#123;index&#125;&#125;</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>遍历数值(次数) v-for=&quot;(num,index) in number&quot;</span><br><span class=\"line\">                    :key=&quot;index&quot;&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(number,index) in 5&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span></span><br><span class=\"line\">                        number:&#123;&#123;number&#125;&#125; index:&#123;&#123;index&#125;&#125;</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                    17. 自定义指令 示例： &lt;span v-big=&quot;customNum&quot;&gt;&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                        指令名定义时不加 v- ，使用时加 v-</span></span><br><span class=\"line\"><span class=\"comment\">                        指令名如果是多个单词，需要使用 kebab-case 命名方式，不要用驼峰命名</span></span><br><span class=\"line\"><span class=\"comment\">                    第一种写法 </span></span><br><span class=\"line\"><span class=\"comment\">                    new vue中配置</span></span><br><span class=\"line\"><span class=\"comment\">                    directives: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                        big(ele, binding) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                            // 第一次调用: 当指令与元素成功绑定  第n次调用: 当指令所在模板被重新解析时</span></span><br><span class=\"line\"><span class=\"comment\">                            ele.innerText = binding.value * 10;</span></span><br><span class=\"line\"><span class=\"comment\">                        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                        //对象是</span></span><br><span class=\"line\"><span class=\"comment\">                    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                    第二种写法</span></span><br><span class=\"line\"><span class=\"comment\">                    big: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                        bind(ele, binding) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                            console.log(</span></span><br><span class=\"line\"><span class=\"comment\">                                &#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">                            );</span></span><br><span class=\"line\"><span class=\"comment\">                        &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">                        inserted(ele, binding) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                            console.log(</span></span><br><span class=\"line\"><span class=\"comment\">                                &#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">                            );</span></span><br><span class=\"line\"><span class=\"comment\">                        &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">                        update(ele, binding) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                            console.log(&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;);</span></span><br><span class=\"line\"><span class=\"comment\">                        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                    全局写法</span></span><br><span class=\"line\"><span class=\"comment\">                    vm.$directive(&#x27;指令名&#x27;,配置对象) 或 vm.$directive(&#x27;指令名&#x27;,回调函数)</span></span><br><span class=\"line\"><span class=\"comment\">                --&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>自定义指令<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>customNum:&#123;&#123;customNum&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>放大10倍后的值:<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-big</span>=<span class=\"string\">&quot;customNum&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnCustomNumAdd&quot;</span>&gt;</span>btnCustomNumAdd<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">customNum</span>: <span class=\"number\">5</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">onceNum</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">num</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">vtext</span>: <span class=\"string\">&#x27;&lt;span&gt;vtext指令&lt;/span&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">vhtml</span>: <span class=\"string\">&#x27;&lt;a href=&quot;http://odinsam.com&quot;&gt;v-html容易导致xss攻击&lt;/a&gt;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">vshow</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">vif</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">users</span>: [</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123; <span class=\"attr\">id</span>: <span class=\"string\">&#x27;no1&#x27;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam1&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">29</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123; <span class=\"attr\">id</span>: <span class=\"string\">&#x27;no2&#x27;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam2&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">14</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                        &#123; <span class=\"attr\">id</span>: <span class=\"string\">&#x27;no3&#x27;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam3&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">26</span> &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                    ]</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">vshowBtnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function vshowBtnClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.vshow = !<span class=\"built_in\">this</span>.vshow;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">vifBtnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function vifBtnClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.vif = !<span class=\"built_in\">this</span>.vif;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">conditionClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.num++;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.num &gt; <span class=\"number\">3</span>) <span class=\"built_in\">this</span>.num = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnAddNum</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.onceNum++;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnCustomNumAdd</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.customNum++;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">directives</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// big(ele, binding) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">//     ele.innerText = binding.value * 10;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">big</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">bind</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">&#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">inserted</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">&#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">update</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 11. Watch监视属性","author":"OdinSam","abbrlink":"bd29","date":"2022-10-15T06:29:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1.当监视的属性发生变化时，回调函数 handler 会自动调用进行相关操作\n2. 监视的属性必须存在，才可以监视\n3. 监视属性两种写法\n\t在new vue时配置watch\n\t在new vue创建完成后，通过 vm.$watch(‘监视的属性’,{ //监视的配置内容 })\n4. 监视多级结构中某个属性的变化 对象.属性 监视\n5. watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视\n6. 监视属性不光可以监视data中的属性、对象也可以监视计算属性\n7. 监视属性可以简写，但代价是不能再配置 immediate、deep\n\n```vue\nwatch:{\n\tpersonState(newValue,oldValue){\n\t\t//回调处理函数\n\t}\n}\nvm.$watch('personState',function(newValue,oldValue){\n\t//回调处理函数\n})\n```\n8. computed 计算属性能完成的watch都可以完成。watch可以完成的computed不一定能完成。例如：watch可以进行异步操作\n9. 所有被vue管理的函数最好写成普通函数，这样this指向才vm或者组件对象实例\n10. 所有不被vue管理的函数（定时器，ajax回调等）最好写成箭头函数，这样this指向才vm或者组件对象实例\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>11.监视属性</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <div id=\"root\">\n            <h2>vue 监视属性</h2>\n            <span>人生真的是{{personState}}</span>\n            <br /><br />\n            <button @click=\"btnClick\">修改人生的状态</button>\n            <hr />\n            <h3>对象内容x {{obj.x}}</span><br>\n            <button @click=\"btnXClick\">btn add</button>\n            <hr />\n            <h3>对象内容y {{obj.y}}</span><br>\n            <button @click=\"btnYClick\">btn add</button>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    state: true,\n                    obj: { x: 10, y: 20 }\n                };\n            },\n            methods: {\n                btnClick() {\n                    this.state = !this.state;\n                },\n                btnXClick(){\n                    this.obj.x ++;\n                },\n                btnYClick(){\n                    this.obj.y++;\n                },\n            },\n            computed: {\n                personState() {\n                    return this.state ? '大起' : '大落';\n                }\n            },\n\n            /*\n            1. 当监视的属性发生变化时，回调函数 handler 会自动调用进行相关操作\n            2. 监视的属性必须存在，才可以监视\n            3. 监视属性两种写法\n                1. 在new vue时配置watch\n                2. 在new vue创建完成后，通过 vm.$watch('监视的属性',{ //监视的配置内容 }) \n            4. 监视多级结构中某个属性的变化 对象.属性 监视\n            5. watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视\n            6. 监视属性不光可以监视data中的属性、对象也可以监视计算属性\n            7. 监视属性可以简写，但代价是不能再配置 immediate、deep\n                watch:{\n                    personState(newValue,oldValue){\n                        //回调处理函数\n                    }\n                }\n                vm.$watch('personState',function(newValue,oldValue){\n                    //回调处理函数\n                })\n            8. computed 计算属性能完成的watch都可以完成。watch可以完成的computed不一定能完成。例如：watch可以进行异步操作\n            \n            备注：\n            所有被vue管理的函数最好写成普通函数，这样this指向才vm或者组件对象实例\n            所有不被vue管理的函数（定时器，ajax回调等）最好写成箭头函数，这样this指向才vm或者组件对象实例\n            */\n            watch: {\n                personState:{\n                    handler(newValue, oldValue){\n                        console.log(\n                            `watch: 计算属性 personState 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n                        );\n                    }\n                },\n                state: {\n                    immediate: true, //初始化时让 handler 调用一次\n                    handler(newValue, oldValue) {\n                        console.log(\n                            `watch: state 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n                        );\n                    }\n                },\n                // 监视多级结构中某个属性的变化\n                'obj.x':{\n                    immediate: true, //初始化时让 handler 调用一次\n                    handler(newValue, oldValue) {\n                        console.log(\n                            `watch: obj.x 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n                        );\n                    }\n                },\n                // watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视\n                'obj':{\n                    deep:true,  //进行深度监视\n                    // immediate: true, //初始化时让 handler 调用一次\n                    handler(newValue, oldValue) {\n                            console.log(`watch: obj 被修改了 obj.x:${newValue.x}    obj.x:${newValue.y}`);\n                    }\n                },\n                //监视属性的简写 \n\n                personState(newValue, oldValue){\n                    console.log(\n                            `watch: 计算属性 personState 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n                        );\n                }\n            }\n        });\n        //监视属性的第二种写法 首先保证vm创建完毕\n        // vm.$watch('state', {\n        //     immediate: true, //初始化时让 handler 调用一次\n        //     handler(newValue, oldValue) {\n        //         console.log(\n        //             `state 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n        //         );\n        //     }\n        // });\n    </script>\n</html>\n\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-11-Watch监视属性.md","raw":"title: Vue2.0 - 11. Watch监视属性\nauthor: OdinSam\ntags:\n  - vue2\n  - watch\n  - 监视属性\ncategories:\n  - 前端\n  - vue2\nabbrlink: bd29\ndate: 2022-10-15 14:29:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1.当监视的属性发生变化时，回调函数 handler 会自动调用进行相关操作\n2. 监视的属性必须存在，才可以监视\n3. 监视属性两种写法\n\t在new vue时配置watch\n\t在new vue创建完成后，通过 vm.$watch(‘监视的属性’,{ //监视的配置内容 })\n4. 监视多级结构中某个属性的变化 对象.属性 监视\n5. watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视\n6. 监视属性不光可以监视data中的属性、对象也可以监视计算属性\n7. 监视属性可以简写，但代价是不能再配置 immediate、deep\n\n```vue\nwatch:{\n\tpersonState(newValue,oldValue){\n\t\t//回调处理函数\n\t}\n}\nvm.$watch('personState',function(newValue,oldValue){\n\t//回调处理函数\n})\n```\n8. computed 计算属性能完成的watch都可以完成。watch可以完成的computed不一定能完成。例如：watch可以进行异步操作\n9. 所有被vue管理的函数最好写成普通函数，这样this指向才vm或者组件对象实例\n10. 所有不被vue管理的函数（定时器，ajax回调等）最好写成箭头函数，这样this指向才vm或者组件对象实例\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>11.监视属性</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <div id=\"root\">\n            <h2>vue 监视属性</h2>\n            <span>人生真的是{{personState}}</span>\n            <br /><br />\n            <button @click=\"btnClick\">修改人生的状态</button>\n            <hr />\n            <h3>对象内容x {{obj.x}}</span><br>\n            <button @click=\"btnXClick\">btn add</button>\n            <hr />\n            <h3>对象内容y {{obj.y}}</span><br>\n            <button @click=\"btnYClick\">btn add</button>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    state: true,\n                    obj: { x: 10, y: 20 }\n                };\n            },\n            methods: {\n                btnClick() {\n                    this.state = !this.state;\n                },\n                btnXClick(){\n                    this.obj.x ++;\n                },\n                btnYClick(){\n                    this.obj.y++;\n                },\n            },\n            computed: {\n                personState() {\n                    return this.state ? '大起' : '大落';\n                }\n            },\n\n            /*\n            1. 当监视的属性发生变化时，回调函数 handler 会自动调用进行相关操作\n            2. 监视的属性必须存在，才可以监视\n            3. 监视属性两种写法\n                1. 在new vue时配置watch\n                2. 在new vue创建完成后，通过 vm.$watch('监视的属性',{ //监视的配置内容 }) \n            4. 监视多级结构中某个属性的变化 对象.属性 监视\n            5. watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视\n            6. 监视属性不光可以监视data中的属性、对象也可以监视计算属性\n            7. 监视属性可以简写，但代价是不能再配置 immediate、deep\n                watch:{\n                    personState(newValue,oldValue){\n                        //回调处理函数\n                    }\n                }\n                vm.$watch('personState',function(newValue,oldValue){\n                    //回调处理函数\n                })\n            8. computed 计算属性能完成的watch都可以完成。watch可以完成的computed不一定能完成。例如：watch可以进行异步操作\n            \n            备注：\n            所有被vue管理的函数最好写成普通函数，这样this指向才vm或者组件对象实例\n            所有不被vue管理的函数（定时器，ajax回调等）最好写成箭头函数，这样this指向才vm或者组件对象实例\n            */\n            watch: {\n                personState:{\n                    handler(newValue, oldValue){\n                        console.log(\n                            `watch: 计算属性 personState 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n                        );\n                    }\n                },\n                state: {\n                    immediate: true, //初始化时让 handler 调用一次\n                    handler(newValue, oldValue) {\n                        console.log(\n                            `watch: state 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n                        );\n                    }\n                },\n                // 监视多级结构中某个属性的变化\n                'obj.x':{\n                    immediate: true, //初始化时让 handler 调用一次\n                    handler(newValue, oldValue) {\n                        console.log(\n                            `watch: obj.x 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n                        );\n                    }\n                },\n                // watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视\n                'obj':{\n                    deep:true,  //进行深度监视\n                    // immediate: true, //初始化时让 handler 调用一次\n                    handler(newValue, oldValue) {\n                            console.log(`watch: obj 被修改了 obj.x:${newValue.x}    obj.x:${newValue.y}`);\n                    }\n                },\n                //监视属性的简写 \n\n                personState(newValue, oldValue){\n                    console.log(\n                            `watch: 计算属性 personState 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n                        );\n                }\n            }\n        });\n        //监视属性的第二种写法 首先保证vm创建完毕\n        // vm.$watch('state', {\n        //     immediate: true, //初始化时让 handler 调用一次\n        //     handler(newValue, oldValue) {\n        //         console.log(\n        //             `state 被修改了，原始值是:${oldValue} 新值为:${newValue}`\n        //         );\n        //     }\n        // });\n    </script>\n</html>\n\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-11-Watch监视属性","published":1,"updated":"2023-03-10T06:31:26.891Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2p00235cs9b4hjb3lz","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<p>1.当监视的属性发生变化时，回调函数 handler 会自动调用进行相关操作<br />\n2. 监视的属性必须存在，才可以监视<br />\n3. 监视属性两种写法<br />\n在new vue时配置watch<br />\n在new vue创建完成后，通过 vm.$watch(‘监视的属性’,{ //监视的配置内容 })<br />\n4. 监视多级结构中某个属性的变化 对象.属性 监视<br />\n5. watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视<br />\n6. 监视属性不光可以监视data中的属性、对象也可以监视计算属性<br />\n7. 监视属性可以简写，但代价是不能再配置 immediate、deep</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch:&#123;</span><br><span class=\"line\">\tpersonState(newValue,oldValue)&#123;</span><br><span class=\"line\">\t\t//回调处理函数</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vm.$watch(&#x27;personState&#x27;,function(newValue,oldValue)&#123;</span><br><span class=\"line\">\t//回调处理函数</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>computed 计算属性能完成的watch都可以完成。watch可以完成的computed不一定能完成。例如：watch可以进行异步操作</li>\n<li>所有被vue管理的函数最好写成普通函数，这样this指向才vm或者组件对象实例</li>\n<li>所有不被vue管理的函数（定时器，ajax回调等）最好写成箭头函数，这样this指向才vm或者组件对象实例</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>11.监视属性<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue 监视属性<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>人生真的是&#123;&#123;personState&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick&quot;</span>&gt;</span>修改人生的状态<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>对象内容x &#123;&#123;obj.x&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnXClick&quot;</span>&gt;</span>btn add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>对象内容y &#123;&#123;obj.y&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnYClick&quot;</span>&gt;</span>btn add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">state</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">obj</span>: &#123; <span class=\"attr\">x</span>: <span class=\"number\">10</span>, <span class=\"attr\">y</span>: <span class=\"number\">20</span> &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.state = !<span class=\"built_in\">this</span>.state;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnXClick</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.obj.x ++;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnYClick</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.obj.y++;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">computed</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">personState</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.state ? <span class=\"string\">&#x27;大起&#x27;</span> : <span class=\"string\">&#x27;大落&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            1. 当监视的属性发生变化时，回调函数 handler 会自动调用进行相关操作</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            2. 监视的属性必须存在，才可以监视</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            3. 监视属性两种写法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                1. 在new vue时配置watch</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                2. 在new vue创建完成后，通过 vm.$watch(&#x27;监视的属性&#x27;,&#123; //监视的配置内容 &#125;) </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            4. 监视多级结构中某个属性的变化 对象.属性 监视</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            5. watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            6. 监视属性不光可以监视data中的属性、对象也可以监视计算属性</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            7. 监视属性可以简写，但代价是不能再配置 immediate、deep</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                watch:&#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                    personState(newValue,oldValue)&#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                        //回调处理函数</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                    &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                vm.$watch(&#x27;personState&#x27;,function(newValue,oldValue)&#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                    //回调处理函数</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                &#125;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            8. computed 计算属性能完成的watch都可以完成。watch可以完成的computed不一定能完成。例如：watch可以进行异步操作</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            备注：</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            所有被vue管理的函数最好写成普通函数，这样this指向才vm或者组件对象实例</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            所有不被vue管理的函数（定时器，ajax回调等）最好写成箭头函数，这样this指向才vm或者组件对象实例</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            */</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">watch</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">personState</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">newValue, oldValue</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">`watch: 计算属性 personState 被修改了，原始值是:<span class=\"subst\">$&#123;oldValue&#125;</span> 新值为:<span class=\"subst\">$&#123;newValue&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">state</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//初始化时让 handler 调用一次</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">newValue, oldValue</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">`watch: state 被修改了，原始值是:<span class=\"subst\">$&#123;oldValue&#125;</span> 新值为:<span class=\"subst\">$&#123;newValue&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 监视多级结构中某个属性的变化</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&#x27;obj.x&#x27;</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//初始化时让 handler 调用一次</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">newValue, oldValue</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">`watch: obj.x 被修改了，原始值是:<span class=\"subst\">$&#123;oldValue&#125;</span> 新值为:<span class=\"subst\">$&#123;newValue&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&#x27;obj&#x27;</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">deep</span>:<span class=\"literal\">true</span>,  <span class=\"comment\">//进行深度监视</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"comment\">// immediate: true, //初始化时让 handler 调用一次</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">newValue, oldValue</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"built_in\">console</span>.log(<span class=\"string\">`watch: obj 被修改了 obj.x:<span class=\"subst\">$&#123;newValue.x&#125;</span>    obj.x:<span class=\"subst\">$&#123;newValue.y&#125;</span>`</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">//监视属性的简写 </span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">personState</span>(<span class=\"params\">newValue, oldValue</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">`watch: 计算属性 personState 被修改了，原始值是:<span class=\"subst\">$&#123;oldValue&#125;</span> 新值为:<span class=\"subst\">$&#123;newValue&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//监视属性的第二种写法 首先保证vm创建完毕</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// vm.$watch(&#x27;state&#x27;, &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//     immediate: true, //初始化时让 handler 调用一次</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//     handler(newValue, oldValue) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//         console.log(</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//             `state 被修改了，原始值是:$&#123;oldValue&#125; 新值为:$&#123;newValue&#125;`</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//         );</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//     &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<p>1.当监视的属性发生变化时，回调函数 handler 会自动调用进行相关操作<br />\n2. 监视的属性必须存在，才可以监视<br />\n3. 监视属性两种写法<br />\n在new vue时配置watch<br />\n在new vue创建完成后，通过 vm.$watch(‘监视的属性’,{ //监视的配置内容 })<br />\n4. 监视多级结构中某个属性的变化 对象.属性 监视<br />\n5. watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视<br />\n6. 监视属性不光可以监视data中的属性、对象也可以监视计算属性<br />\n7. 监视属性可以简写，但代价是不能再配置 immediate、deep</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch:&#123;</span><br><span class=\"line\">\tpersonState(newValue,oldValue)&#123;</span><br><span class=\"line\">\t\t//回调处理函数</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vm.$watch(&#x27;personState&#x27;,function(newValue,oldValue)&#123;</span><br><span class=\"line\">\t//回调处理函数</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>computed 计算属性能完成的watch都可以完成。watch可以完成的computed不一定能完成。例如：watch可以进行异步操作</li>\n<li>所有被vue管理的函数最好写成普通函数，这样this指向才vm或者组件对象实例</li>\n<li>所有不被vue管理的函数（定时器，ajax回调等）最好写成箭头函数，这样this指向才vm或者组件对象实例</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>11.监视属性<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>vue 监视属性<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>人生真的是&#123;&#123;personState&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick&quot;</span>&gt;</span>修改人生的状态<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>对象内容x &#123;&#123;obj.x&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnXClick&quot;</span>&gt;</span>btn add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>对象内容y &#123;&#123;obj.y&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnYClick&quot;</span>&gt;</span>btn add<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">state</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">obj</span>: &#123; <span class=\"attr\">x</span>: <span class=\"number\">10</span>, <span class=\"attr\">y</span>: <span class=\"number\">20</span> &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.state = !<span class=\"built_in\">this</span>.state;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnXClick</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.obj.x ++;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">btnYClick</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.obj.y++;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">computed</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">personState</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.state ? <span class=\"string\">&#x27;大起&#x27;</span> : <span class=\"string\">&#x27;大落&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">/*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            1. 当监视的属性发生变化时，回调函数 handler 会自动调用进行相关操作</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            2. 监视的属性必须存在，才可以监视</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            3. 监视属性两种写法</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                1. 在new vue时配置watch</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                2. 在new vue创建完成后，通过 vm.$watch(&#x27;监视的属性&#x27;,&#123; //监视的配置内容 &#125;) </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            4. 监视多级结构中某个属性的变化 对象.属性 监视</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            5. watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            6. 监视属性不光可以监视data中的属性、对象也可以监视计算属性</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            7. 监视属性可以简写，但代价是不能再配置 immediate、deep</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                watch:&#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                    personState(newValue,oldValue)&#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                        //回调处理函数</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                    &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                vm.$watch(&#x27;personState&#x27;,function(newValue,oldValue)&#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                    //回调处理函数</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">                &#125;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            8. computed 计算属性能完成的watch都可以完成。watch可以完成的computed不一定能完成。例如：watch可以进行异步操作</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            备注：</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            所有被vue管理的函数最好写成普通函数，这样this指向才vm或者组件对象实例</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            所有不被vue管理的函数（定时器，ajax回调等）最好写成箭头函数，这样this指向才vm或者组件对象实例</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\">            */</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">watch</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">personState</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">newValue, oldValue</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">`watch: 计算属性 personState 被修改了，原始值是:<span class=\"subst\">$&#123;oldValue&#125;</span> 新值为:<span class=\"subst\">$&#123;newValue&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"attr\">state</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//初始化时让 handler 调用一次</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">newValue, oldValue</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">`watch: state 被修改了，原始值是:<span class=\"subst\">$&#123;oldValue&#125;</span> 新值为:<span class=\"subst\">$&#123;newValue&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 监视多级结构中某个属性的变化</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&#x27;obj.x&#x27;</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//初始化时让 handler 调用一次</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">newValue, oldValue</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">`watch: obj.x 被修改了，原始值是:<span class=\"subst\">$&#123;oldValue&#125;</span> 新值为:<span class=\"subst\">$&#123;newValue&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// watch 默认不检测对象内部值的改变,可以通过 deep:true 进行深度监视</span></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">&#x27;obj&#x27;</span>:&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">deep</span>:<span class=\"literal\">true</span>,  <span class=\"comment\">//进行深度监视</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"comment\">// immediate: true, //初始化时让 handler 调用一次</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">newValue, oldValue</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"built_in\">console</span>.log(<span class=\"string\">`watch: obj 被修改了 obj.x:<span class=\"subst\">$&#123;newValue.x&#125;</span>    obj.x:<span class=\"subst\">$&#123;newValue.y&#125;</span>`</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">//监视属性的简写 </span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">personState</span>(<span class=\"params\">newValue, oldValue</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">                            <span class=\"string\">`watch: 计算属性 personState 被修改了，原始值是:<span class=\"subst\">$&#123;oldValue&#125;</span> 新值为:<span class=\"subst\">$&#123;newValue&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">                        );</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//监视属性的第二种写法 首先保证vm创建完毕</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// vm.$watch(&#x27;state&#x27;, &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//     immediate: true, //初始化时让 handler 调用一次</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//     handler(newValue, oldValue) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//         console.log(</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//             `state 被修改了，原始值是:$&#123;oldValue&#125; 新值为:$&#123;newValue&#125;`</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//         );</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//     &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 14. vue.set方法","author":"OdinSam","abbrlink":"2b60","date":"2022-10-17T06:38:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n#### vue监视数据的原理\n\n1. vue会监视data中所有层次的数据\n2. 通过setter实现数据监视，并且要在new vue时就传入需要监视的数据\n3. 对象中后续追加的属性，vue默认不做响应式处理\n4. 如果需要给添加的属性做响应式处理 需要使用 set api\n\tVue.set(data.target,‘prototypeName’/index,‘prototypeValue’)\n\tthis.$set(data.target,‘prototypeName’/index,‘prototypeValue’)\n5. 对于数组的更新 需要使用api push、pop、shift、unshift、splice、sort、reverse 或者 Vue.set() | this.$set()\n6. Vue.set() | vm.$set() 不能给vm的根数即data直接添加属性\n7. 核心是使用 Object.defineProperty 实现了数据劫持\n\n|方法\t|使用\t|描述|\n|:--\t|:--\t|:--|\n|push\t|const length = arrayObj. push([item1 [item2 [. . . [itemN ]]]])\t|将一个或多个新元素添加到数组结尾，并返回数组新长度|\n|pop\t|const obj = arrayObj.pop()\t|移除最后一个元素并返回该元素值|\n|shift\t|const obj = arrayObj.shift()\t|移除最前一个元素并返回该元素值，数组中元素自动前移|\n|unshift\t|const length = arrayObj.unshift([item1 [item2 [. . . [itemN ]]]])\t|将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度|\n|splice\t|const deleteArr = arrayObj.splice(deletePos,deleteCount,[newItem1,newItem2])\t|删除从指定位置deletePos开始的指定数量deleteCount的元素[并添加一个或多个新的元素]，数组形式返回所移除的元素|\n|sort\t|const sortArr = arrayObj.sort()\t|反转元素（最前的排到最后、最后的排到最前），返回数组地址|\n|reverse\t|const reverseArr = arrayObj.reverse()\t|反转元素（最前的排到最后、最后的排到最前），返回数组地址|\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>14.vue_set方法</title>\n        <script src=\"../js/vue.js\"></script>\n        <style>\n            #root {\n                display: flex;\n                justify-content: space-evenly;\n            }\n            .conditiondv {\n                width: 200px;\n                height: 200px;\n                background-color: bisque;\n            }\n            [v-cloak] {\n                display: none;\n            }\n        </style>\n    </head>\n    <body>\n        <div id=\"root\">\n            <!--\n                vue监视数据的原理\n                1. vue会监视data中所有层次的数据\n                2. 通过setter实现数据监视，并且要在new vue时就传入需要监视的数据\n                3. 对象中后续追加的属性，vue默认不做响应式处理\n                4. 如果需要给添加的属性做响应式处理 需要使用 set api\n                    Vue.set(data.target,'prototypeName'/index,'prototypeValue')\n                    this.$set(data.target,'prototypeName'/index,'prototypeValue')\n                5. 对于数组的更新 需要使用api push、pop、shift、unshift、splice、sort、reverse 或者 Vue.set() | this.$set()\n                6, Vue.set() | vm.$set() 不能给vm的根数即data直接添加属性\n            -->\n            <div>\n                <span>对象动态添加属性</span>\n                <br />\n                <span\n                    >this.$set(data.object,'prototypeName','prototypeValue')</span\n                >\n                <span\n                    >Vue.set(data.object,'prototypeName','prototypeValue')</span\n                >\n                <ul>\n                    <li v-for=\"(v,k) in student\">\n                        <span>key:{{k}}</span>----<span>value:{{v}}</span>\n                    </li>\n                </ul>\n                <button @click=\"addPrototypeClick\">add prototype</button>\n            </div>\n\n            <div>\n                <span>对象动态修改数组属性</span><br />\n                <span\n                    >this.$set(data.object,'prototypeName','prototypeValue')</span\n                >\n                <ul>\n                    <li v-for=\"(v,k) in student\">\n                        <span>key:{{k}}</span>----<span>value:{{v}}</span>\n                    </li>\n                </ul>\n                <button @click=\"addHobbyClick\">add prototype</button>\n                <br />\n                <button @click=\"changeHobbyClick\">使用数组的变更方法</button>\n                <table border=\"1\">\n                    <thead>\n                        <td>方法</td>\n                        <td>使用</td>\n                        <td>描述</td>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>push</td>\n                            <td>\n                                const length = arrayObj. push([item1 [item2 [. .\n                                . [itemN ]]]])\n                            </td>\n                            <td>\n                                将一个或多个新元素添加到数组结尾，并返回数组新长度\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>pop</td>\n                            <td>const obj = arrayObj.pop()</td>\n                            <td>移除最后一个元素并返回该元素值</td>\n                        </tr>\n                        <tr>\n                            <td>shift</td>\n                            <td>const obj = arrayObj.shift()</td>\n                            <td>\n                                移除最前一个元素并返回该元素值，数组中元素自动前移\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>unshift</td>\n                            <td>\n                                const length = arrayObj.unshift([item1 [item2 [.\n                                . . [itemN ]]]])\n                            </td>\n                            <td>\n                                将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>splice</td>\n                            <td>\n                                const deleteArr =\n                                arrayObj.splice(deletePos,deleteCount,[newItem1,newItem2])\n                            </td>\n                            <td>\n                                删除从指定位置deletePos开始的指定数量deleteCount的元素[并添加一个或多个新的元素]，数组形式返回所移除的元素\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>sort</td>\n                            <td>const sortArr = arrayObj.sort()</td>\n                            <td>\n                                反转元素（最前的排到最后、最后的排到最前），返回数组地址\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>reverse</td>\n                            <td>const reverseArr = arrayObj.reverse()</td>\n                            <td>\n                                反转元素（最前的排到最后、最后的排到最前），返回数组地址\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    student: {\n                        name: 'odinsam',\n                        age: 20,\n                        hobby: ['抽烟', '喝酒', '烫头']\n                    }\n                };\n            },\n            methods: {\n                addPrototypeClick() {\n                    console.log('function addPClick');\n                    this.$set(this.student, 'sex', '男');\n                },\n                addHobbyClick() {\n                    console.log('function addHobbyClick');\n                    this.$set(\n                        this.student.hobby,\n                        this.student.hobby.length,\n                        '学习-' + this.student.hobby.length\n                    );\n                },\n                changeHobbyClick() {\n                    console.log('function changeHobbyClick');\n                    this.student.hobby.push(\n                        'push new hobby-' + this.student.hobby.length\n                    );\n                }\n            }\n        });\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-14-vue-set方法.md","raw":"title: Vue2.0 - 14. vue.set方法\nauthor: OdinSam\ntags:\n  - vue2\n  - vue.set\ncategories:\n  - 前端\n  - vue2\nabbrlink: 2b60\ndate: 2022-10-17 14:38:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n#### vue监视数据的原理\n\n1. vue会监视data中所有层次的数据\n2. 通过setter实现数据监视，并且要在new vue时就传入需要监视的数据\n3. 对象中后续追加的属性，vue默认不做响应式处理\n4. 如果需要给添加的属性做响应式处理 需要使用 set api\n\tVue.set(data.target,‘prototypeName’/index,‘prototypeValue’)\n\tthis.$set(data.target,‘prototypeName’/index,‘prototypeValue’)\n5. 对于数组的更新 需要使用api push、pop、shift、unshift、splice、sort、reverse 或者 Vue.set() | this.$set()\n6. Vue.set() | vm.$set() 不能给vm的根数即data直接添加属性\n7. 核心是使用 Object.defineProperty 实现了数据劫持\n\n|方法\t|使用\t|描述|\n|:--\t|:--\t|:--|\n|push\t|const length = arrayObj. push([item1 [item2 [. . . [itemN ]]]])\t|将一个或多个新元素添加到数组结尾，并返回数组新长度|\n|pop\t|const obj = arrayObj.pop()\t|移除最后一个元素并返回该元素值|\n|shift\t|const obj = arrayObj.shift()\t|移除最前一个元素并返回该元素值，数组中元素自动前移|\n|unshift\t|const length = arrayObj.unshift([item1 [item2 [. . . [itemN ]]]])\t|将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度|\n|splice\t|const deleteArr = arrayObj.splice(deletePos,deleteCount,[newItem1,newItem2])\t|删除从指定位置deletePos开始的指定数量deleteCount的元素[并添加一个或多个新的元素]，数组形式返回所移除的元素|\n|sort\t|const sortArr = arrayObj.sort()\t|反转元素（最前的排到最后、最后的排到最前），返回数组地址|\n|reverse\t|const reverseArr = arrayObj.reverse()\t|反转元素（最前的排到最后、最后的排到最前），返回数组地址|\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>14.vue_set方法</title>\n        <script src=\"../js/vue.js\"></script>\n        <style>\n            #root {\n                display: flex;\n                justify-content: space-evenly;\n            }\n            .conditiondv {\n                width: 200px;\n                height: 200px;\n                background-color: bisque;\n            }\n            [v-cloak] {\n                display: none;\n            }\n        </style>\n    </head>\n    <body>\n        <div id=\"root\">\n            <!--\n                vue监视数据的原理\n                1. vue会监视data中所有层次的数据\n                2. 通过setter实现数据监视，并且要在new vue时就传入需要监视的数据\n                3. 对象中后续追加的属性，vue默认不做响应式处理\n                4. 如果需要给添加的属性做响应式处理 需要使用 set api\n                    Vue.set(data.target,'prototypeName'/index,'prototypeValue')\n                    this.$set(data.target,'prototypeName'/index,'prototypeValue')\n                5. 对于数组的更新 需要使用api push、pop、shift、unshift、splice、sort、reverse 或者 Vue.set() | this.$set()\n                6, Vue.set() | vm.$set() 不能给vm的根数即data直接添加属性\n            -->\n            <div>\n                <span>对象动态添加属性</span>\n                <br />\n                <span\n                    >this.$set(data.object,'prototypeName','prototypeValue')</span\n                >\n                <span\n                    >Vue.set(data.object,'prototypeName','prototypeValue')</span\n                >\n                <ul>\n                    <li v-for=\"(v,k) in student\">\n                        <span>key:{{k}}</span>----<span>value:{{v}}</span>\n                    </li>\n                </ul>\n                <button @click=\"addPrototypeClick\">add prototype</button>\n            </div>\n\n            <div>\n                <span>对象动态修改数组属性</span><br />\n                <span\n                    >this.$set(data.object,'prototypeName','prototypeValue')</span\n                >\n                <ul>\n                    <li v-for=\"(v,k) in student\">\n                        <span>key:{{k}}</span>----<span>value:{{v}}</span>\n                    </li>\n                </ul>\n                <button @click=\"addHobbyClick\">add prototype</button>\n                <br />\n                <button @click=\"changeHobbyClick\">使用数组的变更方法</button>\n                <table border=\"1\">\n                    <thead>\n                        <td>方法</td>\n                        <td>使用</td>\n                        <td>描述</td>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>push</td>\n                            <td>\n                                const length = arrayObj. push([item1 [item2 [. .\n                                . [itemN ]]]])\n                            </td>\n                            <td>\n                                将一个或多个新元素添加到数组结尾，并返回数组新长度\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>pop</td>\n                            <td>const obj = arrayObj.pop()</td>\n                            <td>移除最后一个元素并返回该元素值</td>\n                        </tr>\n                        <tr>\n                            <td>shift</td>\n                            <td>const obj = arrayObj.shift()</td>\n                            <td>\n                                移除最前一个元素并返回该元素值，数组中元素自动前移\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>unshift</td>\n                            <td>\n                                const length = arrayObj.unshift([item1 [item2 [.\n                                . . [itemN ]]]])\n                            </td>\n                            <td>\n                                将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>splice</td>\n                            <td>\n                                const deleteArr =\n                                arrayObj.splice(deletePos,deleteCount,[newItem1,newItem2])\n                            </td>\n                            <td>\n                                删除从指定位置deletePos开始的指定数量deleteCount的元素[并添加一个或多个新的元素]，数组形式返回所移除的元素\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>sort</td>\n                            <td>const sortArr = arrayObj.sort()</td>\n                            <td>\n                                反转元素（最前的排到最后、最后的排到最前），返回数组地址\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>reverse</td>\n                            <td>const reverseArr = arrayObj.reverse()</td>\n                            <td>\n                                反转元素（最前的排到最后、最后的排到最前），返回数组地址\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    student: {\n                        name: 'odinsam',\n                        age: 20,\n                        hobby: ['抽烟', '喝酒', '烫头']\n                    }\n                };\n            },\n            methods: {\n                addPrototypeClick() {\n                    console.log('function addPClick');\n                    this.$set(this.student, 'sex', '男');\n                },\n                addHobbyClick() {\n                    console.log('function addHobbyClick');\n                    this.$set(\n                        this.student.hobby,\n                        this.student.hobby.length,\n                        '学习-' + this.student.hobby.length\n                    );\n                },\n                changeHobbyClick() {\n                    console.log('function changeHobbyClick');\n                    this.student.hobby.push(\n                        'push new hobby-' + this.student.hobby.length\n                    );\n                }\n            }\n        });\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-14-vue-set方法","published":1,"updated":"2023-03-10T06:42:43.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2q00255cs9bzxbd7iv","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"vue监视数据的原理\"><a class=\"markdownIt-Anchor\" href=\"#vue监视数据的原理\"></a> vue监视数据的原理</h4>\n<ol>\n<li>vue会监视data中所有层次的数据</li>\n<li>通过setter实现数据监视，并且要在new vue时就传入需要监视的数据</li>\n<li>对象中后续追加的属性，vue默认不做响应式处理</li>\n<li>如果需要给添加的属性做响应式处理 需要使用 set api<br />\nVue.set(data.target,‘prototypeName’/index,‘prototypeValue’)<br />\nthis.$set(data.target,‘prototypeName’/index,‘prototypeValue’)</li>\n<li>对于数组的更新 需要使用api push、pop、shift、unshift、splice、sort、reverse 或者 Vue.set() | this.$set()</li>\n<li>Vue.set() | vm.$set() 不能给vm的根数即data直接添加属性</li>\n<li>核心是使用 Object.defineProperty 实现了数据劫持</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">使用</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">push</td>\n<td style=\"text-align:left\">const length = arrayObj. push([item1 [item2 [. . . [itemN ]]]])</td>\n<td style=\"text-align:left\">将一个或多个新元素添加到数组结尾，并返回数组新长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pop</td>\n<td style=\"text-align:left\">const obj = arrayObj.pop()</td>\n<td style=\"text-align:left\">移除最后一个元素并返回该元素值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">shift</td>\n<td style=\"text-align:left\">const obj = arrayObj.shift()</td>\n<td style=\"text-align:left\">移除最前一个元素并返回该元素值，数组中元素自动前移</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">unshift</td>\n<td style=\"text-align:left\">const length = arrayObj.unshift([item1 [item2 [. . . [itemN ]]]])</td>\n<td style=\"text-align:left\">将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">splice</td>\n<td style=\"text-align:left\">const deleteArr = arrayObj.splice(deletePos,deleteCount,[newItem1,newItem2])</td>\n<td style=\"text-align:left\">删除从指定位置deletePos开始的指定数量deleteCount的元素[并添加一个或多个新的元素]，数组形式返回所移除的元素</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sort</td>\n<td style=\"text-align:left\">const sortArr = arrayObj.sort()</td>\n<td style=\"text-align:left\">反转元素（最前的排到最后、最后的排到最前），返回数组地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">reverse</td>\n<td style=\"text-align:left\">const reverseArr = arrayObj.reverse()</td>\n<td style=\"text-align:left\">反转元素（最前的排到最后、最后的排到最前），返回数组地址</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>14.vue_set方法<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-id\">#root</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">justify-content</span>: space-evenly;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.conditiondv</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: bisque;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-attr\">[v-cloak]</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                vue监视数据的原理</span></span><br><span class=\"line\"><span class=\"comment\">                1. vue会监视data中所有层次的数据</span></span><br><span class=\"line\"><span class=\"comment\">                2. 通过setter实现数据监视，并且要在new vue时就传入需要监视的数据</span></span><br><span class=\"line\"><span class=\"comment\">                3. 对象中后续追加的属性，vue默认不做响应式处理</span></span><br><span class=\"line\"><span class=\"comment\">                4. 如果需要给添加的属性做响应式处理 需要使用 set api</span></span><br><span class=\"line\"><span class=\"comment\">                    Vue.set(data.target,&#x27;prototypeName&#x27;/index,&#x27;prototypeValue&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">                    this.$set(data.target,&#x27;prototypeName&#x27;/index,&#x27;prototypeValue&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">                5. 对于数组的更新 需要使用api push、pop、shift、unshift、splice、sort、reverse 或者 Vue.set() | this.$set()</span></span><br><span class=\"line\"><span class=\"comment\">                6, Vue.set() | vm.$set() 不能给vm的根数即data直接添加属性</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>对象动态添加属性<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>this.$set(data.object,&#x27;prototypeName&#x27;,&#x27;prototypeValue&#x27;)&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>Vue.set(data.object,&#x27;prototypeName&#x27;,&#x27;prototypeValue&#x27;)&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(v,k) in student&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>key:&#123;&#123;k&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>----<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>value:&#123;&#123;v&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addPrototypeClick&quot;</span>&gt;</span>add prototype<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>对象动态修改数组属性<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>this.$set(data.object,&#x27;prototypeName&#x27;,&#x27;prototypeValue&#x27;)&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(v,k) in student&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>key:&#123;&#123;k&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>----<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>value:&#123;&#123;v&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addHobbyClick&quot;</span>&gt;</span>add prototype<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeHobbyClick&quot;</span>&gt;</span>使用数组的变更方法<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>方法<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>使用<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>描述<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>push<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                const length = arrayObj. push([item1 [item2 [. .</span><br><span class=\"line\">                                . [itemN ]]]])</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                将一个或多个新元素添加到数组结尾，并返回数组新长度</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>pop<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>const obj = arrayObj.pop()<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>移除最后一个元素并返回该元素值<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>shift<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>const obj = arrayObj.shift()<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                移除最前一个元素并返回该元素值，数组中元素自动前移</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>unshift<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                const length = arrayObj.unshift([item1 [item2 [.</span><br><span class=\"line\">                                . . [itemN ]]]])</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>splice<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                const deleteArr =</span><br><span class=\"line\">                                arrayObj.splice(deletePos,deleteCount,[newItem1,newItem2])</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                删除从指定位置deletePos开始的指定数量deleteCount的元素[并添加一个或多个新的元素]，数组形式返回所移除的元素</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>sort<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>const sortArr = arrayObj.sort()<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                反转元素（最前的排到最后、最后的排到最前），返回数组地址</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>reverse<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>const reverseArr = arrayObj.reverse()<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                反转元素（最前的排到最后、最后的排到最前），返回数组地址</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">student</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">age</span>: <span class=\"number\">20</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">hobby</span>: [<span class=\"string\">&#x27;抽烟&#x27;</span>, <span class=\"string\">&#x27;喝酒&#x27;</span>, <span class=\"string\">&#x27;烫头&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">addPrototypeClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function addPClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.$set(<span class=\"built_in\">this</span>.student, <span class=\"string\">&#x27;sex&#x27;</span>, <span class=\"string\">&#x27;男&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">addHobbyClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function addHobbyClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.$set(</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.student.hobby,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.student.hobby.length,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">&#x27;学习-&#x27;</span> + <span class=\"built_in\">this</span>.student.hobby.length</span></span><br><span class=\"line\"><span class=\"javascript\">                    );</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">changeHobbyClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function changeHobbyClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.student.hobby.push(</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">&#x27;push new hobby-&#x27;</span> + <span class=\"built_in\">this</span>.student.hobby.length</span></span><br><span class=\"line\"><span class=\"javascript\">                    );</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<h4 id=\"vue监视数据的原理\"><a class=\"markdownIt-Anchor\" href=\"#vue监视数据的原理\"></a> vue监视数据的原理</h4>\n<ol>\n<li>vue会监视data中所有层次的数据</li>\n<li>通过setter实现数据监视，并且要在new vue时就传入需要监视的数据</li>\n<li>对象中后续追加的属性，vue默认不做响应式处理</li>\n<li>如果需要给添加的属性做响应式处理 需要使用 set api<br />\nVue.set(data.target,‘prototypeName’/index,‘prototypeValue’)<br />\nthis.$set(data.target,‘prototypeName’/index,‘prototypeValue’)</li>\n<li>对于数组的更新 需要使用api push、pop、shift、unshift、splice、sort、reverse 或者 Vue.set() | this.$set()</li>\n<li>Vue.set() | vm.$set() 不能给vm的根数即data直接添加属性</li>\n<li>核心是使用 Object.defineProperty 实现了数据劫持</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">使用</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">push</td>\n<td style=\"text-align:left\">const length = arrayObj. push([item1 [item2 [. . . [itemN ]]]])</td>\n<td style=\"text-align:left\">将一个或多个新元素添加到数组结尾，并返回数组新长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pop</td>\n<td style=\"text-align:left\">const obj = arrayObj.pop()</td>\n<td style=\"text-align:left\">移除最后一个元素并返回该元素值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">shift</td>\n<td style=\"text-align:left\">const obj = arrayObj.shift()</td>\n<td style=\"text-align:left\">移除最前一个元素并返回该元素值，数组中元素自动前移</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">unshift</td>\n<td style=\"text-align:left\">const length = arrayObj.unshift([item1 [item2 [. . . [itemN ]]]])</td>\n<td style=\"text-align:left\">将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">splice</td>\n<td style=\"text-align:left\">const deleteArr = arrayObj.splice(deletePos,deleteCount,[newItem1,newItem2])</td>\n<td style=\"text-align:left\">删除从指定位置deletePos开始的指定数量deleteCount的元素[并添加一个或多个新的元素]，数组形式返回所移除的元素</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sort</td>\n<td style=\"text-align:left\">const sortArr = arrayObj.sort()</td>\n<td style=\"text-align:left\">反转元素（最前的排到最后、最后的排到最前），返回数组地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">reverse</td>\n<td style=\"text-align:left\">const reverseArr = arrayObj.reverse()</td>\n<td style=\"text-align:left\">反转元素（最前的排到最后、最后的排到最前），返回数组地址</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>14.vue_set方法<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-id\">#root</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">justify-content</span>: space-evenly;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-class\">.conditiondv</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">background-color</span>: bisque;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-attr\">[v-cloak]</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">                <span class=\"attribute\">display</span>: none;</span></span><br><span class=\"line\"><span class=\"css\">            &#125;</span></span><br><span class=\"line\"><span class=\"css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                vue监视数据的原理</span></span><br><span class=\"line\"><span class=\"comment\">                1. vue会监视data中所有层次的数据</span></span><br><span class=\"line\"><span class=\"comment\">                2. 通过setter实现数据监视，并且要在new vue时就传入需要监视的数据</span></span><br><span class=\"line\"><span class=\"comment\">                3. 对象中后续追加的属性，vue默认不做响应式处理</span></span><br><span class=\"line\"><span class=\"comment\">                4. 如果需要给添加的属性做响应式处理 需要使用 set api</span></span><br><span class=\"line\"><span class=\"comment\">                    Vue.set(data.target,&#x27;prototypeName&#x27;/index,&#x27;prototypeValue&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">                    this.$set(data.target,&#x27;prototypeName&#x27;/index,&#x27;prototypeValue&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">                5. 对于数组的更新 需要使用api push、pop、shift、unshift、splice、sort、reverse 或者 Vue.set() | this.$set()</span></span><br><span class=\"line\"><span class=\"comment\">                6, Vue.set() | vm.$set() 不能给vm的根数即data直接添加属性</span></span><br><span class=\"line\"><span class=\"comment\">            --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>对象动态添加属性<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>this.$set(data.object,&#x27;prototypeName&#x27;,&#x27;prototypeValue&#x27;)&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>Vue.set(data.object,&#x27;prototypeName&#x27;,&#x27;prototypeValue&#x27;)&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(v,k) in student&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>key:&#123;&#123;k&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>----<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>value:&#123;&#123;v&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addPrototypeClick&quot;</span>&gt;</span>add prototype<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>对象动态修改数组属性<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">                    &gt;</span>this.$set(data.object,&#x27;prototypeName&#x27;,&#x27;prototypeValue&#x27;)&lt;/span</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(v,k) in student&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>key:&#123;&#123;k&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>----<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>value:&#123;&#123;v&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addHobbyClick&quot;</span>&gt;</span>add prototype<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeHobbyClick&quot;</span>&gt;</span>使用数组的变更方法<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>方法<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>使用<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>描述<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>push<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                const length = arrayObj. push([item1 [item2 [. .</span><br><span class=\"line\">                                . [itemN ]]]])</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                将一个或多个新元素添加到数组结尾，并返回数组新长度</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>pop<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>const obj = arrayObj.pop()<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>移除最后一个元素并返回该元素值<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>shift<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>const obj = arrayObj.shift()<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                移除最前一个元素并返回该元素值，数组中元素自动前移</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>unshift<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                const length = arrayObj.unshift([item1 [item2 [.</span><br><span class=\"line\">                                . . [itemN ]]]])</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>splice<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                const deleteArr =</span><br><span class=\"line\">                                arrayObj.splice(deletePos,deleteCount,[newItem1,newItem2])</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                删除从指定位置deletePos开始的指定数量deleteCount的元素[并添加一个或多个新的元素]，数组形式返回所移除的元素</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>sort<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>const sortArr = arrayObj.sort()<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                反转元素（最前的排到最后、最后的排到最前），返回数组地址</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>reverse<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>const reverseArr = arrayObj.reverse()<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                                反转元素（最前的排到最后、最后的排到最前），返回数组地址</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">student</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">age</span>: <span class=\"number\">20</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">hobby</span>: [<span class=\"string\">&#x27;抽烟&#x27;</span>, <span class=\"string\">&#x27;喝酒&#x27;</span>, <span class=\"string\">&#x27;烫头&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">addPrototypeClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function addPClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.$set(<span class=\"built_in\">this</span>.student, <span class=\"string\">&#x27;sex&#x27;</span>, <span class=\"string\">&#x27;男&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">addHobbyClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function addHobbyClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.$set(</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.student.hobby,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"built_in\">this</span>.student.hobby.length,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">&#x27;学习-&#x27;</span> + <span class=\"built_in\">this</span>.student.hobby.length</span></span><br><span class=\"line\"><span class=\"javascript\">                    );</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">changeHobbyClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function changeHobbyClick&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.student.hobby.push(</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">&#x27;push new hobby-&#x27;</span> + <span class=\"built_in\">this</span>.student.hobby.length</span></span><br><span class=\"line\"><span class=\"javascript\">                    );</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 15. 表单数据的收集","author":"OdinSam","abbrlink":"d63a","date":"2022-10-15T06:43:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. &lt; input type=“text” v-model=“userName”/&gt; v-model收集的是value值,即用户输入的值\n2. &lt; input type=“radio” name=“sex” value=‘male’ v-model=“sex” /&gt; v-model收集的是value值, 需要给标签配置value\n3. &lt; input type=“checkbox” value=‘game’ v-model=“hobby” /&gt;\n  如果没有配置value 则收集的是checked true or false\n  如果配置了value v-model的初始值是非数组，则收集的是checked true or false\n  如果配置了value v-model的初始值是数组，则收集的是value组成的数组\n4. v-model 有三个修饰符,可连续使用 v-model.trim.lazy=‘password’\n  lazy 延迟收集，失去焦点再收集数据\n  trim 过滤收尾空格\n  number 将输入的字符串转换为数值\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>15.表单数据的收集</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            表单数据收集:\n            1. <input type=\"text\" v-model=\"userName\"/> v-model收集的是value值,即用户输入的值\n            2. <input type=\"radio\" name=\"sex\" value='male'  v-model=\"sex\"  /> v-model收集的是value值, 需要给标签配置value\n            3. <input type=\"checkbox\" value='game'  v-model=\"hobby\"  /> \n                如果没有配置value 则收集的是checked true or false\n                如果配置了value v-model的初始值是非数组，则收集的是checked true or false\n                如果配置了value v-model的初始值是数组，则收集的是value组成的数组\n            4. v-model 有三个修饰符  \n                lazy 延迟收集，失去焦点再收集数据   \n                trim 过滤收尾空格  \n                number 将输入的字符串转换为数值\n        -->\n        <div id=\"root\">\n            <h3>表单数据的收集</h3>\n            <div>\n                <form @submit.prevent=\"submitForm\">\n                    <div>\n                        <span>账号</span\n                        ><input\n                            type=\"text\"\n                            v-model.lazy.trim=\"userInfo.account\"\n                        />\n                    </div>\n                    <div>\n                        <span>密码</span\n                        ><input type=\"password\" v-model=\"userInfo.pwd\" />\n                    </div>\n                    <div>\n                        <span>年龄</span\n                        ><input type=\"number\" v-model.number=\"userInfo.age\" />\n                    </div>\n                    <div>\n                        <span>性别</span>\n                        <input\n                            type=\"radio\"\n                            name=\"sex\"\n                            v-model=\"userInfo.sex\"\n                            value=\"male\"\n                        />\n                        <span>男</span>\n                        <input\n                            type=\"radio\"\n                            name=\"sex\"\n                            v-model=\"userInfo.sex\"\n                            value=\"female\"\n                        /><span>女</span>\n                    </div>\n                    <div>\n                        <span>爱好</span>\n                        <input\n                            type=\"checkbox\"\n                            value=\"study\"\n                            v-model=\"userInfo.hobby\"\n                        />学习\n                        <input\n                            type=\"checkbox\"\n                            value=\"game\"\n                            v-model=\"userInfo.hobby\"\n                        />游戏\n                        <input\n                            type=\"checkbox\"\n                            value=\"eat\"\n                            v-model=\"userInfo.hobby\"\n                        />吃饭\n                    </div>\n                    <div>\n                        <span>地址</span>\n                        <select\n                            name=\"address\"\n                            id=\"address\"\n                            v-model=\"userInfo.address\"\n                        >\n                            <option value=\"beijing\">北京</option>\n                            <option value=\"nanjing\">南京</option>\n                            <option value=\"shanghai\">上海</option>\n                        </select>\n                    </div>\n                    <div>\n                        <span>其他信息</span>\n                        <textarea\n                            name=\"other\"\n                            id=\"other\"\n                            cols=\"30\"\n                            rows=\"10\"\n                            v-model=\"userInfo.other\"\n                        ></textarea>\n                    </div>\n                    <div>\n                        <input type=\"checkbox\" v-model=\"userInfo.agree\" />\n                        <span>\n                            阅读并接受<a href=\"https://odinsam.com\"\n                                >《用户协议》</a\n                            >\n                        </span>\n                    </div>\n                    <div><button>提交</button></div>\n                </form>\n            </div>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    userInfo: {\n                        account: '',\n                        pwd: '',\n                        age: 0,\n                        sex: '',\n                        hobby: [],\n                        address: 'nanjing',\n                        other: '',\n                        agree: false\n                    }\n                };\n            },\n            methods: {\n                submitForm() {\n                    console.log('function submitForm');\n                }\n            }\n        });\n    </script>\n</html>\n\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-15-表单数据的收集.md","raw":"title: Vue2.0 - 15. 表单数据的收集\nauthor: OdinSam\ntags:\n  - Form\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: d63a\ndate: 2022-10-15 14:43:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. &lt; input type=“text” v-model=“userName”/&gt; v-model收集的是value值,即用户输入的值\n2. &lt; input type=“radio” name=“sex” value=‘male’ v-model=“sex” /&gt; v-model收集的是value值, 需要给标签配置value\n3. &lt; input type=“checkbox” value=‘game’ v-model=“hobby” /&gt;\n  如果没有配置value 则收集的是checked true or false\n  如果配置了value v-model的初始值是非数组，则收集的是checked true or false\n  如果配置了value v-model的初始值是数组，则收集的是value组成的数组\n4. v-model 有三个修饰符,可连续使用 v-model.trim.lazy=‘password’\n  lazy 延迟收集，失去焦点再收集数据\n  trim 过滤收尾空格\n  number 将输入的字符串转换为数值\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>15.表单数据的收集</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            表单数据收集:\n            1. <input type=\"text\" v-model=\"userName\"/> v-model收集的是value值,即用户输入的值\n            2. <input type=\"radio\" name=\"sex\" value='male'  v-model=\"sex\"  /> v-model收集的是value值, 需要给标签配置value\n            3. <input type=\"checkbox\" value='game'  v-model=\"hobby\"  /> \n                如果没有配置value 则收集的是checked true or false\n                如果配置了value v-model的初始值是非数组，则收集的是checked true or false\n                如果配置了value v-model的初始值是数组，则收集的是value组成的数组\n            4. v-model 有三个修饰符  \n                lazy 延迟收集，失去焦点再收集数据   \n                trim 过滤收尾空格  \n                number 将输入的字符串转换为数值\n        -->\n        <div id=\"root\">\n            <h3>表单数据的收集</h3>\n            <div>\n                <form @submit.prevent=\"submitForm\">\n                    <div>\n                        <span>账号</span\n                        ><input\n                            type=\"text\"\n                            v-model.lazy.trim=\"userInfo.account\"\n                        />\n                    </div>\n                    <div>\n                        <span>密码</span\n                        ><input type=\"password\" v-model=\"userInfo.pwd\" />\n                    </div>\n                    <div>\n                        <span>年龄</span\n                        ><input type=\"number\" v-model.number=\"userInfo.age\" />\n                    </div>\n                    <div>\n                        <span>性别</span>\n                        <input\n                            type=\"radio\"\n                            name=\"sex\"\n                            v-model=\"userInfo.sex\"\n                            value=\"male\"\n                        />\n                        <span>男</span>\n                        <input\n                            type=\"radio\"\n                            name=\"sex\"\n                            v-model=\"userInfo.sex\"\n                            value=\"female\"\n                        /><span>女</span>\n                    </div>\n                    <div>\n                        <span>爱好</span>\n                        <input\n                            type=\"checkbox\"\n                            value=\"study\"\n                            v-model=\"userInfo.hobby\"\n                        />学习\n                        <input\n                            type=\"checkbox\"\n                            value=\"game\"\n                            v-model=\"userInfo.hobby\"\n                        />游戏\n                        <input\n                            type=\"checkbox\"\n                            value=\"eat\"\n                            v-model=\"userInfo.hobby\"\n                        />吃饭\n                    </div>\n                    <div>\n                        <span>地址</span>\n                        <select\n                            name=\"address\"\n                            id=\"address\"\n                            v-model=\"userInfo.address\"\n                        >\n                            <option value=\"beijing\">北京</option>\n                            <option value=\"nanjing\">南京</option>\n                            <option value=\"shanghai\">上海</option>\n                        </select>\n                    </div>\n                    <div>\n                        <span>其他信息</span>\n                        <textarea\n                            name=\"other\"\n                            id=\"other\"\n                            cols=\"30\"\n                            rows=\"10\"\n                            v-model=\"userInfo.other\"\n                        ></textarea>\n                    </div>\n                    <div>\n                        <input type=\"checkbox\" v-model=\"userInfo.agree\" />\n                        <span>\n                            阅读并接受<a href=\"https://odinsam.com\"\n                                >《用户协议》</a\n                            >\n                        </span>\n                    </div>\n                    <div><button>提交</button></div>\n                </form>\n            </div>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    userInfo: {\n                        account: '',\n                        pwd: '',\n                        age: 0,\n                        sex: '',\n                        hobby: [],\n                        address: 'nanjing',\n                        other: '',\n                        agree: false\n                    }\n                };\n            },\n            methods: {\n                submitForm() {\n                    console.log('function submitForm');\n                }\n            }\n        });\n    </script>\n</html>\n\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-15-表单数据的收集","published":1,"updated":"2023-03-10T06:46:23.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2r00295cs91r0xdo8o","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>&lt; input type=“text” v-model=“userName”/&gt; v-model收集的是value值,即用户输入的值</li>\n<li>&lt; input type=“radio” name=“sex” value=‘male’ v-model=“sex” /&gt; v-model收集的是value值, 需要给标签配置value</li>\n<li>&lt; input type=“checkbox” value=‘game’ v-model=“hobby” /&gt;<br />\n如果没有配置value 则收集的是checked true or false<br />\n如果配置了value v-model的初始值是非数组，则收集的是checked true or false<br />\n如果配置了value v-model的初始值是数组，则收集的是value组成的数组</li>\n<li>v-model 有三个修饰符,可连续使用 v-model.trim.lazy=‘password’<br />\nlazy 延迟收集，失去焦点再收集数据<br />\ntrim 过滤收尾空格<br />\nnumber 将输入的字符串转换为数值</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>15.表单数据的收集<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            表单数据收集:</span></span><br><span class=\"line\"><span class=\"comment\">            1. &lt;input type=&quot;text&quot; v-model=&quot;userName&quot;/&gt; v-model收集的是value值,即用户输入的值</span></span><br><span class=\"line\"><span class=\"comment\">            2. &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&#x27;male&#x27;  v-model=&quot;sex&quot;  /&gt; v-model收集的是value值, 需要给标签配置value</span></span><br><span class=\"line\"><span class=\"comment\">            3. &lt;input type=&quot;checkbox&quot; value=&#x27;game&#x27;  v-model=&quot;hobby&quot;  /&gt; </span></span><br><span class=\"line\"><span class=\"comment\">                如果没有配置value 则收集的是checked true or false</span></span><br><span class=\"line\"><span class=\"comment\">                如果配置了value v-model的初始值是非数组，则收集的是checked true or false</span></span><br><span class=\"line\"><span class=\"comment\">                如果配置了value v-model的初始值是数组，则收集的是value组成的数组</span></span><br><span class=\"line\"><span class=\"comment\">            4. v-model 有三个修饰符  </span></span><br><span class=\"line\"><span class=\"comment\">                lazy 延迟收集，失去焦点再收集数据   </span></span><br><span class=\"line\"><span class=\"comment\">                trim 过滤收尾空格  </span></span><br><span class=\"line\"><span class=\"comment\">                number 将输入的字符串转换为数值</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>表单数据的收集<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">form</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">&quot;submitForm&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>账号&lt;/span</span><br><span class=\"line\">                        &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model.lazy.trim</span>=<span class=\"string\">&quot;userInfo.account&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>密码&lt;/span</span><br><span class=\"line\">                        &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.pwd&quot;</span> /&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄&lt;/span</span><br><span class=\"line\">                        &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">v-model.number</span>=<span class=\"string\">&quot;userInfo.age&quot;</span> /&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>性别<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.sex&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;male&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>男<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.sex&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;female&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>女<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>爱好<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;study&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.hobby&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span>学习</span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;game&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.hobby&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span>游戏</span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;eat&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.hobby&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span>吃饭</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>地址<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">select</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">name</span>=<span class=\"string\">&quot;address&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">id</span>=<span class=\"string\">&quot;address&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.address&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        &gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;beijing&quot;</span>&gt;</span>北京<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;nanjing&quot;</span>&gt;</span>南京<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;shanghai&quot;</span>&gt;</span>上海<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>其他信息<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">textarea</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">name</span>=<span class=\"string\">&quot;other&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">id</span>=<span class=\"string\">&quot;other&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">cols</span>=<span class=\"string\">&quot;30&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">rows</span>=<span class=\"string\">&quot;10&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.other&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.agree&quot;</span> /&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                            阅读并接受<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://odinsam.com&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                                &gt;</span>《用户协议》&lt;/a</span><br><span class=\"line\">                            &gt;</span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">userInfo</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">account</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">pwd</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">age</span>: <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">hobby</span>: [],</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">address</span>: <span class=\"string\">&#x27;nanjing&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">other</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">agree</span>: <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function submitForm&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>&lt; input type=“text” v-model=“userName”/&gt; v-model收集的是value值,即用户输入的值</li>\n<li>&lt; input type=“radio” name=“sex” value=‘male’ v-model=“sex” /&gt; v-model收集的是value值, 需要给标签配置value</li>\n<li>&lt; input type=“checkbox” value=‘game’ v-model=“hobby” /&gt;<br />\n如果没有配置value 则收集的是checked true or false<br />\n如果配置了value v-model的初始值是非数组，则收集的是checked true or false<br />\n如果配置了value v-model的初始值是数组，则收集的是value组成的数组</li>\n<li>v-model 有三个修饰符,可连续使用 v-model.trim.lazy=‘password’<br />\nlazy 延迟收集，失去焦点再收集数据<br />\ntrim 过滤收尾空格<br />\nnumber 将输入的字符串转换为数值</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>15.表单数据的收集<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            表单数据收集:</span></span><br><span class=\"line\"><span class=\"comment\">            1. &lt;input type=&quot;text&quot; v-model=&quot;userName&quot;/&gt; v-model收集的是value值,即用户输入的值</span></span><br><span class=\"line\"><span class=\"comment\">            2. &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&#x27;male&#x27;  v-model=&quot;sex&quot;  /&gt; v-model收集的是value值, 需要给标签配置value</span></span><br><span class=\"line\"><span class=\"comment\">            3. &lt;input type=&quot;checkbox&quot; value=&#x27;game&#x27;  v-model=&quot;hobby&quot;  /&gt; </span></span><br><span class=\"line\"><span class=\"comment\">                如果没有配置value 则收集的是checked true or false</span></span><br><span class=\"line\"><span class=\"comment\">                如果配置了value v-model的初始值是非数组，则收集的是checked true or false</span></span><br><span class=\"line\"><span class=\"comment\">                如果配置了value v-model的初始值是数组，则收集的是value组成的数组</span></span><br><span class=\"line\"><span class=\"comment\">            4. v-model 有三个修饰符  </span></span><br><span class=\"line\"><span class=\"comment\">                lazy 延迟收集，失去焦点再收集数据   </span></span><br><span class=\"line\"><span class=\"comment\">                trim 过滤收尾空格  </span></span><br><span class=\"line\"><span class=\"comment\">                number 将输入的字符串转换为数值</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>表单数据的收集<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">form</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">&quot;submitForm&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>账号&lt;/span</span><br><span class=\"line\">                        &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model.lazy.trim</span>=<span class=\"string\">&quot;userInfo.account&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>密码&lt;/span</span><br><span class=\"line\">                        &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.pwd&quot;</span> /&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄&lt;/span</span><br><span class=\"line\">                        &gt;<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;number&quot;</span> <span class=\"attr\">v-model.number</span>=<span class=\"string\">&quot;userInfo.age&quot;</span> /&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>性别<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.sex&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;male&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>男<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">name</span>=<span class=\"string\">&quot;sex&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.sex&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;female&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>女<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>爱好<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;study&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.hobby&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span>学习</span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;game&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.hobby&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span>游戏</span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">value</span>=<span class=\"string\">&quot;eat&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.hobby&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        /&gt;</span>吃饭</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>地址<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">select</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">name</span>=<span class=\"string\">&quot;address&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">id</span>=<span class=\"string\">&quot;address&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.address&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        &gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;beijing&quot;</span>&gt;</span>北京<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;nanjing&quot;</span>&gt;</span>南京<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;shanghai&quot;</span>&gt;</span>上海<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>其他信息<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">textarea</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">name</span>=<span class=\"string\">&quot;other&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">id</span>=<span class=\"string\">&quot;other&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">cols</span>=<span class=\"string\">&quot;30&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">rows</span>=<span class=\"string\">&quot;10&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.other&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                        &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;userInfo.agree&quot;</span> /&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                            阅读并接受<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://odinsam.com&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                                &gt;</span>《用户协议》&lt;/a</span><br><span class=\"line\">                            &gt;</span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">userInfo</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">account</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">pwd</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">age</span>: <span class=\"number\">0</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">hobby</span>: [],</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">address</span>: <span class=\"string\">&#x27;nanjing&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">other</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"attr\">agree</span>: <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">submitForm</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function submitForm&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 16. Filter过滤器","author":"OdinSam","abbrlink":"cb68","date":"2022-10-17T06:46:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n#### Filter过滤器:\n\n1. 对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)\n2. 注册过滤器\n\t```js\n    Vue.filter(‘name’,function(){ });\n    // 或者\n    new Vue(filters:{ filtername([params]){ } })\n   ```\n3. 使用过滤器\n\t```js\n    {{name | filtername1[ | filtername2]}} \n    // 或者 \n    v-bind:属性=“name | filtername1[ | filtername2]”\n   ```\n4. 过滤器可以接受额外参数，多个过滤器可以串联\n5. 并没有改变元数据，只是产生新的对应数据\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>16.过滤器</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            过滤器:\n            1. 对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)\n            2. 注册过滤器 Vue.filter('name',function(){}); 或 new Vue(filters:{ filtername([params]){} })\n            3. 使用过滤器 {{name | filtername1[ | filtername2]}} 或者 v-bind:属性=\"name | filtername1[ | filtername2]\"\n            4. 过滤器可以接受额外参数，多个过滤器可以串联\n            5. 并没有改变元数据，只是产生新的对应数据\n        -->\n        <div id=\"root\">\n            <h2>无参过滤器:{{ username | usernameFormater}}</h2>\n            <h2>\n                带参过滤器:{{ username | usernameFormaterWithParams('参数')}}\n            </h2>\n            <h2>\n                串联过滤器:{{ username | usernameFormater |\n                usernameFormaterWithParams('参数')}}\n            </h2>\n            <h2>无参全局过滤器:{{ username | globalFilter}}</h2>\n            <h2>\n                带参全局过滤器:{{ username | globalFilterWithParams('global')}}\n            </h2>\n            <h2>\n                全局过滤器+局部过滤器:{{ username |\n                usernameFormaterWithParams('参数') |\n                globalFilterWithParams('global')}}\n            </h2>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        Vue.filter('globalFilter', function (value) {\n            return value + '-无参全局过滤器';\n        });\n        Vue.filter('globalFilterWithParams', function (value, param) {\n            return value + '-带参全局过滤器-' + param;\n        });\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    username: 'odinsam'\n                };\n            },\n            methods: {},\n            filters: {\n                usernameFormater(value) {\n                    return value + '-无参数';\n                },\n                usernameFormaterWithParams(value, param) {\n                    return value + '-带参数';\n                }\n            }\n        });\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-16-Filter过滤器.md","raw":"title: Vue2.0 - 16. Filter过滤器\nauthor: OdinSam\ntags:\n  - vue2\n  - Filter\ncategories:\n  - 前端\n  - vue2\nabbrlink: cb68\ndate: 2022-10-17 14:46:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n#### Filter过滤器:\n\n1. 对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)\n2. 注册过滤器\n\t```js\n    Vue.filter(‘name’,function(){ });\n    // 或者\n    new Vue(filters:{ filtername([params]){ } })\n   ```\n3. 使用过滤器\n\t```js\n    {{name | filtername1[ | filtername2]}} \n    // 或者 \n    v-bind:属性=“name | filtername1[ | filtername2]”\n   ```\n4. 过滤器可以接受额外参数，多个过滤器可以串联\n5. 并没有改变元数据，只是产生新的对应数据\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>16.过滤器</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            过滤器:\n            1. 对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)\n            2. 注册过滤器 Vue.filter('name',function(){}); 或 new Vue(filters:{ filtername([params]){} })\n            3. 使用过滤器 {{name | filtername1[ | filtername2]}} 或者 v-bind:属性=\"name | filtername1[ | filtername2]\"\n            4. 过滤器可以接受额外参数，多个过滤器可以串联\n            5. 并没有改变元数据，只是产生新的对应数据\n        -->\n        <div id=\"root\">\n            <h2>无参过滤器:{{ username | usernameFormater}}</h2>\n            <h2>\n                带参过滤器:{{ username | usernameFormaterWithParams('参数')}}\n            </h2>\n            <h2>\n                串联过滤器:{{ username | usernameFormater |\n                usernameFormaterWithParams('参数')}}\n            </h2>\n            <h2>无参全局过滤器:{{ username | globalFilter}}</h2>\n            <h2>\n                带参全局过滤器:{{ username | globalFilterWithParams('global')}}\n            </h2>\n            <h2>\n                全局过滤器+局部过滤器:{{ username |\n                usernameFormaterWithParams('参数') |\n                globalFilterWithParams('global')}}\n            </h2>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        Vue.filter('globalFilter', function (value) {\n            return value + '-无参全局过滤器';\n        });\n        Vue.filter('globalFilterWithParams', function (value, param) {\n            return value + '-带参全局过滤器-' + param;\n        });\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            data() {\n                return {\n                    username: 'odinsam'\n                };\n            },\n            methods: {},\n            filters: {\n                usernameFormater(value) {\n                    return value + '-无参数';\n                },\n                usernameFormaterWithParams(value, param) {\n                    return value + '-带参数';\n                }\n            }\n        });\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-16-Filter过滤器","published":1,"updated":"2023-03-10T06:51:41.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2r002c5cs9bsayagdm","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"filter过滤器\"><a class=\"markdownIt-Anchor\" href=\"#filter过滤器\"></a> Filter过滤器:</h4>\n<ol>\n<li>对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)</li>\n<li>注册过滤器 <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.filter(‘name’,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; &#125;);</span><br><span class=\"line\"><span class=\"comment\">// 或者</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(filters:&#123; <span class=\"function\"><span class=\"title\">filtername</span>(<span class=\"params\">[params]</span>)</span>&#123; &#125; &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li>使用过滤器 <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;name | filtername1[ | filtername2]&#125;&#125; </span><br><span class=\"line\"><span class=\"comment\">// 或者 </span></span><br><span class=\"line\">v-bind:属性=“name | filtername1[ | filtername2]”</span><br></pre></td></tr></table></figure>\n</li>\n<li>过滤器可以接受额外参数，多个过滤器可以串联</li>\n<li>并没有改变元数据，只是产生新的对应数据</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>16.过滤器<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            过滤器:</span></span><br><span class=\"line\"><span class=\"comment\">            1. 对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)</span></span><br><span class=\"line\"><span class=\"comment\">            2. 注册过滤器 Vue.filter(&#x27;name&#x27;,function()&#123;&#125;); 或 new Vue(filters:&#123; filtername([params])&#123;&#125; &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">            3. 使用过滤器 &#123;&#123;name | filtername1[ | filtername2]&#125;&#125; 或者 v-bind:属性=&quot;name | filtername1[ | filtername2]&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            4. 过滤器可以接受额外参数，多个过滤器可以串联</span></span><br><span class=\"line\"><span class=\"comment\">            5. 并没有改变元数据，只是产生新的对应数据</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>无参过滤器:&#123;&#123; username | usernameFormater&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">                带参过滤器:&#123;&#123; username | usernameFormaterWithParams(&#x27;参数&#x27;)&#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">                串联过滤器:&#123;&#123; username | usernameFormater |</span><br><span class=\"line\">                usernameFormaterWithParams(&#x27;参数&#x27;)&#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>无参全局过滤器:&#123;&#123; username | globalFilter&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">                带参全局过滤器:&#123;&#123; username | globalFilterWithParams(&#x27;global&#x27;)&#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">                全局过滤器+局部过滤器:&#123;&#123; username |</span><br><span class=\"line\">                usernameFormaterWithParams(&#x27;参数&#x27;) |</span><br><span class=\"line\">                globalFilterWithParams(&#x27;global&#x27;)&#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.filter(<span class=\"string\">&#x27;globalFilter&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-无参全局过滤器&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.filter(<span class=\"string\">&#x27;globalFilterWithParams&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value, param</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-带参全局过滤器-&#x27;</span> + param;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">username</span>: <span class=\"string\">&#x27;odinsam&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">filters</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">usernameFormater</span>(<span class=\"params\">value</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-无参数&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">usernameFormaterWithParams</span>(<span class=\"params\">value, param</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-带参数&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<h4 id=\"filter过滤器\"><a class=\"markdownIt-Anchor\" href=\"#filter过滤器\"></a> Filter过滤器:</h4>\n<ol>\n<li>对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)</li>\n<li>注册过滤器 <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.filter(‘name’,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; &#125;);</span><br><span class=\"line\"><span class=\"comment\">// 或者</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(filters:&#123; <span class=\"function\"><span class=\"title\">filtername</span>(<span class=\"params\">[params]</span>)</span>&#123; &#125; &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li>使用过滤器 <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;name | filtername1[ | filtername2]&#125;&#125; </span><br><span class=\"line\"><span class=\"comment\">// 或者 </span></span><br><span class=\"line\">v-bind:属性=“name | filtername1[ | filtername2]”</span><br></pre></td></tr></table></figure>\n</li>\n<li>过滤器可以接受额外参数，多个过滤器可以串联</li>\n<li>并没有改变元数据，只是产生新的对应数据</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>16.过滤器<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            过滤器:</span></span><br><span class=\"line\"><span class=\"comment\">            1. 对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)</span></span><br><span class=\"line\"><span class=\"comment\">            2. 注册过滤器 Vue.filter(&#x27;name&#x27;,function()&#123;&#125;); 或 new Vue(filters:&#123; filtername([params])&#123;&#125; &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">            3. 使用过滤器 &#123;&#123;name | filtername1[ | filtername2]&#125;&#125; 或者 v-bind:属性=&quot;name | filtername1[ | filtername2]&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            4. 过滤器可以接受额外参数，多个过滤器可以串联</span></span><br><span class=\"line\"><span class=\"comment\">            5. 并没有改变元数据，只是产生新的对应数据</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>无参过滤器:&#123;&#123; username | usernameFormater&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">                带参过滤器:&#123;&#123; username | usernameFormaterWithParams(&#x27;参数&#x27;)&#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">                串联过滤器:&#123;&#123; username | usernameFormater |</span><br><span class=\"line\">                usernameFormaterWithParams(&#x27;参数&#x27;)&#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>无参全局过滤器:&#123;&#123; username | globalFilter&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">                带参全局过滤器:&#123;&#123; username | globalFilterWithParams(&#x27;global&#x27;)&#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">                全局过滤器+局部过滤器:&#123;&#123; username |</span><br><span class=\"line\">                usernameFormaterWithParams(&#x27;参数&#x27;) |</span><br><span class=\"line\">                globalFilterWithParams(&#x27;global&#x27;)&#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.filter(<span class=\"string\">&#x27;globalFilter&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-无参全局过滤器&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.filter(<span class=\"string\">&#x27;globalFilterWithParams&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value, param</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-带参全局过滤器-&#x27;</span> + param;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>, <span class=\"comment\">// 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">username</span>: <span class=\"string\">&#x27;odinsam&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">filters</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">usernameFormater</span>(<span class=\"params\">value</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-无参数&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">usernameFormaterWithParams</span>(<span class=\"params\">value, param</span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-带参数&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 17. 生命周期","author":"OdinSam","abbrlink":"5bf8","date":"2022-10-18T06:52:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n![生命周期](/images/5bf8/lifecycle.png)\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-17-生命周期.md","raw":"title: Vue2.0 - 17. 生命周期\nauthor: OdinSam\ntags:\n  - 生命周期\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: 5bf8\ndate: 2022-10-18 14:52:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n![生命周期](/images/5bf8/lifecycle.png)\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-17-生命周期","published":1,"updated":"2023-03-10T06:54:01.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2t002h5cs90qngh4t8","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img src=\"/images/5bf8/lifecycle.png\" alt=\"生命周期\" /></p>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<p><img src=\"/images/5bf8/lifecycle.png\" alt=\"生命周期\" /></p>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 18.1 vue组件-非单文件组件","author":"OdinSam","abbrlink":"26da","date":"2022-10-18T06:54:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n#### 1. 使用vue组件的步骤:\n\n\t1. 创建组件 单文件组件、非单位件组件\n   2. 注册组件\n\t3. 使用组件（组件标签）\n\t定义组件:\n    1. 使用Vue.extend({options}) 或者 const cpt = {options} 创建,其中options和new Vue({options})传入的options略有区别组件的 options 不需要el， 最终的el由new Vue({options})决定\n    2. data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:\n    \n\t```js\n    let data={a:1,b:2}\n    const x1 = data\n    const x2 = data\n    // 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变\n\n    function data(){\n        return {a:1,b:2}\n    }\n    const x1 = data()\n    const x2 = data()\n    //通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变\n   ```\n\n2. 使用 template: 来配置组件结构\n3. 关于组件名\n\t一个单词组成: 首字母小写 student 或者 首字母大写 School\n\t多个单词组成: kebab-case命名 my-school 或者 CamelCase大驼峰 MyStudent(需要vue脚手架支持)\n\t不可以使用 html已有元素名称 h1 div span 等\n\t尽量使用 name 配置项指定组件在开发者工具中呈现的名字\n\n#### 2. 注册组件\n\n局部注册 new Vue({ components:{ 组件名:组件 } })\n全局注册 Vue.component(‘组件名’，组件)\n\n#### 3. 使用组件\n\n<组件 /> 或者 <组件></组件>\n<组件 /> 不使用脚手架，会导致后续组件无法渲染\n\n#### 4. 说明:\n\n1. 组件本质是VueComponent的构造函数，并且是由Vue.extend生成的\n2. 当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）\n3. 每次调用Vue.extend返回的都是一个全新的VueComponent\n4. this指向：\n\t1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例\n\t2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例\n    \n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>18.1.非单文件组件</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            使用vue组件的步骤:\n            1. 创建组件 单文件组件、非单位件组件\n            2. 注册组件\n            3. 使用组件（组件标签）\n\n            定义组件:\n            1. 使用Vue.extend({options}) 或者 const cpt = {options} 创建,其中options和new Vue({options})传入的options略有区别\n                组件的 options 不需要el， 最终的el由new Vue({options})决定\n                data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:\n                let data={a:1,b:2}\n                const x1 = data\n                const x2 = data\n                // 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变\n\n                function data(){\n                    return {a:1,b:2}\n                }\n                const x1 = data()\n                const x2 = data()\n                //通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变\n\n\n            2. 使用 template:`` 来配置组件结构\n            3. 关于组件名\n                一个单词组成: 首字母小写 student 或者 首字母大写 School\n                多个单词组成: kebab-case命名  my-school  或者 CamelCase大驼峰  MyStudent(需要vue脚手架支持)\n                不可以使用 html已有元素名称  h1 div  span 等\n                尽量使用 name 配置项指定组件在开发者工具中呈现的名字 \n\n\n            注册组件\n            1. 局部注册  new Vue({ components:{ 组件名:组件 } })\n            2. 全局注册  Vue.component('组件名'，组件)\n\n            使用组件\n            1. <组件 /> 或者 <组件></组件>\n            2. <组件 /> 不使用脚手架，会导致后续组件无法渲染\n\n            说明:\n            1. 组件本质是VueComponent的构造函数，并且是由Vue.extend生成的\n            2. 当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）\n            3. 每次调用Vue.extend返回的都是一个全新的VueComponent\n            4. this指向：  \n                1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例\n                2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例\n        -->\n        <div id=\"root\">\n            <school></school>\n            <Student></Student>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const Student = Vue.extend({\n            name: 'Student',\n            data() {\n                return {\n                    stuName: 'odinsam',\n                    stuAge: 20\n                };\n            },\n            template: `\n                <div>\n                    <h2>Student组件</h2>\n                    <span>姓名：{{stuName}}</span>\n                    <span>年龄：{{stuAge}}</span>\n                </div>\n            `\n        });\n        const School = {\n            name: 'school',\n            data() {\n                return {\n                    schName: 'vue学校',\n                    schAddress: '南京'\n                };\n            },\n            template: `\n                <div>\n                    <h2>School组件</h2>\n                    <span>课程：{{schName}}</span>\n                    <span>地址：{{schAddress}}</span>\n                </div>\n            `\n        };\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            components: {\n                Student,\n                school: School\n            }\n        });\n    </script>\n</html>\n\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-18-1-vue组件-非单文件组件.md","raw":"title: Vue2.0 - 18.1 vue组件-非单文件组件\nauthor: OdinSam\ntags:\n  - component\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: 26da\ndate: 2022-10-18 14:54:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n#### 1. 使用vue组件的步骤:\n\n\t1. 创建组件 单文件组件、非单位件组件\n   2. 注册组件\n\t3. 使用组件（组件标签）\n\t定义组件:\n    1. 使用Vue.extend({options}) 或者 const cpt = {options} 创建,其中options和new Vue({options})传入的options略有区别组件的 options 不需要el， 最终的el由new Vue({options})决定\n    2. data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:\n    \n\t```js\n    let data={a:1,b:2}\n    const x1 = data\n    const x2 = data\n    // 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变\n\n    function data(){\n        return {a:1,b:2}\n    }\n    const x1 = data()\n    const x2 = data()\n    //通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变\n   ```\n\n2. 使用 template: 来配置组件结构\n3. 关于组件名\n\t一个单词组成: 首字母小写 student 或者 首字母大写 School\n\t多个单词组成: kebab-case命名 my-school 或者 CamelCase大驼峰 MyStudent(需要vue脚手架支持)\n\t不可以使用 html已有元素名称 h1 div span 等\n\t尽量使用 name 配置项指定组件在开发者工具中呈现的名字\n\n#### 2. 注册组件\n\n局部注册 new Vue({ components:{ 组件名:组件 } })\n全局注册 Vue.component(‘组件名’，组件)\n\n#### 3. 使用组件\n\n<组件 /> 或者 <组件></组件>\n<组件 /> 不使用脚手架，会导致后续组件无法渲染\n\n#### 4. 说明:\n\n1. 组件本质是VueComponent的构造函数，并且是由Vue.extend生成的\n2. 当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）\n3. 每次调用Vue.extend返回的都是一个全新的VueComponent\n4. this指向：\n\t1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例\n\t2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例\n    \n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>18.1.非单文件组件</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            使用vue组件的步骤:\n            1. 创建组件 单文件组件、非单位件组件\n            2. 注册组件\n            3. 使用组件（组件标签）\n\n            定义组件:\n            1. 使用Vue.extend({options}) 或者 const cpt = {options} 创建,其中options和new Vue({options})传入的options略有区别\n                组件的 options 不需要el， 最终的el由new Vue({options})决定\n                data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:\n                let data={a:1,b:2}\n                const x1 = data\n                const x2 = data\n                // 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变\n\n                function data(){\n                    return {a:1,b:2}\n                }\n                const x1 = data()\n                const x2 = data()\n                //通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变\n\n\n            2. 使用 template:`` 来配置组件结构\n            3. 关于组件名\n                一个单词组成: 首字母小写 student 或者 首字母大写 School\n                多个单词组成: kebab-case命名  my-school  或者 CamelCase大驼峰  MyStudent(需要vue脚手架支持)\n                不可以使用 html已有元素名称  h1 div  span 等\n                尽量使用 name 配置项指定组件在开发者工具中呈现的名字 \n\n\n            注册组件\n            1. 局部注册  new Vue({ components:{ 组件名:组件 } })\n            2. 全局注册  Vue.component('组件名'，组件)\n\n            使用组件\n            1. <组件 /> 或者 <组件></组件>\n            2. <组件 /> 不使用脚手架，会导致后续组件无法渲染\n\n            说明:\n            1. 组件本质是VueComponent的构造函数，并且是由Vue.extend生成的\n            2. 当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）\n            3. 每次调用Vue.extend返回的都是一个全新的VueComponent\n            4. this指向：  \n                1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例\n                2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例\n        -->\n        <div id=\"root\">\n            <school></school>\n            <Student></Student>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const Student = Vue.extend({\n            name: 'Student',\n            data() {\n                return {\n                    stuName: 'odinsam',\n                    stuAge: 20\n                };\n            },\n            template: `\n                <div>\n                    <h2>Student组件</h2>\n                    <span>姓名：{{stuName}}</span>\n                    <span>年龄：{{stuAge}}</span>\n                </div>\n            `\n        });\n        const School = {\n            name: 'school',\n            data() {\n                return {\n                    schName: 'vue学校',\n                    schAddress: '南京'\n                };\n            },\n            template: `\n                <div>\n                    <h2>School组件</h2>\n                    <span>课程：{{schName}}</span>\n                    <span>地址：{{schAddress}}</span>\n                </div>\n            `\n        };\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            components: {\n                Student,\n                school: School\n            }\n        });\n    </script>\n</html>\n\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-18-1-vue组件-非单文件组件","published":1,"updated":"2023-03-10T07:01:30.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2t002j5cs98r2fe1gn","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-使用vue组件的步骤\"><a class=\"markdownIt-Anchor\" href=\"#1-使用vue组件的步骤\"></a> 1. 使用vue组件的步骤:</h4>\n<pre><code>1. 创建组件 单文件组件、非单位件组件\n</code></pre>\n<ol start=\"2\">\n<li>注册组件</li>\n<li>使用组件（组件标签）<br />\n定义组件:</li>\n<li>使用Vue.extend({options}) 或者 const cpt = {options} 创建,其中options和new Vue({options})传入的options略有区别组件的 options 不需要el， 最终的el由new Vue({options})决定</li>\n<li>data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:</li>\n</ol>\n<pre><code><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data=&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> x1 = data</span><br><span class=\"line\"><span class=\"keyword\">const</span> x2 = data</span><br><span class=\"line\"><span class=\"comment\">// 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">data</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> x1 = data()</span><br><span class=\"line\"><span class=\"keyword\">const</span> x2 = data()</span><br><span class=\"line\"><span class=\"comment\">//通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变</span></span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"2\">\n<li>使用 template: 来配置组件结构</li>\n<li>关于组件名<br />\n一个单词组成: 首字母小写 student 或者 首字母大写 School<br />\n多个单词组成: kebab-case命名 my-school 或者 CamelCase大驼峰 MyStudent(需要vue脚手架支持)<br />\n不可以使用 html已有元素名称 h1 div span 等<br />\n尽量使用 name 配置项指定组件在开发者工具中呈现的名字</li>\n</ol>\n<h4 id=\"2-注册组件\"><a class=\"markdownIt-Anchor\" href=\"#2-注册组件\"></a> 2. 注册组件</h4>\n<p>局部注册 new Vue({ components:{ 组件名:组件 } })<br />\n全局注册 Vue.component(‘组件名’，组件)</p>\n<h4 id=\"3-使用组件\"><a class=\"markdownIt-Anchor\" href=\"#3-使用组件\"></a> 3. 使用组件</h4>\n<p>&lt;组件 /&gt; 或者 &lt;组件&gt;&lt;/组件&gt;<br />\n&lt;组件 /&gt; 不使用脚手架，会导致后续组件无法渲染</p>\n<h4 id=\"4-说明\"><a class=\"markdownIt-Anchor\" href=\"#4-说明\"></a> 4. 说明:</h4>\n<ol>\n<li>组件本质是VueComponent的构造函数，并且是由Vue.extend生成的</li>\n<li>当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）</li>\n<li>每次调用Vue.extend返回的都是一个全新的VueComponent</li>\n<li>this指向：<br />\n1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例<br />\n2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>18.1.非单文件组件<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            使用vue组件的步骤:</span></span><br><span class=\"line\"><span class=\"comment\">            1. 创建组件 单文件组件、非单位件组件</span></span><br><span class=\"line\"><span class=\"comment\">            2. 注册组件</span></span><br><span class=\"line\"><span class=\"comment\">            3. 使用组件（组件标签）</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            定义组件:</span></span><br><span class=\"line\"><span class=\"comment\">            1. 使用Vue.extend(&#123;options&#125;) 或者 const cpt = &#123;options&#125; 创建,其中options和new Vue(&#123;options&#125;)传入的options略有区别</span></span><br><span class=\"line\"><span class=\"comment\">                组件的 options 不需要el， 最终的el由new Vue(&#123;options&#125;)决定</span></span><br><span class=\"line\"><span class=\"comment\">                data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:</span></span><br><span class=\"line\"><span class=\"comment\">                let data=&#123;a:1,b:2&#125;</span></span><br><span class=\"line\"><span class=\"comment\">                const x1 = data</span></span><br><span class=\"line\"><span class=\"comment\">                const x2 = data</span></span><br><span class=\"line\"><span class=\"comment\">                // 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">                function data()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                    return &#123;a:1,b:2&#125;</span></span><br><span class=\"line\"><span class=\"comment\">                &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                const x1 = data()</span></span><br><span class=\"line\"><span class=\"comment\">                const x2 = data()</span></span><br><span class=\"line\"><span class=\"comment\">                //通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            2. 使用 template:`` 来配置组件结构</span></span><br><span class=\"line\"><span class=\"comment\">            3. 关于组件名</span></span><br><span class=\"line\"><span class=\"comment\">                一个单词组成: 首字母小写 student 或者 首字母大写 School</span></span><br><span class=\"line\"><span class=\"comment\">                多个单词组成: kebab-case命名  my-school  或者 CamelCase大驼峰  MyStudent(需要vue脚手架支持)</span></span><br><span class=\"line\"><span class=\"comment\">                不可以使用 html已有元素名称  h1 div  span 等</span></span><br><span class=\"line\"><span class=\"comment\">                尽量使用 name 配置项指定组件在开发者工具中呈现的名字 </span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            注册组件</span></span><br><span class=\"line\"><span class=\"comment\">            1. 局部注册  new Vue(&#123; components:&#123; 组件名:组件 &#125; &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">            2. 全局注册  Vue.component(&#x27;组件名&#x27;，组件)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            使用组件</span></span><br><span class=\"line\"><span class=\"comment\">            1. &lt;组件 /&gt; 或者 &lt;组件&gt;&lt;/组件&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            2. &lt;组件 /&gt; 不使用脚手架，会导致后续组件无法渲染</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            说明:</span></span><br><span class=\"line\"><span class=\"comment\">            1. 组件本质是VueComponent的构造函数，并且是由Vue.extend生成的</span></span><br><span class=\"line\"><span class=\"comment\">            2. 当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）</span></span><br><span class=\"line\"><span class=\"comment\">            3. 每次调用Vue.extend返回的都是一个全新的VueComponent</span></span><br><span class=\"line\"><span class=\"comment\">            4. this指向：  </span></span><br><span class=\"line\"><span class=\"comment\">                1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例</span></span><br><span class=\"line\"><span class=\"comment\">                2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">school</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">school</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        Vue.config.productionTip = false;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const Student = Vue.extend(&#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;Student&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            data() &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                return &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    stuName: &#x27;odinsam&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    stuAge: 20</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">stuName</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">stuAge</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const School = &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;school&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            data() &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                return &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    schName: &#x27;vue学校&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    schAddress: &#x27;南京&#x27;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>School组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>课程：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">schName</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>地址：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">schAddress</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const vm = new Vue(&#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            el: &#x27;#root&#x27;, // 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            components: &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                Student,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                school: School</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">    </span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<h4 id=\"1-使用vue组件的步骤\"><a class=\"markdownIt-Anchor\" href=\"#1-使用vue组件的步骤\"></a> 1. 使用vue组件的步骤:</h4>\n<pre><code>1. 创建组件 单文件组件、非单位件组件\n</code></pre>\n<ol start=\"2\">\n<li>注册组件</li>\n<li>使用组件（组件标签）<br />\n定义组件:</li>\n<li>使用Vue.extend({options}) 或者 const cpt = {options} 创建,其中options和new Vue({options})传入的options略有区别组件的 options 不需要el， 最终的el由new Vue({options})决定</li>\n<li>data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:</li>\n</ol>\n<pre><code><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data=&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> x1 = data</span><br><span class=\"line\"><span class=\"keyword\">const</span> x2 = data</span><br><span class=\"line\"><span class=\"comment\">// 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">data</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> x1 = data()</span><br><span class=\"line\"><span class=\"keyword\">const</span> x2 = data()</span><br><span class=\"line\"><span class=\"comment\">//通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变</span></span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"2\">\n<li>使用 template: 来配置组件结构</li>\n<li>关于组件名<br />\n一个单词组成: 首字母小写 student 或者 首字母大写 School<br />\n多个单词组成: kebab-case命名 my-school 或者 CamelCase大驼峰 MyStudent(需要vue脚手架支持)<br />\n不可以使用 html已有元素名称 h1 div span 等<br />\n尽量使用 name 配置项指定组件在开发者工具中呈现的名字</li>\n</ol>\n<h4 id=\"2-注册组件\"><a class=\"markdownIt-Anchor\" href=\"#2-注册组件\"></a> 2. 注册组件</h4>\n<p>局部注册 new Vue({ components:{ 组件名:组件 } })<br />\n全局注册 Vue.component(‘组件名’，组件)</p>\n<h4 id=\"3-使用组件\"><a class=\"markdownIt-Anchor\" href=\"#3-使用组件\"></a> 3. 使用组件</h4>\n<p>&lt;组件 /&gt; 或者 &lt;组件&gt;&lt;/组件&gt;<br />\n&lt;组件 /&gt; 不使用脚手架，会导致后续组件无法渲染</p>\n<h4 id=\"4-说明\"><a class=\"markdownIt-Anchor\" href=\"#4-说明\"></a> 4. 说明:</h4>\n<ol>\n<li>组件本质是VueComponent的构造函数，并且是由Vue.extend生成的</li>\n<li>当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）</li>\n<li>每次调用Vue.extend返回的都是一个全新的VueComponent</li>\n<li>this指向：<br />\n1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例<br />\n2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>18.1.非单文件组件<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            使用vue组件的步骤:</span></span><br><span class=\"line\"><span class=\"comment\">            1. 创建组件 单文件组件、非单位件组件</span></span><br><span class=\"line\"><span class=\"comment\">            2. 注册组件</span></span><br><span class=\"line\"><span class=\"comment\">            3. 使用组件（组件标签）</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            定义组件:</span></span><br><span class=\"line\"><span class=\"comment\">            1. 使用Vue.extend(&#123;options&#125;) 或者 const cpt = &#123;options&#125; 创建,其中options和new Vue(&#123;options&#125;)传入的options略有区别</span></span><br><span class=\"line\"><span class=\"comment\">                组件的 options 不需要el， 最终的el由new Vue(&#123;options&#125;)决定</span></span><br><span class=\"line\"><span class=\"comment\">                data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:</span></span><br><span class=\"line\"><span class=\"comment\">                let data=&#123;a:1,b:2&#125;</span></span><br><span class=\"line\"><span class=\"comment\">                const x1 = data</span></span><br><span class=\"line\"><span class=\"comment\">                const x2 = data</span></span><br><span class=\"line\"><span class=\"comment\">                // 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">                function data()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                    return &#123;a:1,b:2&#125;</span></span><br><span class=\"line\"><span class=\"comment\">                &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                const x1 = data()</span></span><br><span class=\"line\"><span class=\"comment\">                const x2 = data()</span></span><br><span class=\"line\"><span class=\"comment\">                //通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            2. 使用 template:`` 来配置组件结构</span></span><br><span class=\"line\"><span class=\"comment\">            3. 关于组件名</span></span><br><span class=\"line\"><span class=\"comment\">                一个单词组成: 首字母小写 student 或者 首字母大写 School</span></span><br><span class=\"line\"><span class=\"comment\">                多个单词组成: kebab-case命名  my-school  或者 CamelCase大驼峰  MyStudent(需要vue脚手架支持)</span></span><br><span class=\"line\"><span class=\"comment\">                不可以使用 html已有元素名称  h1 div  span 等</span></span><br><span class=\"line\"><span class=\"comment\">                尽量使用 name 配置项指定组件在开发者工具中呈现的名字 </span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            注册组件</span></span><br><span class=\"line\"><span class=\"comment\">            1. 局部注册  new Vue(&#123; components:&#123; 组件名:组件 &#125; &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">            2. 全局注册  Vue.component(&#x27;组件名&#x27;，组件)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            使用组件</span></span><br><span class=\"line\"><span class=\"comment\">            1. &lt;组件 /&gt; 或者 &lt;组件&gt;&lt;/组件&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            2. &lt;组件 /&gt; 不使用脚手架，会导致后续组件无法渲染</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            说明:</span></span><br><span class=\"line\"><span class=\"comment\">            1. 组件本质是VueComponent的构造函数，并且是由Vue.extend生成的</span></span><br><span class=\"line\"><span class=\"comment\">            2. 当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）</span></span><br><span class=\"line\"><span class=\"comment\">            3. 每次调用Vue.extend返回的都是一个全新的VueComponent</span></span><br><span class=\"line\"><span class=\"comment\">            4. this指向：  </span></span><br><span class=\"line\"><span class=\"comment\">                1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例</span></span><br><span class=\"line\"><span class=\"comment\">                2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">school</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">school</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        Vue.config.productionTip = false;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const Student = Vue.extend(&#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;Student&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            data() &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                return &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    stuName: &#x27;odinsam&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    stuAge: 20</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">stuName</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">stuAge</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const School = &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;school&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            data() &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                return &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    schName: &#x27;vue学校&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    schAddress: &#x27;南京&#x27;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>School组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>课程：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">schName</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>地址：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">schAddress</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const vm = new Vue(&#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            el: &#x27;#root&#x27;, // 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            components: &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                Student,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                school: School</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">    </span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 18.3 Vue组件-内置关系","author":"OdinSam","abbrlink":"72b9","date":"2022-10-18T07:03:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. vue的内置关系 VueComponent.prototype.__proto__ === Vue.prototype\n2. 通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>18.3.vue的内置关系</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            1. vue的内置关系  VueComponent.prototype.__proto__ === Vue.prototype\n            2. 通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法\n        -->\n        <div id=\"root\">\n            <Student></Student>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        function Demo() {\n            this.a = 1;\n            this.b = 2;\n        }\n        const d = new Demo();\n        //显示原型属性\n        console.log('Demo.prototype', Demo.prototype);\n        //隐式原型属性\n        console.log('d.__proto__', d.__proto__);\n        // 显示原型属性 和  隐式原型属性 都指向了原型对象\n\n        Demo.prototype.x = 100; //通过显示原型属性操作原型对象，添加x属性 100\n        console.log('d.__proto__.x', d.__proto__.x); // 可以输出 100\n        console.log(\n            'Demo.prototype == d.__proto__',\n            Demo.prototype == d.__proto__\n        ); //返回true\n\n        Vue.prototype.testProto = 100;\n        const Student = {\n            name: 'Student',\n            data() {\n                return { name: 'odinsam', proto: 0 };\n            },\n            template: `\n                <div>\n                    <h2>student组件</h2>\n                    <div>姓名：{{name}}</div>\n                    <div>Vue.prototype.testProto = 100; 获取结果为: {{proto}}</div>\n                    <button @click=\"getVmTestProto\">获取vm上的testProto</button>\n                </div>`,\n            methods: {\n                getVmTestProto() {\n                    console.log(this.testProto);\n                    this.proto = this.testProto;\n                }\n            }\n        };\n\n        const vm = new Vue({\n            el: '#root',\n            data() {\n                return {\n                    test: 'test proto'\n                };\n            },\n            components: { Student }\n        });\n        console.log(\n            'Vue.prototype === vm.__proto__',\n            Vue.prototype === vm.__proto__\n        );\n        // VueComponent.prototype.__proto__ === Vue.prototype\n        // 组件实例对象vc可以访问到Vue原型上的属性、方法\n        console.log(\n            'Student.prototype === vm.___proto__',\n            Student.prototype === vm.___proto__\n        );\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-18-3-Vue组件-内置关系.md","raw":"title: Vue2.0 - 18.3 Vue组件-内置关系\nauthor: OdinSam\ntags:\n  - components\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: 72b9\ndate: 2022-10-18 15:03:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. vue的内置关系 VueComponent.prototype.__proto__ === Vue.prototype\n2. 通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>18.3.vue的内置关系</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            1. vue的内置关系  VueComponent.prototype.__proto__ === Vue.prototype\n            2. 通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法\n        -->\n        <div id=\"root\">\n            <Student></Student>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        function Demo() {\n            this.a = 1;\n            this.b = 2;\n        }\n        const d = new Demo();\n        //显示原型属性\n        console.log('Demo.prototype', Demo.prototype);\n        //隐式原型属性\n        console.log('d.__proto__', d.__proto__);\n        // 显示原型属性 和  隐式原型属性 都指向了原型对象\n\n        Demo.prototype.x = 100; //通过显示原型属性操作原型对象，添加x属性 100\n        console.log('d.__proto__.x', d.__proto__.x); // 可以输出 100\n        console.log(\n            'Demo.prototype == d.__proto__',\n            Demo.prototype == d.__proto__\n        ); //返回true\n\n        Vue.prototype.testProto = 100;\n        const Student = {\n            name: 'Student',\n            data() {\n                return { name: 'odinsam', proto: 0 };\n            },\n            template: `\n                <div>\n                    <h2>student组件</h2>\n                    <div>姓名：{{name}}</div>\n                    <div>Vue.prototype.testProto = 100; 获取结果为: {{proto}}</div>\n                    <button @click=\"getVmTestProto\">获取vm上的testProto</button>\n                </div>`,\n            methods: {\n                getVmTestProto() {\n                    console.log(this.testProto);\n                    this.proto = this.testProto;\n                }\n            }\n        };\n\n        const vm = new Vue({\n            el: '#root',\n            data() {\n                return {\n                    test: 'test proto'\n                };\n            },\n            components: { Student }\n        });\n        console.log(\n            'Vue.prototype === vm.__proto__',\n            Vue.prototype === vm.__proto__\n        );\n        // VueComponent.prototype.__proto__ === Vue.prototype\n        // 组件实例对象vc可以访问到Vue原型上的属性、方法\n        console.log(\n            'Student.prototype === vm.___proto__',\n            Student.prototype === vm.___proto__\n        );\n    </script>\n</html>\n```\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-18-3-Vue组件-内置关系","published":1,"updated":"2023-03-10T07:04:26.682Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2u002m5cs95vincu1h","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>vue的内置关系 VueComponent.prototype.<strong>proto</strong> === Vue.prototype</li>\n<li>通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>18.3.vue的内置关系<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1. vue的内置关系  VueComponent.prototype.__proto__ === Vue.prototype</span></span><br><span class=\"line\"><span class=\"comment\">            2. 通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Demo</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.a = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.b = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> d = <span class=\"keyword\">new</span> Demo();</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//显示原型属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Demo.prototype&#x27;</span>, Demo.prototype);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//隐式原型属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;d.__proto__&#x27;</span>, d.__proto__);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 显示原型属性 和  隐式原型属性 都指向了原型对象</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Demo.prototype.x = <span class=\"number\">100</span>; <span class=\"comment\">//通过显示原型属性操作原型对象，添加x属性 100</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;d.__proto__.x&#x27;</span>, d.__proto__.x); <span class=\"comment\">// 可以输出 100</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;Demo.prototype == d.__proto__&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            Demo.prototype == d.__proto__</span></span><br><span class=\"line\"><span class=\"javascript\">        ); <span class=\"comment\">//返回true</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.prototype.testProto = <span class=\"number\">100</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> Student = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>, <span class=\"attr\">proto</span>: <span class=\"number\">0</span> &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">template</span>: <span class=\"string\">`</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                &lt;div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                    &lt;h2&gt;student组件&lt;/h2&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                    &lt;div&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                    &lt;div&gt;Vue.prototype.testProto = 100; 获取结果为: &#123;&#123;proto&#125;&#125;&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                    &lt;button @click=&quot;getVmTestProto&quot;&gt;获取vm上的testProto&lt;/button&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                &lt;/div&gt;`</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">getVmTestProto</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.testProto);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.proto = <span class=\"built_in\">this</span>.testProto;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">test</span>: <span class=\"string\">&#x27;test proto&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">components</span>: &#123; Student &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;Vue.prototype === vm.__proto__&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            Vue.prototype === vm.__proto__</span></span><br><span class=\"line\"><span class=\"javascript\">        );</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// VueComponent.prototype.__proto__ === Vue.prototype</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 组件实例对象vc可以访问到Vue原型上的属性、方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;Student.prototype === vm.___proto__&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            Student.prototype === vm.___proto__</span></span><br><span class=\"line\"><span class=\"javascript\">        );</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>vue的内置关系 VueComponent.prototype.<strong>proto</strong> === Vue.prototype</li>\n<li>通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>18.3.vue的内置关系<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            1. vue的内置关系  VueComponent.prototype.__proto__ === Vue.prototype</span></span><br><span class=\"line\"><span class=\"comment\">            2. 通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Demo</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.a = <span class=\"number\">1</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">this</span>.b = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> d = <span class=\"keyword\">new</span> Demo();</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//显示原型属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;Demo.prototype&#x27;</span>, Demo.prototype);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//隐式原型属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;d.__proto__&#x27;</span>, d.__proto__);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 显示原型属性 和  隐式原型属性 都指向了原型对象</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Demo.prototype.x = <span class=\"number\">100</span>; <span class=\"comment\">//通过显示原型属性操作原型对象，添加x属性 100</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;d.__proto__.x&#x27;</span>, d.__proto__.x); <span class=\"comment\">// 可以输出 100</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;Demo.prototype == d.__proto__&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            Demo.prototype == d.__proto__</span></span><br><span class=\"line\"><span class=\"javascript\">        ); <span class=\"comment\">//返回true</span></span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.prototype.testProto = <span class=\"number\">100</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> Student = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>, <span class=\"attr\">proto</span>: <span class=\"number\">0</span> &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">template</span>: <span class=\"string\">`</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                &lt;div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                    &lt;h2&gt;student组件&lt;/h2&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                    &lt;div&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                    &lt;div&gt;Vue.prototype.testProto = 100; 获取结果为: &#123;&#123;proto&#125;&#125;&lt;/div&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                    &lt;button @click=&quot;getVmTestProto&quot;&gt;获取vm上的testProto&lt;/button&gt;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"javascript\">                &lt;/div&gt;`</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"function\"><span class=\"title\">getVmTestProto</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.testProto);</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"built_in\">this</span>.proto = <span class=\"built_in\">this</span>.testProto;</span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"attr\">test</span>: <span class=\"string\">&#x27;test proto&#x27;</span></span></span><br><span class=\"line\"><span class=\"javascript\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"attr\">components</span>: &#123; Student &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;Vue.prototype === vm.__proto__&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            Vue.prototype === vm.__proto__</span></span><br><span class=\"line\"><span class=\"javascript\">        );</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// VueComponent.prototype.__proto__ === Vue.prototype</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">// 组件实例对象vc可以访问到Vue原型上的属性、方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">&#x27;Student.prototype === vm.___proto__&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            Student.prototype === vm.___proto__</span></span><br><span class=\"line\"><span class=\"javascript\">        );</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 18.2 Vue组件-组件嵌套","author":"OdinSam","abbrlink":"ff66","date":"2022-10-18T07:02:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>18.2.组件嵌套</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            \n        -->\n        <div id=\"root\">\n            <App></App>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const Student = Vue.extend({\n            name: 'Student',\n            data() {\n                return {\n                    stuName: 'odinsam',\n                    stuAge: 20\n                };\n            },\n            template: `\n                <div style='margin-left:50px;'>\n                    <h2>Student组件</h2>\n                    <span>姓名：{{stuName}}</span>\n                    <span>年龄：{{stuAge}}</span>\n                </div>\n            `\n        });\n        const School = {\n            name: 'school',\n            components: { Student },\n            data() {\n                return {\n                    schName: 'vue学校',\n                    schAddress: '南京'\n                };\n            },\n            template: `\n                <div>\n                    <h2>School组件</h2>\n                    <span>课程：{{schName}}</span>\n                    <span>地址：{{schAddress}}</span>\n                    <div>在校学生</div>\n                    <Student></Student>\n                </div>\n            `\n        };\n        const Hello = { name: 'Hello', template: `<h2>hello组件</h2>` };\n        const App = {\n            name: 'App',\n            components: { Hello, school: School },\n            template: `\n                <div>\n                    <h2>App组件</h2>\n                    <Hello style='margin-left:50px;'></Hello>\n                    <school style='margin-left:50px;'></school>\n                </div>\n            `\n        };\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            components: {\n                App\n            }\n        });\n    </script>\n</html>\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-18-2-Vue组件-组件嵌套.md","raw":"title: Vue2.0 - 18.2 Vue组件-组件嵌套\nauthor: OdinSam\ntags:\n  - vue2\n  - component\ncategories:\n  - 前端\n  - vue2\nabbrlink: ff66\ndate: 2022-10-18 15:02:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>18.2.组件嵌套</title>\n        <script src=\"../js/vue.js\"></script>\n        <style></style>\n    </head>\n    <body>\n        <!--\n            \n        -->\n        <div id=\"root\">\n            <App></App>\n        </div>\n    </body>\n    <script>\n        Vue.config.productionTip = false;\n        const Student = Vue.extend({\n            name: 'Student',\n            data() {\n                return {\n                    stuName: 'odinsam',\n                    stuAge: 20\n                };\n            },\n            template: `\n                <div style='margin-left:50px;'>\n                    <h2>Student组件</h2>\n                    <span>姓名：{{stuName}}</span>\n                    <span>年龄：{{stuAge}}</span>\n                </div>\n            `\n        });\n        const School = {\n            name: 'school',\n            components: { Student },\n            data() {\n                return {\n                    schName: 'vue学校',\n                    schAddress: '南京'\n                };\n            },\n            template: `\n                <div>\n                    <h2>School组件</h2>\n                    <span>课程：{{schName}}</span>\n                    <span>地址：{{schAddress}}</span>\n                    <div>在校学生</div>\n                    <Student></Student>\n                </div>\n            `\n        };\n        const Hello = { name: 'Hello', template: `<h2>hello组件</h2>` };\n        const App = {\n            name: 'App',\n            components: { Hello, school: School },\n            template: `\n                <div>\n                    <h2>App组件</h2>\n                    <Hello style='margin-left:50px;'></Hello>\n                    <school style='margin-left:50px;'></school>\n                </div>\n            `\n        };\n        const vm = new Vue({\n            el: '#root', // 直接指定vue对应的容器\n            components: {\n                App\n            }\n        });\n    </script>\n</html>\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-18-2-Vue组件-组件嵌套","published":1,"updated":"2023-03-10T07:03:16.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2v002q5cs9a8lid3sx","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>18.2.组件嵌套<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            </span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">App</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">App</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        Vue.config.productionTip = false;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const Student = Vue.extend(&#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;Student&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            data() &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                return &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    stuName: &#x27;odinsam&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    stuAge: 20</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&#x27;margin-left:50px;&#x27;</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">stuName</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">stuAge</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const School = &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;school&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            components: &#123; Student &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            data() &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                return &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    schName: &#x27;vue学校&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    schAddress: &#x27;南京&#x27;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>School组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>课程：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">schName</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>地址：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">schAddress</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>在校学生<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const Hello = &#123; name: &#x27;Hello&#x27;, template: `<span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>hello组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>` &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const App = &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;App&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            components: &#123; Hello, school: School &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>App组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">Hello</span> <span class=\"attr\">style</span>=<span class=\"string\">&#x27;margin-left:50px;&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Hello</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">school</span> <span class=\"attr\">style</span>=<span class=\"string\">&#x27;margin-left:50px;&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">school</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const vm = new Vue(&#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            el: &#x27;#root&#x27;, // 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            components: &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                App</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">    </span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>18.2.组件嵌套<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            </span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">App</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">App</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"handlebars\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        Vue.config.productionTip = false;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const Student = Vue.extend(&#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;Student&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            data() &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                return &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    stuName: &#x27;odinsam&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    stuAge: 20</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&#x27;margin-left:50px;&#x27;</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">stuName</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">stuAge</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const School = &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;school&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            components: &#123; Student &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            data() &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                return &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    schName: &#x27;vue学校&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    schAddress: &#x27;南京&#x27;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>School组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>课程：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">schName</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>地址：</span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">schAddress</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>在校学生<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const Hello = &#123; name: &#x27;Hello&#x27;, template: `<span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>hello组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>` &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const App = &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            name: &#x27;App&#x27;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            components: &#123; Hello, school: School &#125;,</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            template: `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>App组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">Hello</span> <span class=\"attr\">style</span>=<span class=\"string\">&#x27;margin-left:50px;&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Hello</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                    <span class=\"tag\">&lt;<span class=\"name\">school</span> <span class=\"attr\">style</span>=<span class=\"string\">&#x27;margin-left:50px;&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">school</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            `</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        const vm = new Vue(&#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            el: &#x27;#root&#x27;, // 直接指定vue对应的容器</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            components: &#123;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">                App</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"handlebars\">    </span></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 18.4 Vue组件-单文件组件","author":"OdinSam","abbrlink":"9c18","date":"2022-10-18T07:05:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n```html html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>18.4.单文件组件</title>\n        <style></style>\n    </head>\n    <body>\n        <div id=\"root\"></div>\n    </body>\n    <script src=\"../js/vue.js\"></script>\n    <script src=\"main.js\"></script>\n    <script>\n        Vue.config.productionTip = false;\n    </script>\n</html>\n```\n\n```js main.js\nimport App from 'App';\nconst vm = new Vue({\n    el: '#root',\n    components: {\n        App\n    },\n    template: `<App></App>`\n});\n```\n\n```js app.vue\n<template>\n    <div class=\"app\">\n        <h2>App组件</h2>  \n        <Student></Student>\n    </div>\n</template>\n\n<script>\nimport Student from './Student.vue';\nexport default {\n    name: 'App',\n    components:{ Student }\n}\n</script>\n\n<style scoped>\n.studv{\n    background-color:aquamarine;\n    padding: 20px;   \n}\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Studen组件</h2>    \n        <span>{{stuName}}</span>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Student',\n    data() {\n        return {\n            stuName:'odinsam'\n        }\n    }, \n}\n</script>\n\n<style scoped>\n.studv{\n    margin-left:50px;\n    background-color: bisque;\n    padding: 20px;   \n}\n</style>\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-18-4-Vue组件-单文件组件.md","raw":"title: Vue2.0 - 18.4 Vue组件-单文件组件\nauthor: OdinSam\ntags:\n  - component\n  - vue2\n  - ''\ncategories:\n  - 前端\n  - vue2\nabbrlink: 9c18\ndate: 2022-10-18 15:05:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n```html html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>18.4.单文件组件</title>\n        <style></style>\n    </head>\n    <body>\n        <div id=\"root\"></div>\n    </body>\n    <script src=\"../js/vue.js\"></script>\n    <script src=\"main.js\"></script>\n    <script>\n        Vue.config.productionTip = false;\n    </script>\n</html>\n```\n\n```js main.js\nimport App from 'App';\nconst vm = new Vue({\n    el: '#root',\n    components: {\n        App\n    },\n    template: `<App></App>`\n});\n```\n\n```js app.vue\n<template>\n    <div class=\"app\">\n        <h2>App组件</h2>  \n        <Student></Student>\n    </div>\n</template>\n\n<script>\nimport Student from './Student.vue';\nexport default {\n    name: 'App',\n    components:{ Student }\n}\n</script>\n\n<style scoped>\n.studv{\n    background-color:aquamarine;\n    padding: 20px;   \n}\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Studen组件</h2>    \n        <span>{{stuName}}</span>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Student',\n    data() {\n        return {\n            stuName:'odinsam'\n        }\n    }, \n}\n</script>\n\n<style scoped>\n.studv{\n    margin-left:50px;\n    background-color: bisque;\n    padding: 20px;   \n}\n</style>\n```\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-18-4-Vue组件-单文件组件","published":1,"updated":"2023-03-10T07:07:30.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2w002u5cs9efn94ur7","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<figure class=\"highlight html\"><figcaption><span>html</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>18.4.单文件组件<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;main.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;App&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">        App</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">`&lt;App&gt;&lt;/App&gt;`</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>App组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>  </span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>:&#123; Student &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;   </span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Studen组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>    </span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;, </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;   </span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<figure class=\"highlight html\"><figcaption><span>html</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>18.4.单文件组件<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;main.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span><br><span class=\"line\"><span class=\"javascript\">        Vue.config.productionTip = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;App&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#root&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">        App</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">`&lt;App&gt;&lt;/App&gt;`</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>App组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>  </span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>:&#123; Student &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;   </span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Studen组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span>    </span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;, </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;   </span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 - 19. Vue脚手架","author":"OdinSam","abbrlink":"d49a","date":"2022-10-18T07:08:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. 全局安装 npm install -g @vue/cli\n2. <font color='red'>切换到需要创建项目的目录</font>，然后创建项目 vue create 项目名称\n3. 进入项目目录，启动项目 npm serve\n4. vue.js 与 vue.runtime.mini.js 的区别\n\t1. vue.js 是完整版的 vue，包含核心功能+模板解析器\n\t2. vue.runtime.mini.js 是运行时版本，只包含核心功能，没有模板解析器\n5. vue.runtime.mini.js 因为没有模板解析器，所以不能使用 template 配置项，需要 render 函数接收到的 createElement 函数去指定具体内容\n\n```js\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n```\n6. 使用 vue inspect > output.js 可以查看到vue脚手架的默认配置\n7. 使用 vue.config.js 可以对脚手架进行个性化定制。详情 https://cli.vuejs.org/zh\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-19-Vue脚手架.md","raw":"---\ntitle: Vue2.0 - 19. Vue脚手架\nauthor: OdinSam\ntags:\n  - cli\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: d49a\ndate: 2022-10-18 15:08:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n1. 全局安装 npm install -g @vue/cli\n2. <font color='red'>切换到需要创建项目的目录</font>，然后创建项目 vue create 项目名称\n3. 进入项目目录，启动项目 npm serve\n4. vue.js 与 vue.runtime.mini.js 的区别\n\t1. vue.js 是完整版的 vue，包含核心功能+模板解析器\n\t2. vue.runtime.mini.js 是运行时版本，只包含核心功能，没有模板解析器\n5. vue.runtime.mini.js 因为没有模板解析器，所以不能使用 template 配置项，需要 render 函数接收到的 createElement 函数去指定具体内容\n\n```js\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n```\n6. 使用 vue inspect > output.js 可以查看到vue脚手架的默认配置\n7. 使用 vue.config.js 可以对脚手架进行个性化定制。详情 https://cli.vuejs.org/zh\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-19-Vue脚手架","published":1,"updated":"2023-03-10T07:10:56.577Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2x002x5cs9a6zvckcz","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>全局安装 npm install -g @vue/cli</li>\n<li><font color='red'>切换到需要创建项目的目录</font>，然后创建项目 vue create 项目名称</li>\n<li>进入项目目录，启动项目 npm serve</li>\n<li>vue.js 与 vue.runtime.mini.js 的区别\n<ol>\n<li>vue.js 是完整版的 vue，包含核心功能+模板解析器</li>\n<li>vue.runtime.mini.js 是运行时版本，只包含核心功能，没有模板解析器</li>\n</ol>\n</li>\n<li>vue.runtime.mini.js 因为没有模板解析器，所以不能使用 template 配置项，需要 render 函数接收到的 createElement 函数去指定具体内容</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App),</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>使用 vue inspect &gt; output.js 可以查看到vue脚手架的默认配置</li>\n<li>使用 vue.config.js 可以对脚手架进行个性化定制。详情 <a href=\"https://cli.vuejs.org/zh\">https://cli.vuejs.org/zh</a></li>\n</ol>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<ol>\n<li>全局安装 npm install -g @vue/cli</li>\n<li><font color='red'>切换到需要创建项目的目录</font>，然后创建项目 vue create 项目名称</li>\n<li>进入项目目录，启动项目 npm serve</li>\n<li>vue.js 与 vue.runtime.mini.js 的区别\n<ol>\n<li>vue.js 是完整版的 vue，包含核心功能+模板解析器</li>\n<li>vue.runtime.mini.js 是运行时版本，只包含核心功能，没有模板解析器</li>\n</ol>\n</li>\n<li>vue.runtime.mini.js 因为没有模板解析器，所以不能使用 template 配置项，需要 render 函数接收到的 createElement 函数去指定具体内容</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"attr\">render</span>: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App),</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>使用 vue inspect &gt; output.js 可以查看到vue脚手架的默认配置</li>\n<li>使用 vue.config.js 可以对脚手架进行个性化定制。详情 <a href=\"https://cli.vuejs.org/zh\">https://cli.vuejs.org/zh</a></li>\n</ol>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0 系列","author":"OdinSam","abbrlink":"da3d","date":"2022-10-15T05:46:00.000Z","_content":"> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n### [Vue2.0 - 01. hello vue](/articles/1d50.html)\n\n### [Vue2.0 - 02. 模板语法](/articles/1723.html)\n\n### [Vue2.0 - 03. 数据绑定](/articles/1ef3.html)\n\n### [Vue2.0 - 04. el与data的两种写法](/articles/3899.html)\n\n### [Vue2.0 - 05. mvvm模型](/articles/a38e.html)\n\n### [Vue2.0 - 06. 数据代理-Object.defineProperty](/articles/7c3d.html)\n\n### [Vue2.0 - 07. 事件处理](/articles/ec6.html)\n\n### [Vue2.0 - 08. 事件修饰符](/articles/48de.html)\n\n### [Vue2.0 - 09. 键盘事件](/articles/42b7.html)\n\n### [Vue2.0 - 10. Computed计算属性](/articles/8c58.html)\n\n### [Vue2.0 - 11. Watch监视属性](/articles/bd29.html)\n\n### [Vue2.0 - 12. 样式的绑定](/articles/5a60.html)\n\n### [Vue2.0 - 13. vue指令](/articles/227f.html)\n\n### [Vue2.0 - 14. vue.set方法](/articles/2b60.html)\n\n### [Vue2.0 - 15. 表单数据的收集](/articles/d63a.html)\n\n### [Vue2.0 - 16. Filter过滤器](/articles/cb68.html)\n\n### [Vue2.0 - 17. 生命周期](/articles/5bf8.html)\n\n### [Vue2.0 - 18.1 vue组件-非单文件组件](/articles/26da.html)\n\n### [Vue2.0 - 18.2 Vue组件-组件嵌套](/articles/ff66.html)\n\n### [Vue2.0 - 18.3 Vue组件-内置关系](/articles/72b9.html)\n\n### [Vue2.0 - 18.4 Vue组件-单文件组件](/articles/9c18.html)\n\n### [Vue2.0 - 19. Vue脚手架](/articles/d49a.html)\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0-系列.md","raw":"title: Vue2.0 系列\nauthor: OdinSam\ntags:\n  - vue\ncategories:\n  - 前端\n  - vue2\nabbrlink: da3d\ndate: 2022-10-15 13:46:00\n---\n> [vue2.0 基础学习目录](/articles/da3d.html) \n\n<!--more-->\n\n### [Vue2.0 - 01. hello vue](/articles/1d50.html)\n\n### [Vue2.0 - 02. 模板语法](/articles/1723.html)\n\n### [Vue2.0 - 03. 数据绑定](/articles/1ef3.html)\n\n### [Vue2.0 - 04. el与data的两种写法](/articles/3899.html)\n\n### [Vue2.0 - 05. mvvm模型](/articles/a38e.html)\n\n### [Vue2.0 - 06. 数据代理-Object.defineProperty](/articles/7c3d.html)\n\n### [Vue2.0 - 07. 事件处理](/articles/ec6.html)\n\n### [Vue2.0 - 08. 事件修饰符](/articles/48de.html)\n\n### [Vue2.0 - 09. 键盘事件](/articles/42b7.html)\n\n### [Vue2.0 - 10. Computed计算属性](/articles/8c58.html)\n\n### [Vue2.0 - 11. Watch监视属性](/articles/bd29.html)\n\n### [Vue2.0 - 12. 样式的绑定](/articles/5a60.html)\n\n### [Vue2.0 - 13. vue指令](/articles/227f.html)\n\n### [Vue2.0 - 14. vue.set方法](/articles/2b60.html)\n\n### [Vue2.0 - 15. 表单数据的收集](/articles/d63a.html)\n\n### [Vue2.0 - 16. Filter过滤器](/articles/cb68.html)\n\n### [Vue2.0 - 17. 生命周期](/articles/5bf8.html)\n\n### [Vue2.0 - 18.1 vue组件-非单文件组件](/articles/26da.html)\n\n### [Vue2.0 - 18.2 Vue组件-组件嵌套](/articles/ff66.html)\n\n### [Vue2.0 - 18.3 Vue组件-内置关系](/articles/72b9.html)\n\n### [Vue2.0 - 18.4 Vue组件-单文件组件](/articles/9c18.html)\n\n### [Vue2.0 - 19. Vue脚手架](/articles/d49a.html)\n\n\n[vue2.0 进阶学习的目录](/articles/e255.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0-系列","published":1,"updated":"2023-03-10T07:11:07.095Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2y00305cs9g7q774v5","content":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h3 id=\"vue20-01-hello-vue\"><a class=\"markdownIt-Anchor\" href=\"#vue20-01-hello-vue\"></a> <a href=\"/articles/1d50.html\">Vue2.0 - 01. hello vue</a></h3>\n<h3 id=\"vue20-02-模板语法\"><a class=\"markdownIt-Anchor\" href=\"#vue20-02-模板语法\"></a> <a href=\"/articles/1723.html\">Vue2.0 - 02. 模板语法</a></h3>\n<h3 id=\"vue20-03-数据绑定\"><a class=\"markdownIt-Anchor\" href=\"#vue20-03-数据绑定\"></a> <a href=\"/articles/1ef3.html\">Vue2.0 - 03. 数据绑定</a></h3>\n<h3 id=\"vue20-04-el与data的两种写法\"><a class=\"markdownIt-Anchor\" href=\"#vue20-04-el与data的两种写法\"></a> <a href=\"/articles/3899.html\">Vue2.0 - 04. el与data的两种写法</a></h3>\n<h3 id=\"vue20-05-mvvm模型\"><a class=\"markdownIt-Anchor\" href=\"#vue20-05-mvvm模型\"></a> <a href=\"/articles/a38e.html\">Vue2.0 - 05. mvvm模型</a></h3>\n<h3 id=\"vue20-06-数据代理-objectdefineproperty\"><a class=\"markdownIt-Anchor\" href=\"#vue20-06-数据代理-objectdefineproperty\"></a> <a href=\"/articles/7c3d.html\">Vue2.0 - 06. 数据代理-Object.defineProperty</a></h3>\n<h3 id=\"vue20-07-事件处理\"><a class=\"markdownIt-Anchor\" href=\"#vue20-07-事件处理\"></a> <a href=\"/articles/ec6.html\">Vue2.0 - 07. 事件处理</a></h3>\n<h3 id=\"vue20-08-事件修饰符\"><a class=\"markdownIt-Anchor\" href=\"#vue20-08-事件修饰符\"></a> <a href=\"/articles/48de.html\">Vue2.0 - 08. 事件修饰符</a></h3>\n<h3 id=\"vue20-09-键盘事件\"><a class=\"markdownIt-Anchor\" href=\"#vue20-09-键盘事件\"></a> <a href=\"/articles/42b7.html\">Vue2.0 - 09. 键盘事件</a></h3>\n<h3 id=\"vue20-10-computed计算属性\"><a class=\"markdownIt-Anchor\" href=\"#vue20-10-computed计算属性\"></a> <a href=\"/articles/8c58.html\">Vue2.0 - 10. Computed计算属性</a></h3>\n<h3 id=\"vue20-11-watch监视属性\"><a class=\"markdownIt-Anchor\" href=\"#vue20-11-watch监视属性\"></a> <a href=\"/articles/bd29.html\">Vue2.0 - 11. Watch监视属性</a></h3>\n<h3 id=\"vue20-12-样式的绑定\"><a class=\"markdownIt-Anchor\" href=\"#vue20-12-样式的绑定\"></a> <a href=\"/articles/5a60.html\">Vue2.0 - 12. 样式的绑定</a></h3>\n<h3 id=\"vue20-13-vue指令\"><a class=\"markdownIt-Anchor\" href=\"#vue20-13-vue指令\"></a> <a href=\"/articles/227f.html\">Vue2.0 - 13. vue指令</a></h3>\n<h3 id=\"vue20-14-vueset方法\"><a class=\"markdownIt-Anchor\" href=\"#vue20-14-vueset方法\"></a> <a href=\"/articles/2b60.html\">Vue2.0 - 14. vue.set方法</a></h3>\n<h3 id=\"vue20-15-表单数据的收集\"><a class=\"markdownIt-Anchor\" href=\"#vue20-15-表单数据的收集\"></a> <a href=\"/articles/d63a.html\">Vue2.0 - 15. 表单数据的收集</a></h3>\n<h3 id=\"vue20-16-filter过滤器\"><a class=\"markdownIt-Anchor\" href=\"#vue20-16-filter过滤器\"></a> <a href=\"/articles/cb68.html\">Vue2.0 - 16. Filter过滤器</a></h3>\n<h3 id=\"vue20-17-生命周期\"><a class=\"markdownIt-Anchor\" href=\"#vue20-17-生命周期\"></a> <a href=\"/articles/5bf8.html\">Vue2.0 - 17. 生命周期</a></h3>\n<h3 id=\"vue20-181-vue组件-非单文件组件\"><a class=\"markdownIt-Anchor\" href=\"#vue20-181-vue组件-非单文件组件\"></a> <a href=\"/articles/26da.html\">Vue2.0 - 18.1 vue组件-非单文件组件</a></h3>\n<h3 id=\"vue20-182-vue组件-组件嵌套\"><a class=\"markdownIt-Anchor\" href=\"#vue20-182-vue组件-组件嵌套\"></a> <a href=\"/articles/ff66.html\">Vue2.0 - 18.2 Vue组件-组件嵌套</a></h3>\n<h3 id=\"vue20-183-vue组件-内置关系\"><a class=\"markdownIt-Anchor\" href=\"#vue20-183-vue组件-内置关系\"></a> <a href=\"/articles/72b9.html\">Vue2.0 - 18.3 Vue组件-内置关系</a></h3>\n<h3 id=\"vue20-184-vue组件-单文件组件\"><a class=\"markdownIt-Anchor\" href=\"#vue20-184-vue组件-单文件组件\"></a> <a href=\"/articles/9c18.html\">Vue2.0 - 18.4 Vue组件-单文件组件</a></h3>\n<h3 id=\"vue20-19-vue脚手架\"><a class=\"markdownIt-Anchor\" href=\"#vue20-19-vue脚手架\"></a> <a href=\"/articles/d49a.html\">Vue2.0 - 19. Vue脚手架</a></h3>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/da3d.html\">vue2.0 基础学习目录</a></p>\n</blockquote>","more":"<h3 id=\"vue20-01-hello-vue\"><a class=\"markdownIt-Anchor\" href=\"#vue20-01-hello-vue\"></a> <a href=\"/articles/1d50.html\">Vue2.0 - 01. hello vue</a></h3>\n<h3 id=\"vue20-02-模板语法\"><a class=\"markdownIt-Anchor\" href=\"#vue20-02-模板语法\"></a> <a href=\"/articles/1723.html\">Vue2.0 - 02. 模板语法</a></h3>\n<h3 id=\"vue20-03-数据绑定\"><a class=\"markdownIt-Anchor\" href=\"#vue20-03-数据绑定\"></a> <a href=\"/articles/1ef3.html\">Vue2.0 - 03. 数据绑定</a></h3>\n<h3 id=\"vue20-04-el与data的两种写法\"><a class=\"markdownIt-Anchor\" href=\"#vue20-04-el与data的两种写法\"></a> <a href=\"/articles/3899.html\">Vue2.0 - 04. el与data的两种写法</a></h3>\n<h3 id=\"vue20-05-mvvm模型\"><a class=\"markdownIt-Anchor\" href=\"#vue20-05-mvvm模型\"></a> <a href=\"/articles/a38e.html\">Vue2.0 - 05. mvvm模型</a></h3>\n<h3 id=\"vue20-06-数据代理-objectdefineproperty\"><a class=\"markdownIt-Anchor\" href=\"#vue20-06-数据代理-objectdefineproperty\"></a> <a href=\"/articles/7c3d.html\">Vue2.0 - 06. 数据代理-Object.defineProperty</a></h3>\n<h3 id=\"vue20-07-事件处理\"><a class=\"markdownIt-Anchor\" href=\"#vue20-07-事件处理\"></a> <a href=\"/articles/ec6.html\">Vue2.0 - 07. 事件处理</a></h3>\n<h3 id=\"vue20-08-事件修饰符\"><a class=\"markdownIt-Anchor\" href=\"#vue20-08-事件修饰符\"></a> <a href=\"/articles/48de.html\">Vue2.0 - 08. 事件修饰符</a></h3>\n<h3 id=\"vue20-09-键盘事件\"><a class=\"markdownIt-Anchor\" href=\"#vue20-09-键盘事件\"></a> <a href=\"/articles/42b7.html\">Vue2.0 - 09. 键盘事件</a></h3>\n<h3 id=\"vue20-10-computed计算属性\"><a class=\"markdownIt-Anchor\" href=\"#vue20-10-computed计算属性\"></a> <a href=\"/articles/8c58.html\">Vue2.0 - 10. Computed计算属性</a></h3>\n<h3 id=\"vue20-11-watch监视属性\"><a class=\"markdownIt-Anchor\" href=\"#vue20-11-watch监视属性\"></a> <a href=\"/articles/bd29.html\">Vue2.0 - 11. Watch监视属性</a></h3>\n<h3 id=\"vue20-12-样式的绑定\"><a class=\"markdownIt-Anchor\" href=\"#vue20-12-样式的绑定\"></a> <a href=\"/articles/5a60.html\">Vue2.0 - 12. 样式的绑定</a></h3>\n<h3 id=\"vue20-13-vue指令\"><a class=\"markdownIt-Anchor\" href=\"#vue20-13-vue指令\"></a> <a href=\"/articles/227f.html\">Vue2.0 - 13. vue指令</a></h3>\n<h3 id=\"vue20-14-vueset方法\"><a class=\"markdownIt-Anchor\" href=\"#vue20-14-vueset方法\"></a> <a href=\"/articles/2b60.html\">Vue2.0 - 14. vue.set方法</a></h3>\n<h3 id=\"vue20-15-表单数据的收集\"><a class=\"markdownIt-Anchor\" href=\"#vue20-15-表单数据的收集\"></a> <a href=\"/articles/d63a.html\">Vue2.0 - 15. 表单数据的收集</a></h3>\n<h3 id=\"vue20-16-filter过滤器\"><a class=\"markdownIt-Anchor\" href=\"#vue20-16-filter过滤器\"></a> <a href=\"/articles/cb68.html\">Vue2.0 - 16. Filter过滤器</a></h3>\n<h3 id=\"vue20-17-生命周期\"><a class=\"markdownIt-Anchor\" href=\"#vue20-17-生命周期\"></a> <a href=\"/articles/5bf8.html\">Vue2.0 - 17. 生命周期</a></h3>\n<h3 id=\"vue20-181-vue组件-非单文件组件\"><a class=\"markdownIt-Anchor\" href=\"#vue20-181-vue组件-非单文件组件\"></a> <a href=\"/articles/26da.html\">Vue2.0 - 18.1 vue组件-非单文件组件</a></h3>\n<h3 id=\"vue20-182-vue组件-组件嵌套\"><a class=\"markdownIt-Anchor\" href=\"#vue20-182-vue组件-组件嵌套\"></a> <a href=\"/articles/ff66.html\">Vue2.0 - 18.2 Vue组件-组件嵌套</a></h3>\n<h3 id=\"vue20-183-vue组件-内置关系\"><a class=\"markdownIt-Anchor\" href=\"#vue20-183-vue组件-内置关系\"></a> <a href=\"/articles/72b9.html\">Vue2.0 - 18.3 Vue组件-内置关系</a></h3>\n<h3 id=\"vue20-184-vue组件-单文件组件\"><a class=\"markdownIt-Anchor\" href=\"#vue20-184-vue组件-单文件组件\"></a> <a href=\"/articles/9c18.html\">Vue2.0 - 18.4 Vue组件-单文件组件</a></h3>\n<h3 id=\"vue20-19-vue脚手架\"><a class=\"markdownIt-Anchor\" href=\"#vue20-19-vue脚手架\"></a> <a href=\"/articles/d49a.html\">Vue2.0 - 19. Vue脚手架</a></h3>\n<p><a href=\"/articles/e255.html\">vue2.0 进阶学习的目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 02. props配置项","author":"OdinSam","abbrlink":"40e6","date":"2022-10-18T07:25:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### props配置项\n1. 让组件接收外部传过来的数据 &lt;Student stuName=“odinsam” :age=“10”&gt;&lt;/Student&gt;\n2. 如果使用props传递数组、对象、方法等数据时，应该是 &lt;Student :getStudentName=“getStudentName”&gt;&lt;/Student&gt;通过props传递函数getStudentName\n接收数据\n```js 简单接收\nprops: ['stuName', 'age']\n```\n\n```js 接收的同时规范数据类型\nprops: {\n    stuName: String,\n    age: Number,\n}\n```\n\n```js 接收的同时 限制数据类型、限制必要性、指定默认值\nprops: {\n    stuName: {\n        type: String,\n        required:true,\n    },\n    age: {\n        type: Number,\n        required:true,\n    },\n    className: {\n        type: String,\n        default:\"1班\",\n    }\n}\n```\n3. props是只读的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据\n\n完整代码\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        props配置项\n        1. 让组件接收外部传过来的数据 <Student stuName=\"odinsam\" :age=\"10\"></Student>\n        2. 接收数据\n            简单接收 props: ['stuName', 'age']\n\n            接收的同时限制数据类型\n            props: {\n                stuName: String,\n                age: Number,\n            }\n\n            接收的同时 限制数据类型、限制必要性、指定默认值\n            props: {\n                stuName: {\n                    type: String,\n                    required:true,\n                },\n                age: {\n                    type: Number,\n                    required:true,\n                },\n                className: {\n                    type: String,\n                    default:\"1班\",\n                }\n            }\n        3. props是制度的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据\n    -->\n    <h2>app组件</h2>\n    <Student stuName=\"odinsam\" :age=\"10\"></Student>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    methods: {\n        \n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span>姓名：{{stuName}}</span><br />\n        <span>年龄：{{myAge}}</span><br />\n        <span>班级：{{className}}</span><br />\n        <button @click=\"changeAge\">修改姓名</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            myAge:this.age\n        }\n    },\n    methods: {\n        changeAge() {\n            this.myAge++\n        }\n    },\n    // 简单接收\n    // props: ['stuName', 'age']\n\n    // 接收的同时限制数据类型\n    /*\n    props: {\n        stuName: String,\n        age: Number,\n    }\n     */\n\n    props: {\n        stuName: {\n            type: String,\n            required:true,\n        },\n        age: {\n            type: Number,\n            required:true,\n        },\n        className: {\n            type: String,\n            default:\"1班\",\n        }\n    }\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-02-props配置项.md","raw":"title: Vue2.0进阶 - 02. props配置项\nauthor: OdinSam\ntags:\n  - vue2\n  - props\ncategories:\n  - 前端\n  - vue2\nabbrlink: '40e6'\ndate: 2022-10-18 15:25:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### props配置项\n1. 让组件接收外部传过来的数据 &lt;Student stuName=“odinsam” :age=“10”&gt;&lt;/Student&gt;\n2. 如果使用props传递数组、对象、方法等数据时，应该是 &lt;Student :getStudentName=“getStudentName”&gt;&lt;/Student&gt;通过props传递函数getStudentName\n接收数据\n```js 简单接收\nprops: ['stuName', 'age']\n```\n\n```js 接收的同时规范数据类型\nprops: {\n    stuName: String,\n    age: Number,\n}\n```\n\n```js 接收的同时 限制数据类型、限制必要性、指定默认值\nprops: {\n    stuName: {\n        type: String,\n        required:true,\n    },\n    age: {\n        type: Number,\n        required:true,\n    },\n    className: {\n        type: String,\n        default:\"1班\",\n    }\n}\n```\n3. props是只读的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据\n\n完整代码\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        props配置项\n        1. 让组件接收外部传过来的数据 <Student stuName=\"odinsam\" :age=\"10\"></Student>\n        2. 接收数据\n            简单接收 props: ['stuName', 'age']\n\n            接收的同时限制数据类型\n            props: {\n                stuName: String,\n                age: Number,\n            }\n\n            接收的同时 限制数据类型、限制必要性、指定默认值\n            props: {\n                stuName: {\n                    type: String,\n                    required:true,\n                },\n                age: {\n                    type: Number,\n                    required:true,\n                },\n                className: {\n                    type: String,\n                    default:\"1班\",\n                }\n            }\n        3. props是制度的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据\n    -->\n    <h2>app组件</h2>\n    <Student stuName=\"odinsam\" :age=\"10\"></Student>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    methods: {\n        \n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span>姓名：{{stuName}}</span><br />\n        <span>年龄：{{myAge}}</span><br />\n        <span>班级：{{className}}</span><br />\n        <button @click=\"changeAge\">修改姓名</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            myAge:this.age\n        }\n    },\n    methods: {\n        changeAge() {\n            this.myAge++\n        }\n    },\n    // 简单接收\n    // props: ['stuName', 'age']\n\n    // 接收的同时限制数据类型\n    /*\n    props: {\n        stuName: String,\n        age: Number,\n    }\n     */\n\n    props: {\n        stuName: {\n            type: String,\n            required:true,\n        },\n        age: {\n            type: Number,\n            required:true,\n        },\n        className: {\n            type: String,\n            default:\"1班\",\n        }\n    }\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-02-props配置项","published":1,"updated":"2023-03-10T07:29:16.881Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2y00335cs9cwsg1xsk","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"props配置项\"><a class=\"markdownIt-Anchor\" href=\"#props配置项\"></a> props配置项</h4>\n<ol>\n<li>让组件接收外部传过来的数据 &lt;Student stuName=“odinsam” :age=“10”&gt;&lt;/Student&gt;</li>\n<li>如果使用props传递数组、对象、方法等数据时，应该是 &lt;Student :getStudentName=“getStudentName”&gt;&lt;/Student&gt;通过props传递函数getStudentName<br />\n接收数据</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>简单接收</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">props: [<span class=\"string\">&#x27;stuName&#x27;</span>, <span class=\"string\">&#x27;age&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>接收的同时规范数据类型</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">props: &#123;</span><br><span class=\"line\">    <span class=\"attr\">stuName</span>: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>接收的同时 限制数据类型、限制必要性、指定默认值</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">props: &#123;</span><br><span class=\"line\">    <span class=\"attr\">stuName</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">        <span class=\"attr\">required</span>:<span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">        <span class=\"attr\">required</span>:<span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">className</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">        <span class=\"attr\">default</span>:<span class=\"string\">&quot;1班&quot;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>props是只读的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据</li>\n</ol>\n<p>完整代码</p>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        props配置项</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 让组件接收外部传过来的数据 &lt;Student stuName=&quot;odinsam&quot; :age=&quot;10&quot;&gt;&lt;/Student&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 接收数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            简单接收 props: [&#x27;stuName&#x27;, &#x27;age&#x27;]</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            接收的同时限制数据类型</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            props: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                stuName: String,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                age: Number,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            接收的同时 限制数据类型、限制必要性、指定默认值</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            props: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                stuName: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    type: String,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    required:true,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                age: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    type: Number,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    required:true,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                className: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    type: String,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    default:&quot;1班&quot;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. props是制度的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">stuName</span>=<span class=\"string\">&quot;odinsam&quot;</span> <span class=\"attr\">:age</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄：&#123;&#123;myAge&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>班级：&#123;&#123;className&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeAge&quot;</span>&gt;</span>修改姓名<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">myAge</span>:<span class=\"built_in\">this</span>.age</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">changeAge</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.myAge++</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 简单接收</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// props: [&#x27;stuName&#x27;, &#x27;age&#x27;]</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 接收的同时限制数据类型</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">/*</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    props: &#123;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        stuName: String,</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        age: Number,</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">     */</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">stuName</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">type</span>: <span class=\"built_in\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">required</span>:<span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">age</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">type</span>: <span class=\"built_in\">Number</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">required</span>:<span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">className</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">type</span>: <span class=\"built_in\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">default</span>:<span class=\"string\">&quot;1班&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"props配置项\"><a class=\"markdownIt-Anchor\" href=\"#props配置项\"></a> props配置项</h4>\n<ol>\n<li>让组件接收外部传过来的数据 &lt;Student stuName=“odinsam” :age=“10”&gt;&lt;/Student&gt;</li>\n<li>如果使用props传递数组、对象、方法等数据时，应该是 &lt;Student :getStudentName=“getStudentName”&gt;&lt;/Student&gt;通过props传递函数getStudentName<br />\n接收数据</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>简单接收</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">props: [<span class=\"string\">&#x27;stuName&#x27;</span>, <span class=\"string\">&#x27;age&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>接收的同时规范数据类型</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">props: &#123;</span><br><span class=\"line\">    <span class=\"attr\">stuName</span>: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>接收的同时 限制数据类型、限制必要性、指定默认值</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">props: &#123;</span><br><span class=\"line\">    <span class=\"attr\">stuName</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">        <span class=\"attr\">required</span>:<span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">        <span class=\"attr\">required</span>:<span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">className</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">        <span class=\"attr\">default</span>:<span class=\"string\">&quot;1班&quot;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>props是只读的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据</li>\n</ol>\n<p>完整代码</p>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        props配置项</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 让组件接收外部传过来的数据 &lt;Student stuName=&quot;odinsam&quot; :age=&quot;10&quot;&gt;&lt;/Student&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 接收数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            简单接收 props: [&#x27;stuName&#x27;, &#x27;age&#x27;]</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            接收的同时限制数据类型</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            props: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                stuName: String,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                age: Number,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            接收的同时 限制数据类型、限制必要性、指定默认值</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            props: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                stuName: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    type: String,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    required:true,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                age: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    type: Number,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    required:true,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#125;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                className: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    type: String,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    default:&quot;1班&quot;,</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. props是制度的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">stuName</span>=<span class=\"string\">&quot;odinsam&quot;</span> <span class=\"attr\">:age</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄：&#123;&#123;myAge&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>班级：&#123;&#123;className&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeAge&quot;</span>&gt;</span>修改姓名<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">myAge</span>:<span class=\"built_in\">this</span>.age</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">changeAge</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.myAge++</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 简单接收</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// props: [&#x27;stuName&#x27;, &#x27;age&#x27;]</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 接收的同时限制数据类型</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">/*</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    props: &#123;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        stuName: String,</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        age: Number,</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">     */</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">stuName</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">type</span>: <span class=\"built_in\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">required</span>:<span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">age</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">type</span>: <span class=\"built_in\">Number</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">required</span>:<span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">className</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">type</span>: <span class=\"built_in\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">default</span>:<span class=\"string\">&quot;1班&quot;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 01. ref属性","author":"OdinSam","abbrlink":"dd21","date":"2022-10-18T07:22:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### ref属性\n\n1. 被用来给元素或者子组件注册引用信息(id的替代)\n2. 应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc\n3. 使用方法 &lt; h1 ref=“title”&gt;… &lt;/h1&gt; 或者 &lt;Student ref=“stu”&gt;&lt;/Student&gt;\n4. 获取 this.refs.title 真实dom对象 或者 this.refs.stu stu组件对象实例\n\n```js\n<template>\n  <div>\n    <!--\n        ref属性\n        1. 被用来给元素或者子组件注册引用信息(id的替代)\n        2. 应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc\n        3. 使用方法 <h1 ref=\"title\">.....</h1>  或者 <Student ref=\"stu\"></Student>\n        4. 获取 this.$refs.title 真实dom对象 或者 this.$refs.stu stu组件对象实例\n    -->\n    <h2 ref=\"title\">app组件</h2>\n    <Student ref=\"stu\"></Student>\n    <button @click=\"getDomClick\">使用ref获取dom元素</button>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    methods: {\n        getDomClick() {\n            console.log('function getDomClick');\n            console.log(this.$refs.title);  //获取到真实的dom元素\n            console.log(this.$refs.stu);    // student组件对象 vc\n            \n        }\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-01-ref属性.md","raw":"title: Vue2.0进阶 - 01. ref属性\nauthor: OdinSam\ntags:\n  - vue2\n  - ref属性\ncategories:\n  - 前端\n  - vue2\nabbrlink: dd21\ndate: 2022-10-18 15:22:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### ref属性\n\n1. 被用来给元素或者子组件注册引用信息(id的替代)\n2. 应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc\n3. 使用方法 &lt; h1 ref=“title”&gt;… &lt;/h1&gt; 或者 &lt;Student ref=“stu”&gt;&lt;/Student&gt;\n4. 获取 this.refs.title 真实dom对象 或者 this.refs.stu stu组件对象实例\n\n```js\n<template>\n  <div>\n    <!--\n        ref属性\n        1. 被用来给元素或者子组件注册引用信息(id的替代)\n        2. 应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc\n        3. 使用方法 <h1 ref=\"title\">.....</h1>  或者 <Student ref=\"stu\"></Student>\n        4. 获取 this.$refs.title 真实dom对象 或者 this.$refs.stu stu组件对象实例\n    -->\n    <h2 ref=\"title\">app组件</h2>\n    <Student ref=\"stu\"></Student>\n    <button @click=\"getDomClick\">使用ref获取dom元素</button>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    methods: {\n        getDomClick() {\n            console.log('function getDomClick');\n            console.log(this.$refs.title);  //获取到真实的dom元素\n            console.log(this.$refs.stu);    // student组件对象 vc\n            \n        }\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-01-ref属性","published":1,"updated":"2023-03-10T07:24:45.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza2z00365cs9frvk2g43","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"ref属性\"><a class=\"markdownIt-Anchor\" href=\"#ref属性\"></a> ref属性</h4>\n<ol>\n<li>被用来给元素或者子组件注册引用信息(id的替代)</li>\n<li>应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc</li>\n<li>使用方法 &lt; h1 ref=“title”&gt;… &lt;/h1&gt; 或者 &lt;Student ref=“stu”&gt;&lt;/Student&gt;</li>\n<li>获取 this.refs.title 真实dom对象 或者 this.refs.stu stu组件对象实例</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        ref属性</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 被用来给元素或者子组件注册引用信息(id的替代)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 使用方法 &lt;h1 ref=&quot;title&quot;&gt;.....&lt;/h1&gt;  或者 &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 获取 this.$refs.title 真实dom对象 或者 this.$refs.stu stu组件对象实例</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stu&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getDomClick&quot;</span>&gt;</span>使用ref获取dom元素<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">getDomClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function getDomClick&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$refs.title);  <span class=\"comment\">//获取到真实的dom元素</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$refs.stu);    <span class=\"comment\">// student组件对象 vc</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"ref属性\"><a class=\"markdownIt-Anchor\" href=\"#ref属性\"></a> ref属性</h4>\n<ol>\n<li>被用来给元素或者子组件注册引用信息(id的替代)</li>\n<li>应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc</li>\n<li>使用方法 &lt; h1 ref=“title”&gt;… &lt;/h1&gt; 或者 &lt;Student ref=“stu”&gt;&lt;/Student&gt;</li>\n<li>获取 this.refs.title 真实dom对象 或者 this.refs.stu stu组件对象实例</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        ref属性</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 被用来给元素或者子组件注册引用信息(id的替代)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 使用方法 &lt;h1 ref=&quot;title&quot;&gt;.....&lt;/h1&gt;  或者 &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 获取 this.$refs.title 真实dom对象 或者 this.$refs.stu stu组件对象实例</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stu&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getDomClick&quot;</span>&gt;</span>使用ref获取dom元素<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">getDomClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function getDomClick&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$refs.title);  <span class=\"comment\">//获取到真实的dom元素</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$refs.stu);    <span class=\"comment\">// student组件对象 vc</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 03. mixins混入配置项","author":"OdinSam","abbrlink":"6426","date":"2022-10-18T07:32:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### mixins混入配置项\n1. 可以吧多个组件公用的配置提取成一个混入对象\n2. 定义见 mixin.js\n3. 使用分为局部混合和全局混合。\n4. 局部混合：引入混合对象 import {mixin,mixinData} from ‘…/mixin’;在vueComponent配置项中 mixins:[mixin,mixinData]\n5. 全局混合：在main.js中 引入 import {mixin,mixinData} from ‘…/mixin’; 使用 Vue.mixin({ mixin, mixinData });混合\n6. 当混入配置与组件配置冲突时，如果是data、methods等，以组件自身数据、方法为主。但如果是有冲突的生命周期钩子，则都会运行。且现执行混合中的钩子函数后执行组件自身的钩子函数\n\n```js main.js\nimport Vue from 'vue';\nimport App from './App.vue';\nimport { mixin, mixinData } from './mixin';\nVue.config.productionTip = false;\n//全局混入\nVue.mixin({ mixin, mixinData });\nnew Vue({\n    render: (h) => h(App)\n}).$mount('#app');\n```\n\n```js mixins\nexport const mixin = {\n    methods: {\n        showName() {\n            alert(this.name);\n        }\n    },\n    mounted() {\n        console.log(this.name + '组件挂载了');\n    }\n};\n\nexport const mixinData = {\n    data() {\n        return {\n            value: 'mixin数据'\n        };\n    }\n};\n```\n\n```js school.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{name}}</h2>\n        <h2>mixindata与组件data冲突时:{{value}}</h2>\n        <span>学校名：{{schoolName}}</span><br/>\n        <button @click=\"showName\">showName</button>\n    </div>\n</template>\n\n<script>\nimport {mixin,mixinData} from '../mixin';\nexport default {\n    data() {\n        return {\n            value:'组件data',\n            name:'School组件',\n            schoolName:'vue学院'\n        }\n    },\n    mixins:[mixin,mixinData]\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:500px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{name}}</h2>\n        <span>姓名：{{stuName}}</span><br/>\n        <button @click=\"showName\">showName</button>\n    </div>\n</template>\n\n<script>\nimport {mixin} from '../mixin.js';\nexport default {\n    data() {\n        return {\n            name:'Student组件',\n            stuName:'odinsam'\n        }\n    },\n    mixins: [mixin],\n    mounted() {\n        console.log('student自身的mounted');\n        \n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:500px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-03-mixins混入配置项.md","raw":"title: Vue2.0进阶 - 03. mixins混入配置项\nauthor: OdinSam\ntags:\n  - vue2\n  - maxins\n  - 混入\ncategories:\n  - 前端\n  - vue2\nabbrlink: '6426'\ndate: 2022-10-18 15:32:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### mixins混入配置项\n1. 可以吧多个组件公用的配置提取成一个混入对象\n2. 定义见 mixin.js\n3. 使用分为局部混合和全局混合。\n4. 局部混合：引入混合对象 import {mixin,mixinData} from ‘…/mixin’;在vueComponent配置项中 mixins:[mixin,mixinData]\n5. 全局混合：在main.js中 引入 import {mixin,mixinData} from ‘…/mixin’; 使用 Vue.mixin({ mixin, mixinData });混合\n6. 当混入配置与组件配置冲突时，如果是data、methods等，以组件自身数据、方法为主。但如果是有冲突的生命周期钩子，则都会运行。且现执行混合中的钩子函数后执行组件自身的钩子函数\n\n```js main.js\nimport Vue from 'vue';\nimport App from './App.vue';\nimport { mixin, mixinData } from './mixin';\nVue.config.productionTip = false;\n//全局混入\nVue.mixin({ mixin, mixinData });\nnew Vue({\n    render: (h) => h(App)\n}).$mount('#app');\n```\n\n```js mixins\nexport const mixin = {\n    methods: {\n        showName() {\n            alert(this.name);\n        }\n    },\n    mounted() {\n        console.log(this.name + '组件挂载了');\n    }\n};\n\nexport const mixinData = {\n    data() {\n        return {\n            value: 'mixin数据'\n        };\n    }\n};\n```\n\n```js school.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{name}}</h2>\n        <h2>mixindata与组件data冲突时:{{value}}</h2>\n        <span>学校名：{{schoolName}}</span><br/>\n        <button @click=\"showName\">showName</button>\n    </div>\n</template>\n\n<script>\nimport {mixin,mixinData} from '../mixin';\nexport default {\n    data() {\n        return {\n            value:'组件data',\n            name:'School组件',\n            schoolName:'vue学院'\n        }\n    },\n    mixins:[mixin,mixinData]\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:500px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{name}}</h2>\n        <span>姓名：{{stuName}}</span><br/>\n        <button @click=\"showName\">showName</button>\n    </div>\n</template>\n\n<script>\nimport {mixin} from '../mixin.js';\nexport default {\n    data() {\n        return {\n            name:'Student组件',\n            stuName:'odinsam'\n        }\n    },\n    mixins: [mixin],\n    mounted() {\n        console.log('student自身的mounted');\n        \n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:500px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-03-mixins混入配置项","published":1,"updated":"2023-03-10T07:35:39.168Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3000395cs90fa48sbx","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"mixins混入配置项\"><a class=\"markdownIt-Anchor\" href=\"#mixins混入配置项\"></a> mixins混入配置项</h4>\n<ol>\n<li>可以吧多个组件公用的配置提取成一个混入对象</li>\n<li>定义见 mixin.js</li>\n<li>使用分为局部混合和全局混合。</li>\n<li>局部混合：引入混合对象 import {mixin,mixinData} from ‘…/mixin’;在vueComponent配置项中 mixins:[mixin,mixinData]</li>\n<li>全局混合：在main.js中 引入 import {mixin,mixinData} from ‘…/mixin’; 使用 Vue.mixin({ mixin, mixinData });混合</li>\n<li>当混入配置与组件配置冲突时，如果是data、methods等，以组件自身数据、方法为主。但如果是有冲突的生命周期钩子，则都会运行。且现执行混合中的钩子函数后执行组件自身的钩子函数</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mixin, mixinData &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./mixin&#x27;</span>;</span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"comment\">//全局混入</span></span><br><span class=\"line\">Vue.mixin(&#123; mixin, mixinData &#125;);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>mixins</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> mixin = &#123;</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">showName</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">            alert(<span class=\"built_in\">this</span>.name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name + <span class=\"string\">&#x27;组件挂载了&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> mixinData = &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">value</span>: <span class=\"string\">&#x27;mixin数据&#x27;</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>school.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>mixindata与组件data冲突时:&#123;&#123;value&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学校名：&#123;&#123;schoolName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showName&quot;</span>&gt;</span>showName<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;mixin,mixinData&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../mixin&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">value</span>:<span class=\"string\">&#x27;组件data&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">name</span>:<span class=\"string\">&#x27;School组件&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">schoolName</span>:<span class=\"string\">&#x27;vue学院&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">mixins</span>:[mixin,mixinData]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showName&quot;</span>&gt;</span>showName<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;mixin&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../mixin.js&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">name</span>:<span class=\"string\">&#x27;Student组件&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">mixins</span>: [mixin],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;student自身的mounted&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"mixins混入配置项\"><a class=\"markdownIt-Anchor\" href=\"#mixins混入配置项\"></a> mixins混入配置项</h4>\n<ol>\n<li>可以吧多个组件公用的配置提取成一个混入对象</li>\n<li>定义见 mixin.js</li>\n<li>使用分为局部混合和全局混合。</li>\n<li>局部混合：引入混合对象 import {mixin,mixinData} from ‘…/mixin’;在vueComponent配置项中 mixins:[mixin,mixinData]</li>\n<li>全局混合：在main.js中 引入 import {mixin,mixinData} from ‘…/mixin’; 使用 Vue.mixin({ mixin, mixinData });混合</li>\n<li>当混入配置与组件配置冲突时，如果是data、methods等，以组件自身数据、方法为主。但如果是有冲突的生命周期钩子，则都会运行。且现执行混合中的钩子函数后执行组件自身的钩子函数</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mixin, mixinData &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./mixin&#x27;</span>;</span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"comment\">//全局混入</span></span><br><span class=\"line\">Vue.mixin(&#123; mixin, mixinData &#125;);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>mixins</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> mixin = &#123;</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">showName</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">            alert(<span class=\"built_in\">this</span>.name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name + <span class=\"string\">&#x27;组件挂载了&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> mixinData = &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">value</span>: <span class=\"string\">&#x27;mixin数据&#x27;</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>school.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>mixindata与组件data冲突时:&#123;&#123;value&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学校名：&#123;&#123;schoolName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showName&quot;</span>&gt;</span>showName<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;mixin,mixinData&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../mixin&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">value</span>:<span class=\"string\">&#x27;组件data&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">name</span>:<span class=\"string\">&#x27;School组件&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">schoolName</span>:<span class=\"string\">&#x27;vue学院&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">mixins</span>:[mixin,mixinData]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showName&quot;</span>&gt;</span>showName<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;mixin&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../mixin.js&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">name</span>:<span class=\"string\">&#x27;Student组件&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">mixins</span>: [mixin],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;student自身的mounted&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 04. plugins插件","author":"OdinSam","abbrlink":"ec79","date":"2022-10-18T07:36:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### plugins插件\n1. 包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据\n2. 插件可以给vue添加实例方法、实例属性\n3. 使用插件： 在创建Vue实例前 Vue.use(plugins, { value1: ‘value1’, value2: ‘value2’ });\n4. 插件也可以 添加全局过滤器、添加全局指令、添加全局混入\n\n```js plugins.js\n/*\n    vue插件\n    1. 包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据\n    2. 插件可以给vue添加实例方法、实例属性\n    3. 使用插件： 在创建Vue实例前 Vue.use(plugins, { value1: 'value1', value2: 'value2' });\n    4. 插件也可以 添加全局过滤器、添加全局指令、添加全局混入\n*/\nexport default {\n    install(Vue, options) {\n        console.log('install 插件');\n        console.log('options', options);\n        //添加实例方法、实例属性\n        Vue.prototype.pluginMethod = function (value) {\n            console.log('invoke plugins myMethod');\n            console.log('myMethod param value', value);\n        };\n        Vue.prototype.pluginPrototype = 'odinsam plugins';\n        //添加全局过滤器\n        Vue.filter('odinFilter', function (value) {\n            console.log('odinFilter 被调用');\n            return value + '-odinFilter 被调用';\n        });\n        //添加全局指令\n        Vue.directive('big', {\n            bind(ele, binding) {\n                console.log(\n                    '1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素'\n                );\n                console.log('binding', binding);\n                ele.innerText = 'v-big指令显示' + binding.value;\n            },\n            inserted(ele, binding) {\n                console.log('1或n次调用 - 指令所在的元素被插入页面时调用');\n            },\n            update(ele, binding) {\n                console.log('1或n次调用: 当指令所在模板被重新解析时');\n            }\n        });\n        //添加全局混入\n        Vue.mixin({\n            data() {\n                return {\n                    pluginMixinValue: 'plugins mixin data'\n                };\n            }\n        });\n    }\n};\n```\n\n```js main.js 使用插件\nimport Vue from 'vue';\nimport App from './App.vue';\nimport plugins from './plugins';\nVue.config.productionTip = false;\n//使用插件\nVue.use(plugins, { value1: 'value1', value2: 'value2' });\nnew Vue({\n    render: (h) => h(App)\n}).$mount('#app');\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span>姓名：{{stuName}}</span><br/>\n        <span>插件混入+插件过滤器:{{pluginMixinValue | odinFilter}}</span><br/>\n        <span>插件v-big指令:</span><span v-big=\"value\"></span><br/>\n        <button @click=\"invokeMyMethod\">调用插件中的myMethod方法</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stuName: 'odinsam',\n            value:'组件value'\n        }\n    },\n    methods: {\n        invokeMyMethod() {\n            this.pluginMethod(this.pluginPrototype);\n        }\n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:500px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-04-plugins插件.md","raw":"title: Vue2.0进阶 - 04. plugins插件\nauthor: OdinSam\ntags:\n  - vue2\n  - plugins\ncategories:\n  - 前端\n  - vue2\nabbrlink: ec79\ndate: 2022-10-18 15:36:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### plugins插件\n1. 包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据\n2. 插件可以给vue添加实例方法、实例属性\n3. 使用插件： 在创建Vue实例前 Vue.use(plugins, { value1: ‘value1’, value2: ‘value2’ });\n4. 插件也可以 添加全局过滤器、添加全局指令、添加全局混入\n\n```js plugins.js\n/*\n    vue插件\n    1. 包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据\n    2. 插件可以给vue添加实例方法、实例属性\n    3. 使用插件： 在创建Vue实例前 Vue.use(plugins, { value1: 'value1', value2: 'value2' });\n    4. 插件也可以 添加全局过滤器、添加全局指令、添加全局混入\n*/\nexport default {\n    install(Vue, options) {\n        console.log('install 插件');\n        console.log('options', options);\n        //添加实例方法、实例属性\n        Vue.prototype.pluginMethod = function (value) {\n            console.log('invoke plugins myMethod');\n            console.log('myMethod param value', value);\n        };\n        Vue.prototype.pluginPrototype = 'odinsam plugins';\n        //添加全局过滤器\n        Vue.filter('odinFilter', function (value) {\n            console.log('odinFilter 被调用');\n            return value + '-odinFilter 被调用';\n        });\n        //添加全局指令\n        Vue.directive('big', {\n            bind(ele, binding) {\n                console.log(\n                    '1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素'\n                );\n                console.log('binding', binding);\n                ele.innerText = 'v-big指令显示' + binding.value;\n            },\n            inserted(ele, binding) {\n                console.log('1或n次调用 - 指令所在的元素被插入页面时调用');\n            },\n            update(ele, binding) {\n                console.log('1或n次调用: 当指令所在模板被重新解析时');\n            }\n        });\n        //添加全局混入\n        Vue.mixin({\n            data() {\n                return {\n                    pluginMixinValue: 'plugins mixin data'\n                };\n            }\n        });\n    }\n};\n```\n\n```js main.js 使用插件\nimport Vue from 'vue';\nimport App from './App.vue';\nimport plugins from './plugins';\nVue.config.productionTip = false;\n//使用插件\nVue.use(plugins, { value1: 'value1', value2: 'value2' });\nnew Vue({\n    render: (h) => h(App)\n}).$mount('#app');\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span>姓名：{{stuName}}</span><br/>\n        <span>插件混入+插件过滤器:{{pluginMixinValue | odinFilter}}</span><br/>\n        <span>插件v-big指令:</span><span v-big=\"value\"></span><br/>\n        <button @click=\"invokeMyMethod\">调用插件中的myMethod方法</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stuName: 'odinsam',\n            value:'组件value'\n        }\n    },\n    methods: {\n        invokeMyMethod() {\n            this.pluginMethod(this.pluginPrototype);\n        }\n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:500px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-04-plugins插件","published":1,"updated":"2023-03-10T07:37:48.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza31003d5cs93oqs6xwa","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"plugins插件\"><a class=\"markdownIt-Anchor\" href=\"#plugins插件\"></a> plugins插件</h4>\n<ol>\n<li>包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据</li>\n<li>插件可以给vue添加实例方法、实例属性</li>\n<li>使用插件： 在创建Vue实例前 Vue.use(plugins, { value1: ‘value1’, value2: ‘value2’ });</li>\n<li>插件也可以 添加全局过滤器、添加全局指令、添加全局混入</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>plugins.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    vue插件</span></span><br><span class=\"line\"><span class=\"comment\">    1. 包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据</span></span><br><span class=\"line\"><span class=\"comment\">    2. 插件可以给vue添加实例方法、实例属性</span></span><br><span class=\"line\"><span class=\"comment\">    3. 使用插件： 在创建Vue实例前 Vue.use(plugins, &#123; value1: &#x27;value1&#x27;, value2: &#x27;value2&#x27; &#125;);</span></span><br><span class=\"line\"><span class=\"comment\">    4. 插件也可以 添加全局过滤器、添加全局指令、添加全局混入</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">install</span>(<span class=\"params\">Vue, options</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;install 插件&#x27;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;options&#x27;</span>, options);</span><br><span class=\"line\">        <span class=\"comment\">//添加实例方法、实例属性</span></span><br><span class=\"line\">        Vue.prototype.pluginMethod = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;invoke plugins myMethod&#x27;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;myMethod param value&#x27;</span>, value);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        Vue.prototype.pluginPrototype = <span class=\"string\">&#x27;odinsam plugins&#x27;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//添加全局过滤器</span></span><br><span class=\"line\">        Vue.filter(<span class=\"string\">&#x27;odinFilter&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;odinFilter 被调用&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-odinFilter 被调用&#x27;</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//添加全局指令</span></span><br><span class=\"line\">        Vue.directive(<span class=\"string\">&#x27;big&#x27;</span>, &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">bind</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                    <span class=\"string\">&#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span><br><span class=\"line\">                );</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;binding&#x27;</span>, binding);</span><br><span class=\"line\">                ele.innerText = <span class=\"string\">&#x27;v-big指令显示&#x27;</span> + binding.value;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">inserted</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span>);</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">update</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//添加全局混入</span></span><br><span class=\"line\">        Vue.mixin(&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                    <span class=\"attr\">pluginMixinValue</span>: <span class=\"string\">&#x27;plugins mixin data&#x27;</span></span><br><span class=\"line\">                &#125;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>main.js 使用插件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> plugins <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./plugins&#x27;</span>;</span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"comment\">//使用插件</span></span><br><span class=\"line\">Vue.use(plugins, &#123; <span class=\"attr\">value1</span>: <span class=\"string\">&#x27;value1&#x27;</span>, <span class=\"attr\">value2</span>: <span class=\"string\">&#x27;value2&#x27;</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>插件混入+插件过滤器:&#123;&#123;pluginMixinValue | odinFilter&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>插件v-big指令:<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-big</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;invokeMyMethod&quot;</span>&gt;</span>调用插件中的myMethod方法<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">value</span>:<span class=\"string\">&#x27;组件value&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">invokeMyMethod</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.pluginMethod(<span class=\"built_in\">this</span>.pluginPrototype);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"plugins插件\"><a class=\"markdownIt-Anchor\" href=\"#plugins插件\"></a> plugins插件</h4>\n<ol>\n<li>包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据</li>\n<li>插件可以给vue添加实例方法、实例属性</li>\n<li>使用插件： 在创建Vue实例前 Vue.use(plugins, { value1: ‘value1’, value2: ‘value2’ });</li>\n<li>插件也可以 添加全局过滤器、添加全局指令、添加全局混入</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>plugins.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    vue插件</span></span><br><span class=\"line\"><span class=\"comment\">    1. 包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据</span></span><br><span class=\"line\"><span class=\"comment\">    2. 插件可以给vue添加实例方法、实例属性</span></span><br><span class=\"line\"><span class=\"comment\">    3. 使用插件： 在创建Vue实例前 Vue.use(plugins, &#123; value1: &#x27;value1&#x27;, value2: &#x27;value2&#x27; &#125;);</span></span><br><span class=\"line\"><span class=\"comment\">    4. 插件也可以 添加全局过滤器、添加全局指令、添加全局混入</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">install</span>(<span class=\"params\">Vue, options</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;install 插件&#x27;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;options&#x27;</span>, options);</span><br><span class=\"line\">        <span class=\"comment\">//添加实例方法、实例属性</span></span><br><span class=\"line\">        Vue.prototype.pluginMethod = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;invoke plugins myMethod&#x27;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;myMethod param value&#x27;</span>, value);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        Vue.prototype.pluginPrototype = <span class=\"string\">&#x27;odinsam plugins&#x27;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//添加全局过滤器</span></span><br><span class=\"line\">        Vue.filter(<span class=\"string\">&#x27;odinFilter&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;odinFilter 被调用&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> value + <span class=\"string\">&#x27;-odinFilter 被调用&#x27;</span>;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//添加全局指令</span></span><br><span class=\"line\">        Vue.directive(<span class=\"string\">&#x27;big&#x27;</span>, &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">bind</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                    <span class=\"string\">&#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span><br><span class=\"line\">                );</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;binding&#x27;</span>, binding);</span><br><span class=\"line\">                ele.innerText = <span class=\"string\">&#x27;v-big指令显示&#x27;</span> + binding.value;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">inserted</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span>);</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">update</span>(<span class=\"params\">ele, binding</span>)</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//添加全局混入</span></span><br><span class=\"line\">        Vue.mixin(&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                    <span class=\"attr\">pluginMixinValue</span>: <span class=\"string\">&#x27;plugins mixin data&#x27;</span></span><br><span class=\"line\">                &#125;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>main.js 使用插件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> plugins <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./plugins&#x27;</span>;</span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"comment\">//使用插件</span></span><br><span class=\"line\">Vue.use(plugins, &#123; <span class=\"attr\">value1</span>: <span class=\"string\">&#x27;value1&#x27;</span>, <span class=\"attr\">value2</span>: <span class=\"string\">&#x27;value2&#x27;</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>插件混入+插件过滤器:&#123;&#123;pluginMixinValue | odinFilter&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>插件v-big指令:<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-big</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;invokeMyMethod&quot;</span>&gt;</span>调用插件中的myMethod方法<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">value</span>:<span class=\"string\">&#x27;组件value&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">invokeMyMethod</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.pluginMethod(<span class=\"built_in\">this</span>.pluginPrototype);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">500px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 06. webStorage浏览器的本地存储","author":"OdinSam","abbrlink":"fef3","date":"2022-10-19T07:40:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n1. 浏览器通过 window.sessionStorage 和 window.localStorage 属性实现本地存储\n2. 相关api\nxxxStorage.setItem(‘key’,‘value’) 存储数据\nxxxStorage.getItem(‘key’) 读取数据\nxxxStorage.removeItem(‘key’) 删除某个数据\nxxxStorage.clear() 清空所有数据\n3. sessionStorage 存储的内容会随着浏览器的关闭而消失.\n4. localStorage 存储的内容需要手动调用api清除\n5. xxxStorage.getItem(‘key’) 如果key不存在，则返回null\n6. JSON.parse(null) 返回的依然是null\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <input type=\"text\" v-model.lazy=\"addStuName\" @keyup.enter=\"addStu\"><br/>\n        <ul>\n            <li v-for=\"stu in stus\" :key=\"stu.id\">{{stu.stuName}}</li>\n        </ul>\n        <button @click=\"changeStuName\">修改第一个学生的姓名</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            addStuName: '',\n            //从localStorage中获取数据 如果为null则返回空数组。确保用户打开浏览器时显示的是上次保存在localStorage中的数据\n            stus: JSON.parse(localStorage.getItem('stu')) || []\n        }\n    },\n    methods: {\n        addStu() {\n            const newStu = { id: this.stus.length, stuName: this.addStuName };\n            this.stus.push(newStu);\n            this.addStuName=''\n        },\n        //修改第一个学生的姓名，此时需要开启深度监视，否则无法watch无法监视到stu内部的元素属性的修改，就无法触发监视事件（修改localStorage中的数据）\n        changeStuName() {\n            this.stus[0].stuName = this.stus[0].stuName+'change'\n        }\n    },\n    watch: {\n        stus: {\n            //放弃watch的简写方式开启深度监视，确保当修改了stu数组内部元素的属性后依旧可以监视到数据改变并存储到localStorage中\n            deep: true,\n            handler(value) {\n                localStorage.setItem('stu',JSON.stringify(value))\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-06-webStorage浏览器的本地存储.md","raw":"title: Vue2.0进阶 - 06. webStorage浏览器的本地存储\nauthor: OdinSam\ntags:\n  - webstorage\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: fef3\ndate: 2022-10-19 15:40:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n1. 浏览器通过 window.sessionStorage 和 window.localStorage 属性实现本地存储\n2. 相关api\nxxxStorage.setItem(‘key’,‘value’) 存储数据\nxxxStorage.getItem(‘key’) 读取数据\nxxxStorage.removeItem(‘key’) 删除某个数据\nxxxStorage.clear() 清空所有数据\n3. sessionStorage 存储的内容会随着浏览器的关闭而消失.\n4. localStorage 存储的内容需要手动调用api清除\n5. xxxStorage.getItem(‘key’) 如果key不存在，则返回null\n6. JSON.parse(null) 返回的依然是null\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <input type=\"text\" v-model.lazy=\"addStuName\" @keyup.enter=\"addStu\"><br/>\n        <ul>\n            <li v-for=\"stu in stus\" :key=\"stu.id\">{{stu.stuName}}</li>\n        </ul>\n        <button @click=\"changeStuName\">修改第一个学生的姓名</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            addStuName: '',\n            //从localStorage中获取数据 如果为null则返回空数组。确保用户打开浏览器时显示的是上次保存在localStorage中的数据\n            stus: JSON.parse(localStorage.getItem('stu')) || []\n        }\n    },\n    methods: {\n        addStu() {\n            const newStu = { id: this.stus.length, stuName: this.addStuName };\n            this.stus.push(newStu);\n            this.addStuName=''\n        },\n        //修改第一个学生的姓名，此时需要开启深度监视，否则无法watch无法监视到stu内部的元素属性的修改，就无法触发监视事件（修改localStorage中的数据）\n        changeStuName() {\n            this.stus[0].stuName = this.stus[0].stuName+'change'\n        }\n    },\n    watch: {\n        stus: {\n            //放弃watch的简写方式开启深度监视，确保当修改了stu数组内部元素的属性后依旧可以监视到数据改变并存储到localStorage中\n            deep: true,\n            handler(value) {\n                localStorage.setItem('stu',JSON.stringify(value))\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-06-webStorage浏览器的本地存储","published":1,"updated":"2023-03-10T07:41:29.513Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza32003g5cs91imkbk3j","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<ol>\n<li>浏览器通过 window.sessionStorage 和 window.localStorage 属性实现本地存储</li>\n<li>相关api<br />\nxxxStorage.setItem(‘key’,‘value’) 存储数据<br />\nxxxStorage.getItem(‘key’) 读取数据<br />\nxxxStorage.removeItem(‘key’) 删除某个数据<br />\nxxxStorage.clear() 清空所有数据</li>\n<li>sessionStorage 存储的内容会随着浏览器的关闭而消失.</li>\n<li>localStorage 存储的内容需要手动调用api清除</li>\n<li>xxxStorage.getItem(‘key’) 如果key不存在，则返回null</li>\n<li>JSON.parse(null) 返回的依然是null</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model.lazy</span>=<span class=\"string\">&quot;addStuName&quot;</span> @<span class=\"attr\">keyup.enter</span>=<span class=\"string\">&quot;addStu&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;stu in stus&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;stu.id&quot;</span>&gt;</span>&#123;&#123;stu.stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeStuName&quot;</span>&gt;</span>修改第一个学生的姓名<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">addStuName</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//从localStorage中获取数据 如果为null则返回空数组。确保用户打开浏览器时显示的是上次保存在localStorage中的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stus</span>: <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;stu&#x27;</span>)) || []</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">addStu</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">const</span> newStu = &#123; <span class=\"attr\">id</span>: <span class=\"built_in\">this</span>.stus.length, <span class=\"attr\">stuName</span>: <span class=\"built_in\">this</span>.addStuName &#125;;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stus.push(newStu);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.addStuName=<span class=\"string\">&#x27;&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//修改第一个学生的姓名，此时需要开启深度监视，否则无法watch无法监视到stu内部的元素属性的修改，就无法触发监视事件（修改localStorage中的数据）</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">changeStuName</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stus[<span class=\"number\">0</span>].stuName = <span class=\"built_in\">this</span>.stus[<span class=\"number\">0</span>].stuName+<span class=\"string\">&#x27;change&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">watch</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">stus</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//放弃watch的简写方式开启深度监视，确保当修改了stu数组内部元素的属性后依旧可以监视到数据改变并存储到localStorage中</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">deep</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">value</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&#x27;stu&#x27;</span>,<span class=\"built_in\">JSON</span>.stringify(value))</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<ol>\n<li>浏览器通过 window.sessionStorage 和 window.localStorage 属性实现本地存储</li>\n<li>相关api<br />\nxxxStorage.setItem(‘key’,‘value’) 存储数据<br />\nxxxStorage.getItem(‘key’) 读取数据<br />\nxxxStorage.removeItem(‘key’) 删除某个数据<br />\nxxxStorage.clear() 清空所有数据</li>\n<li>sessionStorage 存储的内容会随着浏览器的关闭而消失.</li>\n<li>localStorage 存储的内容需要手动调用api清除</li>\n<li>xxxStorage.getItem(‘key’) 如果key不存在，则返回null</li>\n<li>JSON.parse(null) 返回的依然是null</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model.lazy</span>=<span class=\"string\">&quot;addStuName&quot;</span> @<span class=\"attr\">keyup.enter</span>=<span class=\"string\">&quot;addStu&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;stu in stus&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;stu.id&quot;</span>&gt;</span>&#123;&#123;stu.stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeStuName&quot;</span>&gt;</span>修改第一个学生的姓名<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">addStuName</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//从localStorage中获取数据 如果为null则返回空数组。确保用户打开浏览器时显示的是上次保存在localStorage中的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stus</span>: <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;stu&#x27;</span>)) || []</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">addStu</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">const</span> newStu = &#123; <span class=\"attr\">id</span>: <span class=\"built_in\">this</span>.stus.length, <span class=\"attr\">stuName</span>: <span class=\"built_in\">this</span>.addStuName &#125;;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stus.push(newStu);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.addStuName=<span class=\"string\">&#x27;&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//修改第一个学生的姓名，此时需要开启深度监视，否则无法watch无法监视到stu内部的元素属性的修改，就无法触发监视事件（修改localStorage中的数据）</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">changeStuName</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stus[<span class=\"number\">0</span>].stuName = <span class=\"built_in\">this</span>.stus[<span class=\"number\">0</span>].stuName+<span class=\"string\">&#x27;change&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">watch</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"attr\">stus</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//放弃watch的简写方式开启深度监视，确保当修改了stu数组内部元素的属性后依旧可以监视到数据改变并存储到localStorage中</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">deep</span>: <span class=\"literal\">true</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"function\"><span class=\"title\">handler</span>(<span class=\"params\">value</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"built_in\">localStorage</span>.setItem(<span class=\"string\">&#x27;stu&#x27;</span>,<span class=\"built_in\">JSON</span>.stringify(value))</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 07. vue自定义事件","author":"OdinSam","abbrlink":"e1f2","date":"2022-10-19T07:41:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### vue自定义事件\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{title}}</h2>\n        <span>姓名：{{stuName}}</span><br/>\n        <button @click=\"sendStuName\">自定义事件-回传学生的名字</button><br/>\n        <button @click=\"unbind\">解绑自定义事件</button><br/>\n        <button @click=\"destoryStu\">销毁组件</button><br/>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stuName:'odinsam'\n        }\n    },\n    props:['title'],\n    methods: {\n        sendStuName() {\n            console.log('function sendStuName');\n            //触发自定义事件 customEvent,传参对象\n            this.$emit('customEvent',{name:this.stuName})\n        },\n        unbind() {\n            //解绑一个自定义事件\n            this.$off('customEvent')\n            //解绑多个自定义事件\n            this.$off(['customEvent'])\n            // 解绑所有的自定义事件\n            this.$off()\n        },\n        destoryStu() {\n            // 销毁当前组件对象\n            this.$destroy();\n        }\n    },\n    unbind: {\n        \n    }\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:300px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        vue自定义事件\n        1. 可以给组件使用 v-on:自定义事件=\"事件处理方法\" 或者 @自定义事件=\"事件处理方法\" 来绑定并处理自定义事件.适用于子组件给父组件传递数据\n        2. 在组件中 使用 this.$emit('自定义事件',参数) 的形式触发自定义事件.参数可以是 字符串、数值、数组或者对象。\n        2. 也可以通过 ref='refName' 在mounted中 使用 $on 的方式绑定并处理自定义事件\n        3. mounted中使用 this.$refs.refName.$on('自定义事件',function(参数){ })的方式绑定并处理\n        4. ref结合mounted与$on的写法更灵活，比如延迟触发、axios后再处理事件\n        5. 在绑定的组件可以使用 this.$off() 解绑自定义事件. \n            this.$off('eventName')  解绑一个自定义事件\n            this.$off(['eventName1','eventName2'])  解绑多个自定义事件\n            this.$off()  解绑所有的自定义事件\n        6. 如果组件被销毁，那么绑定的自定义事件不再有效果。\n        7. 注意: mounted 中 $on的回调函数中,this是当前绑定自定事件的组件对象vc，而不是vue对象vm。 如果需要vm则需要将回调函数写为箭头函数\n    -->\n    <h2>app组件</h2>\n    <span>学生组件的姓名是:{{stuName}}</span>\n    <!--组件student 绑定自定义事件customEvent 事件处理方法getStuName -->\n    <Student v-on:customEvent=\"getStuName\" title=\"v-on方式绑定自定义事件\"></Student>\n    <Student @customEvent=\"getStuName\" title=\"@ 方式绑定自定义事件\"></Student>\n    <Student ref=\"stu\"  title=\"ref emit方式绑定自定义事件\"></Student>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stuName:''\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        // 直接处理自定义事件\n        getStuName(param) {\n            console.log('param', param);\n            this.stuName = param.name;\n        }\n    },\n    mounted() {\n        // 通过 mounted+$refs+$on 的方式处理自定时间。方式更灵活。 例如延迟处理、axios后处理等等.\n        // 回调函数的this是绑定自定事件的组件即stu组件，无法获取到当前app组件的stuName，需要改为箭头函数或者使用注释行的代码\n        this.$refs.stu.$on('customEvent',(param)=> {\n            console.log('this.stu.$on', param);\n            this.stuName = param.name;\n        })\n        // this.$refs.stu.$on('customEvent',getStuName)\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n    display: flex;\n    justify-content: space-evenly;\n}\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-07-vue自定义事件.md","raw":"title: Vue2.0进阶 - 07. vue自定义事件\nauthor: OdinSam\ntags:\n  - vue2\n  - 自定义事件\ncategories:\n  - 前端\n  - vue2\nabbrlink: e1f2\ndate: 2022-10-19 15:41:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### vue自定义事件\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{title}}</h2>\n        <span>姓名：{{stuName}}</span><br/>\n        <button @click=\"sendStuName\">自定义事件-回传学生的名字</button><br/>\n        <button @click=\"unbind\">解绑自定义事件</button><br/>\n        <button @click=\"destoryStu\">销毁组件</button><br/>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stuName:'odinsam'\n        }\n    },\n    props:['title'],\n    methods: {\n        sendStuName() {\n            console.log('function sendStuName');\n            //触发自定义事件 customEvent,传参对象\n            this.$emit('customEvent',{name:this.stuName})\n        },\n        unbind() {\n            //解绑一个自定义事件\n            this.$off('customEvent')\n            //解绑多个自定义事件\n            this.$off(['customEvent'])\n            // 解绑所有的自定义事件\n            this.$off()\n        },\n        destoryStu() {\n            // 销毁当前组件对象\n            this.$destroy();\n        }\n    },\n    unbind: {\n        \n    }\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:300px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        vue自定义事件\n        1. 可以给组件使用 v-on:自定义事件=\"事件处理方法\" 或者 @自定义事件=\"事件处理方法\" 来绑定并处理自定义事件.适用于子组件给父组件传递数据\n        2. 在组件中 使用 this.$emit('自定义事件',参数) 的形式触发自定义事件.参数可以是 字符串、数值、数组或者对象。\n        2. 也可以通过 ref='refName' 在mounted中 使用 $on 的方式绑定并处理自定义事件\n        3. mounted中使用 this.$refs.refName.$on('自定义事件',function(参数){ })的方式绑定并处理\n        4. ref结合mounted与$on的写法更灵活，比如延迟触发、axios后再处理事件\n        5. 在绑定的组件可以使用 this.$off() 解绑自定义事件. \n            this.$off('eventName')  解绑一个自定义事件\n            this.$off(['eventName1','eventName2'])  解绑多个自定义事件\n            this.$off()  解绑所有的自定义事件\n        6. 如果组件被销毁，那么绑定的自定义事件不再有效果。\n        7. 注意: mounted 中 $on的回调函数中,this是当前绑定自定事件的组件对象vc，而不是vue对象vm。 如果需要vm则需要将回调函数写为箭头函数\n    -->\n    <h2>app组件</h2>\n    <span>学生组件的姓名是:{{stuName}}</span>\n    <!--组件student 绑定自定义事件customEvent 事件处理方法getStuName -->\n    <Student v-on:customEvent=\"getStuName\" title=\"v-on方式绑定自定义事件\"></Student>\n    <Student @customEvent=\"getStuName\" title=\"@ 方式绑定自定义事件\"></Student>\n    <Student ref=\"stu\"  title=\"ref emit方式绑定自定义事件\"></Student>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stuName:''\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        // 直接处理自定义事件\n        getStuName(param) {\n            console.log('param', param);\n            this.stuName = param.name;\n        }\n    },\n    mounted() {\n        // 通过 mounted+$refs+$on 的方式处理自定时间。方式更灵活。 例如延迟处理、axios后处理等等.\n        // 回调函数的this是绑定自定事件的组件即stu组件，无法获取到当前app组件的stuName，需要改为箭头函数或者使用注释行的代码\n        this.$refs.stu.$on('customEvent',(param)=> {\n            console.log('this.stu.$on', param);\n            this.stuName = param.name;\n        })\n        // this.$refs.stu.$on('customEvent',getStuName)\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n    display: flex;\n    justify-content: space-evenly;\n}\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-07-vue自定义事件","published":1,"updated":"2023-03-10T07:45:48.023Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza33003k5cs98bu81nql","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"vue自定义事件\"><a class=\"markdownIt-Anchor\" href=\"#vue自定义事件\"></a> vue自定义事件</h4>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;sendStuName&quot;</span>&gt;</span>自定义事件-回传学生的名字<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;unbind&quot;</span>&gt;</span>解绑自定义事件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;destoryStu&quot;</span>&gt;</span>销毁组件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>:[<span class=\"string\">&#x27;title&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">sendStuName</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function sendStuName&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//触发自定义事件 customEvent,传参对象</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$emit(<span class=\"string\">&#x27;customEvent&#x27;</span>,&#123;<span class=\"attr\">name</span>:<span class=\"built_in\">this</span>.stuName&#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">unbind</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//解绑一个自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$off(<span class=\"string\">&#x27;customEvent&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//解绑多个自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$off([<span class=\"string\">&#x27;customEvent&#x27;</span>])</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">// 解绑所有的自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$off()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">destoryStu</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">// 销毁当前组件对象</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$destroy();</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">unbind</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">300px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        vue自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 可以给组件使用 v-on:自定义事件=&quot;事件处理方法&quot; 或者 @自定义事件=&quot;事件处理方法&quot; 来绑定并处理自定义事件.适用于子组件给父组件传递数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 在组件中 使用 this.$emit(&#x27;自定义事件&#x27;,参数) 的形式触发自定义事件.参数可以是 字符串、数值、数组或者对象。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 也可以通过 ref=&#x27;refName&#x27; 在mounted中 使用 $on 的方式绑定并处理自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. mounted中使用 this.$refs.refName.$on(&#x27;自定义事件&#x27;,function(参数)&#123; &#125;)的方式绑定并处理</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. ref结合mounted与$on的写法更灵活，比如延迟触发、axios后再处理事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        5. 在绑定的组件可以使用 this.$off() 解绑自定义事件. </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            this.$off(&#x27;eventName&#x27;)  解绑一个自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            this.$off([&#x27;eventName1&#x27;,&#x27;eventName2&#x27;])  解绑多个自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            this.$off()  解绑所有的自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        6. 如果组件被销毁，那么绑定的自定义事件不再有效果。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        7. 注意: mounted 中 $on的回调函数中,this是当前绑定自定事件的组件对象vc，而不是vue对象vm。 如果需要vm则需要将回调函数写为箭头函数</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学生组件的姓名是:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--组件student 绑定自定义事件customEvent 事件处理方法getStuName --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-on:customEvent</span>=<span class=\"string\">&quot;getStuName&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;v-on方式绑定自定义事件&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> @<span class=\"attr\">customEvent</span>=<span class=\"string\">&quot;getStuName&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;@ 方式绑定自定义事件&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stu&quot;</span>  <span class=\"attr\">title</span>=<span class=\"string\">&quot;ref emit方式绑定自定义事件&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 直接处理自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">getStuName</span>(<span class=\"params\">param</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;param&#x27;</span>, param);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.name;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 通过 mounted+$refs+$on 的方式处理自定时间。方式更灵活。 例如延迟处理、axios后处理等等.</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 回调函数的this是绑定自定事件的组件即stu组件，无法获取到当前app组件的stuName，需要改为箭头函数或者使用注释行的代码</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">this</span>.$refs.stu.$on(<span class=\"string\">&#x27;customEvent&#x27;</span>,<span class=\"function\">(<span class=\"params\">param</span>)=&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;this.stu.$on&#x27;</span>, param);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.name;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// this.$refs.stu.$on(&#x27;customEvent&#x27;,getStuName)</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">display</span>: flex;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">justify-content</span>: space-evenly;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"vue自定义事件\"><a class=\"markdownIt-Anchor\" href=\"#vue自定义事件\"></a> vue自定义事件</h4>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;sendStuName&quot;</span>&gt;</span>自定义事件-回传学生的名字<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;unbind&quot;</span>&gt;</span>解绑自定义事件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;destoryStu&quot;</span>&gt;</span>销毁组件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>:[<span class=\"string\">&#x27;title&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">sendStuName</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function sendStuName&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//触发自定义事件 customEvent,传参对象</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$emit(<span class=\"string\">&#x27;customEvent&#x27;</span>,&#123;<span class=\"attr\">name</span>:<span class=\"built_in\">this</span>.stuName&#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">unbind</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//解绑一个自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$off(<span class=\"string\">&#x27;customEvent&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//解绑多个自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$off([<span class=\"string\">&#x27;customEvent&#x27;</span>])</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">// 解绑所有的自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$off()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">destoryStu</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">// 销毁当前组件对象</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$destroy();</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">unbind</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">300px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        vue自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 可以给组件使用 v-on:自定义事件=&quot;事件处理方法&quot; 或者 @自定义事件=&quot;事件处理方法&quot; 来绑定并处理自定义事件.适用于子组件给父组件传递数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 在组件中 使用 this.$emit(&#x27;自定义事件&#x27;,参数) 的形式触发自定义事件.参数可以是 字符串、数值、数组或者对象。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 也可以通过 ref=&#x27;refName&#x27; 在mounted中 使用 $on 的方式绑定并处理自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. mounted中使用 this.$refs.refName.$on(&#x27;自定义事件&#x27;,function(参数)&#123; &#125;)的方式绑定并处理</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. ref结合mounted与$on的写法更灵活，比如延迟触发、axios后再处理事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        5. 在绑定的组件可以使用 this.$off() 解绑自定义事件. </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            this.$off(&#x27;eventName&#x27;)  解绑一个自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            this.$off([&#x27;eventName1&#x27;,&#x27;eventName2&#x27;])  解绑多个自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            this.$off()  解绑所有的自定义事件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        6. 如果组件被销毁，那么绑定的自定义事件不再有效果。</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        7. 注意: mounted 中 $on的回调函数中,this是当前绑定自定事件的组件对象vc，而不是vue对象vm。 如果需要vm则需要将回调函数写为箭头函数</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学生组件的姓名是:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--组件student 绑定自定义事件customEvent 事件处理方法getStuName --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-on:customEvent</span>=<span class=\"string\">&quot;getStuName&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;v-on方式绑定自定义事件&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> @<span class=\"attr\">customEvent</span>=<span class=\"string\">&quot;getStuName&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;@ 方式绑定自定义事件&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stu&quot;</span>  <span class=\"attr\">title</span>=<span class=\"string\">&quot;ref emit方式绑定自定义事件&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 直接处理自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">getStuName</span>(<span class=\"params\">param</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;param&#x27;</span>, param);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.name;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 通过 mounted+$refs+$on 的方式处理自定时间。方式更灵活。 例如延迟处理、axios后处理等等.</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 回调函数的this是绑定自定事件的组件即stu组件，无法获取到当前app组件的stuName，需要改为箭头函数或者使用注释行的代码</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">this</span>.$refs.stu.$on(<span class=\"string\">&#x27;customEvent&#x27;</span>,<span class=\"function\">(<span class=\"params\">param</span>)=&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;this.stu.$on&#x27;</span>, param);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.name;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// this.$refs.stu.$on(&#x27;customEvent&#x27;,getStuName)</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">display</span>: flex;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">justify-content</span>: space-evenly;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 05. vue的style","author":"OdinSam","abbrlink":"4576","date":"2022-10-18T07:38:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### vue的style\n1. 多个组件的style可能会出现class重名的情况，当class重名，后引入的组件样式会覆盖之前的同名样式\n2. 可以在组件的 style 标签中添加 scoped属性，让当前style仅作用于当前组件(app的style不加scoped)\n3. style 标签还有lang属性，默认是css。若要修改less，需注意:需要添加 less-loader.\n4. npm view webpack version 可以查看对应版本\n5. vue2 webpack使用的4.46 less-load 8以后得版本是为了迎合webpack5 所以需要安装less-loader 7版本\n6. 安装 npm i less-loader@7\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span class=\"namecls\">姓名：{{stuName}}</span><br/>\n        <span class=\"lessname\">less 样式</span>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stuName:'odinsam'\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"less\">\n.studv{\n    background-color:bisque;\n    width:400px;\n    padding:50px;\n    margin-left:50px;\n    .lessname\n    {\n        font-size:30px;\n    }\n}\n.namecls\n    {\n        color:blue;\n    }\n</style>\n```\n\n```js school.vue\n<template>\n    <div class=\"schooldv\">\n        <h2>School组件</h2>\n        <span class=\"namecls\">姓名：{{schoolName}}</span>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            schoolName:'vue学校'\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"css\">\n.schooldv{\n    background-color:cadetblue;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n.namecls\n{\n    color:red;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-05-vue的style.md","raw":"title: Vue2.0进阶 - 05. vue的style\nauthor: OdinSam\ntags:\n  - style\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: '4576'\ndate: 2022-10-18 15:38:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### vue的style\n1. 多个组件的style可能会出现class重名的情况，当class重名，后引入的组件样式会覆盖之前的同名样式\n2. 可以在组件的 style 标签中添加 scoped属性，让当前style仅作用于当前组件(app的style不加scoped)\n3. style 标签还有lang属性，默认是css。若要修改less，需注意:需要添加 less-loader.\n4. npm view webpack version 可以查看对应版本\n5. vue2 webpack使用的4.46 less-load 8以后得版本是为了迎合webpack5 所以需要安装less-loader 7版本\n6. 安装 npm i less-loader@7\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span class=\"namecls\">姓名：{{stuName}}</span><br/>\n        <span class=\"lessname\">less 样式</span>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stuName:'odinsam'\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"less\">\n.studv{\n    background-color:bisque;\n    width:400px;\n    padding:50px;\n    margin-left:50px;\n    .lessname\n    {\n        font-size:30px;\n    }\n}\n.namecls\n    {\n        color:blue;\n    }\n</style>\n```\n\n```js school.vue\n<template>\n    <div class=\"schooldv\">\n        <h2>School组件</h2>\n        <span class=\"namecls\">姓名：{{schoolName}}</span>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            schoolName:'vue学校'\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"css\">\n.schooldv{\n    background-color:cadetblue;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n.namecls\n{\n    color:red;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-05-vue的style","published":1,"updated":"2023-03-10T07:39:56.259Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza33003m5cs91lbh247o","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"vue的style\"><a class=\"markdownIt-Anchor\" href=\"#vue的style\"></a> vue的style</h4>\n<ol>\n<li>多个组件的style可能会出现class重名的情况，当class重名，后引入的组件样式会覆盖之前的同名样式</li>\n<li>可以在组件的 style 标签中添加 scoped属性，让当前style仅作用于当前组件(app的style不加scoped)</li>\n<li>style 标签还有lang属性，默认是css。若要修改less，需注意:需要添加 less-loader.</li>\n<li>npm view webpack version 可以查看对应版本</li>\n<li>vue2 webpack使用的4.46 less-load 8以后得版本是为了迎合webpack5 所以需要安装less-loader 7版本</li>\n<li>安装 npm i less-loader@7</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;namecls&quot;</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;lessname&quot;</span>&gt;</span>less 样式<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;less&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"selector-class\">.lessname</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">        <span class=\"attribute\">font-size</span>:<span class=\"number\">30px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.namecls</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">        <span class=\"attribute\">color</span>:blue;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>school.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;schooldv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>School组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;namecls&quot;</span>&gt;</span>姓名：&#123;&#123;schoolName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">schoolName</span>:<span class=\"string\">&#x27;vue学校&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.schooldv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:cadetblue;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.namecls</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">color</span>:red;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"vue的style\"><a class=\"markdownIt-Anchor\" href=\"#vue的style\"></a> vue的style</h4>\n<ol>\n<li>多个组件的style可能会出现class重名的情况，当class重名，后引入的组件样式会覆盖之前的同名样式</li>\n<li>可以在组件的 style 标签中添加 scoped属性，让当前style仅作用于当前组件(app的style不加scoped)</li>\n<li>style 标签还有lang属性，默认是css。若要修改less，需注意:需要添加 less-loader.</li>\n<li>npm view webpack version 可以查看对应版本</li>\n<li>vue2 webpack使用的4.46 less-load 8以后得版本是为了迎合webpack5 所以需要安装less-loader 7版本</li>\n<li>安装 npm i less-loader@7</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;namecls&quot;</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;lessname&quot;</span>&gt;</span>less 样式<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;less&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"selector-class\">.lessname</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">        <span class=\"attribute\">font-size</span>:<span class=\"number\">30px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.namecls</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">        <span class=\"attribute\">color</span>:blue;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>school.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;schooldv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>School组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;namecls&quot;</span>&gt;</span>姓名：&#123;&#123;schoolName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">schoolName</span>:<span class=\"string\">&#x27;vue学校&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">scoped</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.schooldv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:cadetblue;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.namecls</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">color</span>:red;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 08. 全局事件总线","author":"OdinSam","abbrlink":"10d9","date":"2022-10-19T07:46:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n#### vue全局事件总线\n1. 一种组件间通信的方式，适用于任意组件通信\n2. 在main.js中通过 beforeCreate(){ Vue.prototype.$bus = this; } 安装全局事件总线\n3. 主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.\n4. 通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.\n\n```js main.js\nimport Vue from 'vue';\nimport App from './App.vue';\n\nVue.config.productionTip = false;\n/**\n    全局事件总线:\n    1. 一种组件间通信的方式，适用于任意组件通信\n    2. 在main.js中通过 beforeCreate(){ Vue.prototype.$bus = this; } 安装全局事件总线\n    3. 主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.\n    4. 通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.\n */\nnew Vue({\n    render: (h) => h(App),\n    beforeCreate() {\n        Vue.prototype.$bus = this;\n    }\n}).$mount('#app');\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        \n    -->\n    <h2>app组件</h2><br/>\n    <span>学生的姓名是:{{stuName}}</span><br/>\n    <Student ref=\"stu\"></Student>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stuName:'',\n        }\n    },\n    components: {\n        Student\n    },\n    mounted() {\n        //给student添加自定义事件\n        this.$bus.$on('customEvent', (param) => {\n            this.stuName = param.name;\n        });\n    },\n    beforeDestroy() {\n        this.$bus.off('customEvent');\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span>姓名：{{stuName}}</span>\n        <button @click=\"busEventClick\">通过全局事件总线触发事件传递数据</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stuName:'odinsam-eventBus'\n        }\n    },\n    methods: {\n        busEventClick() {\n            console.log('function busEventClick');\n            this.$bus.$emit('customEvent',{name:this.stuName});\n        }\n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-08-全局事件总线.md","raw":"---\ntitle: Vue2.0进阶 - 08. 全局事件总线\nauthor: OdinSam\ntags:\n  - eventbus\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: 10d9\ndate: 2022-10-19 15:46:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n#### vue全局事件总线\n1. 一种组件间通信的方式，适用于任意组件通信\n2. 在main.js中通过 beforeCreate(){ Vue.prototype.$bus = this; } 安装全局事件总线\n3. 主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.\n4. 通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.\n\n```js main.js\nimport Vue from 'vue';\nimport App from './App.vue';\n\nVue.config.productionTip = false;\n/**\n    全局事件总线:\n    1. 一种组件间通信的方式，适用于任意组件通信\n    2. 在main.js中通过 beforeCreate(){ Vue.prototype.$bus = this; } 安装全局事件总线\n    3. 主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.\n    4. 通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.\n */\nnew Vue({\n    render: (h) => h(App),\n    beforeCreate() {\n        Vue.prototype.$bus = this;\n    }\n}).$mount('#app');\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        \n    -->\n    <h2>app组件</h2><br/>\n    <span>学生的姓名是:{{stuName}}</span><br/>\n    <Student ref=\"stu\"></Student>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stuName:'',\n        }\n    },\n    components: {\n        Student\n    },\n    mounted() {\n        //给student添加自定义事件\n        this.$bus.$on('customEvent', (param) => {\n            this.stuName = param.name;\n        });\n    },\n    beforeDestroy() {\n        this.$bus.off('customEvent');\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span>姓名：{{stuName}}</span>\n        <button @click=\"busEventClick\">通过全局事件总线触发事件传递数据</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stuName:'odinsam-eventBus'\n        }\n    },\n    methods: {\n        busEventClick() {\n            console.log('function busEventClick');\n            this.$bus.$emit('customEvent',{name:this.stuName});\n        }\n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-08-全局事件总线","published":1,"updated":"2023-03-10T07:47:51.418Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza34003p5cs948e5duat","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"vue全局事件总线\"><a class=\"markdownIt-Anchor\" href=\"#vue全局事件总线\"></a> vue全局事件总线</h4>\n<ol>\n<li>一种组件间通信的方式，适用于任意组件通信</li>\n<li>在main.js中通过 beforeCreate(){ Vue.prototype.$bus = this; } 安装全局事件总线</li>\n<li>主要利用的原理是 VueComponent.prototype.<strong>proto</strong> === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.</li>\n<li>通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    全局事件总线:</span></span><br><span class=\"line\"><span class=\"comment\">    1. 一种组件间通信的方式，适用于任意组件通信</span></span><br><span class=\"line\"><span class=\"comment\">    2. 在main.js中通过 beforeCreate()&#123; Vue.prototype.$bus = this; &#125; 安装全局事件总线</span></span><br><span class=\"line\"><span class=\"comment\">    3. 主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.</span></span><br><span class=\"line\"><span class=\"comment\">    4. 通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App),</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">beforeCreate</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        Vue.prototype.$bus = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学生的姓名是:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stu&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//给student添加自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">this</span>.$bus.$on(<span class=\"string\">&#x27;customEvent&#x27;</span>, <span class=\"function\">(<span class=\"params\">param</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.name;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">beforeDestroy</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">this</span>.$bus.off(<span class=\"string\">&#x27;customEvent&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;busEventClick&quot;</span>&gt;</span>通过全局事件总线触发事件传递数据<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam-eventBus&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">busEventClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function busEventClick&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$bus.$emit(<span class=\"string\">&#x27;customEvent&#x27;</span>,&#123;<span class=\"attr\">name</span>:<span class=\"built_in\">this</span>.stuName&#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"vue全局事件总线\"><a class=\"markdownIt-Anchor\" href=\"#vue全局事件总线\"></a> vue全局事件总线</h4>\n<ol>\n<li>一种组件间通信的方式，适用于任意组件通信</li>\n<li>在main.js中通过 beforeCreate(){ Vue.prototype.$bus = this; } 安装全局事件总线</li>\n<li>主要利用的原理是 VueComponent.prototype.<strong>proto</strong> === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.</li>\n<li>通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    全局事件总线:</span></span><br><span class=\"line\"><span class=\"comment\">    1. 一种组件间通信的方式，适用于任意组件通信</span></span><br><span class=\"line\"><span class=\"comment\">    2. 在main.js中通过 beforeCreate()&#123; Vue.prototype.$bus = this; &#125; 安装全局事件总线</span></span><br><span class=\"line\"><span class=\"comment\">    3. 主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.</span></span><br><span class=\"line\"><span class=\"comment\">    4. 通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App),</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">beforeCreate</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        Vue.prototype.$bus = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学生的姓名是:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stu&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//给student添加自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">this</span>.$bus.$on(<span class=\"string\">&#x27;customEvent&#x27;</span>, <span class=\"function\">(<span class=\"params\">param</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.name;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">beforeDestroy</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">this</span>.$bus.off(<span class=\"string\">&#x27;customEvent&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;busEventClick&quot;</span>&gt;</span>通过全局事件总线触发事件传递数据<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam-eventBus&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">busEventClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function busEventClick&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$bus.$emit(<span class=\"string\">&#x27;customEvent&#x27;</span>,&#123;<span class=\"attr\">name</span>:<span class=\"built_in\">this</span>.stuName&#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 09. 消息订阅与发布","author":"OdinSam","abbrlink":"ac9b","date":"2022-10-19T07:48:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### 消息订阅与发布\n1. yarn add pubsub-js 安装消息订阅与发布框架\n2. 订阅消息 mounted时 this.pubId = pubsub.subscribe(‘消息名称’, (消息名称, 消息传递数据) => {}); 消息传递数据可以是字符串、数据、数据或对象\n3. 取消订阅消息 beforeDestroy时 pubsub.unsubscribe(this.pubId)\n4. 组件发布消息 pubsub.publish(‘消息名称’,消息传递数据})\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        消息订阅与发布\n        1. yarn add pubsub-js 安装消息订阅与发布框架\n        2. 订阅消息 mounted时 this.pubId = pubsub.subscribe('消息名称', (消息名称, 消息传递数据) => {}); 消息传递数据可以是字符串、数据、数据或对象\n        3. 取消订阅消息  beforeDestroy时 pubsub.unsubscribe(this.pubId)\n        4. 组件发布消息 pubsub.publish('消息名称',消息传递数据})\n    -->\n    <h2>app组件</h2><br/>\n    <span>学生的姓名是:{{stuName}}</span> <br/>\n    <Student ref=\"stu\"></Student>\n  </div>\n</template>\n\n<script>\nimport pubsub from 'pubsub-js';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stuName:''\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        \n    },\n    mounted() {\n        this.pubId = pubsub.subscribe('subMessage', (messasgeName, param) => {\n            console.log('messasgeName',messasgeName);\n            this.stuName = param.stuName\n        });\n    },\n    beforeDestroy() {\n        pubsub.unsubscribe(this.pubId)\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span>姓名：{{stuName}}</span><br/>\n        <button @click=\"publishMessageClick\">发布消息传递数据</button>\n    </div>\n</template>\n\n<script>\nimport pubsub from 'pubsub-js';\nexport default {\n    data() {\n        return {\n            stuName:'odinsam'\n        }\n    },\n    methods: {\n        publishMessageClick() {\n            pubsub.publish('subMessage',{stuName:this.stuName})\n        }\n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-09-消息订阅与发布.md","raw":"title: Vue2.0进阶 - 09. 消息订阅与发布\nauthor: OdinSam\ntags:\n  - vue2\n  - 消息订阅\n  - subscribe\n  - unsubscribe\ncategories:\n  - 前端\n  - vue2\nabbrlink: ac9b\ndate: 2022-10-19 15:48:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### 消息订阅与发布\n1. yarn add pubsub-js 安装消息订阅与发布框架\n2. 订阅消息 mounted时 this.pubId = pubsub.subscribe(‘消息名称’, (消息名称, 消息传递数据) => {}); 消息传递数据可以是字符串、数据、数据或对象\n3. 取消订阅消息 beforeDestroy时 pubsub.unsubscribe(this.pubId)\n4. 组件发布消息 pubsub.publish(‘消息名称’,消息传递数据})\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        消息订阅与发布\n        1. yarn add pubsub-js 安装消息订阅与发布框架\n        2. 订阅消息 mounted时 this.pubId = pubsub.subscribe('消息名称', (消息名称, 消息传递数据) => {}); 消息传递数据可以是字符串、数据、数据或对象\n        3. 取消订阅消息  beforeDestroy时 pubsub.unsubscribe(this.pubId)\n        4. 组件发布消息 pubsub.publish('消息名称',消息传递数据})\n    -->\n    <h2>app组件</h2><br/>\n    <span>学生的姓名是:{{stuName}}</span> <br/>\n    <Student ref=\"stu\"></Student>\n  </div>\n</template>\n\n<script>\nimport pubsub from 'pubsub-js';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stuName:''\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        \n    },\n    mounted() {\n        this.pubId = pubsub.subscribe('subMessage', (messasgeName, param) => {\n            console.log('messasgeName',messasgeName);\n            this.stuName = param.stuName\n        });\n    },\n    beforeDestroy() {\n        pubsub.unsubscribe(this.pubId)\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <span>姓名：{{stuName}}</span><br/>\n        <button @click=\"publishMessageClick\">发布消息传递数据</button>\n    </div>\n</template>\n\n<script>\nimport pubsub from 'pubsub-js';\nexport default {\n    data() {\n        return {\n            stuName:'odinsam'\n        }\n    },\n    methods: {\n        publishMessageClick() {\n            pubsub.publish('subMessage',{stuName:this.stuName})\n        }\n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-09-消息订阅与发布","published":1,"updated":"2023-03-10T07:49:56.630Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza35003s5cs96plc7963","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"消息订阅与发布\"><a class=\"markdownIt-Anchor\" href=\"#消息订阅与发布\"></a> 消息订阅与发布</h4>\n<ol>\n<li>yarn add pubsub-js 安装消息订阅与发布框架</li>\n<li>订阅消息 mounted时 this.pubId = pubsub.subscribe(‘消息名称’, (消息名称, 消息传递数据) =&gt; {}); 消息传递数据可以是字符串、数据、数据或对象</li>\n<li>取消订阅消息 beforeDestroy时 pubsub.unsubscribe(this.pubId)</li>\n<li>组件发布消息 pubsub.publish(‘消息名称’,消息传递数据})</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        消息订阅与发布</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. yarn add pubsub-js 安装消息订阅与发布框架</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 订阅消息 mounted时 this.pubId = pubsub.subscribe(&#x27;消息名称&#x27;, (消息名称, 消息传递数据) =&gt; &#123;&#125;); 消息传递数据可以是字符串、数据、数据或对象</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 取消订阅消息  beforeDestroy时 pubsub.unsubscribe(this.pubId)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 组件发布消息 pubsub.publish(&#x27;消息名称&#x27;,消息传递数据&#125;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学生的姓名是:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stu&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> pubsub <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pubsub-js&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">this</span>.pubId = pubsub.subscribe(<span class=\"string\">&#x27;subMessage&#x27;</span>, <span class=\"function\">(<span class=\"params\">messasgeName, param</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;messasgeName&#x27;</span>,messasgeName);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.stuName</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">beforeDestroy</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        pubsub.unsubscribe(<span class=\"built_in\">this</span>.pubId)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;publishMessageClick&quot;</span>&gt;</span>发布消息传递数据<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> pubsub <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pubsub-js&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">publishMessageClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            pubsub.publish(<span class=\"string\">&#x27;subMessage&#x27;</span>,&#123;<span class=\"attr\">stuName</span>:<span class=\"built_in\">this</span>.stuName&#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"消息订阅与发布\"><a class=\"markdownIt-Anchor\" href=\"#消息订阅与发布\"></a> 消息订阅与发布</h4>\n<ol>\n<li>yarn add pubsub-js 安装消息订阅与发布框架</li>\n<li>订阅消息 mounted时 this.pubId = pubsub.subscribe(‘消息名称’, (消息名称, 消息传递数据) =&gt; {}); 消息传递数据可以是字符串、数据、数据或对象</li>\n<li>取消订阅消息 beforeDestroy时 pubsub.unsubscribe(this.pubId)</li>\n<li>组件发布消息 pubsub.publish(‘消息名称’,消息传递数据})</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        消息订阅与发布</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. yarn add pubsub-js 安装消息订阅与发布框架</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 订阅消息 mounted时 this.pubId = pubsub.subscribe(&#x27;消息名称&#x27;, (消息名称, 消息传递数据) =&gt; &#123;&#125;); 消息传递数据可以是字符串、数据、数据或对象</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 取消订阅消息  beforeDestroy时 pubsub.unsubscribe(this.pubId)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 组件发布消息 pubsub.publish(&#x27;消息名称&#x27;,消息传递数据&#125;)</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学生的姓名是:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;stu&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> pubsub <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pubsub-js&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">this</span>.pubId = pubsub.subscribe(<span class=\"string\">&#x27;subMessage&#x27;</span>, <span class=\"function\">(<span class=\"params\">messasgeName, param</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;messasgeName&#x27;</span>,messasgeName);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.stuName</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">beforeDestroy</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        pubsub.unsubscribe(<span class=\"built_in\">this</span>.pubId)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;publishMessageClick&quot;</span>&gt;</span>发布消息传递数据<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> pubsub <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pubsub-js&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;odinsam&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">publishMessageClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            pubsub.publish(<span class=\"string\">&#x27;subMessage&#x27;</span>,&#123;<span class=\"attr\">stuName</span>:<span class=\"built_in\">this</span>.stuName&#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 10. nextTick与props传递函数","author":"OdinSam","abbrlink":"fc6a","date":"2022-10-19T07:50:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### nextTick与props传递函数\n1. this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数\n2. 使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作\n3. 父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的\n\n```js student.vue\n<template>\n    <!--\n        nextTick与props传递函数\n        1. this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数\n        2. 使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作\n        3. 父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的\n    -->\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n\n        <span v-if=\"!isEdit\">姓名：{{stuName}}</span>\n        <span v-else><input ref=\"txtStuName\" type=\"text\" v-model=\"stuName\"></span>\n        <br/>\n        <button @click=\"editOrOkClick\">{{btnText[isEdit]}}</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            isEdit:false,\n            stuName: 'odinsam',\n            btnText:{true:'确定',false:'编辑'}\n        }\n    },\n    //app组件传递的回调函数\n    props:['getStuName'],\n    methods: {\n        editOrOkClick() {\n            if (this.isEdit)\n            {\n                //子组件调用父组件通过props传递的回调函数向父组件传递数据\n                this.getStuName({stuName:this.stuName});\n            }\n            this.isEdit = !this.isEdit;\n            // 在本次操作执行完成dom修改后，执行回调函数，使新出现的文本框获得焦点\n            this.$nextTick(function () {\n                if (this.isEdit) {\n                    this.$refs.txtStuName.focus();\n                }\n            })\n            \n        }\n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <h2>app组件</h2>\n    <br/>\n    <span>学生的姓名是:{{stuName}}</span>\n    <Student :getStuName=\"getStuName\"></Student>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stuName:''\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        getStuName(param) {\n            console.log(param);\n            this.stuName = param.stuName;\n        }\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-10-nextTick与props传递函数.md","raw":"title: Vue2.0进阶 - 10. nextTick与props传递函数\nauthor: OdinSam\ntags:\n  - nexttick\n  - props\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: fc6a\ndate: 2022-10-19 15:50:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### nextTick与props传递函数\n1. this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数\n2. 使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作\n3. 父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的\n\n```js student.vue\n<template>\n    <!--\n        nextTick与props传递函数\n        1. this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数\n        2. 使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作\n        3. 父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的\n    -->\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n\n        <span v-if=\"!isEdit\">姓名：{{stuName}}</span>\n        <span v-else><input ref=\"txtStuName\" type=\"text\" v-model=\"stuName\"></span>\n        <br/>\n        <button @click=\"editOrOkClick\">{{btnText[isEdit]}}</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            isEdit:false,\n            stuName: 'odinsam',\n            btnText:{true:'确定',false:'编辑'}\n        }\n    },\n    //app组件传递的回调函数\n    props:['getStuName'],\n    methods: {\n        editOrOkClick() {\n            if (this.isEdit)\n            {\n                //子组件调用父组件通过props传递的回调函数向父组件传递数据\n                this.getStuName({stuName:this.stuName});\n            }\n            this.isEdit = !this.isEdit;\n            // 在本次操作执行完成dom修改后，执行回调函数，使新出现的文本框获得焦点\n            this.$nextTick(function () {\n                if (this.isEdit) {\n                    this.$refs.txtStuName.focus();\n                }\n            })\n            \n        }\n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <h2>app组件</h2>\n    <br/>\n    <span>学生的姓名是:{{stuName}}</span>\n    <Student :getStuName=\"getStuName\"></Student>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stuName:''\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        getStuName(param) {\n            console.log(param);\n            this.stuName = param.stuName;\n        }\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-10-nextTick与props传递函数","published":1,"updated":"2023-03-10T07:52:11.645Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza35003w5cs975o3dseq","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"nexttick与props传递函数\"><a class=\"markdownIt-Anchor\" href=\"#nexttick与props传递函数\"></a> nextTick与props传递函数</h4>\n<ol>\n<li>this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</li>\n<li>使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</li>\n<li>父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">        nextTick与props传递函数</span><br><span class=\"line\">        <span class=\"number\">1.</span> <span class=\"built_in\">this</span>.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</span><br><span class=\"line\">        <span class=\"number\">2.</span> 使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</span><br><span class=\"line\">        <span class=\"number\">3.</span> 父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEdit&quot;</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-else</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;txtStuName&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;stuName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;editOrOkClick&quot;</span>&gt;</span>&#123;&#123;btnText[isEdit]&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">isEdit</span>:<span class=\"literal\">false</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">btnText</span>:&#123;<span class=\"attr\">true</span>:<span class=\"string\">&#x27;确定&#x27;</span>,<span class=\"attr\">false</span>:<span class=\"string\">&#x27;编辑&#x27;</span>&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//app组件传递的回调函数</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>:[<span class=\"string\">&#x27;getStuName&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">editOrOkClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isEdit)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"comment\">//子组件调用父组件通过props传递的回调函数向父组件传递数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"built_in\">this</span>.getStuName(&#123;<span class=\"attr\">stuName</span>:<span class=\"built_in\">this</span>.stuName&#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.isEdit = !<span class=\"built_in\">this</span>.isEdit;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">// 在本次操作执行完成dom修改后，执行回调函数，使新出现的文本框获得焦点</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$nextTick(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isEdit) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"built_in\">this</span>.$refs.txtStuName.focus();</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学生的姓名是:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">:getStuName</span>=<span class=\"string\">&quot;getStuName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">getStuName</span>(<span class=\"params\">param</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(param);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.stuName;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"nexttick与props传递函数\"><a class=\"markdownIt-Anchor\" href=\"#nexttick与props传递函数\"></a> nextTick与props传递函数</h4>\n<ol>\n<li>this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</li>\n<li>使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</li>\n<li>父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">        nextTick与props传递函数</span><br><span class=\"line\">        <span class=\"number\">1.</span> <span class=\"built_in\">this</span>.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</span><br><span class=\"line\">        <span class=\"number\">2.</span> 使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</span><br><span class=\"line\">        <span class=\"number\">3.</span> 父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!isEdit&quot;</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-else</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;txtStuName&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;stuName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;editOrOkClick&quot;</span>&gt;</span>&#123;&#123;btnText[isEdit]&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">isEdit</span>:<span class=\"literal\">false</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">btnText</span>:&#123;<span class=\"attr\">true</span>:<span class=\"string\">&#x27;确定&#x27;</span>,<span class=\"attr\">false</span>:<span class=\"string\">&#x27;编辑&#x27;</span>&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//app组件传递的回调函数</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>:[<span class=\"string\">&#x27;getStuName&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">editOrOkClick</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isEdit)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"comment\">//子组件调用父组件通过props传递的回调函数向父组件传递数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"built_in\">this</span>.getStuName(&#123;<span class=\"attr\">stuName</span>:<span class=\"built_in\">this</span>.stuName&#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.isEdit = !<span class=\"built_in\">this</span>.isEdit;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">// 在本次操作执行完成dom修改后，执行回调函数，使新出现的文本框获得焦点</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$nextTick(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isEdit) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"built_in\">this</span>.$refs.txtStuName.focus();</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>学生的姓名是:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">:getStuName</span>=<span class=\"string\">&quot;getStuName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stuName</span>:<span class=\"string\">&#x27;&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">getStuName</span>(<span class=\"params\">param</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(param);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.stuName = param.stuName;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 12. 配置代理","author":"OdinSam","abbrlink":"551e","date":"2022-10-20T07:55:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### 配置代理\n1. yarn add axios 安装axios库\n2. 在vue.config.js中添加代理配置 devServer:{ 配置内容 }\n3. 简单配置 proxy: ‘http://localhost:8899’\n4. 复杂配置,可配置多个代理\n\n```js \nproxy: {\n\t'/odinapi': {\n    \t\ttarget: 'http://localhost:8899', //目标请求服务器\n        \tpathRewrite: { '^/odinapi': '' }, //路径重写匹配服务器路径\n        \tws: true, //是否支持websocket\n        \tchangeOrigin: true //用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080\n        }\n    }\n```\n5. 在需要请求的地方发起axios请求获取数据\n\n```js vue.config.js\nconst { defineConfig } = require('@vue/cli-service');\nmodule.exports = defineConfig({\n    transpileDependencies: true,\n    //关闭语法检查\n    lintOnSave: false,\n    //简单配置代理服务器 不能添加多个代理服务器\n    // devServer: {\n    //     proxy: 'http://localhost:5000'\n    // }\n    devServer: {\n        proxy: {\n            '/odinapi': {\n                target: 'http://localhost:8899', //目标请求服务器\n                pathRewrite: { '^/odinapi': '' }, //路径重写匹配服务器路径\n                ws: true, //是否支持websocket\n                changeOrigin: true //用户控制请求头中的host\n            }\n        }\n    }\n});\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        vue配置代理\n        1. yarn add axios 安装axios库\n        2. 在vue.config.js中添加代理配置 devServer:{ 配置内容 }\n        3. 简单配置 proxy: 'http://localhost:8899'\n        4. 复杂配置,可配置多个代理\n            proxy: {\n                '/odinapi': {\n                    target: 'http://localhost:8899', //目标请求服务器\n                    pathRewrite: { '^/odinapi': '' }, //路径重写匹配服务器路径\n                    ws: true, //是否支持websocket\n                    changeOrigin: true //用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080\n                }\n            }\n        5. 在需要请求的地方发起axios请求获取数据\n    -->\n    <h2>app组件</h2><br/>\n    <button @click=\"getStus\">获取学生信息</button><br/>\n    <ul>\n        <li v-for=\"stu in stus\" :key=\"stu.id\">\n            <Student stuName=\"stu.stuName\"></Student>\n        </li>\n    </ul>\n    \n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nimport axios from 'axios';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stus:[]\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        getStus() {\n            axios.get('http://localhost:8080/odinapi/student').then(\n                response => {\n                    console.log('success', response.data);\n                    this.stus = response.data;\n                },\n                error => {\n                    console.log('error',error.message);\n                    \n                }\n            )\n        }\n    },\n    mounted() {\n        \n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-12-配置代理.md","raw":"title: Vue2.0进阶 - 12. 配置代理\nauthor: OdinSam\ntags:\n  - proxy\n  - axios\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: 551e\ndate: 2022-10-20 15:55:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### 配置代理\n1. yarn add axios 安装axios库\n2. 在vue.config.js中添加代理配置 devServer:{ 配置内容 }\n3. 简单配置 proxy: ‘http://localhost:8899’\n4. 复杂配置,可配置多个代理\n\n```js \nproxy: {\n\t'/odinapi': {\n    \t\ttarget: 'http://localhost:8899', //目标请求服务器\n        \tpathRewrite: { '^/odinapi': '' }, //路径重写匹配服务器路径\n        \tws: true, //是否支持websocket\n        \tchangeOrigin: true //用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080\n        }\n    }\n```\n5. 在需要请求的地方发起axios请求获取数据\n\n```js vue.config.js\nconst { defineConfig } = require('@vue/cli-service');\nmodule.exports = defineConfig({\n    transpileDependencies: true,\n    //关闭语法检查\n    lintOnSave: false,\n    //简单配置代理服务器 不能添加多个代理服务器\n    // devServer: {\n    //     proxy: 'http://localhost:5000'\n    // }\n    devServer: {\n        proxy: {\n            '/odinapi': {\n                target: 'http://localhost:8899', //目标请求服务器\n                pathRewrite: { '^/odinapi': '' }, //路径重写匹配服务器路径\n                ws: true, //是否支持websocket\n                changeOrigin: true //用户控制请求头中的host\n            }\n        }\n    }\n});\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        vue配置代理\n        1. yarn add axios 安装axios库\n        2. 在vue.config.js中添加代理配置 devServer:{ 配置内容 }\n        3. 简单配置 proxy: 'http://localhost:8899'\n        4. 复杂配置,可配置多个代理\n            proxy: {\n                '/odinapi': {\n                    target: 'http://localhost:8899', //目标请求服务器\n                    pathRewrite: { '^/odinapi': '' }, //路径重写匹配服务器路径\n                    ws: true, //是否支持websocket\n                    changeOrigin: true //用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080\n                }\n            }\n        5. 在需要请求的地方发起axios请求获取数据\n    -->\n    <h2>app组件</h2><br/>\n    <button @click=\"getStus\">获取学生信息</button><br/>\n    <ul>\n        <li v-for=\"stu in stus\" :key=\"stu.id\">\n            <Student stuName=\"stu.stuName\"></Student>\n        </li>\n    </ul>\n    \n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nimport axios from 'axios';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            stus:[]\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        getStus() {\n            axios.get('http://localhost:8080/odinapi/student').then(\n                response => {\n                    console.log('success', response.data);\n                    this.stus = response.data;\n                },\n                error => {\n                    console.log('error',error.message);\n                    \n                }\n            )\n        }\n    },\n    mounted() {\n        \n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-12-配置代理","published":1,"updated":"2023-03-10T07:56:59.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza36003z5cs9050j0yq6","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"配置代理\"><a class=\"markdownIt-Anchor\" href=\"#配置代理\"></a> 配置代理</h4>\n<ol>\n<li>yarn add axios 安装axios库</li>\n<li>在vue.config.js中添加代理配置 devServer:{ 配置内容 }</li>\n<li>简单配置 proxy: ‘<a href=\"http://localhost:8899\">http://localhost:8899</a>’</li>\n<li>复杂配置,可配置多个代理</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy: &#123;</span><br><span class=\"line\">\t<span class=\"string\">&#x27;/odinapi&#x27;</span>: &#123;</span><br><span class=\"line\">    \t\t<span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://localhost:8899&#x27;</span>, <span class=\"comment\">//目标请求服务器</span></span><br><span class=\"line\">        \t<span class=\"attr\">pathRewrite</span>: &#123; <span class=\"string\">&#x27;^/odinapi&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;, <span class=\"comment\">//路径重写匹配服务器路径</span></span><br><span class=\"line\">        \t<span class=\"attr\">ws</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//是否支持websocket</span></span><br><span class=\"line\">        \t<span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span> <span class=\"comment\">//用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>在需要请求的地方发起axios请求获取数据</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>vue.config.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; defineConfig &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@vue/cli-service&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = defineConfig(&#123;</span><br><span class=\"line\">    <span class=\"attr\">transpileDependencies</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">//关闭语法检查</span></span><br><span class=\"line\">    <span class=\"attr\">lintOnSave</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"comment\">//简单配置代理服务器 不能添加多个代理服务器</span></span><br><span class=\"line\">    <span class=\"comment\">// devServer: &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     proxy: &#x27;http://localhost:5000&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">    <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;/odinapi&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://localhost:8899&#x27;</span>, <span class=\"comment\">//目标请求服务器</span></span><br><span class=\"line\">                <span class=\"attr\">pathRewrite</span>: &#123; <span class=\"string\">&#x27;^/odinapi&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;, <span class=\"comment\">//路径重写匹配服务器路径</span></span><br><span class=\"line\">                <span class=\"attr\">ws</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//是否支持websocket</span></span><br><span class=\"line\">                <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span> <span class=\"comment\">//用户控制请求头中的host</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        vue配置代理</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. yarn add axios 安装axios库</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 在vue.config.js中添加代理配置 devServer:&#123; 配置内容 &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 简单配置 proxy: &#x27;http://localhost:8899&#x27;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 复杂配置,可配置多个代理</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            proxy: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#x27;/odinapi&#x27;: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    target: &#x27;http://localhost:8899&#x27;, //目标请求服务器</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    pathRewrite: &#123; &#x27;^/odinapi&#x27;: &#x27;&#x27; &#125;, //路径重写匹配服务器路径</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    ws: true, //是否支持websocket</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    changeOrigin: true //用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        5. 在需要请求的地方发起axios请求获取数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getStus&quot;</span>&gt;</span>获取学生信息<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;stu in stus&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;stu.id&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">stuName</span>=<span class=\"string\">&quot;stu.stuName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    </span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stus</span>:[]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">getStus</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            axios.get(<span class=\"string\">&#x27;http://localhost:8080/odinapi/student&#x27;</span>).then(</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;success&#x27;</span>, response.data);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"built_in\">this</span>.stus = response.data;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;error&#x27;</span>,error.message);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            )</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"配置代理\"><a class=\"markdownIt-Anchor\" href=\"#配置代理\"></a> 配置代理</h4>\n<ol>\n<li>yarn add axios 安装axios库</li>\n<li>在vue.config.js中添加代理配置 devServer:{ 配置内容 }</li>\n<li>简单配置 proxy: ‘<a href=\"http://localhost:8899\">http://localhost:8899</a>’</li>\n<li>复杂配置,可配置多个代理</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy: &#123;</span><br><span class=\"line\">\t<span class=\"string\">&#x27;/odinapi&#x27;</span>: &#123;</span><br><span class=\"line\">    \t\t<span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://localhost:8899&#x27;</span>, <span class=\"comment\">//目标请求服务器</span></span><br><span class=\"line\">        \t<span class=\"attr\">pathRewrite</span>: &#123; <span class=\"string\">&#x27;^/odinapi&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;, <span class=\"comment\">//路径重写匹配服务器路径</span></span><br><span class=\"line\">        \t<span class=\"attr\">ws</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//是否支持websocket</span></span><br><span class=\"line\">        \t<span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span> <span class=\"comment\">//用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>在需要请求的地方发起axios请求获取数据</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>vue.config.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; defineConfig &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;@vue/cli-service&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = defineConfig(&#123;</span><br><span class=\"line\">    <span class=\"attr\">transpileDependencies</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">//关闭语法检查</span></span><br><span class=\"line\">    <span class=\"attr\">lintOnSave</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"comment\">//简单配置代理服务器 不能添加多个代理服务器</span></span><br><span class=\"line\">    <span class=\"comment\">// devServer: &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     proxy: &#x27;http://localhost:5000&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">    <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;/odinapi&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://localhost:8899&#x27;</span>, <span class=\"comment\">//目标请求服务器</span></span><br><span class=\"line\">                <span class=\"attr\">pathRewrite</span>: &#123; <span class=\"string\">&#x27;^/odinapi&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;, <span class=\"comment\">//路径重写匹配服务器路径</span></span><br><span class=\"line\">                <span class=\"attr\">ws</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//是否支持websocket</span></span><br><span class=\"line\">                <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span> <span class=\"comment\">//用户控制请求头中的host</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        vue配置代理</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. yarn add axios 安装axios库</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 在vue.config.js中添加代理配置 devServer:&#123; 配置内容 &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 简单配置 proxy: &#x27;http://localhost:8899&#x27;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 复杂配置,可配置多个代理</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            proxy: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#x27;/odinapi&#x27;: &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    target: &#x27;http://localhost:8899&#x27;, //目标请求服务器</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    pathRewrite: &#123; &#x27;^/odinapi&#x27;: &#x27;&#x27; &#125;, //路径重写匹配服务器路径</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    ws: true, //是否支持websocket</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    changeOrigin: true //用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        5. 在需要请求的地方发起axios请求获取数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getStus&quot;</span>&gt;</span>获取学生信息<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;stu in stus&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;stu.id&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">stuName</span>=<span class=\"string\">&quot;stu.stuName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    </span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stus</span>:[]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">getStus</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            axios.get(<span class=\"string\">&#x27;http://localhost:8080/odinapi/student&#x27;</span>).then(</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;success&#x27;</span>, response.data);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"built_in\">this</span>.stus = response.data;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;error&#x27;</span>,error.message);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            )</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 11. 动画效果","author":"OdinSam","abbrlink":"f2de","date":"2022-10-19T07:52:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### 动画效果\n1. 普通实现方式: 使用 @keyframes amName{ from{transform: translateX(-100%);}to{transform: translateX(0);}} 创建关键帧并定义动画\n2. 定义vue的进入动画 .name-enter-active{animation: odinAnimate 1s linear;}\n3. 定义vue的离开动画 .name-leave-active{animation: odinAnimate 1s linear reverse;}\n4. 使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画\n\n#### 过度动画\n1. 定义过度动画 .name-enter,.name-leave-to{transform: translateX(-100%);} 和 .name-leave .name-enter-to{transform: translateX(0);}\n2. 定义过滤效果 .name-enter-active,.name-leave-active{transition: 3s linear;}\n3. 多个元素需要相同的动画效果需要使用 transition-group\n\n#### 第三方动画库 详见 https://animate.style/\n1. yarn add animate.css\n2. 引入 animate.css import ‘animate.css’\n3. 给需要动画的组件 添加 name=‘animate__animated animate__bounce’\n4. 添加 enter-active-class=‘动画名称’ leave-active-class=‘动画名称\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        动画效果\n        1. 普通实现方式: 使用 @keyframes amName{ from{transform: translateX(-100%);}to{transform: translateX(0);}} 创建关键帧并定义动画\n        2. 定义vue的进入动画  .name-enter-active{animation: odinAnimate 1s linear;}\n        3. 定义vue的离开动画  .name-leave-active{animation: odinAnimate 1s linear reverse;}\n        4. 使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画\n\n        过度动画\n        1. 定义过度动画 .name-enter,.name-leave-to{transform: translateX(-100%);} 和 .name-leave .name-enter-to{transform: translateX(0);}\n        2. 定义过滤效果 .name-enter-active,.name-leave-active{transition: 3s linear;}\n        3. 多个元素需要相同的动画效果需要使用 transition-group\n\n        第三方动画库 详见 https://animate.style/\n        1. yarn add animate.css\n        2. 引入 animate.css   import 'animate.css'\n        3. 给需要动画的组件 添加 name='animate__animated animate__bounce'\n        4. 添加 enter-active-class='动画名称'  leave-active-class='动画名称'\n    -->\n    <h2>app组件</h2>\n    <button @click=\"showComponent\">显示、隐藏组件</button>\n    <!--动画效果-->\n    <div>\n        <transition name=\"odinam1\" appear>\n            <Student v-show=\"isShow\"></Student>\n        </transition>\n    </div>\n    <!--过度动画-->\n    <div>\n        <transition name=\"odinam2\" appear>\n            <Student v-show=\"isShow\"></Student>\n        </transition>\n    </div>\n    <!--组过度动画--> \n    <div>\n        <transition-group name=\"odinam2\" appear >\n            <Student v-show=\"isShow\" key=\"1\"></Student>\n            <Student v-show=\"!isShow\" key=\"2\"></Student>\n        </transition-group>\n    </div>\n    <!--第三方动画库--> \n    <div>\n        <transition-group name='animate__animated animate__bounce' appear enter-active-class='animate__shakeY'  leave-active-class='animate__bounceOutRight'>\n            <Student v-show=\"isShow\" key=\"1\"></Student>\n            <Student v-show=\"!isShow\" key=\"2\"></Student>\n        </transition-group>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nimport 'animate.css'\nexport default {\n    name: 'App',\n    data() {\n        return {\n            isShow:true\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        showComponent() {\n            this.isShow = !this.isShow;\n        }\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n  \n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n\n.odinam2-enter-active,.odinam2-leave-active\n{\n    transition: 1s linear;\n}\n.odinam2-enter,.odinam2-leave-to\n{\n    transform: translateX(-100%);\n}\n.odinam2-enter-to,.odinam2-leave\n{\n    transform: translateX(0);\n}\n\n.odinam1-enter-active{\n    animation: odinAnimate 1s linear;\n}\n.odinam1-leave-active{\n    animation: odinAnimate 1s linear reverse;\n}\n@keyframes odinAnimate {\n    from{\n        transform: translateX(-100%);\n    }\n    to{\n        transform: translateX(0);\n    }\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-11-动画效果.md","raw":"title: Vue2.0进阶 - 11. 动画效果\nauthor: OdinSam\ntags:\n  - vue2\n  - animate\ncategories:\n  - 前端\n  - vue2\nabbrlink: f2de\ndate: 2022-10-19 15:52:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### 动画效果\n1. 普通实现方式: 使用 @keyframes amName{ from{transform: translateX(-100%);}to{transform: translateX(0);}} 创建关键帧并定义动画\n2. 定义vue的进入动画 .name-enter-active{animation: odinAnimate 1s linear;}\n3. 定义vue的离开动画 .name-leave-active{animation: odinAnimate 1s linear reverse;}\n4. 使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画\n\n#### 过度动画\n1. 定义过度动画 .name-enter,.name-leave-to{transform: translateX(-100%);} 和 .name-leave .name-enter-to{transform: translateX(0);}\n2. 定义过滤效果 .name-enter-active,.name-leave-active{transition: 3s linear;}\n3. 多个元素需要相同的动画效果需要使用 transition-group\n\n#### 第三方动画库 详见 https://animate.style/\n1. yarn add animate.css\n2. 引入 animate.css import ‘animate.css’\n3. 给需要动画的组件 添加 name=‘animate__animated animate__bounce’\n4. 添加 enter-active-class=‘动画名称’ leave-active-class=‘动画名称\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        动画效果\n        1. 普通实现方式: 使用 @keyframes amName{ from{transform: translateX(-100%);}to{transform: translateX(0);}} 创建关键帧并定义动画\n        2. 定义vue的进入动画  .name-enter-active{animation: odinAnimate 1s linear;}\n        3. 定义vue的离开动画  .name-leave-active{animation: odinAnimate 1s linear reverse;}\n        4. 使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画\n\n        过度动画\n        1. 定义过度动画 .name-enter,.name-leave-to{transform: translateX(-100%);} 和 .name-leave .name-enter-to{transform: translateX(0);}\n        2. 定义过滤效果 .name-enter-active,.name-leave-active{transition: 3s linear;}\n        3. 多个元素需要相同的动画效果需要使用 transition-group\n\n        第三方动画库 详见 https://animate.style/\n        1. yarn add animate.css\n        2. 引入 animate.css   import 'animate.css'\n        3. 给需要动画的组件 添加 name='animate__animated animate__bounce'\n        4. 添加 enter-active-class='动画名称'  leave-active-class='动画名称'\n    -->\n    <h2>app组件</h2>\n    <button @click=\"showComponent\">显示、隐藏组件</button>\n    <!--动画效果-->\n    <div>\n        <transition name=\"odinam1\" appear>\n            <Student v-show=\"isShow\"></Student>\n        </transition>\n    </div>\n    <!--过度动画-->\n    <div>\n        <transition name=\"odinam2\" appear>\n            <Student v-show=\"isShow\"></Student>\n        </transition>\n    </div>\n    <!--组过度动画--> \n    <div>\n        <transition-group name=\"odinam2\" appear >\n            <Student v-show=\"isShow\" key=\"1\"></Student>\n            <Student v-show=\"!isShow\" key=\"2\"></Student>\n        </transition-group>\n    </div>\n    <!--第三方动画库--> \n    <div>\n        <transition-group name='animate__animated animate__bounce' appear enter-active-class='animate__shakeY'  leave-active-class='animate__bounceOutRight'>\n            <Student v-show=\"isShow\" key=\"1\"></Student>\n            <Student v-show=\"!isShow\" key=\"2\"></Student>\n        </transition-group>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nimport 'animate.css'\nexport default {\n    name: 'App',\n    data() {\n        return {\n            isShow:true\n        }\n    },\n    components: {\n        Student\n    },\n    methods: {\n        showComponent() {\n            this.isShow = !this.isShow;\n        }\n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n  \n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n\n.odinam2-enter-active,.odinam2-leave-active\n{\n    transition: 1s linear;\n}\n.odinam2-enter,.odinam2-leave-to\n{\n    transform: translateX(-100%);\n}\n.odinam2-enter-to,.odinam2-leave\n{\n    transform: translateX(0);\n}\n\n.odinam1-enter-active{\n    animation: odinAnimate 1s linear;\n}\n.odinam1-leave-active{\n    animation: odinAnimate 1s linear reverse;\n}\n@keyframes odinAnimate {\n    from{\n        transform: translateX(-100%);\n    }\n    to{\n        transform: translateX(0);\n    }\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-11-动画效果","published":1,"updated":"2023-03-10T07:54:26.068Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3700425cs9abvd09zm","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"动画效果\"><a class=\"markdownIt-Anchor\" href=\"#动画效果\"></a> 动画效果</h4>\n<ol>\n<li>普通实现方式: 使用 @keyframes amName{ from{transform: translateX(-100%);}to{transform: translateX(0);}} 创建关键帧并定义动画</li>\n<li>定义vue的进入动画 .name-enter-active{animation: odinAnimate 1s linear;}</li>\n<li>定义vue的离开动画 .name-leave-active{animation: odinAnimate 1s linear reverse;}</li>\n<li>使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画</li>\n</ol>\n<h4 id=\"过度动画\"><a class=\"markdownIt-Anchor\" href=\"#过度动画\"></a> 过度动画</h4>\n<ol>\n<li>定义过度动画 .name-enter,.name-leave-to{transform: translateX(-100%);} 和 .name-leave .name-enter-to{transform: translateX(0);}</li>\n<li>定义过滤效果 .name-enter-active,.name-leave-active{transition: 3s linear;}</li>\n<li>多个元素需要相同的动画效果需要使用 transition-group</li>\n</ol>\n<h4 id=\"第三方动画库-详见-httpsanimatestyle\"><a class=\"markdownIt-Anchor\" href=\"#第三方动画库-详见-httpsanimatestyle\"></a> 第三方动画库 详见 <a href=\"https://animate.style/\">https://animate.style/</a></h4>\n<ol>\n<li>yarn add animate.css</li>\n<li>引入 animate.css import ‘animate.css’</li>\n<li>给需要动画的组件 添加 name=‘animate__animated animate__bounce’</li>\n<li>添加 enter-active-class=‘动画名称’ leave-active-class=‘动画名称</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        动画效果</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 普通实现方式: 使用 @keyframes amName&#123; from&#123;transform: translateX(-100%);&#125;to&#123;transform: translateX(0);&#125;&#125; 创建关键帧并定义动画</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 定义vue的进入动画  .name-enter-active&#123;animation: odinAnimate 1s linear;&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 定义vue的离开动画  .name-leave-active&#123;animation: odinAnimate 1s linear reverse;&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        过度动画</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 定义过度动画 .name-enter,.name-leave-to&#123;transform: translateX(-100%);&#125; 和 .name-leave .name-enter-to&#123;transform: translateX(0);&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 定义过滤效果 .name-enter-active,.name-leave-active&#123;transition: 3s linear;&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 多个元素需要相同的动画效果需要使用 transition-group</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        第三方动画库 详见 https://animate.style/</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. yarn add animate.css</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 引入 animate.css   import &#x27;animate.css&#x27;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 给需要动画的组件 添加 name=&#x27;animate__animated animate__bounce&#x27;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 添加 enter-active-class=&#x27;动画名称&#x27;  leave-active-class=&#x27;动画名称&#x27;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showComponent&quot;</span>&gt;</span>显示、隐藏组件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--动画效果--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">transition</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;odinam1&quot;</span> <span class=\"attr\">appear</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">transition</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--过度动画--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">transition</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;odinam2&quot;</span> <span class=\"attr\">appear</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">transition</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--组过度动画--&gt;</span> </span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">transition-group</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;odinam2&quot;</span> <span class=\"attr\">appear</span> &gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;!isShow&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">transition-group</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--第三方动画库--&gt;</span> </span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">transition-group</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;animate__animated animate__bounce&#x27;</span> <span class=\"attr\">appear</span> <span class=\"attr\">enter-active-class</span>=<span class=\"string\">&#x27;animate__shakeY&#x27;</span>  <span class=\"attr\">leave-active-class</span>=<span class=\"string\">&#x27;animate__bounceOutRight&#x27;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;!isShow&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">transition-group</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;animate.css&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">isShow</span>:<span class=\"literal\">true</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">showComponent</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.isShow = !<span class=\"built_in\">this</span>.isShow;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  </span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam2-enter-active</span>,<span class=\"selector-class\">.odinam2-leave-active</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">transition</span>: <span class=\"number\">1s</span> linear;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam2-enter</span>,<span class=\"selector-class\">.odinam2-leave-to</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">100%</span>);</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam2-enter-to</span>,<span class=\"selector-class\">.odinam2-leave</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">0</span>);</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam1-enter-active</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">animation</span>: odinAnimate <span class=\"number\">1s</span> linear;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam1-leave-active</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">animation</span>: odinAnimate <span class=\"number\">1s</span> linear reverse;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"keyword\">@keyframes</span> odinAnimate &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"selector-tag\">from</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">100%</span>);</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"selector-tag\">to</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">0</span>);</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"动画效果\"><a class=\"markdownIt-Anchor\" href=\"#动画效果\"></a> 动画效果</h4>\n<ol>\n<li>普通实现方式: 使用 @keyframes amName{ from{transform: translateX(-100%);}to{transform: translateX(0);}} 创建关键帧并定义动画</li>\n<li>定义vue的进入动画 .name-enter-active{animation: odinAnimate 1s linear;}</li>\n<li>定义vue的离开动画 .name-leave-active{animation: odinAnimate 1s linear reverse;}</li>\n<li>使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画</li>\n</ol>\n<h4 id=\"过度动画\"><a class=\"markdownIt-Anchor\" href=\"#过度动画\"></a> 过度动画</h4>\n<ol>\n<li>定义过度动画 .name-enter,.name-leave-to{transform: translateX(-100%);} 和 .name-leave .name-enter-to{transform: translateX(0);}</li>\n<li>定义过滤效果 .name-enter-active,.name-leave-active{transition: 3s linear;}</li>\n<li>多个元素需要相同的动画效果需要使用 transition-group</li>\n</ol>\n<h4 id=\"第三方动画库-详见-httpsanimatestyle\"><a class=\"markdownIt-Anchor\" href=\"#第三方动画库-详见-httpsanimatestyle\"></a> 第三方动画库 详见 <a href=\"https://animate.style/\">https://animate.style/</a></h4>\n<ol>\n<li>yarn add animate.css</li>\n<li>引入 animate.css import ‘animate.css’</li>\n<li>给需要动画的组件 添加 name=‘animate__animated animate__bounce’</li>\n<li>添加 enter-active-class=‘动画名称’ leave-active-class=‘动画名称</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        动画效果</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 普通实现方式: 使用 @keyframes amName&#123; from&#123;transform: translateX(-100%);&#125;to&#123;transform: translateX(0);&#125;&#125; 创建关键帧并定义动画</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 定义vue的进入动画  .name-enter-active&#123;animation: odinAnimate 1s linear;&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 定义vue的离开动画  .name-leave-active&#123;animation: odinAnimate 1s linear reverse;&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        过度动画</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 定义过度动画 .name-enter,.name-leave-to&#123;transform: translateX(-100%);&#125; 和 .name-leave .name-enter-to&#123;transform: translateX(0);&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 定义过滤效果 .name-enter-active,.name-leave-active&#123;transition: 3s linear;&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 多个元素需要相同的动画效果需要使用 transition-group</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        第三方动画库 详见 https://animate.style/</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. yarn add animate.css</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 引入 animate.css   import &#x27;animate.css&#x27;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 给需要动画的组件 添加 name=&#x27;animate__animated animate__bounce&#x27;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 添加 enter-active-class=&#x27;动画名称&#x27;  leave-active-class=&#x27;动画名称&#x27;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;showComponent&quot;</span>&gt;</span>显示、隐藏组件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--动画效果--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">transition</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;odinam1&quot;</span> <span class=\"attr\">appear</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">transition</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--过度动画--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">transition</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;odinam2&quot;</span> <span class=\"attr\">appear</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">transition</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--组过度动画--&gt;</span> </span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">transition-group</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;odinam2&quot;</span> <span class=\"attr\">appear</span> &gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;!isShow&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">transition-group</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--第三方动画库--&gt;</span> </span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">transition-group</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;animate__animated animate__bounce&#x27;</span> <span class=\"attr\">appear</span> <span class=\"attr\">enter-active-class</span>=<span class=\"string\">&#x27;animate__shakeY&#x27;</span>  <span class=\"attr\">leave-active-class</span>=<span class=\"string\">&#x27;animate__bounceOutRight&#x27;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;isShow&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;!isShow&quot;</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">transition-group</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;animate.css&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">isShow</span>:<span class=\"literal\">true</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">showComponent</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.isShow = !<span class=\"built_in\">this</span>.isShow;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  </span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam2-enter-active</span>,<span class=\"selector-class\">.odinam2-leave-active</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">transition</span>: <span class=\"number\">1s</span> linear;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam2-enter</span>,<span class=\"selector-class\">.odinam2-leave-to</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">100%</span>);</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam2-enter-to</span>,<span class=\"selector-class\">.odinam2-leave</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">0</span>);</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam1-enter-active</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">animation</span>: odinAnimate <span class=\"number\">1s</span> linear;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.odinam1-leave-active</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">animation</span>: odinAnimate <span class=\"number\">1s</span> linear reverse;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"keyword\">@keyframes</span> odinAnimate &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"selector-tag\">from</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-<span class=\"number\">100%</span>);</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"selector-tag\">to</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">        <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">0</span>);</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 14. vuex","author":"OdinSam","abbrlink":"97b5","date":"2022-10-20T08:01:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### vuex\nvue组件通过dispatch('key',param)找到store的actions(key,param),action通过commit找到mutations(key,function),mutations执行回调函数修改state中的数据，vue根据state数据的改变自动重新render模板.\nvue组件也可以直接通过commit找到mutations。这种情况一般用在所需要的参数是固定已知的情况下\n\n1. 安装vuex vue2.0需要安装vuex3 npm i vuex@3 2. 创建 store/index.js。store中包含actions、mutations、state、getters。\n\n```js store/index.js\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\n// 模块化创建storeOptions\nconst stuOptions = {\n    namespaced: true,\n    actions: {\n        add(context, param) {\n            console.log('action add', param);\n            context.commit('ADD', param);\n        }\n    },\n    mutations: {\n        ADD(state, param) {\n            console.log('mutations add');\n            const stuId =\n                state.stus.length === undefined ? 1 : state.stus.length + 1;\n            const stu = { id: stuId, stuName: stuId + '-' + param.stuName };\n            state.stus.push(stu);\n        }\n    },\n    state: { stus: [] },\n    getters: {\n        bigSum(state) {\n            console.log(this);\n            return state.stus.length * 10;\n        }\n    }\n};\n//创建store\nexport default new Vuex.Store({\n    modules: {\n        stuOptions\n    }\n});\n```\n\n2. 创建vue时，在配置项中配置store\n```js main.js\nnew Vue({\n    store,\n    render: (h) => h(App)\n}).$mount('#app');\n```\n3. 在组件中使用store\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <div>放大十倍后的学生人数:{{$store.getters['stuOptions/bigSum']}}</div>\n        <ul>\n            <li v-for=\"s in $store.state.stuOptions.stus\" :key=\"s.id\">{{s.stuName}}</li>\n        </ul>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    data() {\n        return {\n            \n        }\n    },\n    mounted() {\n        console.log(this.$store);\n        \n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <h2>app组件</h2>\n    <span>共计学生{{stusSum}},</span><button @click=\"addStu\">添加学生</button><br/>\n    <Student></Student><br/>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nimport {mapState,mapGetters,mapMutations} from 'vuex';\n\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    methods: {\n        addStu() {\n            this.$store.dispatch('stuOptions/add', { stuName: 'odin' });\n            //跳过dispatch字节commit到mutations\n            // this.$store.commit('ADD',{ stuName: 'odin' })\n        },\n        //使用映射的形式 映射mutations\n        // ...mapMutations(['ADD'])\n        // ...mapMutations('stuOptions',['ADD'])\n    },\n    computed: {\n        stusSum() {\n            console.log(this.$store);\n            return this.$store.state.stuOptions.stus.length\n        },\n        //使用映射的形式 映射state为计算属性\n        // ...mapState(['stus'])\n        ...mapState('stuOptions',['stus'])\n        //...mapGetters(['stus'])\n    }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-14-vuex.md","raw":"title: Vue2.0进阶 - 14. vuex\nauthor: OdinSam\ntags:\n  - vue2\n  - vuex\ncategories:\n  - 前端\n  - vue2\nabbrlink: 97b5\ndate: 2022-10-20 16:01:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### vuex\nvue组件通过dispatch('key',param)找到store的actions(key,param),action通过commit找到mutations(key,function),mutations执行回调函数修改state中的数据，vue根据state数据的改变自动重新render模板.\nvue组件也可以直接通过commit找到mutations。这种情况一般用在所需要的参数是固定已知的情况下\n\n1. 安装vuex vue2.0需要安装vuex3 npm i vuex@3 2. 创建 store/index.js。store中包含actions、mutations、state、getters。\n\n```js store/index.js\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\n// 模块化创建storeOptions\nconst stuOptions = {\n    namespaced: true,\n    actions: {\n        add(context, param) {\n            console.log('action add', param);\n            context.commit('ADD', param);\n        }\n    },\n    mutations: {\n        ADD(state, param) {\n            console.log('mutations add');\n            const stuId =\n                state.stus.length === undefined ? 1 : state.stus.length + 1;\n            const stu = { id: stuId, stuName: stuId + '-' + param.stuName };\n            state.stus.push(stu);\n        }\n    },\n    state: { stus: [] },\n    getters: {\n        bigSum(state) {\n            console.log(this);\n            return state.stus.length * 10;\n        }\n    }\n};\n//创建store\nexport default new Vuex.Store({\n    modules: {\n        stuOptions\n    }\n});\n```\n\n2. 创建vue时，在配置项中配置store\n```js main.js\nnew Vue({\n    store,\n    render: (h) => h(App)\n}).$mount('#app');\n```\n3. 在组件中使用store\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>Student组件</h2>\n        <div>放大十倍后的学生人数:{{$store.getters['stuOptions/bigSum']}}</div>\n        <ul>\n            <li v-for=\"s in $store.state.stuOptions.stus\" :key=\"s.id\">{{s.stuName}}</li>\n        </ul>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    data() {\n        return {\n            \n        }\n    },\n    mounted() {\n        console.log(this.$store);\n        \n    },\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:200px;\n    padding:50px;\n    margin-left:50px;\n}\n</style>\n```\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <h2>app组件</h2>\n    <span>共计学生{{stusSum}},</span><button @click=\"addStu\">添加学生</button><br/>\n    <Student></Student><br/>\n  </div>\n</template>\n\n<script>\nimport Student from './components/Student.vue';\nimport {mapState,mapGetters,mapMutations} from 'vuex';\n\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    methods: {\n        addStu() {\n            this.$store.dispatch('stuOptions/add', { stuName: 'odin' });\n            //跳过dispatch字节commit到mutations\n            // this.$store.commit('ADD',{ stuName: 'odin' })\n        },\n        //使用映射的形式 映射mutations\n        // ...mapMutations(['ADD'])\n        // ...mapMutations('stuOptions',['ADD'])\n    },\n    computed: {\n        stusSum() {\n            console.log(this.$store);\n            return this.$store.state.stuOptions.stus.length\n        },\n        //使用映射的形式 映射state为计算属性\n        // ...mapState(['stus'])\n        ...mapState('stuOptions',['stus'])\n        //...mapGetters(['stus'])\n    }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-14-vuex","published":1,"updated":"2023-03-10T08:03:57.564Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3700455cs9fwsjgia2","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"vuex\"><a class=\"markdownIt-Anchor\" href=\"#vuex\"></a> vuex</h4>\n<p>vue组件通过dispatch(‘key’,param)找到store的actions(key,param),action通过commit找到mutations(key,function),mutations执行回调函数修改state中的数据，vue根据state数据的改变自动重新render模板.<br />\nvue组件也可以直接通过commit找到mutations。这种情况一般用在所需要的参数是固定已知的情况下</p>\n<ol>\n<li>安装vuex vue2.0需要安装vuex3 npm i vuex@3 2. 创建 store/index.js。store中包含actions、mutations、state、getters。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>store/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span>;</span><br><span class=\"line\">Vue.use(Vuex);</span><br><span class=\"line\"><span class=\"comment\">// 模块化创建storeOptions</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> stuOptions = &#123;</span><br><span class=\"line\">    <span class=\"attr\">namespaced</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">add</span>(<span class=\"params\">context, param</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;action add&#x27;</span>, param);</span><br><span class=\"line\">            context.commit(<span class=\"string\">&#x27;ADD&#x27;</span>, param);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">ADD</span>(<span class=\"params\">state, param</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;mutations add&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> stuId =</span><br><span class=\"line\">                state.stus.length === <span class=\"literal\">undefined</span> ? <span class=\"number\">1</span> : state.stus.length + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> stu = &#123; <span class=\"attr\">id</span>: stuId, <span class=\"attr\">stuName</span>: stuId + <span class=\"string\">&#x27;-&#x27;</span> + param.stuName &#125;;</span><br><span class=\"line\">            state.stus.push(stu);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">state</span>: &#123; <span class=\"attr\">stus</span>: [] &#125;,</span><br><span class=\"line\">    <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">bigSum</span>(<span class=\"params\">state</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> state.stus.length * <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//创建store</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">    <span class=\"attr\">modules</span>: &#123;</span><br><span class=\"line\">        stuOptions</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>创建vue时，在配置项中配置store</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    store,</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>在组件中使用store</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>放大十倍后的学生人数:&#123;&#123;$store.getters[&#x27;stuOptions/bigSum&#x27;]&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;s in $store.state.stuOptions.stus&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;s.id&quot;</span>&gt;</span>&#123;&#123;s.stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$store);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>共计学生&#123;&#123;stusSum&#125;&#125;,<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addStu&quot;</span>&gt;</span>添加学生<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;mapState,mapGetters,mapMutations&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">addStu</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$store.dispatch(<span class=\"string\">&#x27;stuOptions/add&#x27;</span>, &#123; <span class=\"attr\">stuName</span>: <span class=\"string\">&#x27;odin&#x27;</span> &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//跳过dispatch字节commit到mutations</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">// this.$store.commit(&#x27;ADD&#x27;,&#123; stuName: &#x27;odin&#x27; &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//使用映射的形式 映射mutations</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// ...mapMutations([&#x27;ADD&#x27;])</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// ...mapMutations(&#x27;stuOptions&#x27;,[&#x27;ADD&#x27;])</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">computed</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">stusSum</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$store);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.$store.state.stuOptions.stus.length</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//使用映射的形式 映射state为计算属性</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// ...mapState([&#x27;stus&#x27;])</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        ...mapState(<span class=\"string\">&#x27;stuOptions&#x27;</span>,[<span class=\"string\">&#x27;stus&#x27;</span>])</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//...mapGetters([&#x27;stus&#x27;])</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"vuex\"><a class=\"markdownIt-Anchor\" href=\"#vuex\"></a> vuex</h4>\n<p>vue组件通过dispatch(‘key’,param)找到store的actions(key,param),action通过commit找到mutations(key,function),mutations执行回调函数修改state中的数据，vue根据state数据的改变自动重新render模板.<br />\nvue组件也可以直接通过commit找到mutations。这种情况一般用在所需要的参数是固定已知的情况下</p>\n<ol>\n<li>安装vuex vue2.0需要安装vuex3 npm i vuex@3 2. 创建 store/index.js。store中包含actions、mutations、state、getters。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>store/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span>;</span><br><span class=\"line\">Vue.use(Vuex);</span><br><span class=\"line\"><span class=\"comment\">// 模块化创建storeOptions</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> stuOptions = &#123;</span><br><span class=\"line\">    <span class=\"attr\">namespaced</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">add</span>(<span class=\"params\">context, param</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;action add&#x27;</span>, param);</span><br><span class=\"line\">            context.commit(<span class=\"string\">&#x27;ADD&#x27;</span>, param);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">ADD</span>(<span class=\"params\">state, param</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;mutations add&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> stuId =</span><br><span class=\"line\">                state.stus.length === <span class=\"literal\">undefined</span> ? <span class=\"number\">1</span> : state.stus.length + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> stu = &#123; <span class=\"attr\">id</span>: stuId, <span class=\"attr\">stuName</span>: stuId + <span class=\"string\">&#x27;-&#x27;</span> + param.stuName &#125;;</span><br><span class=\"line\">            state.stus.push(stu);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">state</span>: &#123; <span class=\"attr\">stus</span>: [] &#125;,</span><br><span class=\"line\">    <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">bigSum</span>(<span class=\"params\">state</span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> state.stus.length * <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//创建store</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">    <span class=\"attr\">modules</span>: &#123;</span><br><span class=\"line\">        stuOptions</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>创建vue时，在配置项中配置store</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    store,</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App)</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>在组件中使用store</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>放大十倍后的学生人数:&#123;&#123;$store.getters[&#x27;stuOptions/bigSum&#x27;]&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;s in $store.state.stuOptions.stus&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;s.id&quot;</span>&gt;</span>&#123;&#123;s.stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$store);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">padding</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">margin-left</span>:<span class=\"number\">50px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>共计学生&#123;&#123;stusSum&#125;&#125;,<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addStu&quot;</span>&gt;</span>添加学生<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;mapState,mapGetters,mapMutations&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">addStu</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">this</span>.$store.dispatch(<span class=\"string\">&#x27;stuOptions/add&#x27;</span>, &#123; <span class=\"attr\">stuName</span>: <span class=\"string\">&#x27;odin&#x27;</span> &#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//跳过dispatch字节commit到mutations</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">// this.$store.commit(&#x27;ADD&#x27;,&#123; stuName: &#x27;odin&#x27; &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//使用映射的形式 映射mutations</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// ...mapMutations([&#x27;ADD&#x27;])</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// ...mapMutations(&#x27;stuOptions&#x27;,[&#x27;ADD&#x27;])</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">computed</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"title\">stusSum</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.$store);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.$store.state.stuOptions.stus.length</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//使用映射的形式 映射state为计算属性</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// ...mapState([&#x27;stus&#x27;])</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        ...mapState(<span class=\"string\">&#x27;stuOptions&#x27;</span>,[<span class=\"string\">&#x27;stus&#x27;</span>])</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//...mapGetters([&#x27;stus&#x27;])</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 13. slot插槽","author":"OdinSam","abbrlink":"d7ab","date":"2022-10-20T07:57:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### slot插槽\n1. 让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据\n2. 插槽分为 默认插槽、具名插槽、作用域插槽\n3. 默认插槽: 数据定义在父组件中\n\n```js 父组件\n<Category title=\"美食\">\n  html结构\n</Category> \n```\n\n```js 子组件\n<template>\n  <slot></slot>\n</template>\n```\n\n4. 具名插槽: 数据定义在父组件中\n\n```js 父组件\n<Category title=\"美食\">\n    <template slot='插槽名称'>\n        html结构\n    </template>\n    <template v-slot:插槽名称2>\n        html结构\n    </template>\n</Category> \n```\n```js 子组件\n<template>\n    <slot name='插槽名称1'></slot>\n    <slot name='插槽名称2'></slot>\n</template>\n```\n\n5. 作用域插槽:数据定义在子组件中\n```js 父组件\n<Category title=\"美食\">\n    <template slot-scope=\"{stus,msg}\">\n        html结构\n    </template>\n    <template v-slot:插槽名称2>\n        html结构\n    </template>\n</Category> \n```\n```js 子组件\n<template>\n    <slot :stus=\"子组件数据\" msg=\"作用域\"></slot>\n</template>\n```\n\n#### 示例代码\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        slot插槽\n        1. 让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据\n        2. 插槽分为 默认插槽、具名插槽、作用域插槽\n        3. 默认插槽: 数据定义在父组件中\n            父组件  \n            <Category title=\"美食\">\n                html结构\n            </Category> \n            子组件 \n            <template>\n                <slot></slot>\n            </template>\n        4. 具名插槽: 数据定义在父组件中\n            父组件  \n            <Category title=\"美食\">\n                <template slot='插槽名称'>\n                    html结构\n                </template>\n                <template v-slot:插槽名称2>\n                    html结构\n                </template>\n            </Category> \n            子组件 \n            <template>\n                <slot name='插槽名称1'></slot>\n                <slot name='插槽名称2'></slot>\n            </template>\n        5. 作用域插槽:数据定义在子组件中\n            父组件  \n            <Category title=\"美食\">\n                <template slot-scope=\"{stus,msg}\">\n                    html结构\n                </template>\n                <template v-slot:插槽名称2>\n                    html结构\n                </template>\n            </Category> \n            子组件\n            <template>\n                <slot :stus=\"子组件数据\" msg=\"作用域\"></slot>\n            </template>\n    -->\n    <h2>app组件</h2>\n    <div class=\"dvslot\">\n        <Category title=\"美食\">\n            <img slot=\"center\" src=\"https://s2.ax1x.com/2021/01/16/srJ1q0.jpg\" style=\"width:100%;\" alt=\"美食\" />\n            <div class=\"footer\" slot=\"footer\">\n                <a href=\"http://odinsam.com\">热门美食</a><a href=\"http://odinsam.com\">更多美食</a>\n            </div>\n        </Category>\n        <Category title=\"游戏\">\n            <ul slot=\"center\">\n                <li v-for=\"(g,index) in games\" :key=\"index\">{{g}}</li>\n            </ul>\n            <a class=\"footer\" slot=\"footer\" href=\"http://odinsam.com\">热门游戏</a>\n        </Category>\n        <Category title=\"影视\">\n            <video slot=\"center\" controls src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video>\n            <template  v-slot:footer>\n                <div class=\"footer\">\n                    <a href=\"http://odinsam.com\">热门</a>\n                    <a href=\"http://odinsam.com\">经典</a>\n                    <a href=\"http://odinsam.com\">推荐</a>\n                </div>\n                <h4>欢迎观看</h4>\n            </template>\n        </Category>\n        <Student title=\"作用于插槽\">\n            <template slot-scope=\"{stus,msg}\">\n                <ul slot=\"center\">\n                    <h4 v-for=\"stu in stus\" :key=\"stu.id\">{{stu.name}}</h4>\n                </ul>\n                <h4>{{msg}}</h4>\n            </template>\n        </Student>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Category from './components/Category.vue';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            'foods': ['火锅', '小龙虾', '牛排', '烧烤'],\n            'games': ['魔兽', '炉石', '暗黑', '星际'],\n            'films':['西游','三国','红楼梦','水浒']\n        }\n    },\n    components: {\n        Category,Student\n    },\n    methods: {\n        \n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n.dvslot\n{\n    display: flex;\n    justify-content: space-evenly;\n}\nvideo{\n    width:100%;\n}\n.footer\n{\n    text-align: center;\n}\n</style>\n\n```\n\n```js category.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{title}}</h2>\n        <slot name=\"center\"></slot>\n        <slot name=\"footer\"></slot>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stus: [\n                { id: 1, name: \"odinsam1\" },\n                { id: 2, name: \"odinsam2\" },\n                { id: 3, name: \"odinsam3\" }\n            ]\n        }\n    },\n    props: ['title']\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:400px;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{title}}</h2>\n        <slot :stus=\"stus\" msg=\"作用域\"></slot>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stus: [\n                { id: 1, name: \"odinsam1\" },\n                { id: 2, name: \"odinsam2\" },\n                { id: 3, name: \"odinsam3\" }\n            ]\n        }\n    },\n    props: ['title']\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:400px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶-13-slot插槽.md","raw":"title: Vue2.0进阶 - 13. slot插槽\nauthor: OdinSam\ntags:\n  - vue2\n  - slot\n  - 插槽\ncategories:\n  - 前端\n  - vue2\nabbrlink: d7ab\ndate: 2022-10-20 15:57:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### slot插槽\n1. 让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据\n2. 插槽分为 默认插槽、具名插槽、作用域插槽\n3. 默认插槽: 数据定义在父组件中\n\n```js 父组件\n<Category title=\"美食\">\n  html结构\n</Category> \n```\n\n```js 子组件\n<template>\n  <slot></slot>\n</template>\n```\n\n4. 具名插槽: 数据定义在父组件中\n\n```js 父组件\n<Category title=\"美食\">\n    <template slot='插槽名称'>\n        html结构\n    </template>\n    <template v-slot:插槽名称2>\n        html结构\n    </template>\n</Category> \n```\n```js 子组件\n<template>\n    <slot name='插槽名称1'></slot>\n    <slot name='插槽名称2'></slot>\n</template>\n```\n\n5. 作用域插槽:数据定义在子组件中\n```js 父组件\n<Category title=\"美食\">\n    <template slot-scope=\"{stus,msg}\">\n        html结构\n    </template>\n    <template v-slot:插槽名称2>\n        html结构\n    </template>\n</Category> \n```\n```js 子组件\n<template>\n    <slot :stus=\"子组件数据\" msg=\"作用域\"></slot>\n</template>\n```\n\n#### 示例代码\n\n```js app.vue\n<template>\n  <div class=\"dvapp\">\n    <!--\n        slot插槽\n        1. 让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据\n        2. 插槽分为 默认插槽、具名插槽、作用域插槽\n        3. 默认插槽: 数据定义在父组件中\n            父组件  \n            <Category title=\"美食\">\n                html结构\n            </Category> \n            子组件 \n            <template>\n                <slot></slot>\n            </template>\n        4. 具名插槽: 数据定义在父组件中\n            父组件  \n            <Category title=\"美食\">\n                <template slot='插槽名称'>\n                    html结构\n                </template>\n                <template v-slot:插槽名称2>\n                    html结构\n                </template>\n            </Category> \n            子组件 \n            <template>\n                <slot name='插槽名称1'></slot>\n                <slot name='插槽名称2'></slot>\n            </template>\n        5. 作用域插槽:数据定义在子组件中\n            父组件  \n            <Category title=\"美食\">\n                <template slot-scope=\"{stus,msg}\">\n                    html结构\n                </template>\n                <template v-slot:插槽名称2>\n                    html结构\n                </template>\n            </Category> \n            子组件\n            <template>\n                <slot :stus=\"子组件数据\" msg=\"作用域\"></slot>\n            </template>\n    -->\n    <h2>app组件</h2>\n    <div class=\"dvslot\">\n        <Category title=\"美食\">\n            <img slot=\"center\" src=\"https://s2.ax1x.com/2021/01/16/srJ1q0.jpg\" style=\"width:100%;\" alt=\"美食\" />\n            <div class=\"footer\" slot=\"footer\">\n                <a href=\"http://odinsam.com\">热门美食</a><a href=\"http://odinsam.com\">更多美食</a>\n            </div>\n        </Category>\n        <Category title=\"游戏\">\n            <ul slot=\"center\">\n                <li v-for=\"(g,index) in games\" :key=\"index\">{{g}}</li>\n            </ul>\n            <a class=\"footer\" slot=\"footer\" href=\"http://odinsam.com\">热门游戏</a>\n        </Category>\n        <Category title=\"影视\">\n            <video slot=\"center\" controls src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video>\n            <template  v-slot:footer>\n                <div class=\"footer\">\n                    <a href=\"http://odinsam.com\">热门</a>\n                    <a href=\"http://odinsam.com\">经典</a>\n                    <a href=\"http://odinsam.com\">推荐</a>\n                </div>\n                <h4>欢迎观看</h4>\n            </template>\n        </Category>\n        <Student title=\"作用于插槽\">\n            <template slot-scope=\"{stus,msg}\">\n                <ul slot=\"center\">\n                    <h4 v-for=\"stu in stus\" :key=\"stu.id\">{{stu.name}}</h4>\n                </ul>\n                <h4>{{msg}}</h4>\n            </template>\n        </Student>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Category from './components/Category.vue';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    data() {\n        return {\n            'foods': ['火锅', '小龙虾', '牛排', '烧烤'],\n            'games': ['魔兽', '炉石', '暗黑', '星际'],\n            'films':['西游','三国','红楼梦','水浒']\n        }\n    },\n    components: {\n        Category,Student\n    },\n    methods: {\n        \n    },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.dvapp\n{\n    background-color: aquamarine;\n}\n.dvslot\n{\n    display: flex;\n    justify-content: space-evenly;\n}\nvideo{\n    width:100%;\n}\n.footer\n{\n    text-align: center;\n}\n</style>\n\n```\n\n```js category.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{title}}</h2>\n        <slot name=\"center\"></slot>\n        <slot name=\"footer\"></slot>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stus: [\n                { id: 1, name: \"odinsam1\" },\n                { id: 2, name: \"odinsam2\" },\n                { id: 3, name: \"odinsam3\" }\n            ]\n        }\n    },\n    props: ['title']\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:400px;\n}\n</style>\n```\n\n```js student.vue\n<template>\n    <div class=\"studv\">\n        <h2>{{title}}</h2>\n        <slot :stus=\"stus\" msg=\"作用域\"></slot>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            stus: [\n                { id: 1, name: \"odinsam1\" },\n                { id: 2, name: \"odinsam2\" },\n                { id: 3, name: \"odinsam3\" }\n            ]\n        }\n    },\n    props: ['title']\n}\n</script>\n\n<style lang=\"css\">\n.studv{\n    background-color:bisque;\n    width:400px;\n}\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶-13-slot插槽","published":1,"updated":"2023-03-10T08:01:13.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3800485cs9eeyghly9","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"slot插槽\"><a class=\"markdownIt-Anchor\" href=\"#slot插槽\"></a> slot插槽</h4>\n<ol>\n<li>让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据</li>\n<li>插槽分为 默认插槽、具名插槽、作用域插槽</li>\n<li>默认插槽: 数据定义在父组件中</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>父组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Category title=<span class=\"string\">&quot;美食&quot;</span>&gt;</span><br><span class=\"line\">  html结构</span><br><span class=\"line\">&lt;/Category&gt; </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>子组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>具名插槽: 数据定义在父组件中</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>父组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Category title=<span class=\"string\">&quot;美食&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&#x27;插槽名称&#x27;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        html结构</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:</span>插槽名称<span class=\"attr\">2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        html结构</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">&lt;/Category&gt; </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>子组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;插槽名称1&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;插槽名称2&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>作用域插槽:数据定义在子组件中</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>父组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Category title=<span class=\"string\">&quot;美食&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;&#123;stus,msg&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        html结构</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:</span>插槽名称<span class=\"attr\">2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        html结构</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">&lt;/Category&gt; </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>子组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">:stus</span>=<span class=\"string\">&quot;子组件数据&quot;</span> <span class=\"attr\">msg</span>=<span class=\"string\">&quot;作用域&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例代码\"><a class=\"markdownIt-Anchor\" href=\"#示例代码\"></a> 示例代码</h4>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        slot插槽</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 插槽分为 默认插槽、具名插槽、作用域插槽</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 默认插槽: 数据定义在父组件中</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            父组件  </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;Category title=&quot;美食&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/Category&gt; </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            子组件 </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;slot&gt;&lt;/slot&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 具名插槽: 数据定义在父组件中</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            父组件  </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;Category title=&quot;美食&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;template slot=&#x27;插槽名称&#x27;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;template v-slot:插槽名称2&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/Category&gt; </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            子组件 </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;slot name=&#x27;插槽名称1&#x27;&gt;&lt;/slot&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;slot name=&#x27;插槽名称2&#x27;&gt;&lt;/slot&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        5. 作用域插槽:数据定义在子组件中</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            父组件  </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;Category title=&quot;美食&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;template slot-scope=&quot;&#123;stus,msg&#125;&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;template v-slot:插槽名称2&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/Category&gt; </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            子组件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;slot :stus=&quot;子组件数据&quot; msg=&quot;作用域&quot;&gt;&lt;/slot&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvslot&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Category</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;美食&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://s2.ax1x.com/2021/01/16/srJ1q0.jpg&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;美食&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>热门美食<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>更多美食<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Category</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Category</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;游戏&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(g,index) in games&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span>&#123;&#123;g&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>热门游戏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Category</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Category</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;影视&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">controls</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">template</span>  <span class=\"attr\">v-slot:footer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>热门<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>经典<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>推荐<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>欢迎观看<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Category</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;作用于插槽&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;&#123;stus,msg&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">h4</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;stu in stus&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;stu.id&quot;</span>&gt;</span>&#123;&#123;stu.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Category <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Category.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"string\">&#x27;foods&#x27;</span>: [<span class=\"string\">&#x27;火锅&#x27;</span>, <span class=\"string\">&#x27;小龙虾&#x27;</span>, <span class=\"string\">&#x27;牛排&#x27;</span>, <span class=\"string\">&#x27;烧烤&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"string\">&#x27;games&#x27;</span>: [<span class=\"string\">&#x27;魔兽&#x27;</span>, <span class=\"string\">&#x27;炉石&#x27;</span>, <span class=\"string\">&#x27;暗黑&#x27;</span>, <span class=\"string\">&#x27;星际&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"string\">&#x27;films&#x27;</span>:[<span class=\"string\">&#x27;西游&#x27;</span>,<span class=\"string\">&#x27;三国&#x27;</span>,<span class=\"string\">&#x27;红楼梦&#x27;</span>,<span class=\"string\">&#x27;水浒&#x27;</span>]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Category,Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvslot</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">display</span>: flex;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">justify-content</span>: space-evenly;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-tag\">video</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.footer</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>category.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stus</span>: [</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam1&quot;</span> &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam2&quot;</span> &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam3&quot;</span> &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            ]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;title&#x27;</span>]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">:stus</span>=<span class=\"string\">&quot;stus&quot;</span> <span class=\"attr\">msg</span>=<span class=\"string\">&quot;作用域&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stus</span>: [</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam1&quot;</span> &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam2&quot;</span> &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam3&quot;</span> &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            ]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;title&#x27;</span>]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"slot插槽\"><a class=\"markdownIt-Anchor\" href=\"#slot插槽\"></a> slot插槽</h4>\n<ol>\n<li>让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据</li>\n<li>插槽分为 默认插槽、具名插槽、作用域插槽</li>\n<li>默认插槽: 数据定义在父组件中</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>父组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Category title=<span class=\"string\">&quot;美食&quot;</span>&gt;</span><br><span class=\"line\">  html结构</span><br><span class=\"line\">&lt;/Category&gt; </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>子组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>具名插槽: 数据定义在父组件中</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>父组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Category title=<span class=\"string\">&quot;美食&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&#x27;插槽名称&#x27;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        html结构</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:</span>插槽名称<span class=\"attr\">2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        html结构</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">&lt;/Category&gt; </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>子组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;插槽名称1&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;插槽名称2&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>作用域插槽:数据定义在子组件中</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>父组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Category title=<span class=\"string\">&quot;美食&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;&#123;stus,msg&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        html结构</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:</span>插槽名称<span class=\"attr\">2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        html结构</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">&lt;/Category&gt; </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>子组件</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">:stus</span>=<span class=\"string\">&quot;子组件数据&quot;</span> <span class=\"attr\">msg</span>=<span class=\"string\">&quot;作用域&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例代码\"><a class=\"markdownIt-Anchor\" href=\"#示例代码\"></a> 示例代码</h4>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        slot插槽</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        1. 让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        2. 插槽分为 默认插槽、具名插槽、作用域插槽</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        3. 默认插槽: 数据定义在父组件中</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            父组件  </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;Category title=&quot;美食&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/Category&gt; </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            子组件 </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;slot&gt;&lt;/slot&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        4. 具名插槽: 数据定义在父组件中</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            父组件  </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;Category title=&quot;美食&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;template slot=&#x27;插槽名称&#x27;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;template v-slot:插槽名称2&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/Category&gt; </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            子组件 </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;slot name=&#x27;插槽名称1&#x27;&gt;&lt;/slot&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;slot name=&#x27;插槽名称2&#x27;&gt;&lt;/slot&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">        5. 作用域插槽:数据定义在子组件中</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            父组件  </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;Category title=&quot;美食&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;template slot-scope=&quot;&#123;stus,msg&#125;&quot;&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;template v-slot:插槽名称2&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                    html结构</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/Category&gt; </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            子组件</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">                &lt;slot :stus=&quot;子组件数据&quot; msg=&quot;作用域&quot;&gt;&lt;/slot&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">            &lt;/template&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"xml\">    --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dvslot&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Category</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;美食&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://s2.ax1x.com/2021/01/16/srJ1q0.jpg&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100%;&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;美食&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>热门美食<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>更多美食<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Category</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Category</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;游戏&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(g,index) in games&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;index&quot;</span>&gt;</span>&#123;&#123;g&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;footer&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>热门游戏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Category</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Category</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;影视&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span> <span class=\"attr\">controls</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">template</span>  <span class=\"attr\">v-slot:footer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>热门<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>经典<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;http://odinsam.com&quot;</span>&gt;</span>推荐<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>欢迎观看<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Category</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;作用于插槽&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;&#123;stus,msg&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">h4</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;stu in stus&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;stu.id&quot;</span>&gt;</span>&#123;&#123;stu.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Category <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Category.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"string\">&#x27;foods&#x27;</span>: [<span class=\"string\">&#x27;火锅&#x27;</span>, <span class=\"string\">&#x27;小龙虾&#x27;</span>, <span class=\"string\">&#x27;牛排&#x27;</span>, <span class=\"string\">&#x27;烧烤&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"string\">&#x27;games&#x27;</span>: [<span class=\"string\">&#x27;魔兽&#x27;</span>, <span class=\"string\">&#x27;炉石&#x27;</span>, <span class=\"string\">&#x27;暗黑&#x27;</span>, <span class=\"string\">&#x27;星际&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"string\">&#x27;films&#x27;</span>:[<span class=\"string\">&#x27;西游&#x27;</span>,<span class=\"string\">&#x27;三国&#x27;</span>,<span class=\"string\">&#x27;红楼梦&#x27;</span>,<span class=\"string\">&#x27;水浒&#x27;</span>]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Category,Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">methods</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-id\">#app</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -webkit-<span class=\"attribute\">font-smoothing</span>: antialiased;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  -moz-osx-<span class=\"attribute\">font-smoothing</span>: grayscale;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvapp</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>: aquamarine;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.dvslot</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">display</span>: flex;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">justify-content</span>: space-evenly;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-tag\">video</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.footer</span></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">text-align</span>: center;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>category.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;footer&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stus</span>: [</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam1&quot;</span> &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam2&quot;</span> &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam3&quot;</span> &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            ]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;title&#x27;</span>]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;studv&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">:stus</span>=<span class=\"string\">&quot;stus&quot;</span> <span class=\"attr\">msg</span>=<span class=\"string\">&quot;作用域&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">data</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">stus</span>: [</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam1&quot;</span> &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">2</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam2&quot;</span> &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#123; <span class=\"attr\">id</span>: <span class=\"number\">3</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;odinsam3&quot;</span> &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            ]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;title&#x27;</span>]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;css&quot;</span>&gt;</span><span class=\"css\"></span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"><span class=\"selector-class\">.studv</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">background-color</span>:bisque;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶 - 15. vue-router路由","author":"OdinSam","abbrlink":"cc23","date":"2022-10-20T08:04:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### vue-router路由\n1. vue-router是vue的一个插件库，专门用来实现spa应用(单页面应用)\n2. 一个路由就是一组映射关系 key-value,key是路径，value是组件(前端)或函数(后端)\n3. 创建路由表,多级路由配置child时不需要写父路径 以及 /\n\n```js router/index.js\nimport VueRouter from 'vue-router';\nimport Home from '../components/Home.vue';\nimport About from '../components/About.vue';\nexport default new VueRouter({\n//路由工作的两种模式 默认是hash模式 mode改变模式为history模式\n    mode: 'history',\n    routes: [\n        {\n            path: '/home',\n            component: Home,\n            children: [\n            \t//不需要写父路径 以及 /  也可以给路由命名 跳转时可以不用path 使用name即可\n                { path: 'news', component: News,name:'news',\n                \tchildren: [\n                        {\n                            name: 'detail',\n                            //路由使用parmas传参,跳转必须使用name不可以使用path  获取使用$route.params.id获取\n                            path: 'detail/:id',\n                            component: Detail,\n                            //给details组件传递对象，所有数据在details中可以以props的方式接收\n                            // props:{a:1,b:2}\n                            //如果props是true，则路由收到的params参数会以props的形式传递 即 id 会以props方式传递\n                            // props:true\n                            // 如果props是函数，则路由同样以props的形式传递参数给组件，但是这可以通过route结构获取到query并传参（此处使用解构赋值的连续写法 先从route中结构获取query，再从query中结构出id，title\n                            props({query:{id,title}}){ return {id,title} }\n                            \n                        }\n                    ]\n                },\n                { path: 'messages', component: Message }\n            ]\n        },\n        {\n            path: '/about',\n            component: About\n        }\n    ]\n});\n```\n\n4. 加载VueRouter插件并加载路由表\n```js main.js\nimport Vue from 'vue';\nimport App from './App.vue';\nimport VueRouter from 'vue-router';\nimport router from './router';\n\nVue.config.productionTip = false;\nVue.use(VueRouter);\nnew Vue({\n    render: (h) => h(App),\n    router\n}).$mount('#app');\n```\n5. 使用route-link实现路由切换 route-view 指定展示位置(被切换掉组件会被销毁)\n```js \n<!--一级路由-->\n<router-link class=\"navitem\" active-class=\"navitem-active\" to=\"/home\">Home Page</router-link>\n<!--一级路由  replace模式：控制路由器跳转时操作浏览器历史记录的模式，默认是push追加记录，replace是替换当前记录。-->\n<router-link replace class=\"navitem\" active-class=\"navitem-active\" to=\"/home\">Home Page</router-link>\n<!--二级路由-->\n<router-link to=\"/home/news\">News</router-link>\n<!--route-view展示-->\n<router-view></router-view>\n<!-- router-link url querystring传参 -->\n<router-link :to=\"`/home/news/detail?id=${n.id}`\">{{n.title}}</router-link>\n<!-- router-link url params传参 -->\n<router-link :to=\"`/home/news/detail/${n.id}`\">{{n.title}}-byid</router-link>\n<!-- router-link to对象 query传参 只能用name 不能用path-->\n<router-link :to=\"{\n\tname:'detail',\n    \tquery:{ id:n.id }\n}\">\n{{n.title}} - query对象形式\n</router-link>\n<!-- router-link to对象 param传参 只能用name 不能用path-->\n<router-link :to=\"{\n\tname:'detailid',\n    \tparams:{ id:n.id }\n}\">\n{{n.title}} - params对象形式\n</router-link>\n```\n6. 路由组件一般放在components文件夹，路由组件放在page文件夹\n7. 每一个组件都有自己的$route属性，存储自己的路由信息\n8. 整个应用只有一个router，可以通过$router获取\n9. 也可以不借助router-link实现路由跳转.两种模式：push模式和replace模式\n\n```js\n//编程式导航 push模式 query传参\npushShow(n) {\n    this.$router.push({\n        name:'detail',\n        query:{ id:n.id }\n    });\n},\n//编程式导航 replace模式 params传参\nreplaceShow(n) {\n    this.$router.replace({\n        name:'detailid',\n        params:{ id:n.id }\n    });\n},\n\nbackClick() { this.$router.back(); },\t//后退\nforwardClick() { this.$router.forward(); },\t//前进\ngoClick() { this.$router.go(2); } //跳转\n```\n\n10. 可以使用keep-alive标签包含用来缓存路由组件默认缓存所有组件。:include=\"[‘组件名’]\" 指定需要缓存的路由组件。exclude功能刚好相反\n```js\n<keep-alive :include=\"['Message']\">\n    <router-view></router-view>\n</keep-alive>\n<keep-alive :exclude=\"['News']\">\n    <router-view></router-view>\n</keep-alive>\n```\n\n11. 当使用keep-alive包含路由组件后，组件不会触发beforeDestroy销毁流程。需要使用路由组件独有的两个生命周期解决 activated()激活、deactivated()失活。\n\n```js\n//激活\nactivated() {\n    this.timer=setInterval(() => {\n        this.opacity -= 0.01\n        if (this.opacity <= 0) this.opacity = 1\n        \n    }, 16);\n},\n//失活\ndeactivated() {\n    clearInterval(this.timer)\n}\n```\n\n12. 路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享路由守卫、组件内守卫\n```js router/index.js\n//路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享守卫、组件内守卫\n//全局前置路由守卫 - 初始化、每次路由切换时被调用\nrouter.beforeEach((to, from, next) => {\n    if (to.meta.isAuth) {\n        //判断权限\n        if (localStorage.getItem('token') === 'odinsam') next();\n        else alert('undefind token');\n    } else next();\n});\n\n//全局后置路由守卫 - 初始化、每次路由切换时被调用\nrouter.afterEach((to, from) => {\n    document.title = to.meta.title || 'index';\n});\n```\n\n13. 独享路由守卫是在加某一个需要控制的路由上.<font color='red'>代码加在路由表需要控制的路由中</font>\n```js router/index.js\nbeforeRouteEnter(to, from, next) {\n\t// ...\n}\n```\n\n14. 组件内守卫<font color='red'>代码加在组件里需要控制的路由中</font>\n\n```js\n//当路由进入之前   通过路由规则，进入该组件时被调用\nbeforeRouteEnter (to, from, next) { // ... },\n//当路由离开之前    通过路由规则，离开改组件时被调用\nbeforeRouteLeave (to, from, next) { // ... } \n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Vue2-0进阶-15-vue-router路由.md","raw":"title: Vue2.0进阶 - 15. vue-router路由\nauthor: OdinSam\ntags:\n  - router\n  - 路由\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: cc23\ndate: 2022-10-20 16:04:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n#### vue-router路由\n1. vue-router是vue的一个插件库，专门用来实现spa应用(单页面应用)\n2. 一个路由就是一组映射关系 key-value,key是路径，value是组件(前端)或函数(后端)\n3. 创建路由表,多级路由配置child时不需要写父路径 以及 /\n\n```js router/index.js\nimport VueRouter from 'vue-router';\nimport Home from '../components/Home.vue';\nimport About from '../components/About.vue';\nexport default new VueRouter({\n//路由工作的两种模式 默认是hash模式 mode改变模式为history模式\n    mode: 'history',\n    routes: [\n        {\n            path: '/home',\n            component: Home,\n            children: [\n            \t//不需要写父路径 以及 /  也可以给路由命名 跳转时可以不用path 使用name即可\n                { path: 'news', component: News,name:'news',\n                \tchildren: [\n                        {\n                            name: 'detail',\n                            //路由使用parmas传参,跳转必须使用name不可以使用path  获取使用$route.params.id获取\n                            path: 'detail/:id',\n                            component: Detail,\n                            //给details组件传递对象，所有数据在details中可以以props的方式接收\n                            // props:{a:1,b:2}\n                            //如果props是true，则路由收到的params参数会以props的形式传递 即 id 会以props方式传递\n                            // props:true\n                            // 如果props是函数，则路由同样以props的形式传递参数给组件，但是这可以通过route结构获取到query并传参（此处使用解构赋值的连续写法 先从route中结构获取query，再从query中结构出id，title\n                            props({query:{id,title}}){ return {id,title} }\n                            \n                        }\n                    ]\n                },\n                { path: 'messages', component: Message }\n            ]\n        },\n        {\n            path: '/about',\n            component: About\n        }\n    ]\n});\n```\n\n4. 加载VueRouter插件并加载路由表\n```js main.js\nimport Vue from 'vue';\nimport App from './App.vue';\nimport VueRouter from 'vue-router';\nimport router from './router';\n\nVue.config.productionTip = false;\nVue.use(VueRouter);\nnew Vue({\n    render: (h) => h(App),\n    router\n}).$mount('#app');\n```\n5. 使用route-link实现路由切换 route-view 指定展示位置(被切换掉组件会被销毁)\n```js \n<!--一级路由-->\n<router-link class=\"navitem\" active-class=\"navitem-active\" to=\"/home\">Home Page</router-link>\n<!--一级路由  replace模式：控制路由器跳转时操作浏览器历史记录的模式，默认是push追加记录，replace是替换当前记录。-->\n<router-link replace class=\"navitem\" active-class=\"navitem-active\" to=\"/home\">Home Page</router-link>\n<!--二级路由-->\n<router-link to=\"/home/news\">News</router-link>\n<!--route-view展示-->\n<router-view></router-view>\n<!-- router-link url querystring传参 -->\n<router-link :to=\"`/home/news/detail?id=${n.id}`\">{{n.title}}</router-link>\n<!-- router-link url params传参 -->\n<router-link :to=\"`/home/news/detail/${n.id}`\">{{n.title}}-byid</router-link>\n<!-- router-link to对象 query传参 只能用name 不能用path-->\n<router-link :to=\"{\n\tname:'detail',\n    \tquery:{ id:n.id }\n}\">\n{{n.title}} - query对象形式\n</router-link>\n<!-- router-link to对象 param传参 只能用name 不能用path-->\n<router-link :to=\"{\n\tname:'detailid',\n    \tparams:{ id:n.id }\n}\">\n{{n.title}} - params对象形式\n</router-link>\n```\n6. 路由组件一般放在components文件夹，路由组件放在page文件夹\n7. 每一个组件都有自己的$route属性，存储自己的路由信息\n8. 整个应用只有一个router，可以通过$router获取\n9. 也可以不借助router-link实现路由跳转.两种模式：push模式和replace模式\n\n```js\n//编程式导航 push模式 query传参\npushShow(n) {\n    this.$router.push({\n        name:'detail',\n        query:{ id:n.id }\n    });\n},\n//编程式导航 replace模式 params传参\nreplaceShow(n) {\n    this.$router.replace({\n        name:'detailid',\n        params:{ id:n.id }\n    });\n},\n\nbackClick() { this.$router.back(); },\t//后退\nforwardClick() { this.$router.forward(); },\t//前进\ngoClick() { this.$router.go(2); } //跳转\n```\n\n10. 可以使用keep-alive标签包含用来缓存路由组件默认缓存所有组件。:include=\"[‘组件名’]\" 指定需要缓存的路由组件。exclude功能刚好相反\n```js\n<keep-alive :include=\"['Message']\">\n    <router-view></router-view>\n</keep-alive>\n<keep-alive :exclude=\"['News']\">\n    <router-view></router-view>\n</keep-alive>\n```\n\n11. 当使用keep-alive包含路由组件后，组件不会触发beforeDestroy销毁流程。需要使用路由组件独有的两个生命周期解决 activated()激活、deactivated()失活。\n\n```js\n//激活\nactivated() {\n    this.timer=setInterval(() => {\n        this.opacity -= 0.01\n        if (this.opacity <= 0) this.opacity = 1\n        \n    }, 16);\n},\n//失活\ndeactivated() {\n    clearInterval(this.timer)\n}\n```\n\n12. 路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享路由守卫、组件内守卫\n```js router/index.js\n//路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享守卫、组件内守卫\n//全局前置路由守卫 - 初始化、每次路由切换时被调用\nrouter.beforeEach((to, from, next) => {\n    if (to.meta.isAuth) {\n        //判断权限\n        if (localStorage.getItem('token') === 'odinsam') next();\n        else alert('undefind token');\n    } else next();\n});\n\n//全局后置路由守卫 - 初始化、每次路由切换时被调用\nrouter.afterEach((to, from) => {\n    document.title = to.meta.title || 'index';\n});\n```\n\n13. 独享路由守卫是在加某一个需要控制的路由上.<font color='red'>代码加在路由表需要控制的路由中</font>\n```js router/index.js\nbeforeRouteEnter(to, from, next) {\n\t// ...\n}\n```\n\n14. 组件内守卫<font color='red'>代码加在组件里需要控制的路由中</font>\n\n```js\n//当路由进入之前   通过路由规则，进入该组件时被调用\nbeforeRouteEnter (to, from, next) { // ... },\n//当路由离开之前    通过路由规则，离开改组件时被调用\nbeforeRouteLeave (to, from, next) { // ... } \n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Vue2-0进阶-15-vue-router路由","published":1,"updated":"2023-03-10T08:09:17.350Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza39004b5cs97jr880k4","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"vue-router路由\"><a class=\"markdownIt-Anchor\" href=\"#vue-router路由\"></a> vue-router路由</h4>\n<ol>\n<li>vue-router是vue的一个插件库，专门用来实现spa应用(单页面应用)</li>\n<li>一个路由就是一组映射关系 key-value,key是路径，value是组件(前端)或函数(后端)</li>\n<li>创建路由表,多级路由配置child时不需要写父路径 以及 /</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>router/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> VueRouter <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Home <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../components/Home.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> About <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../components/About.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\"><span class=\"comment\">//路由工作的两种模式 默认是hash模式 mode改变模式为history模式</span></span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;history&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/home&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: Home,</span><br><span class=\"line\">            <span class=\"attr\">children</span>: [</span><br><span class=\"line\">            \t<span class=\"comment\">//不需要写父路径 以及 /  也可以给路由命名 跳转时可以不用path 使用name即可</span></span><br><span class=\"line\">                &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;news&#x27;</span>, <span class=\"attr\">component</span>: News,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;news&#x27;</span>,</span><br><span class=\"line\">                \t<span class=\"attr\">children</span>: [</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;detail&#x27;</span>,</span><br><span class=\"line\">                            <span class=\"comment\">//路由使用parmas传参,跳转必须使用name不可以使用path  获取使用$route.params.id获取</span></span><br><span class=\"line\">                            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;detail/:id&#x27;</span>,</span><br><span class=\"line\">                            <span class=\"attr\">component</span>: Detail,</span><br><span class=\"line\">                            <span class=\"comment\">//给details组件传递对象，所有数据在details中可以以props的方式接收</span></span><br><span class=\"line\">                            <span class=\"comment\">// props:&#123;a:1,b:2&#125;</span></span><br><span class=\"line\">                            <span class=\"comment\">//如果props是true，则路由收到的params参数会以props的形式传递 即 id 会以props方式传递</span></span><br><span class=\"line\">                            <span class=\"comment\">// props:true</span></span><br><span class=\"line\">                            <span class=\"comment\">// 如果props是函数，则路由同样以props的形式传递参数给组件，但是这可以通过route结构获取到query并传参（此处使用解构赋值的连续写法 先从route中结构获取query，再从query中结构出id，title</span></span><br><span class=\"line\">                            <span class=\"function\"><span class=\"title\">props</span>(<span class=\"params\">&#123;query:&#123;id,title&#125;&#125;</span>)</span>&#123; <span class=\"keyword\">return</span> &#123;id,title&#125; &#125;</span><br><span class=\"line\">                            </span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    ]</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;messages&#x27;</span>, <span class=\"attr\">component</span>: Message &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/about&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: About</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>加载VueRouter插件并加载路由表</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> VueRouter <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</span><br><span class=\"line\">Vue.use(VueRouter);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App),</span><br><span class=\"line\">    router</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>使用route-link实现路由切换 route-view 指定展示位置(被切换掉组件会被销毁)</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--一级路由--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navitem&quot;</span> <span class=\"attr\">active-class</span>=<span class=\"string\">&quot;navitem-active&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home&quot;</span>&gt;</span>Home Page<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!--一级路由  replace模式：控制路由器跳转时操作浏览器历史记录的模式，默认是push追加记录，replace是替换当前记录。--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">replace</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navitem&quot;</span> <span class=\"attr\">active-class</span>=<span class=\"string\">&quot;navitem-active&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home&quot;</span>&gt;</span>Home Page<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!--二级路由--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home/news&quot;</span>&gt;</span>News<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!--route-view展示--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- router-link url querystring传参 --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/home/news/detail?id=$&#123;n.id&#125;`&quot;</span>&gt;</span>&#123;&#123;n.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- router-link url params传参 --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/home/news/detail/$&#123;n.id&#125;`&quot;</span>&gt;</span>&#123;&#123;n.title&#125;&#125;-byid<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- router-link to对象 query传参 只能用name 不能用path--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">\tname:&#x27;detail&#x27;,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">    \tquery:&#123; id:n.id &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">&#123;&#123;n.title&#125;&#125; - query对象形式</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- router-link to对象 param传参 只能用name 不能用path--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">\tname:&#x27;detailid&#x27;,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">    \tparams:&#123; id:n.id &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">&#123;&#123;n.title&#125;&#125; - params对象形式</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>路由组件一般放在components文件夹，路由组件放在page文件夹</li>\n<li>每一个组件都有自己的$route属性，存储自己的路由信息</li>\n<li>整个应用只有一个router，可以通过$router获取</li>\n<li>也可以不借助router-link实现路由跳转.两种模式：push模式和replace模式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//编程式导航 push模式 query传参</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">pushShow</span>(<span class=\"params\">n</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$router.push(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;detail&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">query</span>:&#123; <span class=\"attr\">id</span>:n.id &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">//编程式导航 replace模式 params传参</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">replaceShow</span>(<span class=\"params\">n</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$router.replace(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;detailid&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">params</span>:&#123; <span class=\"attr\">id</span>:n.id &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">backClick</span>(<span class=\"params\"></span>)</span> &#123; <span class=\"built_in\">this</span>.$router.back(); &#125;,\t<span class=\"comment\">//后退</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">forwardClick</span>(<span class=\"params\"></span>)</span> &#123; <span class=\"built_in\">this</span>.$router.forward(); &#125;,\t<span class=\"comment\">//前进</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">goClick</span>(<span class=\"params\"></span>)</span> &#123; <span class=\"built_in\">this</span>.$router.go(<span class=\"number\">2</span>); &#125; <span class=\"comment\">//跳转</span></span><br></pre></td></tr></table></figure>\n<ol start=\"10\">\n<li>可以使用keep-alive标签包含用来缓存路由组件默认缓存所有组件。:include=&quot;[‘组件名’]&quot; 指定需要缓存的路由组件。exclude功能刚好相反</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;keep-alive :include=<span class=\"string\">&quot;[&#x27;Message&#x27;]&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/keep-alive&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">:exclude</span>=<span class=\"string\">&quot;[&#x27;News&#x27;]&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ol start=\"11\">\n<li>当使用keep-alive包含路由组件后，组件不会触发beforeDestroy销毁流程。需要使用路由组件独有的两个生命周期解决 activated()激活、deactivated()失活。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//激活</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">activated</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.timer=<span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.opacity -= <span class=\"number\">0.01</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.opacity &lt;= <span class=\"number\">0</span>) <span class=\"built_in\">this</span>.opacity = <span class=\"number\">1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;, <span class=\"number\">16</span>);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">//失活</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">deactivated</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.timer)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"12\">\n<li>路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享路由守卫、组件内守卫</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>router/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享守卫、组件内守卫</span></span><br><span class=\"line\"><span class=\"comment\">//全局前置路由守卫 - 初始化、每次路由切换时被调用</span></span><br><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (to.meta.isAuth) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//判断权限</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;token&#x27;</span>) === <span class=\"string\">&#x27;odinsam&#x27;</span>) next();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> alert(<span class=\"string\">&#x27;undefind token&#x27;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> next();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//全局后置路由守卫 - 初始化、每次路由切换时被调用</span></span><br><span class=\"line\">router.afterEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.title = to.meta.title || <span class=\"string\">&#x27;index&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"13\">\n<li>独享路由守卫是在加某一个需要控制的路由上.<font color='red'>代码加在路由表需要控制的路由中</font></li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>router/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">beforeRouteEnter</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>)</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"14\">\n<li>组件内守卫<font color='red'>代码加在组件里需要控制的路由中</font></li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//当路由进入之前   通过路由规则，进入该组件时被调用</span></span><br><span class=\"line\">beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123; <span class=\"comment\">// ... &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//当路由离开之前    通过路由规则，离开改组件时被调用</span></span><br><span class=\"line\">beforeRouteLeave (to, <span class=\"keyword\">from</span>, next) &#123; <span class=\"comment\">// ... &#125; </span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h4 id=\"vue-router路由\"><a class=\"markdownIt-Anchor\" href=\"#vue-router路由\"></a> vue-router路由</h4>\n<ol>\n<li>vue-router是vue的一个插件库，专门用来实现spa应用(单页面应用)</li>\n<li>一个路由就是一组映射关系 key-value,key是路径，value是组件(前端)或函数(后端)</li>\n<li>创建路由表,多级路由配置child时不需要写父路径 以及 /</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>router/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> VueRouter <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Home <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../components/Home.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> About <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../components/About.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\"><span class=\"comment\">//路由工作的两种模式 默认是hash模式 mode改变模式为history模式</span></span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;history&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/home&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: Home,</span><br><span class=\"line\">            <span class=\"attr\">children</span>: [</span><br><span class=\"line\">            \t<span class=\"comment\">//不需要写父路径 以及 /  也可以给路由命名 跳转时可以不用path 使用name即可</span></span><br><span class=\"line\">                &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;news&#x27;</span>, <span class=\"attr\">component</span>: News,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;news&#x27;</span>,</span><br><span class=\"line\">                \t<span class=\"attr\">children</span>: [</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;detail&#x27;</span>,</span><br><span class=\"line\">                            <span class=\"comment\">//路由使用parmas传参,跳转必须使用name不可以使用path  获取使用$route.params.id获取</span></span><br><span class=\"line\">                            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;detail/:id&#x27;</span>,</span><br><span class=\"line\">                            <span class=\"attr\">component</span>: Detail,</span><br><span class=\"line\">                            <span class=\"comment\">//给details组件传递对象，所有数据在details中可以以props的方式接收</span></span><br><span class=\"line\">                            <span class=\"comment\">// props:&#123;a:1,b:2&#125;</span></span><br><span class=\"line\">                            <span class=\"comment\">//如果props是true，则路由收到的params参数会以props的形式传递 即 id 会以props方式传递</span></span><br><span class=\"line\">                            <span class=\"comment\">// props:true</span></span><br><span class=\"line\">                            <span class=\"comment\">// 如果props是函数，则路由同样以props的形式传递参数给组件，但是这可以通过route结构获取到query并传参（此处使用解构赋值的连续写法 先从route中结构获取query，再从query中结构出id，title</span></span><br><span class=\"line\">                            <span class=\"function\"><span class=\"title\">props</span>(<span class=\"params\">&#123;query:&#123;id,title&#125;&#125;</span>)</span>&#123; <span class=\"keyword\">return</span> &#123;id,title&#125; &#125;</span><br><span class=\"line\">                            </span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    ]</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;messages&#x27;</span>, <span class=\"attr\">component</span>: Message &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/about&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">component</span>: About</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>加载VueRouter插件并加载路由表</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> VueRouter <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-router&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span>;</span><br><span class=\"line\">Vue.use(VueRouter);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">render</span>: <span class=\"function\">(<span class=\"params\">h</span>) =&gt;</span> h(App),</span><br><span class=\"line\">    router</span><br><span class=\"line\">&#125;).$mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>使用route-link实现路由切换 route-view 指定展示位置(被切换掉组件会被销毁)</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--一级路由--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navitem&quot;</span> <span class=\"attr\">active-class</span>=<span class=\"string\">&quot;navitem-active&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home&quot;</span>&gt;</span>Home Page<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!--一级路由  replace模式：控制路由器跳转时操作浏览器历史记录的模式，默认是push追加记录，replace是替换当前记录。--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">replace</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;navitem&quot;</span> <span class=\"attr\">active-class</span>=<span class=\"string\">&quot;navitem-active&quot;</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home&quot;</span>&gt;</span>Home Page<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!--二级路由--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/home/news&quot;</span>&gt;</span>News<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!--route-view展示--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- router-link url querystring传参 --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/home/news/detail?id=$&#123;n.id&#125;`&quot;</span>&gt;</span>&#123;&#123;n.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- router-link url params传参 --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;`/home/news/detail/$&#123;n.id&#125;`&quot;</span>&gt;</span>&#123;&#123;n.title&#125;&#125;-byid<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- router-link to对象 query传参 只能用name 不能用path--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">\tname:&#x27;detail&#x27;,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">    \tquery:&#123; id:n.id &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">&#123;&#123;n.title&#125;&#125; - query对象形式</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- router-link to对象 param传参 只能用name 不能用path--&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">:to</span>=<span class=\"string\">&quot;&#123;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">\tname:&#x27;detailid&#x27;,</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">    \tparams:&#123; id:n.id &#125;</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\"><span class=\"xml\">&#125;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">&#123;&#123;n.title&#125;&#125; - params对象形式</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>路由组件一般放在components文件夹，路由组件放在page文件夹</li>\n<li>每一个组件都有自己的$route属性，存储自己的路由信息</li>\n<li>整个应用只有一个router，可以通过$router获取</li>\n<li>也可以不借助router-link实现路由跳转.两种模式：push模式和replace模式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//编程式导航 push模式 query传参</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">pushShow</span>(<span class=\"params\">n</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$router.push(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;detail&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">query</span>:&#123; <span class=\"attr\">id</span>:n.id &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">//编程式导航 replace模式 params传参</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">replaceShow</span>(<span class=\"params\">n</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.$router.replace(&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;detailid&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">params</span>:&#123; <span class=\"attr\">id</span>:n.id &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">backClick</span>(<span class=\"params\"></span>)</span> &#123; <span class=\"built_in\">this</span>.$router.back(); &#125;,\t<span class=\"comment\">//后退</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">forwardClick</span>(<span class=\"params\"></span>)</span> &#123; <span class=\"built_in\">this</span>.$router.forward(); &#125;,\t<span class=\"comment\">//前进</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">goClick</span>(<span class=\"params\"></span>)</span> &#123; <span class=\"built_in\">this</span>.$router.go(<span class=\"number\">2</span>); &#125; <span class=\"comment\">//跳转</span></span><br></pre></td></tr></table></figure>\n<ol start=\"10\">\n<li>可以使用keep-alive标签包含用来缓存路由组件默认缓存所有组件。:include=&quot;[‘组件名’]&quot; 指定需要缓存的路由组件。exclude功能刚好相反</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;keep-alive :include=<span class=\"string\">&quot;[&#x27;Message&#x27;]&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\">&lt;/keep-alive&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">:exclude</span>=<span class=\"string\">&quot;[&#x27;News&#x27;]&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ol start=\"11\">\n<li>当使用keep-alive包含路由组件后，组件不会触发beforeDestroy销毁流程。需要使用路由组件独有的两个生命周期解决 activated()激活、deactivated()失活。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//激活</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">activated</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.timer=<span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.opacity -= <span class=\"number\">0.01</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.opacity &lt;= <span class=\"number\">0</span>) <span class=\"built_in\">this</span>.opacity = <span class=\"number\">1</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;, <span class=\"number\">16</span>);</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">//失活</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">deactivated</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">clearInterval</span>(<span class=\"built_in\">this</span>.timer)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"12\">\n<li>路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享路由守卫、组件内守卫</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>router/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享守卫、组件内守卫</span></span><br><span class=\"line\"><span class=\"comment\">//全局前置路由守卫 - 初始化、每次路由切换时被调用</span></span><br><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (to.meta.isAuth) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//判断权限</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&#x27;token&#x27;</span>) === <span class=\"string\">&#x27;odinsam&#x27;</span>) next();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> alert(<span class=\"string\">&#x27;undefind token&#x27;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> next();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//全局后置路由守卫 - 初始化、每次路由切换时被调用</span></span><br><span class=\"line\">router.afterEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.title = to.meta.title || <span class=\"string\">&#x27;index&#x27;</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ol start=\"13\">\n<li>独享路由守卫是在加某一个需要控制的路由上.<font color='red'>代码加在路由表需要控制的路由中</font></li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>router/index.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">beforeRouteEnter</span>(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>)</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"14\">\n<li>组件内守卫<font color='red'>代码加在组件里需要控制的路由中</font></li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//当路由进入之前   通过路由规则，进入该组件时被调用</span></span><br><span class=\"line\">beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123; <span class=\"comment\">// ... &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//当路由离开之前    通过路由规则，离开改组件时被调用</span></span><br><span class=\"line\">beforeRouteLeave (to, <span class=\"keyword\">from</span>, next) &#123; <span class=\"comment\">// ... &#125; </span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue2.0进阶学习","author":"OdinSam","abbrlink":"e255","date":"2022-10-18T07:13:00.000Z","_content":"> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n### [Vue2.0进阶 - 01. ref属性](/articles/dd21.html)\n\n### [Vue2.0进阶 - 02. props配置项](/articles/40e6.html)\n\n### [Vue2.0进阶 - 03. mixins混入配置项](/articles/6426.html)\n\n### [Vue2.0进阶 - 04. plugins插件](/articles/ec79.html)\n\n### [Vue2.0进阶 - 05. vue的style](/articles/4576.html)\n\n### [Vue2.0进阶 - 06. webStorage浏览器的本地存储](/articles/fef3.html)\n\n### [Vue2.0进阶 - 07. vue自定义事件](/articles/e1f2.html)\n\n### [Vue2.0进阶 - 08. 全局事件总线](/articles/10d9.html)\n\n### [Vue2.0进阶 - 09. 消息订阅与发布](/articles/ac9b.html)\n\n### [Vue2.0进阶 - 10. nextTick与props传递函数](/articles/fc6a.html)\n\n### [Vue2.0进阶 - 11. 动画效果](/articles/f2de.html)\n\n### [Vue2.0进阶 - 12. 配置代理](/articles/551e.html)\n\n### [Vue2.0进阶 - 13. slot插槽](/articles/d7ab.html)\n\n### [Vue2.0进阶 - 14. vuex](/articles/97b5.html)\n\n### [Vue2.0进阶 - 15. vue-router路由](/articles/cc23.html)\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue2-0进阶学习.md","raw":"title: Vue2.0进阶学习\nauthor: OdinSam\ntags:\n  - vue2\ncategories:\n  - 前端\n  - vue2\nabbrlink: e255\ndate: 2022-10-18 15:13:00\n---\n> [Vue2.0进阶学习](/articles/e255.html) \n\n<!--more-->\n\n### [Vue2.0进阶 - 01. ref属性](/articles/dd21.html)\n\n### [Vue2.0进阶 - 02. props配置项](/articles/40e6.html)\n\n### [Vue2.0进阶 - 03. mixins混入配置项](/articles/6426.html)\n\n### [Vue2.0进阶 - 04. plugins插件](/articles/ec79.html)\n\n### [Vue2.0进阶 - 05. vue的style](/articles/4576.html)\n\n### [Vue2.0进阶 - 06. webStorage浏览器的本地存储](/articles/fef3.html)\n\n### [Vue2.0进阶 - 07. vue自定义事件](/articles/e1f2.html)\n\n### [Vue2.0进阶 - 08. 全局事件总线](/articles/10d9.html)\n\n### [Vue2.0进阶 - 09. 消息订阅与发布](/articles/ac9b.html)\n\n### [Vue2.0进阶 - 10. nextTick与props传递函数](/articles/fc6a.html)\n\n### [Vue2.0进阶 - 11. 动画效果](/articles/f2de.html)\n\n### [Vue2.0进阶 - 12. 配置代理](/articles/551e.html)\n\n### [Vue2.0进阶 - 13. slot插槽](/articles/d7ab.html)\n\n### [Vue2.0进阶 - 14. vuex](/articles/97b5.html)\n\n### [Vue2.0进阶 - 15. vue-router路由](/articles/cc23.html)\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue2-0进阶学习","published":1,"updated":"2023-03-10T08:09:38.239Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3a004d5cs90nmpehp5","content":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h3 id=\"vue20进阶-01-ref属性\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-01-ref属性\"></a> <a href=\"/articles/dd21.html\">Vue2.0进阶 - 01. ref属性</a></h3>\n<h3 id=\"vue20进阶-02-props配置项\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-02-props配置项\"></a> <a href=\"/articles/40e6.html\">Vue2.0进阶 - 02. props配置项</a></h3>\n<h3 id=\"vue20进阶-03-mixins混入配置项\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-03-mixins混入配置项\"></a> <a href=\"/articles/6426.html\">Vue2.0进阶 - 03. mixins混入配置项</a></h3>\n<h3 id=\"vue20进阶-04-plugins插件\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-04-plugins插件\"></a> <a href=\"/articles/ec79.html\">Vue2.0进阶 - 04. plugins插件</a></h3>\n<h3 id=\"vue20进阶-05-vue的style\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-05-vue的style\"></a> <a href=\"/articles/4576.html\">Vue2.0进阶 - 05. vue的style</a></h3>\n<h3 id=\"vue20进阶-06-webstorage浏览器的本地存储\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-06-webstorage浏览器的本地存储\"></a> <a href=\"/articles/fef3.html\">Vue2.0进阶 - 06. webStorage浏览器的本地存储</a></h3>\n<h3 id=\"vue20进阶-07-vue自定义事件\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-07-vue自定义事件\"></a> <a href=\"/articles/e1f2.html\">Vue2.0进阶 - 07. vue自定义事件</a></h3>\n<h3 id=\"vue20进阶-08-全局事件总线\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-08-全局事件总线\"></a> <a href=\"/articles/10d9.html\">Vue2.0进阶 - 08. 全局事件总线</a></h3>\n<h3 id=\"vue20进阶-09-消息订阅与发布\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-09-消息订阅与发布\"></a> <a href=\"/articles/ac9b.html\">Vue2.0进阶 - 09. 消息订阅与发布</a></h3>\n<h3 id=\"vue20进阶-10-nexttick与props传递函数\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-10-nexttick与props传递函数\"></a> <a href=\"/articles/fc6a.html\">Vue2.0进阶 - 10. nextTick与props传递函数</a></h3>\n<h3 id=\"vue20进阶-11-动画效果\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-11-动画效果\"></a> <a href=\"/articles/f2de.html\">Vue2.0进阶 - 11. 动画效果</a></h3>\n<h3 id=\"vue20进阶-12-配置代理\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-12-配置代理\"></a> <a href=\"/articles/551e.html\">Vue2.0进阶 - 12. 配置代理</a></h3>\n<h3 id=\"vue20进阶-13-slot插槽\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-13-slot插槽\"></a> <a href=\"/articles/d7ab.html\">Vue2.0进阶 - 13. slot插槽</a></h3>\n<h3 id=\"vue20进阶-14-vuex\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-14-vuex\"></a> <a href=\"/articles/97b5.html\">Vue2.0进阶 - 14. vuex</a></h3>\n<h3 id=\"vue20进阶-15-vue-router路由\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-15-vue-router路由\"></a> <a href=\"/articles/cc23.html\">Vue2.0进阶 - 15. vue-router路由</a></h3>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n</blockquote>","more":"<h3 id=\"vue20进阶-01-ref属性\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-01-ref属性\"></a> <a href=\"/articles/dd21.html\">Vue2.0进阶 - 01. ref属性</a></h3>\n<h3 id=\"vue20进阶-02-props配置项\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-02-props配置项\"></a> <a href=\"/articles/40e6.html\">Vue2.0进阶 - 02. props配置项</a></h3>\n<h3 id=\"vue20进阶-03-mixins混入配置项\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-03-mixins混入配置项\"></a> <a href=\"/articles/6426.html\">Vue2.0进阶 - 03. mixins混入配置项</a></h3>\n<h3 id=\"vue20进阶-04-plugins插件\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-04-plugins插件\"></a> <a href=\"/articles/ec79.html\">Vue2.0进阶 - 04. plugins插件</a></h3>\n<h3 id=\"vue20进阶-05-vue的style\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-05-vue的style\"></a> <a href=\"/articles/4576.html\">Vue2.0进阶 - 05. vue的style</a></h3>\n<h3 id=\"vue20进阶-06-webstorage浏览器的本地存储\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-06-webstorage浏览器的本地存储\"></a> <a href=\"/articles/fef3.html\">Vue2.0进阶 - 06. webStorage浏览器的本地存储</a></h3>\n<h3 id=\"vue20进阶-07-vue自定义事件\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-07-vue自定义事件\"></a> <a href=\"/articles/e1f2.html\">Vue2.0进阶 - 07. vue自定义事件</a></h3>\n<h3 id=\"vue20进阶-08-全局事件总线\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-08-全局事件总线\"></a> <a href=\"/articles/10d9.html\">Vue2.0进阶 - 08. 全局事件总线</a></h3>\n<h3 id=\"vue20进阶-09-消息订阅与发布\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-09-消息订阅与发布\"></a> <a href=\"/articles/ac9b.html\">Vue2.0进阶 - 09. 消息订阅与发布</a></h3>\n<h3 id=\"vue20进阶-10-nexttick与props传递函数\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-10-nexttick与props传递函数\"></a> <a href=\"/articles/fc6a.html\">Vue2.0进阶 - 10. nextTick与props传递函数</a></h3>\n<h3 id=\"vue20进阶-11-动画效果\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-11-动画效果\"></a> <a href=\"/articles/f2de.html\">Vue2.0进阶 - 11. 动画效果</a></h3>\n<h3 id=\"vue20进阶-12-配置代理\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-12-配置代理\"></a> <a href=\"/articles/551e.html\">Vue2.0进阶 - 12. 配置代理</a></h3>\n<h3 id=\"vue20进阶-13-slot插槽\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-13-slot插槽\"></a> <a href=\"/articles/d7ab.html\">Vue2.0进阶 - 13. slot插槽</a></h3>\n<h3 id=\"vue20进阶-14-vuex\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-14-vuex\"></a> <a href=\"/articles/97b5.html\">Vue2.0进阶 - 14. vuex</a></h3>\n<h3 id=\"vue20进阶-15-vue-router路由\"><a class=\"markdownIt-Anchor\" href=\"#vue20进阶-15-vue-router路由\"></a> <a href=\"/articles/cc23.html\">Vue2.0进阶 - 15. vue-router路由</a></h3>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue3.0 - 01. 初识vue3","author":"OdinSam","abbrlink":"2774","date":"2022-10-20T08:13:00.000Z","_content":"> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 1. main.js 与vue2的区别\n```js\n//引入的不在是vue的构造函数，而是一个名为createApp的工厂函数\nimport { createApp } from 'vue';\nimport App from './App.vue';\n\n//createApp(app)创建应用实例对象app，类似vue2中的vm，但比vm更轻\ncreateApp(App).mount('#app');\n```\n\n#### 2. setup函数\n1. vue3.0中的衣蛾新配置项setup.setup是所有组合api的基础\n2. 组件中所有用都的 数据、方法等都要配置在setup中。\n3. setup函数的返回值有两种，\n如果返回一个对象，则对象中的属性、方法等在模板中军可以直接使用\n如果返回一个渲染函数，则可以自定渲染内容\n4. setup不能是一个async函数，因为返回值不再是return的对象而是promise。末班看不到reutnr对象中的属性。\n5. 尽量不要vue3与vue2混用。如果重名以vue3为主\n6. ref可以将string、number转换为引用实现的实例对象(refimpl).从而实现数据的响应式操作.模板在解析是如果显示的数据是refimpl对象则会自动获取value的值.对象类型的数据使用了reactive函数实现了响应式.\n7. reactive只能将对象类型的数据改变为响应式数据。并且在获取时不需要再通过value而可以直接获取 let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。\n8. reactive定义的响应式数据可以直接修改对象的属性、通过数组的下标操作数组.具体实现原理如下:\n```js\nlet person = {name:'odinsam'}\nlet p = new Proxy(person,{\n    // 读取属性时调用\n    get(target,propName) { return Reflect.get(target,propName) }\n    // 新增、修改时调用\n    set(target,propName,value) { Reflect.set(target,propName,value) }\n    // 删除属性时调用\n    deleteProperty(target,propName){ return Reflect.deleteProperty(target,propName) }\n})\n```\n\n备注:\n\tref通常用来定义基本类型数据，reactive通常定义对象类型的数据\n\tref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据\n\tref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value\n    \n9. setup在beforeCreate之前执行，且this是undefind\n10. setup的参数\n\tprops:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性\n\tcontext:\n\tattrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 attrs slots:收到的插槽内容，相当于 this.slots\n\temit: 分发自定义事件的函数 相当于 this.$emit\n    \n```js student.vue\n<template>\n    <div>\n        <span>props信息:{{propa}}</span>\n        <p></p>\n        <span>姓名:{{stuName}}</span>\n        <p></p>\n        <span>班级:{{stuInfo1.className}}</span><span>年龄:{{stuInfo1.stuAge}}</span>\n        <p></p>\n        <span>性别:{{stuInfo2.sex}}</span><span>地址:{{stuInfo2.address}}</span>\n        <p></p>\n        <span>爱好:{{stuInfo2.hobby}}</span>\n        <p></p>\n        <span v-show=\"stuInfo2.newProto\">新属性:{{stuInfo2.newProto}}</span>\n        <p></p>\n        <slot name=\"slotStu\"></slot>\n        <p></p>\n        <button @click=\"btnClick\">edit</button>\n        <button @click=\"addProto\">add Prototype</button>\n        <button @click=\"deleteProto\">delete Prototype</button>\n        <button @click=\"customEventClick\">emit触发自定义事件</button>\n    </div>\n  </template>\n  \n  <script>\n    // ref 可以将基本数据类型或者对象改变为响应式数据 let name = ref('odinsam')\n    // reactive 只能将对象类型的数据改变为响应式数据 let stuInfo = reactive({sex:'男',address:'beijing'})\n    // let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。\n    // 实现原理\n    /**\n            let person = {name:'odinsam'}\n            let p = new Proxy(person,{\n                // 读取属性时调用\n                get(target,propName) { return Reflect.get(target,propName) }\n                // 新增、修改时调用\n                set(target,propName,value) { Reflect.set(target,propName,value) }\n                // 删除属性时调用\n                deleteProperty(target,propName){ return Reflect.deleteProperty(target,propName) }\n            })\n    */\n    //备注:\n    // 1. ref通常用来定义基本类型数据，reactive通常定义对象类型的数据\n    // 2. ref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据\n    // 3. ref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value\n  import { ref,reactive } from 'vue'\n  export default {\n    name: 'Student',\n    //接收父组件通过props传递的数据\n    props: ['propa'],\n    //申明父组件传递的自定义事件。不申明会有警告\n    emit: ['cmpEvent'],\n    /**\n    props:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性\n    context:\n    \tattrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 $attrs\n        slot:收到的插槽内容，相当于 this.$slots\n        emit: 分发自定义事件的函数 相当于 this.$emit\n     */\n    setup(props,context) {\n        //将数据转换为refimpl对象从而实现响应式编程\n        let stuName = ref('odinsam')\n        let stuInfo1 = ref({ className: '一年级', stuAge: 19 })\n        let stuInfo2 = reactive({ sex: '男', address: 'beijing',hobby:['学习','游戏','看电影'] })\n        function btnClick() {\n            console.log(stuName);\n            //获取refimpl对象的值通过value属性\n            stuName.value = 'changeName'\n            stuInfo1.value.className = '二年级'\n            stuInfo1.value.stuAge = 20\n            //reactive定义的代理对象在获取时不需要再通过value而可以直接获取 \n            stuInfo2.sex = '女'\n            stuInfo2.address = 'nanjing'\n        }\n        // vue3可以直接修改对象的属性、通过数组的下标操作数组.\n        function addProto() {\n            //vue2 中 需要 this.$set(对象,'属性名',属性的值) 操作    \n            stuInfo2.newProto = '新属性'\n        }\n        function deleteProto() {\n            //vue2 中 需要 this.$delete(对象,'属性名') 操作    \n            delete stuInfo2.newProto\n        }\n        function customEventClick() {\n            //触发自定义事件\n            context.emit('cmpEvent', {customEventParam:'自定义方法的参数'});   \n        }\n        return {\n            stuName,\n            stuInfo1,\n            stuInfo2,\n            btnClick,\n            addProto,\n            deleteProto,\n            customEventClick\n        }\n    }\n  }\n  </script>\n  \n  <style>\n  </style>\n```\n```js app.vue\n<template>\n    <div>\n        <h2>app组件</h2>\n        <p></p>\n        <div>自定义方法的参数:{{cstmParam.customEventParam}}</div>\n        <Student propa=\"propa传值\" @cmpEvent=\"cmpEvent\">\n            <!--vue3中 需要使用 v-slot:插槽名 的方式定义  不能使用 slot='操作名' 的vue2形式-->\n            <template v-slot:slotStu>\n                <div style=\"background-color:aquamarine\">\n                    <span>插槽内容</span>   \n                </div>\n            </template>\n        </student>\n    </div>\n</template>\n\n<script>\nimport { reactive } from '@vue/reactivity';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    setup() {\n        let cstmParam = reactive({})\n        function cmpEvent(param) {\n            cstmParam['customEventParam'] = param['customEventParam']\n        }\n        return {\n            cstmParam,\n            cmpEvent,\n        }\n    }\n}\n</script>\n\n<style>\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue3-0-01-初识vue3.md","raw":"title: Vue3.0 - 01. 初识vue3\nauthor: OdinSam\ntags:\n  - vue3\ncategories:\n  - 前端\n  - vue3\nabbrlink: '2774'\ndate: 2022-10-20 16:13:00\n---\n> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 1. main.js 与vue2的区别\n```js\n//引入的不在是vue的构造函数，而是一个名为createApp的工厂函数\nimport { createApp } from 'vue';\nimport App from './App.vue';\n\n//createApp(app)创建应用实例对象app，类似vue2中的vm，但比vm更轻\ncreateApp(App).mount('#app');\n```\n\n#### 2. setup函数\n1. vue3.0中的衣蛾新配置项setup.setup是所有组合api的基础\n2. 组件中所有用都的 数据、方法等都要配置在setup中。\n3. setup函数的返回值有两种，\n如果返回一个对象，则对象中的属性、方法等在模板中军可以直接使用\n如果返回一个渲染函数，则可以自定渲染内容\n4. setup不能是一个async函数，因为返回值不再是return的对象而是promise。末班看不到reutnr对象中的属性。\n5. 尽量不要vue3与vue2混用。如果重名以vue3为主\n6. ref可以将string、number转换为引用实现的实例对象(refimpl).从而实现数据的响应式操作.模板在解析是如果显示的数据是refimpl对象则会自动获取value的值.对象类型的数据使用了reactive函数实现了响应式.\n7. reactive只能将对象类型的数据改变为响应式数据。并且在获取时不需要再通过value而可以直接获取 let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。\n8. reactive定义的响应式数据可以直接修改对象的属性、通过数组的下标操作数组.具体实现原理如下:\n```js\nlet person = {name:'odinsam'}\nlet p = new Proxy(person,{\n    // 读取属性时调用\n    get(target,propName) { return Reflect.get(target,propName) }\n    // 新增、修改时调用\n    set(target,propName,value) { Reflect.set(target,propName,value) }\n    // 删除属性时调用\n    deleteProperty(target,propName){ return Reflect.deleteProperty(target,propName) }\n})\n```\n\n备注:\n\tref通常用来定义基本类型数据，reactive通常定义对象类型的数据\n\tref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据\n\tref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value\n    \n9. setup在beforeCreate之前执行，且this是undefind\n10. setup的参数\n\tprops:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性\n\tcontext:\n\tattrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 attrs slots:收到的插槽内容，相当于 this.slots\n\temit: 分发自定义事件的函数 相当于 this.$emit\n    \n```js student.vue\n<template>\n    <div>\n        <span>props信息:{{propa}}</span>\n        <p></p>\n        <span>姓名:{{stuName}}</span>\n        <p></p>\n        <span>班级:{{stuInfo1.className}}</span><span>年龄:{{stuInfo1.stuAge}}</span>\n        <p></p>\n        <span>性别:{{stuInfo2.sex}}</span><span>地址:{{stuInfo2.address}}</span>\n        <p></p>\n        <span>爱好:{{stuInfo2.hobby}}</span>\n        <p></p>\n        <span v-show=\"stuInfo2.newProto\">新属性:{{stuInfo2.newProto}}</span>\n        <p></p>\n        <slot name=\"slotStu\"></slot>\n        <p></p>\n        <button @click=\"btnClick\">edit</button>\n        <button @click=\"addProto\">add Prototype</button>\n        <button @click=\"deleteProto\">delete Prototype</button>\n        <button @click=\"customEventClick\">emit触发自定义事件</button>\n    </div>\n  </template>\n  \n  <script>\n    // ref 可以将基本数据类型或者对象改变为响应式数据 let name = ref('odinsam')\n    // reactive 只能将对象类型的数据改变为响应式数据 let stuInfo = reactive({sex:'男',address:'beijing'})\n    // let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。\n    // 实现原理\n    /**\n            let person = {name:'odinsam'}\n            let p = new Proxy(person,{\n                // 读取属性时调用\n                get(target,propName) { return Reflect.get(target,propName) }\n                // 新增、修改时调用\n                set(target,propName,value) { Reflect.set(target,propName,value) }\n                // 删除属性时调用\n                deleteProperty(target,propName){ return Reflect.deleteProperty(target,propName) }\n            })\n    */\n    //备注:\n    // 1. ref通常用来定义基本类型数据，reactive通常定义对象类型的数据\n    // 2. ref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据\n    // 3. ref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value\n  import { ref,reactive } from 'vue'\n  export default {\n    name: 'Student',\n    //接收父组件通过props传递的数据\n    props: ['propa'],\n    //申明父组件传递的自定义事件。不申明会有警告\n    emit: ['cmpEvent'],\n    /**\n    props:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性\n    context:\n    \tattrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 $attrs\n        slot:收到的插槽内容，相当于 this.$slots\n        emit: 分发自定义事件的函数 相当于 this.$emit\n     */\n    setup(props,context) {\n        //将数据转换为refimpl对象从而实现响应式编程\n        let stuName = ref('odinsam')\n        let stuInfo1 = ref({ className: '一年级', stuAge: 19 })\n        let stuInfo2 = reactive({ sex: '男', address: 'beijing',hobby:['学习','游戏','看电影'] })\n        function btnClick() {\n            console.log(stuName);\n            //获取refimpl对象的值通过value属性\n            stuName.value = 'changeName'\n            stuInfo1.value.className = '二年级'\n            stuInfo1.value.stuAge = 20\n            //reactive定义的代理对象在获取时不需要再通过value而可以直接获取 \n            stuInfo2.sex = '女'\n            stuInfo2.address = 'nanjing'\n        }\n        // vue3可以直接修改对象的属性、通过数组的下标操作数组.\n        function addProto() {\n            //vue2 中 需要 this.$set(对象,'属性名',属性的值) 操作    \n            stuInfo2.newProto = '新属性'\n        }\n        function deleteProto() {\n            //vue2 中 需要 this.$delete(对象,'属性名') 操作    \n            delete stuInfo2.newProto\n        }\n        function customEventClick() {\n            //触发自定义事件\n            context.emit('cmpEvent', {customEventParam:'自定义方法的参数'});   \n        }\n        return {\n            stuName,\n            stuInfo1,\n            stuInfo2,\n            btnClick,\n            addProto,\n            deleteProto,\n            customEventClick\n        }\n    }\n  }\n  </script>\n  \n  <style>\n  </style>\n```\n```js app.vue\n<template>\n    <div>\n        <h2>app组件</h2>\n        <p></p>\n        <div>自定义方法的参数:{{cstmParam.customEventParam}}</div>\n        <Student propa=\"propa传值\" @cmpEvent=\"cmpEvent\">\n            <!--vue3中 需要使用 v-slot:插槽名 的方式定义  不能使用 slot='操作名' 的vue2形式-->\n            <template v-slot:slotStu>\n                <div style=\"background-color:aquamarine\">\n                    <span>插槽内容</span>   \n                </div>\n            </template>\n        </student>\n    </div>\n</template>\n\n<script>\nimport { reactive } from '@vue/reactivity';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    setup() {\n        let cstmParam = reactive({})\n        function cmpEvent(param) {\n            cstmParam['customEventParam'] = param['customEventParam']\n        }\n        return {\n            cstmParam,\n            cmpEvent,\n        }\n    }\n}\n</script>\n\n<style>\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue3-0-01-初识vue3","published":1,"updated":"2023-03-10T08:20:02.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3b004g5cs9ab16b89y","content":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-mainjs-与vue2的区别\"><a class=\"markdownIt-Anchor\" href=\"#1-mainjs-与vue2的区别\"></a> 1. main.js 与vue2的区别</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入的不在是vue的构造函数，而是一个名为createApp的工厂函数</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//createApp(app)创建应用实例对象app，类似vue2中的vm，但比vm更轻</span></span><br><span class=\"line\">createApp(App).mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-setup函数\"><a class=\"markdownIt-Anchor\" href=\"#2-setup函数\"></a> 2. setup函数</h4>\n<ol>\n<li>vue3.0中的衣蛾新配置项setup.setup是所有组合api的基础</li>\n<li>组件中所有用都的 数据、方法等都要配置在setup中。</li>\n<li>setup函数的返回值有两种，<br />\n如果返回一个对象，则对象中的属性、方法等在模板中军可以直接使用<br />\n如果返回一个渲染函数，则可以自定渲染内容</li>\n<li>setup不能是一个async函数，因为返回值不再是return的对象而是promise。末班看不到reutnr对象中的属性。</li>\n<li>尽量不要vue3与vue2混用。如果重名以vue3为主</li>\n<li>ref可以将string、number转换为引用实现的实例对象(refimpl).从而实现数据的响应式操作.模板在解析是如果显示的数据是refimpl对象则会自动获取value的值.对象类型的数据使用了reactive函数实现了响应式.</li>\n<li>reactive只能将对象类型的数据改变为响应式数据。并且在获取时不需要再通过value而可以直接获取 let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。</li>\n<li>reactive定义的响应式数据可以直接修改对象的属性、通过数组的下标操作数组.具体实现原理如下:</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;odinsam&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(person,&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 读取属性时调用</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\">target,propName</span>)</span> &#123; <span class=\"keyword\">return</span> <span class=\"built_in\">Reflect</span>.get(target,propName) &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 新增、修改时调用</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">target,propName,value</span>)</span> &#123; <span class=\"built_in\">Reflect</span>.set(target,propName,value) &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除属性时调用</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">deleteProperty</span>(<span class=\"params\">target,propName</span>)</span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">Reflect</span>.deleteProperty(target,propName) &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>备注:<br />\nref通常用来定义基本类型数据，reactive通常定义对象类型的数据<br />\nref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据<br />\nref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value</p>\n<ol start=\"9\">\n<li>setup在beforeCreate之前执行，且this是undefind</li>\n<li>setup的参数<br />\nprops:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性<br />\ncontext:<br />\nattrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 attrs slots:收到的插槽内容，相当于 this.slots<br />\nemit: 分发自定义事件的函数 相当于 this.$emit</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>props信息:&#123;&#123;propa&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>班级:&#123;&#123;stuInfo1.className&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄:&#123;&#123;stuInfo1.stuAge&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>性别:&#123;&#123;stuInfo2.sex&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>地址:&#123;&#123;stuInfo2.address&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>爱好:&#123;&#123;stuInfo2.hobby&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;stuInfo2.newProto&quot;</span>&gt;</span>新属性:&#123;&#123;stuInfo2.newProto&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;slotStu&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick&quot;</span>&gt;</span>edit<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addProto&quot;</span>&gt;</span>add Prototype<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;deleteProto&quot;</span>&gt;</span>delete Prototype<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;customEventClick&quot;</span>&gt;</span>emit触发自定义事件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  &lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// ref 可以将基本数据类型或者对象改变为响应式数据 let name = ref(&#x27;odinsam&#x27;)</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// reactive 只能将对象类型的数据改变为响应式数据 let stuInfo = reactive(&#123;sex:&#x27;男&#x27;,address:&#x27;beijing&#x27;&#125;)</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 实现原理</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">            let person = &#123;name:&#x27;odinsam&#x27;&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">            let p = new Proxy(person,&#123;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                // 读取属性时调用</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                get(target,propName) &#123; return Reflect.get(target,propName) &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                // 新增、修改时调用</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                set(target,propName,value) &#123; Reflect.set(target,propName,value) &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                // 删除属性时调用</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                deleteProperty(target,propName)&#123; return Reflect.deleteProperty(target,propName) &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">            &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    */</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//备注:</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 1. ref通常用来定义基本类型数据，reactive通常定义对象类型的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 2. ref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 3. ref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"keyword\">import</span> &#123; ref,reactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//接收父组件通过props传递的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;propa&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//申明父组件传递的自定义事件。不申明会有警告</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">emit</span>: [<span class=\"string\">&#x27;cmpEvent&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    props:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    context:</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    \tattrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 $attrs</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        slot:收到的插槽内容，相当于 this.$slots</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        emit: 分发自定义事件的函数 相当于 this.$emit</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">     */</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props,context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//将数据转换为refimpl对象从而实现响应式编程</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> stuName = ref(<span class=\"string\">&#x27;odinsam&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> stuInfo1 = ref(&#123; <span class=\"attr\">className</span>: <span class=\"string\">&#x27;一年级&#x27;</span>, <span class=\"attr\">stuAge</span>: <span class=\"number\">19</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> stuInfo2 = reactive(&#123; <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"attr\">address</span>: <span class=\"string\">&#x27;beijing&#x27;</span>,<span class=\"attr\">hobby</span>:[<span class=\"string\">&#x27;学习&#x27;</span>,<span class=\"string\">&#x27;游戏&#x27;</span>,<span class=\"string\">&#x27;看电影&#x27;</span>] &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">btnClick</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(stuName);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//获取refimpl对象的值通过value属性</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuName.value = <span class=\"string\">&#x27;changeName&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo1.value.className = <span class=\"string\">&#x27;二年级&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo1.value.stuAge = <span class=\"number\">20</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//reactive定义的代理对象在获取时不需要再通过value而可以直接获取 </span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo2.sex = <span class=\"string\">&#x27;女&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo2.address = <span class=\"string\">&#x27;nanjing&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// vue3可以直接修改对象的属性、通过数组的下标操作数组.</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addProto</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//vue2 中 需要 this.$set(对象,&#x27;属性名&#x27;,属性的值) 操作    </span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo2.newProto = <span class=\"string\">&#x27;新属性&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteProto</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//vue2 中 需要 this.$delete(对象,&#x27;属性名&#x27;) 操作    </span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">delete</span> stuInfo2.newProto</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">customEventClick</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//触发自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            context.emit(<span class=\"string\">&#x27;cmpEvent&#x27;</span>, &#123;<span class=\"attr\">customEventParam</span>:<span class=\"string\">&#x27;自定义方法的参数&#x27;</span>&#125;);   </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuName,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo1,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo2,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            btnClick,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            addProto,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            deleteProto,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            customEventClick</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>自定义方法的参数:&#123;&#123;cstmParam.customEventParam&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">propa</span>=<span class=\"string\">&quot;propa传值&quot;</span> @<span class=\"attr\">cmpEvent</span>=<span class=\"string\">&quot;cmpEvent&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"comment\">&lt;!--vue3中 需要使用 v-slot:插槽名 的方式定义  不能使用 slot=&#x27;操作名&#x27; 的vue2形式--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:slotStu</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color:aquamarine&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>插槽内容<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>   </span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; reactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@vue/reactivity&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> cstmParam = reactive(&#123;&#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cmpEvent</span>(<span class=\"params\">param</span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            cstmParam[<span class=\"string\">&#x27;customEventParam&#x27;</span>] = param[<span class=\"string\">&#x27;customEventParam&#x27;</span>]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            cstmParam,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            cmpEvent,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>","more":"<h4 id=\"1-mainjs-与vue2的区别\"><a class=\"markdownIt-Anchor\" href=\"#1-mainjs-与vue2的区别\"></a> 1. main.js 与vue2的区别</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入的不在是vue的构造函数，而是一个名为createApp的工厂函数</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//createApp(app)创建应用实例对象app，类似vue2中的vm，但比vm更轻</span></span><br><span class=\"line\">createApp(App).mount(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-setup函数\"><a class=\"markdownIt-Anchor\" href=\"#2-setup函数\"></a> 2. setup函数</h4>\n<ol>\n<li>vue3.0中的衣蛾新配置项setup.setup是所有组合api的基础</li>\n<li>组件中所有用都的 数据、方法等都要配置在setup中。</li>\n<li>setup函数的返回值有两种，<br />\n如果返回一个对象，则对象中的属性、方法等在模板中军可以直接使用<br />\n如果返回一个渲染函数，则可以自定渲染内容</li>\n<li>setup不能是一个async函数，因为返回值不再是return的对象而是promise。末班看不到reutnr对象中的属性。</li>\n<li>尽量不要vue3与vue2混用。如果重名以vue3为主</li>\n<li>ref可以将string、number转换为引用实现的实例对象(refimpl).从而实现数据的响应式操作.模板在解析是如果显示的数据是refimpl对象则会自动获取value的值.对象类型的数据使用了reactive函数实现了响应式.</li>\n<li>reactive只能将对象类型的数据改变为响应式数据。并且在获取时不需要再通过value而可以直接获取 let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。</li>\n<li>reactive定义的响应式数据可以直接修改对象的属性、通过数组的下标操作数组.具体实现原理如下:</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;odinsam&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(person,&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 读取属性时调用</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\">target,propName</span>)</span> &#123; <span class=\"keyword\">return</span> <span class=\"built_in\">Reflect</span>.get(target,propName) &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 新增、修改时调用</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">target,propName,value</span>)</span> &#123; <span class=\"built_in\">Reflect</span>.set(target,propName,value) &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除属性时调用</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">deleteProperty</span>(<span class=\"params\">target,propName</span>)</span>&#123; <span class=\"keyword\">return</span> <span class=\"built_in\">Reflect</span>.deleteProperty(target,propName) &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>备注:<br />\nref通常用来定义基本类型数据，reactive通常定义对象类型的数据<br />\nref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据<br />\nref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value</p>\n<ol start=\"9\">\n<li>setup在beforeCreate之前执行，且this是undefind</li>\n<li>setup的参数<br />\nprops:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性<br />\ncontext:<br />\nattrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 attrs slots:收到的插槽内容，相当于 this.slots<br />\nemit: 分发自定义事件的函数 相当于 this.$emit</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>props信息:&#123;&#123;propa&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓名:&#123;&#123;stuName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>班级:&#123;&#123;stuInfo1.className&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>年龄:&#123;&#123;stuInfo1.stuAge&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>性别:&#123;&#123;stuInfo2.sex&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>地址:&#123;&#123;stuInfo2.address&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>爱好:&#123;&#123;stuInfo2.hobby&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;stuInfo2.newProto&quot;</span>&gt;</span>新属性:&#123;&#123;stuInfo2.newProto&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;slotStu&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnClick&quot;</span>&gt;</span>edit<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addProto&quot;</span>&gt;</span>add Prototype<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;deleteProto&quot;</span>&gt;</span>delete Prototype<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;customEventClick&quot;</span>&gt;</span>emit触发自定义事件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  &lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// ref 可以将基本数据类型或者对象改变为响应式数据 let name = ref(&#x27;odinsam&#x27;)</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// reactive 只能将对象类型的数据改变为响应式数据 let stuInfo = reactive(&#123;sex:&#x27;男&#x27;,address:&#x27;beijing&#x27;&#125;)</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 实现原理</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">            let person = &#123;name:&#x27;odinsam&#x27;&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">            let p = new Proxy(person,&#123;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                // 读取属性时调用</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                get(target,propName) &#123; return Reflect.get(target,propName) &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                // 新增、修改时调用</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                set(target,propName,value) &#123; Reflect.set(target,propName,value) &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                // 删除属性时调用</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">                deleteProperty(target,propName)&#123; return Reflect.deleteProperty(target,propName) &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">            &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    */</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//备注:</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 1. ref通常用来定义基本类型数据，reactive通常定义对象类型的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 2. ref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 3. ref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"keyword\">import</span> &#123; ref,reactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//接收父组件通过props传递的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">props</span>: [<span class=\"string\">&#x27;propa&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//申明父组件传递的自定义事件。不申明会有警告</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">emit</span>: [<span class=\"string\">&#x27;cmpEvent&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    props:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    context:</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    \tattrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 $attrs</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        slot:收到的插槽内容，相当于 this.$slots</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        emit: 分发自定义事件的函数 相当于 this.$emit</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">     */</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props,context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//将数据转换为refimpl对象从而实现响应式编程</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> stuName = ref(<span class=\"string\">&#x27;odinsam&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> stuInfo1 = ref(&#123; <span class=\"attr\">className</span>: <span class=\"string\">&#x27;一年级&#x27;</span>, <span class=\"attr\">stuAge</span>: <span class=\"number\">19</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> stuInfo2 = reactive(&#123; <span class=\"attr\">sex</span>: <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"attr\">address</span>: <span class=\"string\">&#x27;beijing&#x27;</span>,<span class=\"attr\">hobby</span>:[<span class=\"string\">&#x27;学习&#x27;</span>,<span class=\"string\">&#x27;游戏&#x27;</span>,<span class=\"string\">&#x27;看电影&#x27;</span>] &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">btnClick</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(stuName);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//获取refimpl对象的值通过value属性</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuName.value = <span class=\"string\">&#x27;changeName&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo1.value.className = <span class=\"string\">&#x27;二年级&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo1.value.stuAge = <span class=\"number\">20</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//reactive定义的代理对象在获取时不需要再通过value而可以直接获取 </span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo2.sex = <span class=\"string\">&#x27;女&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo2.address = <span class=\"string\">&#x27;nanjing&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// vue3可以直接修改对象的属性、通过数组的下标操作数组.</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addProto</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//vue2 中 需要 this.$set(对象,&#x27;属性名&#x27;,属性的值) 操作    </span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo2.newProto = <span class=\"string\">&#x27;新属性&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteProto</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//vue2 中 需要 this.$delete(对象,&#x27;属性名&#x27;) 操作    </span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">delete</span> stuInfo2.newProto</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">customEventClick</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"comment\">//触发自定义事件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            context.emit(<span class=\"string\">&#x27;cmpEvent&#x27;</span>, &#123;<span class=\"attr\">customEventParam</span>:<span class=\"string\">&#x27;自定义方法的参数&#x27;</span>&#125;);   </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuName,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo1,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            stuInfo2,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            btnClick,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            addProto,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            deleteProto,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            customEventClick</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>自定义方法的参数:&#123;&#123;cstmParam.customEventParam&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">propa</span>=<span class=\"string\">&quot;propa传值&quot;</span> @<span class=\"attr\">cmpEvent</span>=<span class=\"string\">&quot;cmpEvent&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"comment\">&lt;!--vue3中 需要使用 v-slot:插槽名 的方式定义  不能使用 slot=&#x27;操作名&#x27; 的vue2形式--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:slotStu</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color:aquamarine&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>插槽内容<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>   </span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; reactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@vue/reactivity&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> cstmParam = reactive(&#123;&#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cmpEvent</span>(<span class=\"params\">param</span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            cstmParam[<span class=\"string\">&#x27;customEventParam&#x27;</span>] = param[<span class=\"string\">&#x27;customEventParam&#x27;</span>]</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            cstmParam,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            cmpEvent,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue3.0 - 03. 生命周期","author":"OdinSam","abbrlink":"4ed","date":"2022-10-21T08:24:00.000Z","_content":"> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 生命周期\n1. vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.\n2. 在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名\n3. 具体的变化如下\nbeforeCreate ==> setup()\ncreated ==> setup()\nbeforeMount ==> onBeforeMount\nmounted ==> onMounted\nbeforeUpdate ==> onBeforeUpdate\nupdated ==> onUpdated\nbeforeUnmount ==> onBeforeUnmount\nunmounted ==> onUnmounted\n4. 基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查\n![生命周期](/images/4ed/lifecycle.vue3.png)\n\n\n```js student.vue\n<template>\n    <div>\n        <h2>Student组件</h2><br/>\n        <span>increment: {{sum}}</span><br/>\n        <button @click=\"btnIncrement\">increment</button><br/>\n        \n        <hr />\n    </div>\n</template>\n  \n<script>\n/**\n\n*/\nimport {onBeforeMount, onBeforeUnmount, onBeforeUpdate, onMounted, onUnmounted, onUpdated, ref} from 'vue';\nexport default {\n    name: 'Student',\n    //vue2配置项的形式编写生命周期函数\n    // beforeCreate() {\n    //     console.log('---beforeCreate---');\n    // },\n    // created() {\n    //     console.log('---beforeCreate---');\n    // },\n    // beforeMount() {\n    //     console.log('---beforeMount---');\n    // },\n    // mounted() {\n    //     console.log('---mounted---');\n    // },\n    // beforeUpdate() {\n    //     console.log('---beforeUpdate---');\n    // },\n    // updated() {\n    //     console.log('---updated---');\n    // },\n    // beforeUnmount() {\n    //     console.log('---beforeUnmount---');\n    // },\n    // unmounted() {\n    //     console.log('---unmounted---');\n    // },\n    setup(props, context) {\n        let sum = ref(0)\n        let btnIncrement = function () {\n            sum.value++;\n        }\n        //组合api形式编写生命周期函数\n        onBeforeMount(() => {\n            console.log('---onBeforeMount---');\n        })\n        onMounted(() => {\n            console.log('---onMounted---');\n        })\n        onBeforeUpdate(() => {\n            console.log('---onBeforeUpdate---');\n        })\n        onUpdated(() => {\n            console.log('---onUpdated---');\n        })\n        onBeforeUnmount(() => {\n            console.log('---onBeforeUnmount---');\n        })\n        onUnmounted(()=>{\n            console.log('---onUnmounted---');\n        })\n        return {\n            sum,btnIncrement\n        }\n    }\n    \n}\n</script>\n  \n<style>\n</style>\n```\n\n```js app.vue\n<template>\n    <!--\n        生命周期：\n        1. vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.\n        2. 在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名\n        3. 具体的变化如下\n            beforeCreate ==>  setup()\n            created ==> setup()\n            beforeMount ==> onBeforeMount\n            mounted ==> onMounted\n            beforeUpdate ==> onBeforeUpdate\n            updated ==> onUpdated\n            beforeUnmount ==> onBeforeUnmount\n            unmounted ==> onUnmounted\n        4. 基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查\n    -->\n    <div>\n        <h2>app组件</h2><br/>\n        <button @click=\"isShowStudent\">显示、隐藏student组件</button>\n        <Student v-if=\"isShow\"></Student>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    \n    setup(props, context) {\n        let isShow = ref(true)\n        let isShowStudent = function () {\n            isShow.value = !isShow.value\n        }\n        return {\n            isShow,isShowStudent,\n        }\n    }\n}\n</script>\n\n<style>\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue3-0-03-生命周期.md","raw":"title: Vue3.0 - 03. 生命周期\nauthor: OdinSam\ntags:\n  - 生命周期\n  - vue3\ncategories:\n  - 前端\n  - vue3\nabbrlink: 4ed\ndate: 2022-10-21 16:24:00\n---\n> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 生命周期\n1. vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.\n2. 在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名\n3. 具体的变化如下\nbeforeCreate ==> setup()\ncreated ==> setup()\nbeforeMount ==> onBeforeMount\nmounted ==> onMounted\nbeforeUpdate ==> onBeforeUpdate\nupdated ==> onUpdated\nbeforeUnmount ==> onBeforeUnmount\nunmounted ==> onUnmounted\n4. 基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查\n![生命周期](/images/4ed/lifecycle.vue3.png)\n\n\n```js student.vue\n<template>\n    <div>\n        <h2>Student组件</h2><br/>\n        <span>increment: {{sum}}</span><br/>\n        <button @click=\"btnIncrement\">increment</button><br/>\n        \n        <hr />\n    </div>\n</template>\n  \n<script>\n/**\n\n*/\nimport {onBeforeMount, onBeforeUnmount, onBeforeUpdate, onMounted, onUnmounted, onUpdated, ref} from 'vue';\nexport default {\n    name: 'Student',\n    //vue2配置项的形式编写生命周期函数\n    // beforeCreate() {\n    //     console.log('---beforeCreate---');\n    // },\n    // created() {\n    //     console.log('---beforeCreate---');\n    // },\n    // beforeMount() {\n    //     console.log('---beforeMount---');\n    // },\n    // mounted() {\n    //     console.log('---mounted---');\n    // },\n    // beforeUpdate() {\n    //     console.log('---beforeUpdate---');\n    // },\n    // updated() {\n    //     console.log('---updated---');\n    // },\n    // beforeUnmount() {\n    //     console.log('---beforeUnmount---');\n    // },\n    // unmounted() {\n    //     console.log('---unmounted---');\n    // },\n    setup(props, context) {\n        let sum = ref(0)\n        let btnIncrement = function () {\n            sum.value++;\n        }\n        //组合api形式编写生命周期函数\n        onBeforeMount(() => {\n            console.log('---onBeforeMount---');\n        })\n        onMounted(() => {\n            console.log('---onMounted---');\n        })\n        onBeforeUpdate(() => {\n            console.log('---onBeforeUpdate---');\n        })\n        onUpdated(() => {\n            console.log('---onUpdated---');\n        })\n        onBeforeUnmount(() => {\n            console.log('---onBeforeUnmount---');\n        })\n        onUnmounted(()=>{\n            console.log('---onUnmounted---');\n        })\n        return {\n            sum,btnIncrement\n        }\n    }\n    \n}\n</script>\n  \n<style>\n</style>\n```\n\n```js app.vue\n<template>\n    <!--\n        生命周期：\n        1. vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.\n        2. 在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名\n        3. 具体的变化如下\n            beforeCreate ==>  setup()\n            created ==> setup()\n            beforeMount ==> onBeforeMount\n            mounted ==> onMounted\n            beforeUpdate ==> onBeforeUpdate\n            updated ==> onUpdated\n            beforeUnmount ==> onBeforeUnmount\n            unmounted ==> onUnmounted\n        4. 基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查\n    -->\n    <div>\n        <h2>app组件</h2><br/>\n        <button @click=\"isShowStudent\">显示、隐藏student组件</button>\n        <Student v-if=\"isShow\"></Student>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    \n    setup(props, context) {\n        let isShow = ref(true)\n        let isShowStudent = function () {\n            isShow.value = !isShow.value\n        }\n        return {\n            isShow,isShowStudent,\n        }\n    }\n}\n</script>\n\n<style>\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue3-0-03-生命周期","published":1,"updated":"2023-03-10T08:26:57.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3b004j5cs939t379jn","content":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"生命周期\"><a class=\"markdownIt-Anchor\" href=\"#生命周期\"></a> 生命周期</h4>\n<ol>\n<li>vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.</li>\n<li>在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名</li>\n<li>具体的变化如下<br />\nbeforeCreate ==&gt; setup()<br />\ncreated ==&gt; setup()<br />\nbeforeMount ==&gt; onBeforeMount<br />\nmounted ==&gt; onMounted<br />\nbeforeUpdate ==&gt; onBeforeUpdate<br />\nupdated ==&gt; onUpdated<br />\nbeforeUnmount ==&gt; onBeforeUnmount<br />\nunmounted ==&gt; onUnmounted</li>\n<li>基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查<br />\n<img src=\"/images/4ed/lifecycle.vue3.png\" alt=\"生命周期\" /></li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>increment: &#123;&#123;sum&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnIncrement&quot;</span>&gt;</span>increment<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        </span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"></span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;onBeforeMount, onBeforeUnmount, onBeforeUpdate, onMounted, onUnmounted, onUpdated, ref&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//vue2配置项的形式编写生命周期函数</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// beforeCreate() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeCreate---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// created() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeCreate---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// beforeMount() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeMount---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// mounted() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---mounted---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// beforeUpdate() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeUpdate---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// updated() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---updated---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// beforeUnmount() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeUnmount---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// unmounted() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---unmounted---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> sum = ref(<span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnIncrement = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            sum.value++;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//组合api形式编写生命周期函数</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onBeforeMount(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onBeforeMount---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onMounted(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onMounted---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onBeforeUpdate(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onBeforeUpdate---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onUpdated(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onUpdated---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onBeforeUnmount(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onBeforeUnmount---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onUnmounted(<span class=\"function\">()=&gt;</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onUnmounted---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            sum,btnIncrement</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">        生命周期：</span><br><span class=\"line\">        <span class=\"number\">1.</span> vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.</span><br><span class=\"line\">        <span class=\"number\">2.</span> 在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名</span><br><span class=\"line\">        <span class=\"number\">3.</span> 具体的变化如下</span><br><span class=\"line\">            beforeCreate ==&gt;  setup()</span><br><span class=\"line\">            created ==&gt; setup()</span><br><span class=\"line\">            beforeMount ==&gt; onBeforeMount</span><br><span class=\"line\">            mounted ==&gt; onMounted</span><br><span class=\"line\">            beforeUpdate ==&gt; onBeforeUpdate</span><br><span class=\"line\">            updated ==&gt; onUpdated</span><br><span class=\"line\">            beforeUnmount ==&gt; onBeforeUnmount</span><br><span class=\"line\">            unmounted ==&gt; onUnmounted</span><br><span class=\"line\">        <span class=\"number\">4.</span> 基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;isShowStudent&quot;</span>&gt;</span>显示、隐藏student组件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;ref&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> isShow = ref(<span class=\"literal\">true</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> isShowStudent = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            isShow.value = !isShow.value</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            isShow,isShowStudent,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>","more":"<h4 id=\"生命周期\"><a class=\"markdownIt-Anchor\" href=\"#生命周期\"></a> 生命周期</h4>\n<ol>\n<li>vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.</li>\n<li>在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名</li>\n<li>具体的变化如下<br />\nbeforeCreate ==&gt; setup()<br />\ncreated ==&gt; setup()<br />\nbeforeMount ==&gt; onBeforeMount<br />\nmounted ==&gt; onMounted<br />\nbeforeUpdate ==&gt; onBeforeUpdate<br />\nupdated ==&gt; onUpdated<br />\nbeforeUnmount ==&gt; onBeforeUnmount<br />\nunmounted ==&gt; onUnmounted</li>\n<li>基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查<br />\n<img src=\"/images/4ed/lifecycle.vue3.png\" alt=\"生命周期\" /></li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>increment: &#123;&#123;sum&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnIncrement&quot;</span>&gt;</span>increment<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        </span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"></span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;onBeforeMount, onBeforeUnmount, onBeforeUpdate, onMounted, onUnmounted, onUpdated, ref&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//vue2配置项的形式编写生命周期函数</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// beforeCreate() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeCreate---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// created() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeCreate---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// beforeMount() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeMount---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// mounted() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---mounted---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// beforeUpdate() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeUpdate---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// updated() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---updated---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// beforeUnmount() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---beforeUnmount---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// unmounted() &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">//     console.log(&#x27;---unmounted---&#x27;);</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// &#125;,</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> sum = ref(<span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnIncrement = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            sum.value++;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//组合api形式编写生命周期函数</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onBeforeMount(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onBeforeMount---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onMounted(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onMounted---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onBeforeUpdate(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onBeforeUpdate---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onUpdated(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onUpdated---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onBeforeUnmount(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onBeforeUnmount---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        onUnmounted(<span class=\"function\">()=&gt;</span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;---onUnmounted---&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            sum,btnIncrement</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">        生命周期：</span><br><span class=\"line\">        <span class=\"number\">1.</span> vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.</span><br><span class=\"line\">        <span class=\"number\">2.</span> 在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名</span><br><span class=\"line\">        <span class=\"number\">3.</span> 具体的变化如下</span><br><span class=\"line\">            beforeCreate ==&gt;  setup()</span><br><span class=\"line\">            created ==&gt; setup()</span><br><span class=\"line\">            beforeMount ==&gt; onBeforeMount</span><br><span class=\"line\">            mounted ==&gt; onMounted</span><br><span class=\"line\">            beforeUpdate ==&gt; onBeforeUpdate</span><br><span class=\"line\">            updated ==&gt; onUpdated</span><br><span class=\"line\">            beforeUnmount ==&gt; onBeforeUnmount</span><br><span class=\"line\">            unmounted ==&gt; onUnmounted</span><br><span class=\"line\">        <span class=\"number\">4.</span> 基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;isShowStudent&quot;</span>&gt;</span>显示、隐藏student组件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;ref&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    </span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> isShow = ref(<span class=\"literal\">true</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> isShowStudent = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            isShow.value = !isShow.value</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            isShow,isShowStudent,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue3.0 - 02. 计算属性与监视属性","author":"OdinSam","abbrlink":"3ab3","date":"2022-10-21T08:20:00.000Z","_content":"> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 计算属性\n1. 与vue2中的写法基本一致，直接在setup中定义计算属性 计算属性:computed()\n2. 只有get的简写形式 计算属性:computed(()=>{ return xxx })\n3. 有get有set的写法 计算属性:computed({ get(){ return xxx }, set(value){ xxx } })\n```js\nlet fullName = computed(() => {\n    return firstName + '-' + lastName;\n}),\n//完整写法\nlet fullName = computed({\n    get() {\n        return person.firstName + '-' + person.lastName;\n    },\n    set(value) {\n        person.firstName = value.split('-')[0];\n        person.lastName = value.split('-')[1];\n    }\n})\n```\n#### 监视属性\n1. watch([需要监视的属性],(newValue,oldValue)=>{ 监视的方法 },{ immediate:true,deep:true })\n2. 监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项\n3. 当watch监视的是reactive的对象时，无法正确的获取到oldValue的值\n4. 当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效\n5. 当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视\n\n```js \n// 1. 监视ref基本数据类型\nwatch([sum, message], (newValue, oldValue) => {\n    console.log('sum或message改变了',newValue,oldValue);\n}, { immediate: true })\n// 2. 监视reactvie对象类型 deep无效无需配置\nwatch([person], (newValue, oldValue) => {\n    console.log('person改变了',newValue,oldValue);\n}, { immediate: true })\n// 3. 监视reactvie对象类型的某一个属性\nwatch(()=>person.firstName, (newValue, oldValue) => {\n    console.log('person的firstName改变了',newValue,oldValue);\n}, { immediate: true })\n// 4. 监视reactvie对象类型的一些属性\nwatch([()=>person.firstName,()=>person.lastName], (newValue, oldValue) => {\n    console.log('person的firstName、lastName改变了',newValue,oldValue);\n}, { immediate: true })\n// 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到\nwatch([()=>person.job], (newValue, oldValue) => {\n    console.log('person的job改变了',newValue,oldValue);\n}, { immediate: true,deep:true})\n```\n\n#### watchEffect\n1. 不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。\n2. watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。\n```js\nwatchEffect(() => {\n    console.log(JSON.stringify(person));\n    console.log('watchEffect监视');\n})\n```\n\n\n```js student.vue\n<template>\n    <div>\n        <h2>Student组件</h2>\n        <h2>计算属性-computed</h2><br/>\n        <span>姓：</span><input type=\"text\" v-model=\"person.firstName\" /><br/>\n        <span>名：</span><input type=\"text\" v-model=\"person.lastName\" /><br/>\n        <span>爱好:{{person.hobby}}</span><br/>\n        <span>全名:{{fullName}}</span><br/>\n        <span>修改全名</span><input type=\"text\" v-model=\"fullName\" /><br/>\n        <span>stu的Job  </span>{{JSON.stringify(person.job)}}\n        <hr />\n        <h2>监视属性-watch</h2><br/>\n        <span>求和:{{sum}},信息:{{message}}</span><br/>\n        <button @click=\"btnEdit\">修改sum和message</button>\n        <button @click=\"btnStuName\">修改stu的姓名</button>\n        <button @click=\"btnEditStuHobby\">修改stu的爱好</button>\n        <button @click=\"btnEditStuJobA\">修改job中的a值</button>\n    </div>\n</template>\n  \n<script>\n\nimport {ref, computed, reactive,watch, watchEffect} from 'vue';\nexport default {\n    name: 'Student',\n    setup(props, context) {\n        let sum = ref(0)\n        let message = ref('消息')\n        let person = reactive({\n            firstName: 'odin',\n            lastName: 'sam',\n            hobby: ['抽烟', '喝酒', '烫头'],\n            job: {\n                a:{x:1,y:2}\n            }\n        })\n        let btnEdit = function () {\n            sum.value++;\n            message.value+=\"~\"\n        }\n        let btnStuName = function () {\n            person.firstName += \"!\";\n            person.lastName += \"~\";\n        }\n        let btnEditStuHobby = function () {\n            person.hobby.push('学习')\n        }\n\n        let btnEditStuJobA = function () {\n            person.job.a.x += 10;\n        }\n/**\n        计算属性\n        1. 与vue2中的写法基本一致，直接在setup中定义计算属性  计算属性:computed()\n        2. 只有get的简写形式 计算属性:computed(()=>{ return xxx })\n        3. 有get有set的写法 计算属性:computed({ get(){ return xxx }, set(value){ xxx } })\n*/\n        //简写\n        // let fullName = computed(() => {\n        //     return firstName + '-' + lastName;\n        // }),\n        //完整写法\n        let fullName = computed({\n            get() {\n                return person.firstName + '-' + person.lastName;\n            },\n            set(value) {\n                person.firstName = value.split('-')[0];\n                person.lastName = value.split('-')[1];\n            }\n        })\n/**\n        监视属性\n        1. watch([需要监视的属性],(newValue,oldValue)=>{ 监视的方法 },{ immediate:true,deep:true })\n        2. 监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项\n        3. 当watch监视的是reactive的对象时，无法正确的获取到oldValue的值\n        4. 当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效\n        5. 当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视\n*/\n\n        // 1. 监视ref基本数据类型\n        watch([sum, message], (newValue, oldValue) => {\n            console.log('sum或message改变了',newValue,oldValue);\n        }, { immediate: true })\n        // 2. 监视reactvie对象类型 deep无效无需配置\n        watch([person], (newValue, oldValue) => {\n            console.log('person改变了',newValue,oldValue);\n        }, { immediate: true })\n        // 3. 监视reactvie对象类型的某一个属性\n        watch(()=>person.firstName, (newValue, oldValue) => {\n            console.log('person的firstName改变了',newValue,oldValue);\n        }, { immediate: true })\n        // 4. 监视reactvie对象类型的一些属性\n        watch([()=>person.firstName,()=>person.lastName], (newValue, oldValue) => {\n            console.log('person的firstName、lastName改变了',newValue,oldValue);\n        }, { immediate: true })\n        // 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到\n        watch([()=>person.job], (newValue, oldValue) => {\n            console.log('person的job改变了',newValue,oldValue);\n        }, { immediate: true, deep: true }),\n\n/**\n        watchEffect\n        1. 不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。\n        2. watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。\n*/\n        watchEffect(() => {\n            console.log(JSON.stringify(person));\n            console.log('watchEffect监视');\n        })\n        return {\n            person,fullName,btnEdit,sum,message,btnStuName,btnEditStuHobby,btnEditStuJobA\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n```\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue3-0-02-计算属性与监视属性.md","raw":"title: Vue3.0 - 02. 计算属性与监视属性\nauthor: OdinSam\ntags:\n  - computed\n  - watch\n  - vue3\n  - ''\n  - ''\ncategories:\n  - 前端\n  - vue3\nabbrlink: 3ab3\ndate: 2022-10-21 16:20:00\n---\n> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 计算属性\n1. 与vue2中的写法基本一致，直接在setup中定义计算属性 计算属性:computed()\n2. 只有get的简写形式 计算属性:computed(()=>{ return xxx })\n3. 有get有set的写法 计算属性:computed({ get(){ return xxx }, set(value){ xxx } })\n```js\nlet fullName = computed(() => {\n    return firstName + '-' + lastName;\n}),\n//完整写法\nlet fullName = computed({\n    get() {\n        return person.firstName + '-' + person.lastName;\n    },\n    set(value) {\n        person.firstName = value.split('-')[0];\n        person.lastName = value.split('-')[1];\n    }\n})\n```\n#### 监视属性\n1. watch([需要监视的属性],(newValue,oldValue)=>{ 监视的方法 },{ immediate:true,deep:true })\n2. 监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项\n3. 当watch监视的是reactive的对象时，无法正确的获取到oldValue的值\n4. 当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效\n5. 当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视\n\n```js \n// 1. 监视ref基本数据类型\nwatch([sum, message], (newValue, oldValue) => {\n    console.log('sum或message改变了',newValue,oldValue);\n}, { immediate: true })\n// 2. 监视reactvie对象类型 deep无效无需配置\nwatch([person], (newValue, oldValue) => {\n    console.log('person改变了',newValue,oldValue);\n}, { immediate: true })\n// 3. 监视reactvie对象类型的某一个属性\nwatch(()=>person.firstName, (newValue, oldValue) => {\n    console.log('person的firstName改变了',newValue,oldValue);\n}, { immediate: true })\n// 4. 监视reactvie对象类型的一些属性\nwatch([()=>person.firstName,()=>person.lastName], (newValue, oldValue) => {\n    console.log('person的firstName、lastName改变了',newValue,oldValue);\n}, { immediate: true })\n// 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到\nwatch([()=>person.job], (newValue, oldValue) => {\n    console.log('person的job改变了',newValue,oldValue);\n}, { immediate: true,deep:true})\n```\n\n#### watchEffect\n1. 不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。\n2. watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。\n```js\nwatchEffect(() => {\n    console.log(JSON.stringify(person));\n    console.log('watchEffect监视');\n})\n```\n\n\n```js student.vue\n<template>\n    <div>\n        <h2>Student组件</h2>\n        <h2>计算属性-computed</h2><br/>\n        <span>姓：</span><input type=\"text\" v-model=\"person.firstName\" /><br/>\n        <span>名：</span><input type=\"text\" v-model=\"person.lastName\" /><br/>\n        <span>爱好:{{person.hobby}}</span><br/>\n        <span>全名:{{fullName}}</span><br/>\n        <span>修改全名</span><input type=\"text\" v-model=\"fullName\" /><br/>\n        <span>stu的Job  </span>{{JSON.stringify(person.job)}}\n        <hr />\n        <h2>监视属性-watch</h2><br/>\n        <span>求和:{{sum}},信息:{{message}}</span><br/>\n        <button @click=\"btnEdit\">修改sum和message</button>\n        <button @click=\"btnStuName\">修改stu的姓名</button>\n        <button @click=\"btnEditStuHobby\">修改stu的爱好</button>\n        <button @click=\"btnEditStuJobA\">修改job中的a值</button>\n    </div>\n</template>\n  \n<script>\n\nimport {ref, computed, reactive,watch, watchEffect} from 'vue';\nexport default {\n    name: 'Student',\n    setup(props, context) {\n        let sum = ref(0)\n        let message = ref('消息')\n        let person = reactive({\n            firstName: 'odin',\n            lastName: 'sam',\n            hobby: ['抽烟', '喝酒', '烫头'],\n            job: {\n                a:{x:1,y:2}\n            }\n        })\n        let btnEdit = function () {\n            sum.value++;\n            message.value+=\"~\"\n        }\n        let btnStuName = function () {\n            person.firstName += \"!\";\n            person.lastName += \"~\";\n        }\n        let btnEditStuHobby = function () {\n            person.hobby.push('学习')\n        }\n\n        let btnEditStuJobA = function () {\n            person.job.a.x += 10;\n        }\n/**\n        计算属性\n        1. 与vue2中的写法基本一致，直接在setup中定义计算属性  计算属性:computed()\n        2. 只有get的简写形式 计算属性:computed(()=>{ return xxx })\n        3. 有get有set的写法 计算属性:computed({ get(){ return xxx }, set(value){ xxx } })\n*/\n        //简写\n        // let fullName = computed(() => {\n        //     return firstName + '-' + lastName;\n        // }),\n        //完整写法\n        let fullName = computed({\n            get() {\n                return person.firstName + '-' + person.lastName;\n            },\n            set(value) {\n                person.firstName = value.split('-')[0];\n                person.lastName = value.split('-')[1];\n            }\n        })\n/**\n        监视属性\n        1. watch([需要监视的属性],(newValue,oldValue)=>{ 监视的方法 },{ immediate:true,deep:true })\n        2. 监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项\n        3. 当watch监视的是reactive的对象时，无法正确的获取到oldValue的值\n        4. 当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效\n        5. 当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视\n*/\n\n        // 1. 监视ref基本数据类型\n        watch([sum, message], (newValue, oldValue) => {\n            console.log('sum或message改变了',newValue,oldValue);\n        }, { immediate: true })\n        // 2. 监视reactvie对象类型 deep无效无需配置\n        watch([person], (newValue, oldValue) => {\n            console.log('person改变了',newValue,oldValue);\n        }, { immediate: true })\n        // 3. 监视reactvie对象类型的某一个属性\n        watch(()=>person.firstName, (newValue, oldValue) => {\n            console.log('person的firstName改变了',newValue,oldValue);\n        }, { immediate: true })\n        // 4. 监视reactvie对象类型的一些属性\n        watch([()=>person.firstName,()=>person.lastName], (newValue, oldValue) => {\n            console.log('person的firstName、lastName改变了',newValue,oldValue);\n        }, { immediate: true })\n        // 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到\n        watch([()=>person.job], (newValue, oldValue) => {\n            console.log('person的job改变了',newValue,oldValue);\n        }, { immediate: true, deep: true }),\n\n/**\n        watchEffect\n        1. 不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。\n        2. watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。\n*/\n        watchEffect(() => {\n            console.log(JSON.stringify(person));\n            console.log('watchEffect监视');\n        })\n        return {\n            person,fullName,btnEdit,sum,message,btnStuName,btnEditStuHobby,btnEditStuJobA\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n```\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue3-0-02-计算属性与监视属性","published":1,"updated":"2023-03-10T08:23:16.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3c004n5cs9e2vq2k3z","content":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"计算属性\"><a class=\"markdownIt-Anchor\" href=\"#计算属性\"></a> 计算属性</h4>\n<ol>\n<li>与vue2中的写法基本一致，直接在setup中定义计算属性 计算属性:computed()</li>\n<li>只有get的简写形式 计算属性:computed(()=&gt;{ return xxx })</li>\n<li>有get有set的写法 计算属性:computed({ get(){ return xxx }, set(value){ xxx } })</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fullName = computed(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> firstName + <span class=\"string\">&#x27;-&#x27;</span> + lastName;</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"><span class=\"comment\">//完整写法</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fullName = computed(&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> person.firstName + <span class=\"string\">&#x27;-&#x27;</span> + person.lastName;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span> &#123;</span><br><span class=\"line\">        person.firstName = value.split(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">        person.lastName = value.split(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"监视属性\"><a class=\"markdownIt-Anchor\" href=\"#监视属性\"></a> 监视属性</h4>\n<ol>\n<li>watch([需要监视的属性],(newValue,oldValue)=&gt;{ 监视的方法 },{ immediate:true,deep:true })</li>\n<li>监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项</li>\n<li>当watch监视的是reactive的对象时，无法正确的获取到oldValue的值</li>\n<li>当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效</li>\n<li>当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 监视ref基本数据类型</span></span><br><span class=\"line\">watch([sum, message], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;sum或message改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 2. 监视reactvie对象类型 deep无效无需配置</span></span><br><span class=\"line\">watch([person], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 3. 监视reactvie对象类型的某一个属性</span></span><br><span class=\"line\">watch(<span class=\"function\">()=&gt;</span>person.firstName, <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的firstName改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 4. 监视reactvie对象类型的一些属性</span></span><br><span class=\"line\">watch([<span class=\"function\">()=&gt;</span>person.firstName,<span class=\"function\">()=&gt;</span>person.lastName], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的firstName、lastName改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到</span></span><br><span class=\"line\">watch([<span class=\"function\">()=&gt;</span>person.job], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的job改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>,<span class=\"attr\">deep</span>:<span class=\"literal\">true</span>&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"watcheffect\"><a class=\"markdownIt-Anchor\" href=\"#watcheffect\"></a> watchEffect</h4>\n<ol>\n<li>不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。</li>\n<li>watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watchEffect(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(person));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;watchEffect监视&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>计算属性-computed<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;person.firstName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>名：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;person.lastName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>爱好:&#123;&#123;person.hobby&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>全名:&#123;&#123;fullName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>修改全名<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;fullName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>stu的Job  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123;JSON.stringify(person.job)&#125;&#125;</span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>监视属性-watch<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>求和:&#123;&#123;sum&#125;&#125;,信息:&#123;&#123;message&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnEdit&quot;</span>&gt;</span>修改sum和message<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnStuName&quot;</span>&gt;</span>修改stu的姓名<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnEditStuHobby&quot;</span>&gt;</span>修改stu的爱好<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnEditStuJobA&quot;</span>&gt;</span>修改job中的a值<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;ref, computed, reactive,watch, watchEffect&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> sum = ref(<span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> message = ref(<span class=\"string\">&#x27;消息&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> person = reactive(&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;odin&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">lastName</span>: <span class=\"string\">&#x27;sam&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">hobby</span>: [<span class=\"string\">&#x27;抽烟&#x27;</span>, <span class=\"string\">&#x27;喝酒&#x27;</span>, <span class=\"string\">&#x27;烫头&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">job</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"attr\">a</span>:&#123;<span class=\"attr\">x</span>:<span class=\"number\">1</span>,<span class=\"attr\">y</span>:<span class=\"number\">2</span>&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnEdit = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            sum.value++;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            message.value+=<span class=\"string\">&quot;~&quot;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnStuName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person.firstName += <span class=\"string\">&quot;!&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person.lastName += <span class=\"string\">&quot;~&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnEditStuHobby = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person.hobby.push(<span class=\"string\">&#x27;学习&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnEditStuJobA = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person.job.a.x += <span class=\"number\">10</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        计算属性</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        1. 与vue2中的写法基本一致，直接在setup中定义计算属性  计算属性:computed()</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        2. 只有get的简写形式 计算属性:computed(()=&gt;&#123; return xxx &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        3. 有get有set的写法 计算属性:computed(&#123; get()&#123; return xxx &#125;, set(value)&#123; xxx &#125; &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//简写</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// let fullName = computed(() =&gt; &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//     return firstName + &#x27;-&#x27; + lastName;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// &#125;),</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//完整写法</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> fullName = computed(&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"keyword\">return</span> person.firstName + <span class=\"string\">&#x27;-&#x27;</span> + person.lastName;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                person.firstName = value.split(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">0</span>];</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                person.lastName = value.split(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">1</span>];</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        监视属性</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        1. watch([需要监视的属性],(newValue,oldValue)=&gt;&#123; 监视的方法 &#125;,&#123; immediate:true,deep:true &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        2. 监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        3. 当watch监视的是reactive的对象时，无法正确的获取到oldValue的值</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        4. 当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        5. 当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 1. 监视ref基本数据类型</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch([sum, message], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;sum或message改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 2. 监视reactvie对象类型 deep无效无需配置</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch([person], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 3. 监视reactvie对象类型的某一个属性</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch(<span class=\"function\">()=&gt;</span>person.firstName, <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的firstName改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 4. 监视reactvie对象类型的一些属性</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch([<span class=\"function\">()=&gt;</span>person.firstName,<span class=\"function\">()=&gt;</span>person.lastName], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的firstName、lastName改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch([<span class=\"function\">()=&gt;</span>person.job], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的job改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>, <span class=\"attr\">deep</span>: <span class=\"literal\">true</span> &#125;),</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        watchEffect</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        1. 不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        2. watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watchEffect(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(person));</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;watchEffect监视&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person,fullName,btnEdit,sum,message,btnStuName,btnEditStuHobby,btnEditStuJobA</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>","more":"<h4 id=\"计算属性\"><a class=\"markdownIt-Anchor\" href=\"#计算属性\"></a> 计算属性</h4>\n<ol>\n<li>与vue2中的写法基本一致，直接在setup中定义计算属性 计算属性:computed()</li>\n<li>只有get的简写形式 计算属性:computed(()=&gt;{ return xxx })</li>\n<li>有get有set的写法 计算属性:computed({ get(){ return xxx }, set(value){ xxx } })</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fullName = computed(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> firstName + <span class=\"string\">&#x27;-&#x27;</span> + lastName;</span><br><span class=\"line\">&#125;),</span><br><span class=\"line\"><span class=\"comment\">//完整写法</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fullName = computed(&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> person.firstName + <span class=\"string\">&#x27;-&#x27;</span> + person.lastName;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span> &#123;</span><br><span class=\"line\">        person.firstName = value.split(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">        person.lastName = value.split(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"监视属性\"><a class=\"markdownIt-Anchor\" href=\"#监视属性\"></a> 监视属性</h4>\n<ol>\n<li>watch([需要监视的属性],(newValue,oldValue)=&gt;{ 监视的方法 },{ immediate:true,deep:true })</li>\n<li>监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项</li>\n<li>当watch监视的是reactive的对象时，无法正确的获取到oldValue的值</li>\n<li>当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效</li>\n<li>当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 监视ref基本数据类型</span></span><br><span class=\"line\">watch([sum, message], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;sum或message改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 2. 监视reactvie对象类型 deep无效无需配置</span></span><br><span class=\"line\">watch([person], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 3. 监视reactvie对象类型的某一个属性</span></span><br><span class=\"line\">watch(<span class=\"function\">()=&gt;</span>person.firstName, <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的firstName改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 4. 监视reactvie对象类型的一些属性</span></span><br><span class=\"line\">watch([<span class=\"function\">()=&gt;</span>person.firstName,<span class=\"function\">()=&gt;</span>person.lastName], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的firstName、lastName改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"comment\">// 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到</span></span><br><span class=\"line\">watch([<span class=\"function\">()=&gt;</span>person.job], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的job改变了&#x27;</span>,newValue,oldValue);</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>,<span class=\"attr\">deep</span>:<span class=\"literal\">true</span>&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"watcheffect\"><a class=\"markdownIt-Anchor\" href=\"#watcheffect\"></a> watchEffect</h4>\n<ol>\n<li>不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。</li>\n<li>watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watchEffect(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(person));</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;watchEffect监视&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>计算属性-computed<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>姓：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;person.firstName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>名：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;person.lastName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>爱好:&#123;&#123;person.hobby&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>全名:&#123;&#123;fullName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>修改全名<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;fullName&quot;</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>stu的Job  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>&#123;&#123;JSON.stringify(person.job)&#125;&#125;</span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>监视属性-watch<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>求和:&#123;&#123;sum&#125;&#125;,信息:&#123;&#123;message&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnEdit&quot;</span>&gt;</span>修改sum和message<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnStuName&quot;</span>&gt;</span>修改stu的姓名<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnEditStuHobby&quot;</span>&gt;</span>修改stu的爱好<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnEditStuJobA&quot;</span>&gt;</span>修改job中的a值<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;ref, computed, reactive,watch, watchEffect&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> sum = ref(<span class=\"number\">0</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> message = ref(<span class=\"string\">&#x27;消息&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> person = reactive(&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">firstName</span>: <span class=\"string\">&#x27;odin&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">lastName</span>: <span class=\"string\">&#x27;sam&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">hobby</span>: [<span class=\"string\">&#x27;抽烟&#x27;</span>, <span class=\"string\">&#x27;喝酒&#x27;</span>, <span class=\"string\">&#x27;烫头&#x27;</span>],</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">job</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"attr\">a</span>:&#123;<span class=\"attr\">x</span>:<span class=\"number\">1</span>,<span class=\"attr\">y</span>:<span class=\"number\">2</span>&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnEdit = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            sum.value++;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            message.value+=<span class=\"string\">&quot;~&quot;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnStuName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person.firstName += <span class=\"string\">&quot;!&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person.lastName += <span class=\"string\">&quot;~&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnEditStuHobby = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person.hobby.push(<span class=\"string\">&#x27;学习&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> btnEditStuJobA = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person.job.a.x += <span class=\"number\">10</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        计算属性</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        1. 与vue2中的写法基本一致，直接在setup中定义计算属性  计算属性:computed()</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        2. 只有get的简写形式 计算属性:computed(()=&gt;&#123; return xxx &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        3. 有get有set的写法 计算属性:computed(&#123; get()&#123; return xxx &#125;, set(value)&#123; xxx &#125; &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//简写</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// let fullName = computed(() =&gt; &#123;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//     return firstName + &#x27;-&#x27; + lastName;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// &#125;),</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">//完整写法</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> fullName = computed(&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"keyword\">return</span> person.firstName + <span class=\"string\">&#x27;-&#x27;</span> + person.lastName;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">value</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                person.firstName = value.split(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">0</span>];</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                person.lastName = value.split(<span class=\"string\">&#x27;-&#x27;</span>)[<span class=\"number\">1</span>];</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        监视属性</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        1. watch([需要监视的属性],(newValue,oldValue)=&gt;&#123; 监视的方法 &#125;,&#123; immediate:true,deep:true &#125;)</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        2. 监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        3. 当watch监视的是reactive的对象时，无法正确的获取到oldValue的值</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        4. 当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        5. 当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 1. 监视ref基本数据类型</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch([sum, message], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;sum或message改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 2. 监视reactvie对象类型 deep无效无需配置</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch([person], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 3. 监视reactvie对象类型的某一个属性</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch(<span class=\"function\">()=&gt;</span>person.firstName, <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的firstName改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 4. 监视reactvie对象类型的一些属性</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch([<span class=\"function\">()=&gt;</span>person.firstName,<span class=\"function\">()=&gt;</span>person.lastName], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的firstName、lastName改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span> &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"comment\">// 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watch([<span class=\"function\">()=&gt;</span>person.job], <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;person的job改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;, &#123; <span class=\"attr\">immediate</span>: <span class=\"literal\">true</span>, <span class=\"attr\">deep</span>: <span class=\"literal\">true</span> &#125;),</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        watchEffect</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        1. 不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">        2. watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        watchEffect(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(person));</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;watchEffect监视&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person,fullName,btnEdit,sum,message,btnStuName,btnEditStuHobby,btnEditStuJobA</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue3.0 - 04. vue3中的hook","author":"OdinSam","abbrlink":"bd63","date":"2022-10-21T08:27:00.000Z","_content":"> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### hook\n1. hook的本质是一个函数，把setup函数中使用的组合api进行封装。\n2. hook有点类似vue2中的mixin。\n3. 自定义hook可以让setup中的逻辑更加清楚易懂\n\n```js student.vue\n<template>\n    <div>\n        <h2>{{title}}</h2>\n        <div>点击的鼠标的坐标是:{{mpoint.x}},{{mpoint.y}}</div>\n        <div>hook中回传的信息:{{param.title}}</div>\n    </div>\n</template>\n  \n<script>\n/**\n\n*/\nimport { ref } from 'vue';\n//引入自定义hook函数\nimport usePoint from '../hooks/usePoint';\nexport default {\n    name: 'Student',\n    setup(props, context) {\n        let title = ref('Student组件')\n        let {mpoint,param } = usePoint({title:title.value});\n        return {\n            title,mpoint,param\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n```\n\n```js hooks/usePoint.js\nimport { onBeforeUnmount, onMounted, reactive } from '@vue/runtime-core';\nexport default function (param) {\n    let mpoint = reactive({ x: 0, y: 0 });\n    function savePotin(event) {\n        mpoint.x = event.pageX;\n        mpoint.y = event.pageY;\n        param.title = param.title + '-hook';\n        console.log('param', param);\n        console.log('mouse click point,', event.pageX, event.pageY);\n    }\n    onMounted(() => {\n        window.addEventListener('click', savePotin);\n    });\n    onBeforeUnmount(() => {\n        window.removeEventListener('click', savePotin);\n    });\n    //使用hook一定要给当前函数返回信息\n    return { mpoint, param };\n}\n\n```\n\n```js app.vue\n<template>\n    <div>\n        <h2>app组件</h2>\n        <button @click=\"isShowStuCpm\">显示、隐藏student组件</button>\n        <Student v-if=\"isShow\"></Student>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    setup(props, context) {\n        let isShow = ref(true)\n        let isShowStuCpm = function () {\n            isShow.value = !isShow.value\n        }\n        return {\n            isShow,isShowStuCpm\n        }\n    }\n}\n</script>\n\n<style>\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue3-0-04-vue3中的hook.md","raw":"title: Vue3.0 - 04. vue3中的hook\nauthor: OdinSam\ntags:\n  - vue3\n  - hook\ncategories:\n  - 前端\n  - vue3\nabbrlink: bd63\ndate: 2022-10-21 16:27:00\n---\n> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### hook\n1. hook的本质是一个函数，把setup函数中使用的组合api进行封装。\n2. hook有点类似vue2中的mixin。\n3. 自定义hook可以让setup中的逻辑更加清楚易懂\n\n```js student.vue\n<template>\n    <div>\n        <h2>{{title}}</h2>\n        <div>点击的鼠标的坐标是:{{mpoint.x}},{{mpoint.y}}</div>\n        <div>hook中回传的信息:{{param.title}}</div>\n    </div>\n</template>\n  \n<script>\n/**\n\n*/\nimport { ref } from 'vue';\n//引入自定义hook函数\nimport usePoint from '../hooks/usePoint';\nexport default {\n    name: 'Student',\n    setup(props, context) {\n        let title = ref('Student组件')\n        let {mpoint,param } = usePoint({title:title.value});\n        return {\n            title,mpoint,param\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n```\n\n```js hooks/usePoint.js\nimport { onBeforeUnmount, onMounted, reactive } from '@vue/runtime-core';\nexport default function (param) {\n    let mpoint = reactive({ x: 0, y: 0 });\n    function savePotin(event) {\n        mpoint.x = event.pageX;\n        mpoint.y = event.pageY;\n        param.title = param.title + '-hook';\n        console.log('param', param);\n        console.log('mouse click point,', event.pageX, event.pageY);\n    }\n    onMounted(() => {\n        window.addEventListener('click', savePotin);\n    });\n    onBeforeUnmount(() => {\n        window.removeEventListener('click', savePotin);\n    });\n    //使用hook一定要给当前函数返回信息\n    return { mpoint, param };\n}\n\n```\n\n```js app.vue\n<template>\n    <div>\n        <h2>app组件</h2>\n        <button @click=\"isShowStuCpm\">显示、隐藏student组件</button>\n        <Student v-if=\"isShow\"></Student>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue';\nimport Student from './components/Student.vue';\nexport default {\n    name: 'App',\n    components: {\n        Student\n    },\n    setup(props, context) {\n        let isShow = ref(true)\n        let isShowStuCpm = function () {\n            isShow.value = !isShow.value\n        }\n        return {\n            isShow,isShowStuCpm\n        }\n    }\n}\n</script>\n\n<style>\n</style>\n```\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue3-0-04-vue3中的hook","published":1,"updated":"2023-03-10T08:28:50.986Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3e004r5cs9c7vaa25g","content":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"hook\"><a class=\"markdownIt-Anchor\" href=\"#hook\"></a> hook</h4>\n<ol>\n<li>hook的本质是一个函数，把setup函数中使用的组合api进行封装。</li>\n<li>hook有点类似vue2中的mixin。</li>\n<li>自定义hook可以让setup中的逻辑更加清楚易懂</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>点击的鼠标的坐标是:&#123;&#123;mpoint.x&#125;&#125;,&#123;&#123;mpoint.y&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>hook中回传的信息:&#123;&#123;param.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"></span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">//引入自定义hook函数</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> usePoint <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../hooks/usePoint&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> title = ref(<span class=\"string\">&#x27;Student组件&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> &#123;mpoint,param &#125; = usePoint(&#123;<span class=\"attr\">title</span>:title.value&#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            title,mpoint,param</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>hooks/usePoint.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; onBeforeUnmount, onMounted, reactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@vue/runtime-core&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">param</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> mpoint = reactive(&#123; <span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: <span class=\"number\">0</span> &#125;);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">savePotin</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        mpoint.x = event.pageX;</span><br><span class=\"line\">        mpoint.y = event.pageY;</span><br><span class=\"line\">        param.title = param.title + <span class=\"string\">&#x27;-hook&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;param&#x27;</span>, param);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;mouse click point,&#x27;</span>, event.pageX, event.pageY);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    onMounted(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, savePotin);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    onBeforeUnmount(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.removeEventListener(<span class=\"string\">&#x27;click&#x27;</span>, savePotin);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//使用hook一定要给当前函数返回信息</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; mpoint, param &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;isShowStuCpm&quot;</span>&gt;</span>显示、隐藏student组件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;ref&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> isShow = ref(<span class=\"literal\">true</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> isShowStuCpm = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            isShow.value = !isShow.value</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            isShow,isShowStuCpm</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>","more":"<h4 id=\"hook\"><a class=\"markdownIt-Anchor\" href=\"#hook\"></a> hook</h4>\n<ol>\n<li>hook的本质是一个函数，把setup函数中使用的组合api进行封装。</li>\n<li>hook有点类似vue2中的mixin。</li>\n<li>自定义hook可以让setup中的逻辑更加清楚易懂</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>点击的鼠标的坐标是:&#123;&#123;mpoint.x&#125;&#125;,&#123;&#123;mpoint.y&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>hook中回传的信息:&#123;&#123;param.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"></span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">//引入自定义hook函数</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> usePoint <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../hooks/usePoint&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> title = ref(<span class=\"string\">&#x27;Student组件&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> &#123;mpoint,param &#125; = usePoint(&#123;<span class=\"attr\">title</span>:title.value&#125;);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            title,mpoint,param</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>hooks/usePoint.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; onBeforeUnmount, onMounted, reactive &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@vue/runtime-core&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">param</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> mpoint = reactive(&#123; <span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: <span class=\"number\">0</span> &#125;);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">savePotin</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        mpoint.x = event.pageX;</span><br><span class=\"line\">        mpoint.y = event.pageY;</span><br><span class=\"line\">        param.title = param.title + <span class=\"string\">&#x27;-hook&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;param&#x27;</span>, param);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;mouse click point,&#x27;</span>, event.pageX, event.pageY);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    onMounted(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&#x27;click&#x27;</span>, savePotin);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    onBeforeUnmount(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.removeEventListener(<span class=\"string\">&#x27;click&#x27;</span>, savePotin);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//使用hook一定要给当前函数返回信息</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; mpoint, param &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>app.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>app组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;isShowStuCpm&quot;</span>&gt;</span>显示、隐藏student组件<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Student</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;isShow&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Student</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123;ref&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> Student <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;App&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">components</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        Student</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> isShow = ref(<span class=\"literal\">true</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> isShowStuCpm = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            isShow.value = !isShow.value</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            isShow,isShowStuCpm</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue3.0 - 05. toRef与toRefs","author":"OdinSam","abbrlink":"ba93","date":"2022-10-21T08:29:00.000Z","_content":"> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### toRef\n1. 作用：创建一个对象，起value值指向另一个对象中的某个属性\n2. const name = toRef(person,‘name’)\n3. 应用：要将响应式对象中的某个属性单独提供给外部使用\n4. toRefs 与 toRef 功能一致，但可以批量创建多个ref对象 toRefs(person)\n\n```js student.vue\n<template>\n    <div>\n        <h2>Student组件</h2>\n        <div>\n            <h3>{{person}}</h3>\n            <h3>姓名:{{name}}</h3>\n            <h3>年龄:{{age}}</h3>\n            <h3>薪资:{{salary}}K</h3>\n            <button @click=\"person.name+='~'\">修改姓名</button>\n            <button @click=\"person.age++\">修改年龄</button>\n            <button @click=\"person.job.j.salary++\">修改薪资</button>\n        </div>\n    </div>\n</template>\n  \n<script>\nimport { reactive, toRef, toRefs } from '@vue/reactivity'\n/**\n\n*/\nexport default {\n    name: 'Student',\n    setup(props, context) {\n        let person = reactive({\n            name: 'odinsam',\n            age: 20,\n            job: {\n                j: {\n                    salary:50\n                }\n            }\n        })\n        return {\n            person,\n            ...toRefs(person),\n            salary:toRef(person.job.j,'salary')\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue3-0-05-toRef与toRefs.md","raw":"title: Vue3.0 - 05. toRef与toRefs\nauthor: OdinSam\ntags:\n  - vue3\n  - toRef\n  - toRefs\n  - ''\ncategories:\n  - 前端\n  - vue3\nabbrlink: ba93\ndate: 2022-10-21 16:29:00\n---\n> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### toRef\n1. 作用：创建一个对象，起value值指向另一个对象中的某个属性\n2. const name = toRef(person,‘name’)\n3. 应用：要将响应式对象中的某个属性单独提供给外部使用\n4. toRefs 与 toRef 功能一致，但可以批量创建多个ref对象 toRefs(person)\n\n```js student.vue\n<template>\n    <div>\n        <h2>Student组件</h2>\n        <div>\n            <h3>{{person}}</h3>\n            <h3>姓名:{{name}}</h3>\n            <h3>年龄:{{age}}</h3>\n            <h3>薪资:{{salary}}K</h3>\n            <button @click=\"person.name+='~'\">修改姓名</button>\n            <button @click=\"person.age++\">修改年龄</button>\n            <button @click=\"person.job.j.salary++\">修改薪资</button>\n        </div>\n    </div>\n</template>\n  \n<script>\nimport { reactive, toRef, toRefs } from '@vue/reactivity'\n/**\n\n*/\nexport default {\n    name: 'Student',\n    setup(props, context) {\n        let person = reactive({\n            name: 'odinsam',\n            age: 20,\n            job: {\n                j: {\n                    salary:50\n                }\n            }\n        })\n        return {\n            person,\n            ...toRefs(person),\n            salary:toRef(person.job.j,'salary')\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n```\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue3-0-05-toRef与toRefs","published":1,"updated":"2023-03-10T08:30:33.923Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3f004v5cs9e9e09lht","content":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"toref\"><a class=\"markdownIt-Anchor\" href=\"#toref\"></a> toRef</h4>\n<ol>\n<li>作用：创建一个对象，起value值指向另一个对象中的某个属性</li>\n<li>const name = toRef(person,‘name’)</li>\n<li>应用：要将响应式对象中的某个属性单独提供给外部使用</li>\n<li>toRefs 与 toRef 功能一致，但可以批量创建多个ref对象 toRefs(person)</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123;person&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>姓名:&#123;&#123;name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>年龄:&#123;&#123;age&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>薪资:&#123;&#123;salary&#125;&#125;K<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;person.name+=&#x27;~&#x27;&quot;</span>&gt;</span>修改姓名<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;person.age++&quot;</span>&gt;</span>修改年龄<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;person.job.j.salary++&quot;</span>&gt;</span>修改薪资<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; reactive, toRef, toRefs &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@vue/reactivity&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"></span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> person = reactive(&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">age</span>: <span class=\"number\">20</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">job</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"attr\">j</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"attr\">salary</span>:<span class=\"number\">50</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            ...toRefs(person),</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">salary</span>:toRef(person.job.j,<span class=\"string\">&#x27;salary&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>","more":"<h4 id=\"toref\"><a class=\"markdownIt-Anchor\" href=\"#toref\"></a> toRef</h4>\n<ol>\n<li>作用：创建一个对象，起value值指向另一个对象中的某个属性</li>\n<li>const name = toRef(person,‘name’)</li>\n<li>应用：要将响应式对象中的某个属性单独提供给外部使用</li>\n<li>toRefs 与 toRef 功能一致，但可以批量创建多个ref对象 toRefs(person)</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123;person&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>姓名:&#123;&#123;name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>年龄:&#123;&#123;age&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>薪资:&#123;&#123;salary&#125;&#125;K<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;person.name+=&#x27;~&#x27;&quot;</span>&gt;</span>修改姓名<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;person.age++&quot;</span>&gt;</span>修改年龄<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;person.job.j.salary++&quot;</span>&gt;</span>修改薪资<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; reactive, toRef, toRefs &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@vue/reactivity&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"></span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> person = reactive(&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">name</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">age</span>: <span class=\"number\">20</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">job</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"attr\">j</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"attr\">salary</span>:<span class=\"number\">50</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            person,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            ...toRefs(person),</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"attr\">salary</span>:toRef(person.job.j,<span class=\"string\">&#x27;salary&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue3.0 - 07. vue3中新增的一些组件","author":"OdinSam","abbrlink":"40e7","date":"2022-10-22T08:34:00.000Z","_content":"> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 1. Fragment\n在vue2中，组件时必须有一个跟标签的\n在vue3中，组件可以没有跟标签，内部会将多个标签包含在一个Fragment虚拟元素中\n优势在于可以减少标签层级、减小内存占用\n#### 2. Teleport\nteplport是一种能够将我们的组件的html结构移动到指定位置的技术\n移动的位置可以写html元素也可以是css选择： body或者#root 等\n```js \n<teleport to=\"移动的位置\">\n\t<div>\n    \t需要移动的组件\n    </div>\n</teleport>\n```\n#### 3. Suspense\n等待异步组件时渲染一些额外内容，让应用有更好的用户体验\n使用Suspense并使用异步动态引入对象，可以在setup中返回异步结果 return { await new Promise() }\n```js \n<template>\n\t<Suspense>\n    \t<template v-slot:default>\n        \t<Child/>\n        </template>\n        <template v-slot:fallback>\n        \t<Loading/>\n        </template>\n    </Suspense>\n</template>\n\n<script>\n// 异步动态引入组件\nconst child = defineAsyncComponent(()=>return import('./components/xxx.vue'))\n</script>\n```\n\n#### 4. 全局API的转移\n\n|vue2 全局api|\tvue3 全局api|\n|--|--|\n|Vue.config.xxx\t|app.config.xxx|\n|Vue.config.productionTip|\t移除|\n|Vue.component\t|app.component|\n|Vue.directive\t|app.directive|\n|Vue.mixin\t|app.mixin|\n|Vue.use\t|app.use|\n|Vue.prototype\t|app.config.globalProperties|\n\n#### 5. 一些其他的改变\n1. data在vue3中必须是函数形式\n2. 过度类名的更改 vue3中 v-enter-from v-leave-to\n3. 移除keycCode作为v-on的修饰符,同时也不支持config.keyCodes\n4. 移除v-on.native修饰符\n5. 移除过滤器 filter\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue3-0-07-vue3中新增的一些组件.md","raw":"title: Vue3.0 - 07. vue3中新增的一些组件\nauthor: OdinSam\ntags:\n  - vue3\ncategories:\n  - 前端\n  - vue3\nabbrlink: '40e7'\ndate: 2022-10-22 16:34:00\n---\n> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 1. Fragment\n在vue2中，组件时必须有一个跟标签的\n在vue3中，组件可以没有跟标签，内部会将多个标签包含在一个Fragment虚拟元素中\n优势在于可以减少标签层级、减小内存占用\n#### 2. Teleport\nteplport是一种能够将我们的组件的html结构移动到指定位置的技术\n移动的位置可以写html元素也可以是css选择： body或者#root 等\n```js \n<teleport to=\"移动的位置\">\n\t<div>\n    \t需要移动的组件\n    </div>\n</teleport>\n```\n#### 3. Suspense\n等待异步组件时渲染一些额外内容，让应用有更好的用户体验\n使用Suspense并使用异步动态引入对象，可以在setup中返回异步结果 return { await new Promise() }\n```js \n<template>\n\t<Suspense>\n    \t<template v-slot:default>\n        \t<Child/>\n        </template>\n        <template v-slot:fallback>\n        \t<Loading/>\n        </template>\n    </Suspense>\n</template>\n\n<script>\n// 异步动态引入组件\nconst child = defineAsyncComponent(()=>return import('./components/xxx.vue'))\n</script>\n```\n\n#### 4. 全局API的转移\n\n|vue2 全局api|\tvue3 全局api|\n|--|--|\n|Vue.config.xxx\t|app.config.xxx|\n|Vue.config.productionTip|\t移除|\n|Vue.component\t|app.component|\n|Vue.directive\t|app.directive|\n|Vue.mixin\t|app.mixin|\n|Vue.use\t|app.use|\n|Vue.prototype\t|app.config.globalProperties|\n\n#### 5. 一些其他的改变\n1. data在vue3中必须是函数形式\n2. 过度类名的更改 vue3中 v-enter-from v-leave-to\n3. 移除keycCode作为v-on的修饰符,同时也不支持config.keyCodes\n4. 移除v-on.native修饰符\n5. 移除过滤器 filter\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue3-0-07-vue3中新增的一些组件","published":1,"updated":"2023-03-10T08:37:18.127Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3g004z5cs94yl15wd2","content":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-fragment\"><a class=\"markdownIt-Anchor\" href=\"#1-fragment\"></a> 1. Fragment</h4>\n<p>在vue2中，组件时必须有一个跟标签的<br />\n在vue3中，组件可以没有跟标签，内部会将多个标签包含在一个Fragment虚拟元素中<br />\n优势在于可以减少标签层级、减小内存占用</p>\n<h4 id=\"2-teleport\"><a class=\"markdownIt-Anchor\" href=\"#2-teleport\"></a> 2. Teleport</h4>\n<p>teplport是一种能够将我们的组件的html结构移动到指定位置的技术<br />\n移动的位置可以写html元素也可以是css选择： body或者#root 等</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;teleport to=<span class=\"string\">&quot;移动的位置&quot;</span>&gt;</span><br><span class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    \t需要移动的组件</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/teleport&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-suspense\"><a class=\"markdownIt-Anchor\" href=\"#3-suspense\"></a> 3. Suspense</h4>\n<p>等待异步组件时渲染一些额外内容，让应用有更好的用户体验<br />\n使用Suspense并使用异步动态引入对象，可以在setup中返回异步结果 return { await new Promise() }</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Suspense</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    \t<span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:default</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        \t<span class=\"tag\">&lt;<span class=\"name\">Child</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:fallback</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        \t<span class=\"tag\">&lt;<span class=\"name\">Loading</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Suspense</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 异步动态引入组件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> child = defineAsyncComponent(<span class=\"function\">()=&gt;</span><span class=\"keyword\">return</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;./components/xxx.vue&#x27;</span>))</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-全局api的转移\"><a class=\"markdownIt-Anchor\" href=\"#4-全局api的转移\"></a> 4. 全局API的转移</h4>\n<table>\n<thead>\n<tr>\n<th>vue2 全局api</th>\n<th>vue3 全局api</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://Vue.config.xxx\">Vue.config.xxx</a></td>\n<td><a href=\"http://app.config.xxx\">app.config.xxx</a></td>\n</tr>\n<tr>\n<td>Vue.config.productionTip</td>\n<td>移除</td>\n</tr>\n<tr>\n<td>Vue.component</td>\n<td>app.component</td>\n</tr>\n<tr>\n<td>Vue.directive</td>\n<td>app.directive</td>\n</tr>\n<tr>\n<td>Vue.mixin</td>\n<td>app.mixin</td>\n</tr>\n<tr>\n<td>Vue.use</td>\n<td>app.use</td>\n</tr>\n<tr>\n<td>Vue.prototype</td>\n<td>app.config.globalProperties</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"5-一些其他的改变\"><a class=\"markdownIt-Anchor\" href=\"#5-一些其他的改变\"></a> 5. 一些其他的改变</h4>\n<ol>\n<li>data在vue3中必须是函数形式</li>\n<li>过度类名的更改 vue3中 v-enter-from v-leave-to</li>\n<li>移除keycCode作为v-on的修饰符,同时也不支持config.keyCodes</li>\n<li>移除v-on.native修饰符</li>\n<li>移除过滤器 filter</li>\n</ol>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>","more":"<h4 id=\"1-fragment\"><a class=\"markdownIt-Anchor\" href=\"#1-fragment\"></a> 1. Fragment</h4>\n<p>在vue2中，组件时必须有一个跟标签的<br />\n在vue3中，组件可以没有跟标签，内部会将多个标签包含在一个Fragment虚拟元素中<br />\n优势在于可以减少标签层级、减小内存占用</p>\n<h4 id=\"2-teleport\"><a class=\"markdownIt-Anchor\" href=\"#2-teleport\"></a> 2. Teleport</h4>\n<p>teplport是一种能够将我们的组件的html结构移动到指定位置的技术<br />\n移动的位置可以写html元素也可以是css选择： body或者#root 等</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;teleport to=<span class=\"string\">&quot;移动的位置&quot;</span>&gt;</span><br><span class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    \t需要移动的组件</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/teleport&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-suspense\"><a class=\"markdownIt-Anchor\" href=\"#3-suspense\"></a> 3. Suspense</h4>\n<p>等待异步组件时渲染一些额外内容，让应用有更好的用户体验<br />\n使用Suspense并使用异步动态引入对象，可以在setup中返回异步结果 return { await new Promise() }</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Suspense</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    \t<span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:default</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        \t<span class=\"tag\">&lt;<span class=\"name\">Child</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-slot:fallback</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        \t<span class=\"tag\">&lt;<span class=\"name\">Loading</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Suspense</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 异步动态引入组件</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> child = defineAsyncComponent(<span class=\"function\">()=&gt;</span><span class=\"keyword\">return</span> <span class=\"keyword\">import</span>(<span class=\"string\">&#x27;./components/xxx.vue&#x27;</span>))</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-全局api的转移\"><a class=\"markdownIt-Anchor\" href=\"#4-全局api的转移\"></a> 4. 全局API的转移</h4>\n<table>\n<thead>\n<tr>\n<th>vue2 全局api</th>\n<th>vue3 全局api</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://Vue.config.xxx\">Vue.config.xxx</a></td>\n<td><a href=\"http://app.config.xxx\">app.config.xxx</a></td>\n</tr>\n<tr>\n<td>Vue.config.productionTip</td>\n<td>移除</td>\n</tr>\n<tr>\n<td>Vue.component</td>\n<td>app.component</td>\n</tr>\n<tr>\n<td>Vue.directive</td>\n<td>app.directive</td>\n</tr>\n<tr>\n<td>Vue.mixin</td>\n<td>app.mixin</td>\n</tr>\n<tr>\n<td>Vue.use</td>\n<td>app.use</td>\n</tr>\n<tr>\n<td>Vue.prototype</td>\n<td>app.config.globalProperties</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"5-一些其他的改变\"><a class=\"markdownIt-Anchor\" href=\"#5-一些其他的改变\"></a> 5. 一些其他的改变</h4>\n<ol>\n<li>data在vue3中必须是函数形式</li>\n<li>过度类名的更改 vue3中 v-enter-from v-leave-to</li>\n<li>移除keycCode作为v-on的修饰符,同时也不支持config.keyCodes</li>\n<li>移除v-on.native修饰符</li>\n<li>移除过滤器 filter</li>\n</ol>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue3.0 - 06. 其他的CompositionApi及总结","author":"OdinSam","abbrlink":"9754","date":"2022-10-21T08:30:00.000Z","_content":"> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 1. shallowReactive\nshallowReactive只处理对象最外层属性的响应式，浅层次的。\n#### 2. shallowRef\nshallowRef只处理基本数据类型的响应式，不处理对象类型的响应式。如果是基本数据类型，shallowRef与ref没有区别。但shallowRef不处理对象类型即，如果是对象类型shallowRef则不会处理为响应式数据\n使用时机\n如果一个对象数据，结构比较深，但变化时只是外层属性变化，则可以使用shallowReactive。\n如果一个对象谁，后续功能不会修改该对象中的属性，而是生成新的对象来替换，则可以使用shallowRef\n#### 3. readonly 与 shallowReadonly\nreadonly 会让一个响应式数据变为只读 - 深只读\nshallowReadonly 让一个响应式数据变为只读 - 浅只读\n当不希望数据修改时可以使用\n#### 4. toRaw 与 markRaw\ntoRow 可以将响应式数据变为原始数据 const x = toRaw(person) toRaw的参数需要是refImpl类型的数据\nmarkRaw 标记一个对象，使其永远不会再变为响应式对象\n#### 5. customRef\n创建一个自定义的ref，并对其依赖项跟踪和更新触发进行显式控制。\n```js student.vue\n<template>\n    <div>\n        <h2>Student组件</h2><br/>\n        <input type=\"text\" v-model=\"msg\"><br/>\n        <span>数据：{{msg}}</span>\n    </div>\n</template>\n  \n<script>\nimport { customRef } from 'vue'\n/**\n\n*/\nexport default {\n    name: 'Student',\n    setup(props, context) {\n        function myref(value) {\n            let timer;\n            return customRef((track, trigger) => {\n                return {\n                    get() {\n                        // 通知vue跟踪value的变化\n                        track();\n                        return value;\n                    },\n                    set(newValue) {\n                        clearTimeout(timer)\n                        timer = setInterval(() => {\n                            value = newValue;\n                            // 通知vue重新解析模板\n                            trigger()\n                        }, 500);\n                    }\n                }\n            })\n        }\n        let msg = myref('')\n        return {\n            msg\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n```\n\n#### 6. provider与inject\nprovider和inject可以实现组件间数据通信的方式。\n在父组件中使用provider提供数据，在后代组件（子孙组件）中使用inject来获取数据\n```js\n//父组件\nlet obj = { x:1,y:2 };\nprovider('data',obj)\n//子组件\nlet obj = inject('data')\n```\n#### 7. 对响应式数据的判断\nisRef 检查一个值是否是一个 ref 对象\nisReactvie 检查一个对象是否是 reactive创建的响应式代理\nisReadonly 检查一个对象是否有 readonly 创建的只读对象\nisProxy 检查一个对象是否是 reactive或者 readonly 方法创建的代理\n#### 8. CompositionApi的优势\n传统的OptionApi中，新增或者修改一个需求，需要在 data、methods、computed里修改或添加对应的代码\nCompositionApi的优势在于我们可以更优雅的阻止我们的代码、函数。让相关功能的代码更加有序的组织自一起。\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue3-0-06-其他的CompositionApi及总结.md","raw":"title: Vue3.0 - 06. 其他的CompositionApi及总结\nauthor: OdinSam\ntags:\n  - vue3\n  - compositionApi\ncategories:\n  - 前端\n  - vue3\nabbrlink: '9754'\ndate: 2022-10-21 16:30:00\n---\n> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n#### 1. shallowReactive\nshallowReactive只处理对象最外层属性的响应式，浅层次的。\n#### 2. shallowRef\nshallowRef只处理基本数据类型的响应式，不处理对象类型的响应式。如果是基本数据类型，shallowRef与ref没有区别。但shallowRef不处理对象类型即，如果是对象类型shallowRef则不会处理为响应式数据\n使用时机\n如果一个对象数据，结构比较深，但变化时只是外层属性变化，则可以使用shallowReactive。\n如果一个对象谁，后续功能不会修改该对象中的属性，而是生成新的对象来替换，则可以使用shallowRef\n#### 3. readonly 与 shallowReadonly\nreadonly 会让一个响应式数据变为只读 - 深只读\nshallowReadonly 让一个响应式数据变为只读 - 浅只读\n当不希望数据修改时可以使用\n#### 4. toRaw 与 markRaw\ntoRow 可以将响应式数据变为原始数据 const x = toRaw(person) toRaw的参数需要是refImpl类型的数据\nmarkRaw 标记一个对象，使其永远不会再变为响应式对象\n#### 5. customRef\n创建一个自定义的ref，并对其依赖项跟踪和更新触发进行显式控制。\n```js student.vue\n<template>\n    <div>\n        <h2>Student组件</h2><br/>\n        <input type=\"text\" v-model=\"msg\"><br/>\n        <span>数据：{{msg}}</span>\n    </div>\n</template>\n  \n<script>\nimport { customRef } from 'vue'\n/**\n\n*/\nexport default {\n    name: 'Student',\n    setup(props, context) {\n        function myref(value) {\n            let timer;\n            return customRef((track, trigger) => {\n                return {\n                    get() {\n                        // 通知vue跟踪value的变化\n                        track();\n                        return value;\n                    },\n                    set(newValue) {\n                        clearTimeout(timer)\n                        timer = setInterval(() => {\n                            value = newValue;\n                            // 通知vue重新解析模板\n                            trigger()\n                        }, 500);\n                    }\n                }\n            })\n        }\n        let msg = myref('')\n        return {\n            msg\n        }\n    }\n}\n</script>\n  \n<style>\n</style>\n```\n\n#### 6. provider与inject\nprovider和inject可以实现组件间数据通信的方式。\n在父组件中使用provider提供数据，在后代组件（子孙组件）中使用inject来获取数据\n```js\n//父组件\nlet obj = { x:1,y:2 };\nprovider('data',obj)\n//子组件\nlet obj = inject('data')\n```\n#### 7. 对响应式数据的判断\nisRef 检查一个值是否是一个 ref 对象\nisReactvie 检查一个对象是否是 reactive创建的响应式代理\nisReadonly 检查一个对象是否有 readonly 创建的只读对象\nisProxy 检查一个对象是否是 reactive或者 readonly 方法创建的代理\n#### 8. CompositionApi的优势\n传统的OptionApi中，新增或者修改一个需求，需要在 data、methods、computed里修改或添加对应的代码\nCompositionApi的优势在于我们可以更优雅的阻止我们的代码、函数。让相关功能的代码更加有序的组织自一起。\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue3-0-06-其他的CompositionApi及总结","published":1,"updated":"2023-03-10T08:33:51.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3g00525cs9hz89118n","content":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-shallowreactive\"><a class=\"markdownIt-Anchor\" href=\"#1-shallowreactive\"></a> 1. shallowReactive</h4>\n<p>shallowReactive只处理对象最外层属性的响应式，浅层次的。</p>\n<h4 id=\"2-shallowref\"><a class=\"markdownIt-Anchor\" href=\"#2-shallowref\"></a> 2. shallowRef</h4>\n<p>shallowRef只处理基本数据类型的响应式，不处理对象类型的响应式。如果是基本数据类型，shallowRef与ref没有区别。但shallowRef不处理对象类型即，如果是对象类型shallowRef则不会处理为响应式数据<br />\n使用时机<br />\n如果一个对象数据，结构比较深，但变化时只是外层属性变化，则可以使用shallowReactive。<br />\n如果一个对象谁，后续功能不会修改该对象中的属性，而是生成新的对象来替换，则可以使用shallowRef</p>\n<h4 id=\"3-readonly-与-shallowreadonly\"><a class=\"markdownIt-Anchor\" href=\"#3-readonly-与-shallowreadonly\"></a> 3. readonly 与 shallowReadonly</h4>\n<p>readonly 会让一个响应式数据变为只读 - 深只读<br />\nshallowReadonly 让一个响应式数据变为只读 - 浅只读<br />\n当不希望数据修改时可以使用</p>\n<h4 id=\"4-toraw-与-markraw\"><a class=\"markdownIt-Anchor\" href=\"#4-toraw-与-markraw\"></a> 4. toRaw 与 markRaw</h4>\n<p>toRow 可以将响应式数据变为原始数据 const x = toRaw(person) toRaw的参数需要是refImpl类型的数据<br />\nmarkRaw 标记一个对象，使其永远不会再变为响应式对象</p>\n<h4 id=\"5-customref\"><a class=\"markdownIt-Anchor\" href=\"#5-customref\"></a> 5. customRef</h4>\n<p>创建一个自定义的ref，并对其依赖项跟踪和更新触发进行显式控制。</p>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;msg&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>数据：&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; customRef &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"></span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myref</span>(<span class=\"params\">value</span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">let</span> timer;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">return</span> customRef(<span class=\"function\">(<span class=\"params\">track, trigger</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        <span class=\"comment\">// 通知vue跟踪value的变化</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        track();</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        <span class=\"keyword\">return</span> value;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">newValue</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        <span class=\"built_in\">clearTimeout</span>(timer)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                            value = newValue;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                            <span class=\"comment\">// 通知vue重新解析模板</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                            trigger()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        &#125;, <span class=\"number\">500</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> msg = myref(<span class=\"string\">&#x27;&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            msg</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-provider与inject\"><a class=\"markdownIt-Anchor\" href=\"#6-provider与inject\"></a> 6. provider与inject</h4>\n<p>provider和inject可以实现组件间数据通信的方式。<br />\n在父组件中使用provider提供数据，在后代组件（子孙组件）中使用inject来获取数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//父组件</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123; <span class=\"attr\">x</span>:<span class=\"number\">1</span>,<span class=\"attr\">y</span>:<span class=\"number\">2</span> &#125;;</span><br><span class=\"line\">provider(<span class=\"string\">&#x27;data&#x27;</span>,obj)</span><br><span class=\"line\"><span class=\"comment\">//子组件</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = inject(<span class=\"string\">&#x27;data&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"7-对响应式数据的判断\"><a class=\"markdownIt-Anchor\" href=\"#7-对响应式数据的判断\"></a> 7. 对响应式数据的判断</h4>\n<p>isRef 检查一个值是否是一个 ref 对象<br />\nisReactvie 检查一个对象是否是 reactive创建的响应式代理<br />\nisReadonly 检查一个对象是否有 readonly 创建的只读对象<br />\nisProxy 检查一个对象是否是 reactive或者 readonly 方法创建的代理</p>\n<h4 id=\"8-compositionapi的优势\"><a class=\"markdownIt-Anchor\" href=\"#8-compositionapi的优势\"></a> 8. CompositionApi的优势</h4>\n<p>传统的OptionApi中，新增或者修改一个需求，需要在 data、methods、computed里修改或添加对应的代码<br />\nCompositionApi的优势在于我们可以更优雅的阻止我们的代码、函数。让相关功能的代码更加有序的组织自一起。</p>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>","more":"<h4 id=\"1-shallowreactive\"><a class=\"markdownIt-Anchor\" href=\"#1-shallowreactive\"></a> 1. shallowReactive</h4>\n<p>shallowReactive只处理对象最外层属性的响应式，浅层次的。</p>\n<h4 id=\"2-shallowref\"><a class=\"markdownIt-Anchor\" href=\"#2-shallowref\"></a> 2. shallowRef</h4>\n<p>shallowRef只处理基本数据类型的响应式，不处理对象类型的响应式。如果是基本数据类型，shallowRef与ref没有区别。但shallowRef不处理对象类型即，如果是对象类型shallowRef则不会处理为响应式数据<br />\n使用时机<br />\n如果一个对象数据，结构比较深，但变化时只是外层属性变化，则可以使用shallowReactive。<br />\n如果一个对象谁，后续功能不会修改该对象中的属性，而是生成新的对象来替换，则可以使用shallowRef</p>\n<h4 id=\"3-readonly-与-shallowreadonly\"><a class=\"markdownIt-Anchor\" href=\"#3-readonly-与-shallowreadonly\"></a> 3. readonly 与 shallowReadonly</h4>\n<p>readonly 会让一个响应式数据变为只读 - 深只读<br />\nshallowReadonly 让一个响应式数据变为只读 - 浅只读<br />\n当不希望数据修改时可以使用</p>\n<h4 id=\"4-toraw-与-markraw\"><a class=\"markdownIt-Anchor\" href=\"#4-toraw-与-markraw\"></a> 4. toRaw 与 markRaw</h4>\n<p>toRow 可以将响应式数据变为原始数据 const x = toRaw(person) toRaw的参数需要是refImpl类型的数据<br />\nmarkRaw 标记一个对象，使其永远不会再变为响应式对象</p>\n<h4 id=\"5-customref\"><a class=\"markdownIt-Anchor\" href=\"#5-customref\"></a> 5. customRef</h4>\n<p>创建一个自定义的ref，并对其依赖项跟踪和更新触发进行显式控制。</p>\n<figure class=\"highlight js\"><figcaption><span>student.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Student组件<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;msg&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>数据：&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; customRef &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"></span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">*/</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Student&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"function\"><span class=\"title\">setup</span>(<span class=\"params\">props, context</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myref</span>(<span class=\"params\">value</span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">let</span> timer;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            <span class=\"keyword\">return</span> customRef(<span class=\"function\">(<span class=\"params\">track, trigger</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        <span class=\"comment\">// 通知vue跟踪value的变化</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        track();</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        <span class=\"keyword\">return</span> value;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    &#125;,</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\">newValue</span>)</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        <span class=\"built_in\">clearTimeout</span>(timer)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        timer = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                            value = newValue;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                            <span class=\"comment\">// 通知vue重新解析模板</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                            trigger()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                        &#125;, <span class=\"number\">500</span>);</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">                &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">let</span> msg = myref(<span class=\"string\">&#x27;&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">            msg</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">        &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-provider与inject\"><a class=\"markdownIt-Anchor\" href=\"#6-provider与inject\"></a> 6. provider与inject</h4>\n<p>provider和inject可以实现组件间数据通信的方式。<br />\n在父组件中使用provider提供数据，在后代组件（子孙组件）中使用inject来获取数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//父组件</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123; <span class=\"attr\">x</span>:<span class=\"number\">1</span>,<span class=\"attr\">y</span>:<span class=\"number\">2</span> &#125;;</span><br><span class=\"line\">provider(<span class=\"string\">&#x27;data&#x27;</span>,obj)</span><br><span class=\"line\"><span class=\"comment\">//子组件</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = inject(<span class=\"string\">&#x27;data&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"7-对响应式数据的判断\"><a class=\"markdownIt-Anchor\" href=\"#7-对响应式数据的判断\"></a> 7. 对响应式数据的判断</h4>\n<p>isRef 检查一个值是否是一个 ref 对象<br />\nisReactvie 检查一个对象是否是 reactive创建的响应式代理<br />\nisReadonly 检查一个对象是否有 readonly 创建的只读对象<br />\nisProxy 检查一个对象是否是 reactive或者 readonly 方法创建的代理</p>\n<h4 id=\"8-compositionapi的优势\"><a class=\"markdownIt-Anchor\" href=\"#8-compositionapi的优势\"></a> 8. CompositionApi的优势</h4>\n<p>传统的OptionApi中，新增或者修改一个需求，需要在 data、methods、computed里修改或添加对应的代码<br />\nCompositionApi的优势在于我们可以更优雅的阻止我们的代码、函数。让相关功能的代码更加有序的组织自一起。</p>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"Vue3.0 - Pinia 状态管理框架","author":"OdinSam","abbrlink":"99b6","date":"2022-10-25T08:38:00.000Z","_content":">Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。\n\n<!--more-->\n\n#### 1. 与vuex的对比\n1. pinia中只有state、getter、action，抛弃了Vuex中的Mutation，减少工作量。\n2. pinia中的action支持同步和异步，Vuex不支持\n3. 良好的Typescript支持，Vue使用TS来编写时使用pinia非常合适\n4. 无需创建各个模块嵌套。在Vuex中如果数据过多，一般会通常分模块来进行管理，回略显得麻烦，而pinia中每个store都是独立的，互相不影响。\n5. 体积非常小，只有1KB左右。\n6. pinia支持插件来扩展自身功能。\n7. 支持服务端渲染。\n\n#### 2. 安装和使用\n1. 安装：vue create vue-app 采用 Manually select features 形式安装。\n```cmd\n//上下移动  space空格选中  a全选  i反选    enter回车确定\nVue CLI v5.0.8\n? Please pick a preset: Manually select features\n? Check the features needed for your project: (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n ◉ Babel\n ◉ TypeScript\n❯◯ Progressive Web App (PWA) Support\n ◉ Router\n ◯ Vuex\n ◉ CSS Pre-processors\n ◉ Linter / Formatter\n ◯ Unit Testing\n ◯ E2E Testing\n```\n\n在这里一般选择 babel/ts/router/css/linter这几个选项,选择好后 enter回车确认\n\n```cmd\nVue CLI v5.0.8\n? Please pick a preset: Manually select features\n? Check the features needed for your project: Babel, TS, Router, CSS Pre-processors, Linter\n? Choose a version of Vue.js that you want to start the project with (Use arrow keys)\n❯ 3.x \n  2.x \n```\n\n选择vue的版本，当然是选择vue3了。\n```cmd\n? Use class-style component syntax? (y/N) \n```\n\n是否使用Class风格装饰器？ 原本是：home = new Vue()创建vue实例，用装饰器后：class home extends Vue{}。直接enter回车即选择No\n```cmd\n? Use Babel alongside TypeScript (required for modern mode, auto-detected polyfills, transpiling JSX)? (Y/n) \n```\n\n使用Babel与TypeScript一起用于自动检测的填充? 选择yes\n```cmd\nUse history mode for router? (Requires proper server setup for index fallback in production)\n```\n\n是否使用router的history模式。router路由有hash模式和history模式（url带#和不带）.选择yes\n\n```cmd\n? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): (Use arrow keys)\n❯ Sass/SCSS (with dart-sass) \n  Less \n  Stylus\n```\n\ncss处理模式。看情况选择。\n```cmd\n? Pick a linter / formatter config: (Use arrow keys)\n❯ ESLint with error prevention only \n  ESLint + Airbnb config \n  ESLint + Standard config \n  ESLint + Prettier\n```\n\n代码检查与代码格式. 选择 ESLint + Prettier\n```cmd\nPick additional lint features: (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n❯◉ Lint on save\n ◯ Lint and fix on commit\n```\n\n项目校验格式 Lint on save 是保存时，Lint and fix on commit是提交时.选择 Lint on save\n```cmd\n? Where do you prefer placing config for Babel, ESLint, etc.? (Use arrow keys)\n❯ In dedicated config files \n  In package.json \n```\n\n项目的配置文件存放 In dedicated config files 独立配置文件，In package.json 存放在package.json。选择 In package.json\n```cmd\n? Save this as a preset for future projects? (y/N) \n```\n\n询问保存该配置是否作为后续项目的可选配置，选择是，则会要求给该配置命名，这个自己定就行,我输入为：default-setting.配置后会在创建项目时：vue create projectName 看到这个配置。例如:\n```cmd\nVue CLI v5.0.8\n? Please pick a preset: \n❯ odinsam_vue+babel+ts+history+dart-sass+linter+prettier ([Vue 3] dart-sass, babel, typescript, router, eslint) \n  Default ([Vue 3] babel, eslint) \n  Default ([Vue 2] babel, eslint) \n  Manually select features \n```\n\n2. 配置linter和prettier.添加 .prettierrc.js\n```js .prettierrc.js\nmodule.exports = {\n  // 一行最多 180 字符\n  printWidth: 180,\n  // 使用 4 个空格缩进\n  tabWidth: 2,\n  // 不使用缩进符，而使用空格\n  useTabs: false,\n  // 行尾需要有分号\n  semi: false,\n  // 使用单引号\n  singleQuote: true,\n  // 对象的 key 仅在必要时用引号\n  quoteProps: 'as-needed',\n  // jsx 不使用单引号，而使用双引号\n  jsxSingleQuote: false,\n  // 末尾不需要逗号\n  trailingComma: 'all',\n  // 大括号内的首尾需要空格\n  bracketSpacing: true,\n  // jsx 标签的反尖括号需要换行\n  jsxBracketSameLine: false,\n  // 箭头函数，只有一个参数的时候，也需要括号  avoid 能省略括号的时候就省略 例如x => x\n  arrowParens: 'avoid',\n  // 每个文件格式化的范围是文件的全部内容\n  rangeStart: 0,\n  rangeEnd: Infinity,\n  // 不需要写文件开头的 @prettier\n  requirePragma: false,\n  // 不需要自动在文件开头插入 @prettier\n  insertPragma: false,\n  // 使用默认的折行标准\n  proseWrap: 'preserve',\n  // 根据显示样式决定 html 要不要折行\n  htmlWhitespaceSensitivity: 'css',\n  // 换行符使用 lf\n  endOfLine: 'auto',\n}\n```\n\n3. 安装并使用pinia. npm i pinia 或者 yarn add pinia 。 main.js使用pinia\n```js main.js\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\n\ncreateApp(App).use(router).mount(\"#app\");\n```\n\n#### 3. 创建store.store的本质是一个函数包括两个参数，第一个是store的名字，第二个是store的配置项。配置项中包括 state,actions和getters. state 是 store 的核心部分是需要统一管理的状态.Actions 相当于组件中的 methods即业务操作.getter 完全等同于 Store 状态的 计算值\n\n```js store/xxx.ts\nimport { defineStore } from 'pinia'\n\n//第一个参数是store的名字，第二是参数是配置对象\nexport const useAccountStore = defineStore('account', {\n  // 配置state\n  state: () => {\n    return { loginUser: 'odinsam', isLogin: false }\n  },\n  //配置getters\n  getters: {\n    getAddAge: state => {\n      return !state.isLogin\n    },\n  },\n  // 配置actions\n  actions: {\n    setUserName() {\n      this.loginUser = 'action user'\n      return { loginUser: this.loginUser }\n    },\n  },\n})\n```\n\n#### 4. 使用store\n```js HomView.vue\n<template>\n  <div class=\"home\">\n    <button @click=\"btnLogin\">home login</button>\n    <!--在模板中可以使用解构的store数据-->\n    <span>store:{{ isLogin }}</span>\n    <button @click=\"changeUserbtnLogin\">change user</button>\n    <span>user:{{ loginUser }}</span>\n    <button @click=\"invokeAction\">invoke action</button>\n    <span>getter store:{{ accountStore.changeLoginState }}</span>\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\" />\n    <HelloWorld msg=\"Welcome to Your Vue.js + TypeScript App\" />\n  </div>\n</template>\n<script setup lang=\"ts\">\n// 引入 store\nimport { useAccountStore } from '@/store/account'\n// 引入 storeToRefs  将解构的store中的数据变为响应式数据\nimport { storeToRefs } from 'pinia'\nimport HelloWorld from '@/components/HelloWorld.vue' // @ is an alias to /src\n// 调用函数创建store实例\nconst accountStore = useAccountStore()\nfunction btnLogin() {\n  console.log('btn login')\n  // 在组件的methods中可以直接使用accountStore实例对象\n  accountStore.isLogin = true\n}\n// 解构store的数据在模板中使用，并使其为响应式的数据\nconst { isLogin, loginUser } = storeToRefs(accountStore)\nconst changeUserbtnLogin = () => {\n  console.log('function changeUserbtnLogin')\n  accountStore.loginUser = 'abc'\n}\nconst invokeAction = () => {\n  console.log('function invokeAction')\n  accountStore.setUserName()\n}\n/**\n 可以使用 store.$onAction() 订阅 action 及其结果。 \n 传递给它的回调在 action 之前执行。 \n after 处理 Promise 并允许您在 action 完成后执行函数。 \n 以类似的方式，onError 允许您在处理中抛出错误。 这些对于在运行时跟踪错误很有用，类似于 Vue 文档中的这个提示。\n {\n    name, // action 的名字\n    store, // store 实例\n    args, // 调用这个 action 的参数\n    after, // 在这个 action 执行完毕之后，执行这个函数\n    onError, // 在这个 action 抛出异常的时候，执行这个函数\n  }\n */\naccountStore.$onAction(({ name, store, args, after, onError }) => {\n  //actions被调用触发\n  console.log('anonymous function')\n  //如果 actions 是 setUserName\n  if (name === 'setUserName') {\n    // 执行成功后出发\n    after(reject => {\n      console.log('store', store)\n      console.log('args', args)\n      //这里可以执行一些操作\n      console.log('reject.loginUser:', reject.loginUser)\n    })\n  }\n  // actions error时出发\n  onError(error => {\n    console.log('function onError', error)\n  })\n})\n</script>\n```\n\n#### 5. pinia插件的使用plugins.\n由于是底层 API，Pinia Store可以完全扩展。 您可以执行的操作列表：向 Store 添加新属性、定义 Store 时添加新选项、为 Store 添加新方法、包装现有方法、更改甚至取消操作、实现本地存储等副作用、仅适用于特定 Store。\n\n#### 6. 使用 pinia.use() 将插件添加到 pinia 实例。给pania添加公共属性和公共方法。在vue中可以灵活使用\n```js main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport { createPinia } from 'pinia'\nconst pinia = createPinia()\n// 扩展 PiniaCustomProperties 接口定义插件中添加的公共属性和公共方法。 然后可以安全地写入和读取它\ndeclare module 'pinia' {\n  export interface PiniaCustomProperties {\n    pluginsAuthor: string\n    pubs(): void\n  }\n}\n//通过插件给pinia添加公共属性\npinia.use(context => {\n  const { store } = context\n  return { pluginsAuthor: store.$state.loginUser }\n})\n//通过插件给pinia添加公共属性\npinia.use(context => {\n  const { store } = context\n  store.pubs = function () {\n    console.log('pinia plugins add public method')\n  }\n})\n//因为context中可以解构出store，所以上边的代码可以简写为\n// pinia.use(({ store }) => {\n//   return { pluginsAuthor: store.$state.loginUser }\n// })\n// pinia.use(({ store }) => {\n//   store.pubs = function () {\n//     console.log('pinia plugins add public method')\n//   }\n// })\n\ncreateApp(App).use(router).use(pinia).mount('#app')\n```\n\n```js HelloView.vue\n<template>\n<button @click=\"getPulicProto\">pinia plugins public proto and invoke public methos</button>\n<span>pluginsAuthor:{{ propto }}</span>\n</template>\n<script setup lang=\"ts\">\nlet propto = ref('原始值')\nconst getPulicProto = () => {\n  console.log('function getPulicProto')\n  accountStore.pubs()\n  propto.value = accountStore.pluginsAuthor\n}\n</script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Vue3-0-Pinia-状态管理框架.md","raw":"title: Vue3.0 - Pinia 状态管理框架\nauthor: OdinSam\ntags:\n  - vue3\n  - Pinia\ncategories:\n  - 前端\n  - vue3\nabbrlink: 99b6\ndate: 2022-10-25 16:38:00\n---\n>Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。\n\n<!--more-->\n\n#### 1. 与vuex的对比\n1. pinia中只有state、getter、action，抛弃了Vuex中的Mutation，减少工作量。\n2. pinia中的action支持同步和异步，Vuex不支持\n3. 良好的Typescript支持，Vue使用TS来编写时使用pinia非常合适\n4. 无需创建各个模块嵌套。在Vuex中如果数据过多，一般会通常分模块来进行管理，回略显得麻烦，而pinia中每个store都是独立的，互相不影响。\n5. 体积非常小，只有1KB左右。\n6. pinia支持插件来扩展自身功能。\n7. 支持服务端渲染。\n\n#### 2. 安装和使用\n1. 安装：vue create vue-app 采用 Manually select features 形式安装。\n```cmd\n//上下移动  space空格选中  a全选  i反选    enter回车确定\nVue CLI v5.0.8\n? Please pick a preset: Manually select features\n? Check the features needed for your project: (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n ◉ Babel\n ◉ TypeScript\n❯◯ Progressive Web App (PWA) Support\n ◉ Router\n ◯ Vuex\n ◉ CSS Pre-processors\n ◉ Linter / Formatter\n ◯ Unit Testing\n ◯ E2E Testing\n```\n\n在这里一般选择 babel/ts/router/css/linter这几个选项,选择好后 enter回车确认\n\n```cmd\nVue CLI v5.0.8\n? Please pick a preset: Manually select features\n? Check the features needed for your project: Babel, TS, Router, CSS Pre-processors, Linter\n? Choose a version of Vue.js that you want to start the project with (Use arrow keys)\n❯ 3.x \n  2.x \n```\n\n选择vue的版本，当然是选择vue3了。\n```cmd\n? Use class-style component syntax? (y/N) \n```\n\n是否使用Class风格装饰器？ 原本是：home = new Vue()创建vue实例，用装饰器后：class home extends Vue{}。直接enter回车即选择No\n```cmd\n? Use Babel alongside TypeScript (required for modern mode, auto-detected polyfills, transpiling JSX)? (Y/n) \n```\n\n使用Babel与TypeScript一起用于自动检测的填充? 选择yes\n```cmd\nUse history mode for router? (Requires proper server setup for index fallback in production)\n```\n\n是否使用router的history模式。router路由有hash模式和history模式（url带#和不带）.选择yes\n\n```cmd\n? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): (Use arrow keys)\n❯ Sass/SCSS (with dart-sass) \n  Less \n  Stylus\n```\n\ncss处理模式。看情况选择。\n```cmd\n? Pick a linter / formatter config: (Use arrow keys)\n❯ ESLint with error prevention only \n  ESLint + Airbnb config \n  ESLint + Standard config \n  ESLint + Prettier\n```\n\n代码检查与代码格式. 选择 ESLint + Prettier\n```cmd\nPick additional lint features: (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n❯◉ Lint on save\n ◯ Lint and fix on commit\n```\n\n项目校验格式 Lint on save 是保存时，Lint and fix on commit是提交时.选择 Lint on save\n```cmd\n? Where do you prefer placing config for Babel, ESLint, etc.? (Use arrow keys)\n❯ In dedicated config files \n  In package.json \n```\n\n项目的配置文件存放 In dedicated config files 独立配置文件，In package.json 存放在package.json。选择 In package.json\n```cmd\n? Save this as a preset for future projects? (y/N) \n```\n\n询问保存该配置是否作为后续项目的可选配置，选择是，则会要求给该配置命名，这个自己定就行,我输入为：default-setting.配置后会在创建项目时：vue create projectName 看到这个配置。例如:\n```cmd\nVue CLI v5.0.8\n? Please pick a preset: \n❯ odinsam_vue+babel+ts+history+dart-sass+linter+prettier ([Vue 3] dart-sass, babel, typescript, router, eslint) \n  Default ([Vue 3] babel, eslint) \n  Default ([Vue 2] babel, eslint) \n  Manually select features \n```\n\n2. 配置linter和prettier.添加 .prettierrc.js\n```js .prettierrc.js\nmodule.exports = {\n  // 一行最多 180 字符\n  printWidth: 180,\n  // 使用 4 个空格缩进\n  tabWidth: 2,\n  // 不使用缩进符，而使用空格\n  useTabs: false,\n  // 行尾需要有分号\n  semi: false,\n  // 使用单引号\n  singleQuote: true,\n  // 对象的 key 仅在必要时用引号\n  quoteProps: 'as-needed',\n  // jsx 不使用单引号，而使用双引号\n  jsxSingleQuote: false,\n  // 末尾不需要逗号\n  trailingComma: 'all',\n  // 大括号内的首尾需要空格\n  bracketSpacing: true,\n  // jsx 标签的反尖括号需要换行\n  jsxBracketSameLine: false,\n  // 箭头函数，只有一个参数的时候，也需要括号  avoid 能省略括号的时候就省略 例如x => x\n  arrowParens: 'avoid',\n  // 每个文件格式化的范围是文件的全部内容\n  rangeStart: 0,\n  rangeEnd: Infinity,\n  // 不需要写文件开头的 @prettier\n  requirePragma: false,\n  // 不需要自动在文件开头插入 @prettier\n  insertPragma: false,\n  // 使用默认的折行标准\n  proseWrap: 'preserve',\n  // 根据显示样式决定 html 要不要折行\n  htmlWhitespaceSensitivity: 'css',\n  // 换行符使用 lf\n  endOfLine: 'auto',\n}\n```\n\n3. 安装并使用pinia. npm i pinia 或者 yarn add pinia 。 main.js使用pinia\n```js main.js\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\n\ncreateApp(App).use(router).mount(\"#app\");\n```\n\n#### 3. 创建store.store的本质是一个函数包括两个参数，第一个是store的名字，第二个是store的配置项。配置项中包括 state,actions和getters. state 是 store 的核心部分是需要统一管理的状态.Actions 相当于组件中的 methods即业务操作.getter 完全等同于 Store 状态的 计算值\n\n```js store/xxx.ts\nimport { defineStore } from 'pinia'\n\n//第一个参数是store的名字，第二是参数是配置对象\nexport const useAccountStore = defineStore('account', {\n  // 配置state\n  state: () => {\n    return { loginUser: 'odinsam', isLogin: false }\n  },\n  //配置getters\n  getters: {\n    getAddAge: state => {\n      return !state.isLogin\n    },\n  },\n  // 配置actions\n  actions: {\n    setUserName() {\n      this.loginUser = 'action user'\n      return { loginUser: this.loginUser }\n    },\n  },\n})\n```\n\n#### 4. 使用store\n```js HomView.vue\n<template>\n  <div class=\"home\">\n    <button @click=\"btnLogin\">home login</button>\n    <!--在模板中可以使用解构的store数据-->\n    <span>store:{{ isLogin }}</span>\n    <button @click=\"changeUserbtnLogin\">change user</button>\n    <span>user:{{ loginUser }}</span>\n    <button @click=\"invokeAction\">invoke action</button>\n    <span>getter store:{{ accountStore.changeLoginState }}</span>\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\" />\n    <HelloWorld msg=\"Welcome to Your Vue.js + TypeScript App\" />\n  </div>\n</template>\n<script setup lang=\"ts\">\n// 引入 store\nimport { useAccountStore } from '@/store/account'\n// 引入 storeToRefs  将解构的store中的数据变为响应式数据\nimport { storeToRefs } from 'pinia'\nimport HelloWorld from '@/components/HelloWorld.vue' // @ is an alias to /src\n// 调用函数创建store实例\nconst accountStore = useAccountStore()\nfunction btnLogin() {\n  console.log('btn login')\n  // 在组件的methods中可以直接使用accountStore实例对象\n  accountStore.isLogin = true\n}\n// 解构store的数据在模板中使用，并使其为响应式的数据\nconst { isLogin, loginUser } = storeToRefs(accountStore)\nconst changeUserbtnLogin = () => {\n  console.log('function changeUserbtnLogin')\n  accountStore.loginUser = 'abc'\n}\nconst invokeAction = () => {\n  console.log('function invokeAction')\n  accountStore.setUserName()\n}\n/**\n 可以使用 store.$onAction() 订阅 action 及其结果。 \n 传递给它的回调在 action 之前执行。 \n after 处理 Promise 并允许您在 action 完成后执行函数。 \n 以类似的方式，onError 允许您在处理中抛出错误。 这些对于在运行时跟踪错误很有用，类似于 Vue 文档中的这个提示。\n {\n    name, // action 的名字\n    store, // store 实例\n    args, // 调用这个 action 的参数\n    after, // 在这个 action 执行完毕之后，执行这个函数\n    onError, // 在这个 action 抛出异常的时候，执行这个函数\n  }\n */\naccountStore.$onAction(({ name, store, args, after, onError }) => {\n  //actions被调用触发\n  console.log('anonymous function')\n  //如果 actions 是 setUserName\n  if (name === 'setUserName') {\n    // 执行成功后出发\n    after(reject => {\n      console.log('store', store)\n      console.log('args', args)\n      //这里可以执行一些操作\n      console.log('reject.loginUser:', reject.loginUser)\n    })\n  }\n  // actions error时出发\n  onError(error => {\n    console.log('function onError', error)\n  })\n})\n</script>\n```\n\n#### 5. pinia插件的使用plugins.\n由于是底层 API，Pinia Store可以完全扩展。 您可以执行的操作列表：向 Store 添加新属性、定义 Store 时添加新选项、为 Store 添加新方法、包装现有方法、更改甚至取消操作、实现本地存储等副作用、仅适用于特定 Store。\n\n#### 6. 使用 pinia.use() 将插件添加到 pinia 实例。给pania添加公共属性和公共方法。在vue中可以灵活使用\n```js main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport { createPinia } from 'pinia'\nconst pinia = createPinia()\n// 扩展 PiniaCustomProperties 接口定义插件中添加的公共属性和公共方法。 然后可以安全地写入和读取它\ndeclare module 'pinia' {\n  export interface PiniaCustomProperties {\n    pluginsAuthor: string\n    pubs(): void\n  }\n}\n//通过插件给pinia添加公共属性\npinia.use(context => {\n  const { store } = context\n  return { pluginsAuthor: store.$state.loginUser }\n})\n//通过插件给pinia添加公共属性\npinia.use(context => {\n  const { store } = context\n  store.pubs = function () {\n    console.log('pinia plugins add public method')\n  }\n})\n//因为context中可以解构出store，所以上边的代码可以简写为\n// pinia.use(({ store }) => {\n//   return { pluginsAuthor: store.$state.loginUser }\n// })\n// pinia.use(({ store }) => {\n//   store.pubs = function () {\n//     console.log('pinia plugins add public method')\n//   }\n// })\n\ncreateApp(App).use(router).use(pinia).mount('#app')\n```\n\n```js HelloView.vue\n<template>\n<button @click=\"getPulicProto\">pinia plugins public proto and invoke public methos</button>\n<span>pluginsAuthor:{{ propto }}</span>\n</template>\n<script setup lang=\"ts\">\nlet propto = ref('原始值')\nconst getPulicProto = () => {\n  console.log('function getPulicProto')\n  accountStore.pubs()\n  propto.value = accountStore.pluginsAuthor\n}\n</script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Vue3-0-Pinia-状态管理框架","published":1,"updated":"2023-03-10T08:45:54.186Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3i00565cs94w3kdtix","content":"<blockquote>\n<p>Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-与vuex的对比\"><a class=\"markdownIt-Anchor\" href=\"#1-与vuex的对比\"></a> 1. 与vuex的对比</h4>\n<ol>\n<li>pinia中只有state、getter、action，抛弃了Vuex中的Mutation，减少工作量。</li>\n<li>pinia中的action支持同步和异步，Vuex不支持</li>\n<li>良好的Typescript支持，Vue使用TS来编写时使用pinia非常合适</li>\n<li>无需创建各个模块嵌套。在Vuex中如果数据过多，一般会通常分模块来进行管理，回略显得麻烦，而pinia中每个store都是独立的，互相不影响。</li>\n<li>体积非常小，只有1KB左右。</li>\n<li>pinia支持插件来扩展自身功能。</li>\n<li>支持服务端渲染。</li>\n</ol>\n<h4 id=\"2-安装和使用\"><a class=\"markdownIt-Anchor\" href=\"#2-安装和使用\"></a> 2. 安装和使用</h4>\n<ol>\n<li>安装：vue create vue-app 采用 Manually select features 形式安装。</li>\n</ol>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//上下移动  space空格选中  a全选  i反选    enter回车确定</span><br><span class=\"line\">Vue CLI v5.<span class=\"number\">0</span>.<span class=\"number\">8</span></span><br><span class=\"line\">? Please pick a preset: Manually select features</span><br><span class=\"line\">? Check the features needed <span class=\"keyword\">for</span> your project: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed)</span><br><span class=\"line\"> ◉ Babel</span><br><span class=\"line\"> ◉ TypeScript</span><br><span class=\"line\">❯◯ Progressive Web App (PWA) Support</span><br><span class=\"line\"> ◉ Router</span><br><span class=\"line\"> ◯ Vuex</span><br><span class=\"line\"> ◉ CSS Pre-processors</span><br><span class=\"line\"> ◉ Linter / Formatter</span><br><span class=\"line\"> ◯ Unit Testing</span><br><span class=\"line\"> ◯ E2E Testing</span><br></pre></td></tr></table></figure>\n<p>在这里一般选择 babel/ts/router/css/linter这几个选项,选择好后 enter回车确认</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue CLI v5.<span class=\"number\">0</span>.<span class=\"number\">8</span></span><br><span class=\"line\">? Please pick a preset: Manually select features</span><br><span class=\"line\">? Check the features needed <span class=\"keyword\">for</span> your project: Babel, TS, Router, CSS Pre-processors, Linter</span><br><span class=\"line\">? Choose a version of Vue.js that you want to <span class=\"built_in\">start</span> the project with (Use arrow keys)</span><br><span class=\"line\">❯ <span class=\"number\">3</span>.x </span><br><span class=\"line\">  <span class=\"number\">2</span>.x </span><br></pre></td></tr></table></figure>\n<p>选择vue的版本，当然是选择vue3了。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Use class-style component syntax? (y/N) </span><br></pre></td></tr></table></figure>\n<p>是否使用Class风格装饰器？ 原本是：home = new Vue()创建vue实例，用装饰器后：class home extends Vue{}。直接enter回车即选择No</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Use Babel alongside TypeScript (required <span class=\"keyword\">for</span> modern <span class=\"built_in\">mode</span>, auto-detected polyfills, transpiling JSX)? (Y/n) </span><br></pre></td></tr></table></figure>\n<p>使用Babel与TypeScript一起用于自动检测的填充? 选择yes</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Use history <span class=\"built_in\">mode</span> <span class=\"keyword\">for</span> router? (Requires proper server setup <span class=\"keyword\">for</span> index fallback <span class=\"keyword\">in</span> production)</span><br></pre></td></tr></table></figure>\n<p>是否使用router的history模式。router路由有hash模式和history模式（url带#和不带）.选择yes</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): (Use arrow keys)</span><br><span class=\"line\">❯ Sass/SCSS (with dart-sass) </span><br><span class=\"line\">  Less </span><br><span class=\"line\">  Stylus</span><br></pre></td></tr></table></figure>\n<p>css处理模式。看情况选择。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Pick a linter / formatter config: (Use arrow keys)</span><br><span class=\"line\">❯ ESLint with error prevention only </span><br><span class=\"line\">  ESLint + Airbnb config </span><br><span class=\"line\">  ESLint + Standard config </span><br><span class=\"line\">  ESLint + Prettier</span><br></pre></td></tr></table></figure>\n<p>代码检查与代码格式. 选择 ESLint + Prettier</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pick additional lint features: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed)</span><br><span class=\"line\">❯◉ Lint on save</span><br><span class=\"line\"> ◯ Lint and fix on commit</span><br></pre></td></tr></table></figure>\n<p>项目校验格式 Lint on save 是保存时，Lint and fix on commit是提交时.选择 Lint on save</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Where <span class=\"keyword\">do</span> you prefer placing config <span class=\"keyword\">for</span> Babel, ESLint, etc.? (Use arrow keys)</span><br><span class=\"line\">❯ <span class=\"keyword\">In</span> dedicated config files </span><br><span class=\"line\">  <span class=\"keyword\">In</span> package.json </span><br></pre></td></tr></table></figure>\n<p>项目的配置文件存放 In dedicated config files 独立配置文件，In package.json 存放在package.json。选择 In package.json</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Save this as a preset <span class=\"keyword\">for</span> future projects? (y/N) </span><br></pre></td></tr></table></figure>\n<p>询问保存该配置是否作为后续项目的可选配置，选择是，则会要求给该配置命名，这个自己定就行,我输入为：default-setting.配置后会在创建项目时：vue create projectName 看到这个配置。例如:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue CLI v5.<span class=\"number\">0</span>.<span class=\"number\">8</span></span><br><span class=\"line\">? Please pick a preset: </span><br><span class=\"line\">❯ odinsam_vue+babel+ts+history+dart-sass+linter+prettier ([Vue <span class=\"number\">3</span>] dart-sass, babel, typescript, router, eslint) </span><br><span class=\"line\">  Default ([Vue <span class=\"number\">3</span>] babel, eslint) </span><br><span class=\"line\">  Default ([Vue <span class=\"number\">2</span>] babel, eslint) </span><br><span class=\"line\">  Manually select features </span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>配置linter和prettier.添加 .prettierrc.js</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>.prettierrc.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 一行最多 180 字符</span></span><br><span class=\"line\">  <span class=\"attr\">printWidth</span>: <span class=\"number\">180</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 使用 4 个空格缩进</span></span><br><span class=\"line\">  <span class=\"attr\">tabWidth</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 不使用缩进符，而使用空格</span></span><br><span class=\"line\">  <span class=\"attr\">useTabs</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 行尾需要有分号</span></span><br><span class=\"line\">  <span class=\"attr\">semi</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 使用单引号</span></span><br><span class=\"line\">  <span class=\"attr\">singleQuote</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 对象的 key 仅在必要时用引号</span></span><br><span class=\"line\">  <span class=\"attr\">quoteProps</span>: <span class=\"string\">&#x27;as-needed&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// jsx 不使用单引号，而使用双引号</span></span><br><span class=\"line\">  <span class=\"attr\">jsxSingleQuote</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 末尾不需要逗号</span></span><br><span class=\"line\">  <span class=\"attr\">trailingComma</span>: <span class=\"string\">&#x27;all&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 大括号内的首尾需要空格</span></span><br><span class=\"line\">  <span class=\"attr\">bracketSpacing</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"comment\">// jsx 标签的反尖括号需要换行</span></span><br><span class=\"line\">  <span class=\"attr\">jsxBracketSameLine</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 箭头函数，只有一个参数的时候，也需要括号  avoid 能省略括号的时候就省略 例如x =&gt; x</span></span><br><span class=\"line\">  <span class=\"attr\">arrowParens</span>: <span class=\"string\">&#x27;avoid&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 每个文件格式化的范围是文件的全部内容</span></span><br><span class=\"line\">  <span class=\"attr\">rangeStart</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"attr\">rangeEnd</span>: <span class=\"literal\">Infinity</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 不需要写文件开头的 @prettier</span></span><br><span class=\"line\">  <span class=\"attr\">requirePragma</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 不需要自动在文件开头插入 @prettier</span></span><br><span class=\"line\">  <span class=\"attr\">insertPragma</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 使用默认的折行标准</span></span><br><span class=\"line\">  <span class=\"attr\">proseWrap</span>: <span class=\"string\">&#x27;preserve&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 根据显示样式决定 html 要不要折行</span></span><br><span class=\"line\">  <span class=\"attr\">htmlWhitespaceSensitivity</span>: <span class=\"string\">&#x27;css&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 换行符使用 lf</span></span><br><span class=\"line\">  <span class=\"attr\">endOfLine</span>: <span class=\"string\">&#x27;auto&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>安装并使用pinia. npm i pinia 或者 yarn add pinia 。 main.js使用pinia</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&quot;./App.vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;./router&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App).use(router).mount(<span class=\"string\">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-创建storestore的本质是一个函数包括两个参数第一个是store的名字第二个是store的配置项-配置项中包括-stateactions和getters-state-是-store-的核心部分是需要统一管理的状态actions-相当于组件中的-methods即业务操作getter-完全等同于-store-状态的-计算值\"><a class=\"markdownIt-Anchor\" href=\"#3-创建storestore的本质是一个函数包括两个参数第一个是store的名字第二个是store的配置项-配置项中包括-stateactions和getters-state-是-store-的核心部分是需要统一管理的状态actions-相当于组件中的-methods即业务操作getter-完全等同于-store-状态的-计算值\"></a> 3. 创建store.store的本质是一个函数包括两个参数，第一个是store的名字，第二个是store的配置项。配置项中包括 state,actions和getters. state 是 store 的核心部分是需要统一管理的状态.Actions 相当于组件中的 methods即业务操作.getter 完全等同于 Store 状态的 计算值</h4>\n<figure class=\"highlight js\"><figcaption><span>store/xxx.ts</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第一个参数是store的名字，第二是参数是配置对象</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useAccountStore = defineStore(<span class=\"string\">&#x27;account&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 配置state</span></span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; <span class=\"attr\">loginUser</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>, <span class=\"attr\">isLogin</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//配置getters</span></span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">getAddAge</span>: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> !state.isLogin</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置actions</span></span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">setUserName</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.loginUser = <span class=\"string\">&#x27;action user&#x27;</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123; <span class=\"attr\">loginUser</span>: <span class=\"built_in\">this</span>.loginUser &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-使用store\"><a class=\"markdownIt-Anchor\" href=\"#4-使用store\"></a> 4. 使用store</h4>\n<figure class=\"highlight js\"><figcaption><span>HomView.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;home&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnLogin&quot;</span>&gt;</span>home login<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--在模板中可以使用解构的store数据--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>store:&#123;&#123; isLogin &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeUserbtnLogin&quot;</span>&gt;</span>change user<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>user:&#123;&#123; loginUser &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;invokeAction&quot;</span>&gt;</span>invoke action<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>getter store:&#123;&#123; accountStore.changeLoginState &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Vue logo&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../assets/logo.png&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">HelloWorld</span> <span class=\"attr\">msg</span>=<span class=\"string\">&quot;Welcome to Your Vue.js + TypeScript App&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;ts&quot;</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 引入 store</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; useAccountStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/store/account&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 引入 storeToRefs  将解构的store中的数据变为响应式数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; storeToRefs &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> HelloWorld <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/HelloWorld.vue&#x27;</span> <span class=\"comment\">// @ is an alias to /src</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 调用函数创建store实例</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> accountStore = useAccountStore()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">btnLogin</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;btn login&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"comment\">// 在组件的methods中可以直接使用accountStore实例对象</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  accountStore.isLogin = <span class=\"literal\">true</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 解构store的数据在模板中使用，并使其为响应式的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> &#123; isLogin, loginUser &#125; = storeToRefs(accountStore)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> changeUserbtnLogin = <span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function changeUserbtnLogin&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  accountStore.loginUser = <span class=\"string\">&#x27;abc&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> invokeAction = <span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function invokeAction&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  accountStore.setUserName()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> 可以使用 store.$onAction() 订阅 action 及其结果。 </span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> 传递给它的回调在 action 之前执行。 </span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> after 处理 Promise 并允许您在 action 完成后执行函数。 </span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> 以类似的方式，onError 允许您在处理中抛出错误。 这些对于在运行时跟踪错误很有用，类似于 Vue 文档中的这个提示。</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> &#123;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    name, // action 的名字</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    store, // store 实例</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    args, // 调用这个 action 的参数</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    after, // 在这个 action 执行完毕之后，执行这个函数</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    onError, // 在这个 action 抛出异常的时候，执行这个函数</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">  &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> */</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">accountStore.$onAction(<span class=\"function\">(<span class=\"params\">&#123; name, store, args, after, onError &#125;</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"comment\">//actions被调用触发</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;anonymous function&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"comment\">//如果 actions 是 setUserName</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"keyword\">if</span> (name === <span class=\"string\">&#x27;setUserName&#x27;</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 执行成功后出发</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    after(<span class=\"function\"><span class=\"params\">reject</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;store&#x27;</span>, store)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;args&#x27;</span>, args)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"comment\">//这里可以执行一些操作</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;reject.loginUser:&#x27;</span>, reject.loginUser)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"comment\">// actions error时出发</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  onError(<span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function onError&#x27;</span>, error)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"5-pinia插件的使用plugins\"><a class=\"markdownIt-Anchor\" href=\"#5-pinia插件的使用plugins\"></a> 5. pinia插件的使用plugins.</h4>\n<p>由于是底层 API，Pinia Store可以完全扩展。 您可以执行的操作列表：向 Store 添加新属性、定义 Store 时添加新选项、为 Store 添加新方法、包装现有方法、更改甚至取消操作、实现本地存储等副作用、仅适用于特定 Store。</p>\n<h4 id=\"6-使用-piniause-将插件添加到-pinia-实例-给pania添加公共属性和公共方法-在vue中可以灵活使用\"><a class=\"markdownIt-Anchor\" href=\"#6-使用-piniause-将插件添加到-pinia-实例-给pania添加公共属性和公共方法-在vue中可以灵活使用\"></a> 6. 使用 pinia.use() 将插件添加到 pinia 实例。给pania添加公共属性和公共方法。在vue中可以灵活使用</h4>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createPinia &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> pinia = createPinia()</span><br><span class=\"line\"><span class=\"comment\">// 扩展 PiniaCustomProperties 接口定义插件中添加的公共属性和公共方法。 然后可以安全地写入和读取它</span></span><br><span class=\"line\">declare <span class=\"built_in\">module</span> <span class=\"string\">&#x27;pinia&#x27;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> interface PiniaCustomProperties &#123;</span><br><span class=\"line\">    <span class=\"attr\">pluginsAuthor</span>: string</span><br><span class=\"line\">    pubs(): <span class=\"keyword\">void</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//通过插件给pinia添加公共属性</span></span><br><span class=\"line\">pinia.use(<span class=\"function\"><span class=\"params\">context</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; store &#125; = context</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">pluginsAuthor</span>: store.$state.loginUser &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//通过插件给pinia添加公共属性</span></span><br><span class=\"line\">pinia.use(<span class=\"function\"><span class=\"params\">context</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; store &#125; = context</span><br><span class=\"line\">  store.pubs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;pinia plugins add public method&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//因为context中可以解构出store，所以上边的代码可以简写为</span></span><br><span class=\"line\"><span class=\"comment\">// pinia.use((&#123; store &#125;) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   return &#123; pluginsAuthor: store.$state.loginUser &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">// pinia.use((&#123; store &#125;) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   store.pubs = function () &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(&#x27;pinia plugins add public method&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App).use(router).use(pinia).mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>HelloView.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getPulicProto&quot;</span>&gt;</span>pinia plugins public proto and invoke public methos<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>pluginsAuthor:&#123;&#123; propto &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;ts&quot;</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">let</span> propto = ref(<span class=\"string\">&#x27;原始值&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> getPulicProto = <span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function getPulicProto&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  accountStore.pubs()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  propto.value = accountStore.pluginsAuthor</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。</p>\n</blockquote>","more":"<h4 id=\"1-与vuex的对比\"><a class=\"markdownIt-Anchor\" href=\"#1-与vuex的对比\"></a> 1. 与vuex的对比</h4>\n<ol>\n<li>pinia中只有state、getter、action，抛弃了Vuex中的Mutation，减少工作量。</li>\n<li>pinia中的action支持同步和异步，Vuex不支持</li>\n<li>良好的Typescript支持，Vue使用TS来编写时使用pinia非常合适</li>\n<li>无需创建各个模块嵌套。在Vuex中如果数据过多，一般会通常分模块来进行管理，回略显得麻烦，而pinia中每个store都是独立的，互相不影响。</li>\n<li>体积非常小，只有1KB左右。</li>\n<li>pinia支持插件来扩展自身功能。</li>\n<li>支持服务端渲染。</li>\n</ol>\n<h4 id=\"2-安装和使用\"><a class=\"markdownIt-Anchor\" href=\"#2-安装和使用\"></a> 2. 安装和使用</h4>\n<ol>\n<li>安装：vue create vue-app 采用 Manually select features 形式安装。</li>\n</ol>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//上下移动  space空格选中  a全选  i反选    enter回车确定</span><br><span class=\"line\">Vue CLI v5.<span class=\"number\">0</span>.<span class=\"number\">8</span></span><br><span class=\"line\">? Please pick a preset: Manually select features</span><br><span class=\"line\">? Check the features needed <span class=\"keyword\">for</span> your project: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed)</span><br><span class=\"line\"> ◉ Babel</span><br><span class=\"line\"> ◉ TypeScript</span><br><span class=\"line\">❯◯ Progressive Web App (PWA) Support</span><br><span class=\"line\"> ◉ Router</span><br><span class=\"line\"> ◯ Vuex</span><br><span class=\"line\"> ◉ CSS Pre-processors</span><br><span class=\"line\"> ◉ Linter / Formatter</span><br><span class=\"line\"> ◯ Unit Testing</span><br><span class=\"line\"> ◯ E2E Testing</span><br></pre></td></tr></table></figure>\n<p>在这里一般选择 babel/ts/router/css/linter这几个选项,选择好后 enter回车确认</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue CLI v5.<span class=\"number\">0</span>.<span class=\"number\">8</span></span><br><span class=\"line\">? Please pick a preset: Manually select features</span><br><span class=\"line\">? Check the features needed <span class=\"keyword\">for</span> your project: Babel, TS, Router, CSS Pre-processors, Linter</span><br><span class=\"line\">? Choose a version of Vue.js that you want to <span class=\"built_in\">start</span> the project with (Use arrow keys)</span><br><span class=\"line\">❯ <span class=\"number\">3</span>.x </span><br><span class=\"line\">  <span class=\"number\">2</span>.x </span><br></pre></td></tr></table></figure>\n<p>选择vue的版本，当然是选择vue3了。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Use class-style component syntax? (y/N) </span><br></pre></td></tr></table></figure>\n<p>是否使用Class风格装饰器？ 原本是：home = new Vue()创建vue实例，用装饰器后：class home extends Vue{}。直接enter回车即选择No</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Use Babel alongside TypeScript (required <span class=\"keyword\">for</span> modern <span class=\"built_in\">mode</span>, auto-detected polyfills, transpiling JSX)? (Y/n) </span><br></pre></td></tr></table></figure>\n<p>使用Babel与TypeScript一起用于自动检测的填充? 选择yes</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Use history <span class=\"built_in\">mode</span> <span class=\"keyword\">for</span> router? (Requires proper server setup <span class=\"keyword\">for</span> index fallback <span class=\"keyword\">in</span> production)</span><br></pre></td></tr></table></figure>\n<p>是否使用router的history模式。router路由有hash模式和history模式（url带#和不带）.选择yes</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): (Use arrow keys)</span><br><span class=\"line\">❯ Sass/SCSS (with dart-sass) </span><br><span class=\"line\">  Less </span><br><span class=\"line\">  Stylus</span><br></pre></td></tr></table></figure>\n<p>css处理模式。看情况选择。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Pick a linter / formatter config: (Use arrow keys)</span><br><span class=\"line\">❯ ESLint with error prevention only </span><br><span class=\"line\">  ESLint + Airbnb config </span><br><span class=\"line\">  ESLint + Standard config </span><br><span class=\"line\">  ESLint + Prettier</span><br></pre></td></tr></table></figure>\n<p>代码检查与代码格式. 选择 ESLint + Prettier</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Pick additional lint features: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed)</span><br><span class=\"line\">❯◉ Lint on save</span><br><span class=\"line\"> ◯ Lint and fix on commit</span><br></pre></td></tr></table></figure>\n<p>项目校验格式 Lint on save 是保存时，Lint and fix on commit是提交时.选择 Lint on save</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Where <span class=\"keyword\">do</span> you prefer placing config <span class=\"keyword\">for</span> Babel, ESLint, etc.? (Use arrow keys)</span><br><span class=\"line\">❯ <span class=\"keyword\">In</span> dedicated config files </span><br><span class=\"line\">  <span class=\"keyword\">In</span> package.json </span><br></pre></td></tr></table></figure>\n<p>项目的配置文件存放 In dedicated config files 独立配置文件，In package.json 存放在package.json。选择 In package.json</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? Save this as a preset <span class=\"keyword\">for</span> future projects? (y/N) </span><br></pre></td></tr></table></figure>\n<p>询问保存该配置是否作为后续项目的可选配置，选择是，则会要求给该配置命名，这个自己定就行,我输入为：default-setting.配置后会在创建项目时：vue create projectName 看到这个配置。例如:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue CLI v5.<span class=\"number\">0</span>.<span class=\"number\">8</span></span><br><span class=\"line\">? Please pick a preset: </span><br><span class=\"line\">❯ odinsam_vue+babel+ts+history+dart-sass+linter+prettier ([Vue <span class=\"number\">3</span>] dart-sass, babel, typescript, router, eslint) </span><br><span class=\"line\">  Default ([Vue <span class=\"number\">3</span>] babel, eslint) </span><br><span class=\"line\">  Default ([Vue <span class=\"number\">2</span>] babel, eslint) </span><br><span class=\"line\">  Manually select features </span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>配置linter和prettier.添加 .prettierrc.js</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>.prettierrc.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 一行最多 180 字符</span></span><br><span class=\"line\">  <span class=\"attr\">printWidth</span>: <span class=\"number\">180</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 使用 4 个空格缩进</span></span><br><span class=\"line\">  <span class=\"attr\">tabWidth</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 不使用缩进符，而使用空格</span></span><br><span class=\"line\">  <span class=\"attr\">useTabs</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 行尾需要有分号</span></span><br><span class=\"line\">  <span class=\"attr\">semi</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 使用单引号</span></span><br><span class=\"line\">  <span class=\"attr\">singleQuote</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 对象的 key 仅在必要时用引号</span></span><br><span class=\"line\">  <span class=\"attr\">quoteProps</span>: <span class=\"string\">&#x27;as-needed&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// jsx 不使用单引号，而使用双引号</span></span><br><span class=\"line\">  <span class=\"attr\">jsxSingleQuote</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 末尾不需要逗号</span></span><br><span class=\"line\">  <span class=\"attr\">trailingComma</span>: <span class=\"string\">&#x27;all&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 大括号内的首尾需要空格</span></span><br><span class=\"line\">  <span class=\"attr\">bracketSpacing</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"comment\">// jsx 标签的反尖括号需要换行</span></span><br><span class=\"line\">  <span class=\"attr\">jsxBracketSameLine</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 箭头函数，只有一个参数的时候，也需要括号  avoid 能省略括号的时候就省略 例如x =&gt; x</span></span><br><span class=\"line\">  <span class=\"attr\">arrowParens</span>: <span class=\"string\">&#x27;avoid&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 每个文件格式化的范围是文件的全部内容</span></span><br><span class=\"line\">  <span class=\"attr\">rangeStart</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"attr\">rangeEnd</span>: <span class=\"literal\">Infinity</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 不需要写文件开头的 @prettier</span></span><br><span class=\"line\">  <span class=\"attr\">requirePragma</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 不需要自动在文件开头插入 @prettier</span></span><br><span class=\"line\">  <span class=\"attr\">insertPragma</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 使用默认的折行标准</span></span><br><span class=\"line\">  <span class=\"attr\">proseWrap</span>: <span class=\"string\">&#x27;preserve&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 根据显示样式决定 html 要不要折行</span></span><br><span class=\"line\">  <span class=\"attr\">htmlWhitespaceSensitivity</span>: <span class=\"string\">&#x27;css&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 换行符使用 lf</span></span><br><span class=\"line\">  <span class=\"attr\">endOfLine</span>: <span class=\"string\">&#x27;auto&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>安装并使用pinia. npm i pinia 或者 yarn add pinia 。 main.js使用pinia</li>\n</ol>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&quot;./App.vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&quot;./router&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App).use(router).mount(<span class=\"string\">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-创建storestore的本质是一个函数包括两个参数第一个是store的名字第二个是store的配置项-配置项中包括-stateactions和getters-state-是-store-的核心部分是需要统一管理的状态actions-相当于组件中的-methods即业务操作getter-完全等同于-store-状态的-计算值\"><a class=\"markdownIt-Anchor\" href=\"#3-创建storestore的本质是一个函数包括两个参数第一个是store的名字第二个是store的配置项-配置项中包括-stateactions和getters-state-是-store-的核心部分是需要统一管理的状态actions-相当于组件中的-methods即业务操作getter-完全等同于-store-状态的-计算值\"></a> 3. 创建store.store的本质是一个函数包括两个参数，第一个是store的名字，第二个是store的配置项。配置项中包括 state,actions和getters. state 是 store 的核心部分是需要统一管理的状态.Actions 相当于组件中的 methods即业务操作.getter 完全等同于 Store 状态的 计算值</h4>\n<figure class=\"highlight js\"><figcaption><span>store/xxx.ts</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第一个参数是store的名字，第二是参数是配置对象</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useAccountStore = defineStore(<span class=\"string\">&#x27;account&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 配置state</span></span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123; <span class=\"attr\">loginUser</span>: <span class=\"string\">&#x27;odinsam&#x27;</span>, <span class=\"attr\">isLogin</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//配置getters</span></span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">getAddAge</span>: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> !state.isLogin</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置actions</span></span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">setUserName</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.loginUser = <span class=\"string\">&#x27;action user&#x27;</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123; <span class=\"attr\">loginUser</span>: <span class=\"built_in\">this</span>.loginUser &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-使用store\"><a class=\"markdownIt-Anchor\" href=\"#4-使用store\"></a> 4. 使用store</h4>\n<figure class=\"highlight js\"><figcaption><span>HomView.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;home&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnLogin&quot;</span>&gt;</span>home login<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"comment\">&lt;!--在模板中可以使用解构的store数据--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>store:&#123;&#123; isLogin &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;changeUserbtnLogin&quot;</span>&gt;</span>change user<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>user:&#123;&#123; loginUser &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;invokeAction&quot;</span>&gt;</span>invoke action<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>getter store:&#123;&#123; accountStore.changeLoginState &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Vue logo&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;../assets/logo.png&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">HelloWorld</span> <span class=\"attr\">msg</span>=<span class=\"string\">&quot;Welcome to Your Vue.js + TypeScript App&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;ts&quot;</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 引入 store</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; useAccountStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/store/account&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 引入 storeToRefs  将解构的store中的数据变为响应式数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> &#123; storeToRefs &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">import</span> HelloWorld <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/HelloWorld.vue&#x27;</span> <span class=\"comment\">// @ is an alias to /src</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 调用函数创建store实例</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> accountStore = useAccountStore()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">btnLogin</span>(<span class=\"params\"></span>) </span>&#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;btn login&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"comment\">// 在组件的methods中可以直接使用accountStore实例对象</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  accountStore.isLogin = <span class=\"literal\">true</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">// 解构store的数据在模板中使用，并使其为响应式的数据</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> &#123; isLogin, loginUser &#125; = storeToRefs(accountStore)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> changeUserbtnLogin = <span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function changeUserbtnLogin&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  accountStore.loginUser = <span class=\"string\">&#x27;abc&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> invokeAction = <span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function invokeAction&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  accountStore.setUserName()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"comment\">/**</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> 可以使用 store.$onAction() 订阅 action 及其结果。 </span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> 传递给它的回调在 action 之前执行。 </span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> after 处理 Promise 并允许您在 action 完成后执行函数。 </span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> 以类似的方式，onError 允许您在处理中抛出错误。 这些对于在运行时跟踪错误很有用，类似于 Vue 文档中的这个提示。</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> &#123;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    name, // action 的名字</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    store, // store 实例</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    args, // 调用这个 action 的参数</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    after, // 在这个 action 执行完毕之后，执行这个函数</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">    onError, // 在这个 action 抛出异常的时候，执行这个函数</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\">  &#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"javascript\"><span class=\"xml\"> */</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">accountStore.$onAction(<span class=\"function\">(<span class=\"params\">&#123; name, store, args, after, onError &#125;</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"comment\">//actions被调用触发</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;anonymous function&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"comment\">//如果 actions 是 setUserName</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"keyword\">if</span> (name === <span class=\"string\">&#x27;setUserName&#x27;</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"comment\">// 执行成功后出发</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    after(<span class=\"function\"><span class=\"params\">reject</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;store&#x27;</span>, store)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;args&#x27;</span>, args)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"comment\">//这里可以执行一些操作</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;reject.loginUser:&#x27;</span>, reject.loginUser)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  &#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"comment\">// actions error时出发</span></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  onError(<span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function onError&#x27;</span>, error)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  &#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"5-pinia插件的使用plugins\"><a class=\"markdownIt-Anchor\" href=\"#5-pinia插件的使用plugins\"></a> 5. pinia插件的使用plugins.</h4>\n<p>由于是底层 API，Pinia Store可以完全扩展。 您可以执行的操作列表：向 Store 添加新属性、定义 Store 时添加新选项、为 Store 添加新方法、包装现有方法、更改甚至取消操作、实现本地存储等副作用、仅适用于特定 Store。</p>\n<h4 id=\"6-使用-piniause-将插件添加到-pinia-实例-给pania添加公共属性和公共方法-在vue中可以灵活使用\"><a class=\"markdownIt-Anchor\" href=\"#6-使用-piniause-将插件添加到-pinia-实例-给pania添加公共属性和公共方法-在vue中可以灵活使用\"></a> 6. 使用 pinia.use() 将插件添加到 pinia 实例。给pania添加公共属性和公共方法。在vue中可以灵活使用</h4>\n<figure class=\"highlight js\"><figcaption><span>main.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createPinia &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> pinia = createPinia()</span><br><span class=\"line\"><span class=\"comment\">// 扩展 PiniaCustomProperties 接口定义插件中添加的公共属性和公共方法。 然后可以安全地写入和读取它</span></span><br><span class=\"line\">declare <span class=\"built_in\">module</span> <span class=\"string\">&#x27;pinia&#x27;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> interface PiniaCustomProperties &#123;</span><br><span class=\"line\">    <span class=\"attr\">pluginsAuthor</span>: string</span><br><span class=\"line\">    pubs(): <span class=\"keyword\">void</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//通过插件给pinia添加公共属性</span></span><br><span class=\"line\">pinia.use(<span class=\"function\"><span class=\"params\">context</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; store &#125; = context</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">pluginsAuthor</span>: store.$state.loginUser &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//通过插件给pinia添加公共属性</span></span><br><span class=\"line\">pinia.use(<span class=\"function\"><span class=\"params\">context</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; store &#125; = context</span><br><span class=\"line\">  store.pubs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;pinia plugins add public method&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//因为context中可以解构出store，所以上边的代码可以简写为</span></span><br><span class=\"line\"><span class=\"comment\">// pinia.use((&#123; store &#125;) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   return &#123; pluginsAuthor: store.$state.loginUser &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">// pinia.use((&#123; store &#125;) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   store.pubs = function () &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(&#x27;pinia plugins add public method&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App).use(router).use(pinia).mount(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>HelloView.vue</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;getPulicProto&quot;</span>&gt;</span>pinia plugins public proto and invoke public methos<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>pluginsAuthor:&#123;&#123; propto &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;ts&quot;</span>&gt;</span><span class=\"javascript\"></span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">let</span> propto = ref(<span class=\"string\">&#x27;原始值&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"><span class=\"keyword\">const</span> getPulicProto = <span class=\"function\">() =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;function getPulicProto&#x27;</span>)</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  accountStore.pubs()</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">  propto.value = accountStore.pluginsAuthor</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>"},{"title":"Vue3.0 学习系列","author":"OdinSam","abbrlink":"151c","date":"2022-10-20T08:10:00.000Z","_content":"> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n### [Vue3.0 - 01. 初识vue3](/articles/2774.html)\n\n### [Vue3.0 - 02. 计算属性与监视属性](/articles/3ab3.html)\n\n### [Vue3.0 - 03. 生命周期](/articles/4ed.html)\n\n### [Vue3.0 - 04. vue3中的hook](/articles/bd63.html)\n\n### [Vue3.0 - 05. toRef与toRefs](/articles/ba93.html)\n\n### [Vue3.0 - 06. 其他的CompositionApi及总结](/articles/9754.html)\n\n### [Vue3.0 - 07. vue3中新增的一些组件](/articles/40e7.html)\n\n### [Vue3.0 - Pinia 状态管理框架](/articles/99b6.html)\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","source":"_posts/Vue3-0-学习系列.md","raw":"title: Vue3.0 学习系列\nauthor: OdinSam\ntags:\n  - vue3\ncategories:\n  - 前端\n  - vue3\nabbrlink: 151c\ndate: 2022-10-20 16:10:00\n---\n> [Vue3.0 学习系列](/articles/151c.html) \n\n<!--more-->\n\n### [Vue3.0 - 01. 初识vue3](/articles/2774.html)\n\n### [Vue3.0 - 02. 计算属性与监视属性](/articles/3ab3.html)\n\n### [Vue3.0 - 03. 生命周期](/articles/4ed.html)\n\n### [Vue3.0 - 04. vue3中的hook](/articles/bd63.html)\n\n### [Vue3.0 - 05. toRef与toRefs](/articles/ba93.html)\n\n### [Vue3.0 - 06. 其他的CompositionApi及总结](/articles/9754.html)\n\n### [Vue3.0 - 07. vue3中新增的一些组件](/articles/40e7.html)\n\n### [Vue3.0 - Pinia 状态管理框架](/articles/99b6.html)\n\n\n[Vue2.0 基础学习目录](/articles/da3d.html)  \n\n[Vue2.0进阶学习](/articles/e255.html) \n\n完整代码可以在 [GitHub](https://github.com/odinsam/learn-vue2.0)","slug":"Vue3-0-学习系列","published":1,"updated":"2023-03-10T08:37:55.228Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3i00595cs9a1thc5uv","content":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>\n<span id=\"more\"></span>\n<h3 id=\"vue30-01-初识vue3\"><a class=\"markdownIt-Anchor\" href=\"#vue30-01-初识vue3\"></a> <a href=\"/articles/2774.html\">Vue3.0 - 01. 初识vue3</a></h3>\n<h3 id=\"vue30-02-计算属性与监视属性\"><a class=\"markdownIt-Anchor\" href=\"#vue30-02-计算属性与监视属性\"></a> <a href=\"/articles/3ab3.html\">Vue3.0 - 02. 计算属性与监视属性</a></h3>\n<h3 id=\"vue30-03-生命周期\"><a class=\"markdownIt-Anchor\" href=\"#vue30-03-生命周期\"></a> <a href=\"/articles/4ed.html\">Vue3.0 - 03. 生命周期</a></h3>\n<h3 id=\"vue30-04-vue3中的hook\"><a class=\"markdownIt-Anchor\" href=\"#vue30-04-vue3中的hook\"></a> <a href=\"/articles/bd63.html\">Vue3.0 - 04. vue3中的hook</a></h3>\n<h3 id=\"vue30-05-toref与torefs\"><a class=\"markdownIt-Anchor\" href=\"#vue30-05-toref与torefs\"></a> <a href=\"/articles/ba93.html\">Vue3.0 - 05. toRef与toRefs</a></h3>\n<h3 id=\"vue30-06-其他的compositionapi及总结\"><a class=\"markdownIt-Anchor\" href=\"#vue30-06-其他的compositionapi及总结\"></a> <a href=\"/articles/9754.html\">Vue3.0 - 06. 其他的CompositionApi及总结</a></h3>\n<h3 id=\"vue30-07-vue3中新增的一些组件\"><a class=\"markdownIt-Anchor\" href=\"#vue30-07-vue3中新增的一些组件\"></a> <a href=\"/articles/40e7.html\">Vue3.0 - 07. vue3中新增的一些组件</a></h3>\n<h3 id=\"vue30-pinia-状态管理框架\"><a class=\"markdownIt-Anchor\" href=\"#vue30-pinia-状态管理框架\"></a> <a href=\"/articles/99b6.html\">Vue3.0 - Pinia 状态管理框架</a></h3>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p><a href=\"/articles/151c.html\">Vue3.0 学习系列</a></p>\n</blockquote>","more":"<h3 id=\"vue30-01-初识vue3\"><a class=\"markdownIt-Anchor\" href=\"#vue30-01-初识vue3\"></a> <a href=\"/articles/2774.html\">Vue3.0 - 01. 初识vue3</a></h3>\n<h3 id=\"vue30-02-计算属性与监视属性\"><a class=\"markdownIt-Anchor\" href=\"#vue30-02-计算属性与监视属性\"></a> <a href=\"/articles/3ab3.html\">Vue3.0 - 02. 计算属性与监视属性</a></h3>\n<h3 id=\"vue30-03-生命周期\"><a class=\"markdownIt-Anchor\" href=\"#vue30-03-生命周期\"></a> <a href=\"/articles/4ed.html\">Vue3.0 - 03. 生命周期</a></h3>\n<h3 id=\"vue30-04-vue3中的hook\"><a class=\"markdownIt-Anchor\" href=\"#vue30-04-vue3中的hook\"></a> <a href=\"/articles/bd63.html\">Vue3.0 - 04. vue3中的hook</a></h3>\n<h3 id=\"vue30-05-toref与torefs\"><a class=\"markdownIt-Anchor\" href=\"#vue30-05-toref与torefs\"></a> <a href=\"/articles/ba93.html\">Vue3.0 - 05. toRef与toRefs</a></h3>\n<h3 id=\"vue30-06-其他的compositionapi及总结\"><a class=\"markdownIt-Anchor\" href=\"#vue30-06-其他的compositionapi及总结\"></a> <a href=\"/articles/9754.html\">Vue3.0 - 06. 其他的CompositionApi及总结</a></h3>\n<h3 id=\"vue30-07-vue3中新增的一些组件\"><a class=\"markdownIt-Anchor\" href=\"#vue30-07-vue3中新增的一些组件\"></a> <a href=\"/articles/40e7.html\">Vue3.0 - 07. vue3中新增的一些组件</a></h3>\n<h3 id=\"vue30-pinia-状态管理框架\"><a class=\"markdownIt-Anchor\" href=\"#vue30-pinia-状态管理框架\"></a> <a href=\"/articles/99b6.html\">Vue3.0 - Pinia 状态管理框架</a></h3>\n<p><a href=\"/articles/da3d.html\">Vue2.0 基础学习目录</a></p>\n<p><a href=\"/articles/e255.html\">Vue2.0进阶学习</a></p>\n<p>完整代码可以在 <a href=\"https://github.com/odinsam/learn-vue2.0\">GitHub</a></p>"},{"title":"mysql8 远程连接解决办法","author":"OdinSam","abbrlink":"8b92","date":"2022-06-30T05:37:00.000Z","_content":"```sql\ngrant all privileges on *.* to 'root'@'%' ;\nALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '123456';\nflush privileges;\n```","source":"_posts/mysql8-远程连接解决办法.md","raw":"title: mysql8 远程连接解决办法\nauthor: OdinSam\ntags:\n  - MySql\ncategories:\n  - MySql\nabbrlink: 8b92\ndate: 2022-06-30 13:37:00\n---\n```sql\ngrant all privileges on *.* to 'root'@'%' ;\nALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '123456';\nflush privileges;\n```","slug":"mysql8-远程连接解决办法","published":1,"updated":"2023-03-10T05:38:38.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3j005d5cs9dy7k8m42","content":"<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">all</span> privileges <span class=\"keyword\">on</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">to</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> ;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"keyword\">WITH</span> mysql_native_password <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">all</span> privileges <span class=\"keyword\">on</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">to</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> ;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"keyword\">WITH</span> mysql_native_password <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>"},{"title":"macos 小指令","author":"OdinSam","abbrlink":"ade6","date":"2022-10-18T07:12:00.000Z","_content":"macos 中的一些小指令\n\n生成markdownde的目录树\nfind . -print | sed -e ‘s;[^/]*/;|;g;s;|; |;g’","source":"_posts/macos-小指令.md","raw":"title: macos 小指令\nauthor: OdinSam\ntags:\n  - macos\ncategories:\n  - macos\nabbrlink: ade6\ndate: 2022-10-18 15:12:00\n---\nmacos 中的一些小指令\n\n生成markdownde的目录树\nfind . -print | sed -e ‘s;[^/]*/;|;g;s;|; |;g’","slug":"macos-小指令","published":1,"updated":"2023-03-10T07:12:30.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3k005f5cs9f9c979ka","content":"<p>macos 中的一些小指令</p>\n<p>生成markdownde的目录树<br />\nfind . -print | sed -e ‘s;[^/]*/;|;g;s;|; |;g’</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<p>macos 中的一些小指令</p>\n<p>生成markdownde的目录树<br />\nfind . -print | sed -e ‘s;[^/]*/;|;g;s;|; |;g’</p>\n"},{"title":"vscode 使用 git-commit-plugin 插件规范提交 Git","author":"OdinSam","abbrlink":"60dd","date":"2021-06-30T04:38:00.000Z","_content":">在团队协作开发时，每个人提交代码时都会写 commit message。每个人都有自己的书写风格，翻看我们组的git log, 可以说是五花八门，十分不利于阅读和维护。本文将介绍 Git 提交的规范以及如何利用 git-commit-plugin 插件快速提交规范的commit。\n\n<!--more-->\n\n一般来说，大厂都有一套的自己的提交规范，尤其是在一些大型开源项目中，commit message 都是十分一致的。因此，我们需要制定统一标准，促使团队形成一致的代码提交风格，更好的提高工作效率，成为一名有追求的工程师。其中 AngularJS 在 github 上 的提交记录被业内许多人认可，逐渐被大家引用。\n\n#### Commit message 的格式\n\n每次提交，Commit message 都包括三个部分：header，body 和 footer。\n\n```text\ntype(scope):空格subject\n换行\n[body]\n换行\n[footer]\n```\n\n##### 1. type 类型\n\ntype 是 commit 的类别，只允许如下几种标识：\n\n```text\n# 主要type\nfeat:     增加新功能\nfix:      修复bug\n\n# 特殊type\ndocs:    只改动了文档相关的内容\nstyle:    不影响代码含义的改动，例如去掉空格、改变缩进、增删分号\nbuild:    构造工具的或者外部依赖的改动，例如webpack，npm\nrefactor:  代码重构时使用\nrevert:   执行git revert打印的message\n\n# 暂不使用type\ntest:     添加测试或者修改现有测试\nperf:     提高性能的改动\nci:       与CI（持续集成服务）有关的改动\nchore:    不修改src或者test的其余修改，例如构建过程或辅助工具的变动\n```\n\n##### 2. scope\n\nscope也为必填项，用于描述改动的范围，格式为项目名/模块名，例如：xxxServices 。如果一次commit修改多个模块，建议拆分成多次commit，以便更好追踪和维护。\n\n##### 3. subject\n\ncommit 目的的简短描述，不超过50个字符。结尾一般是 #33224 这样的超链接。链接到本次提交的 url 但不强制\n\n##### 4. body\n\n对本次 commit 的详细描述\n\n##### 5. footer\n\nFooter 部分只用于以下两种情况：\n\t\n    5.1. 不兼容变动: 如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。例如下边这样：\n    \n    ```text\n    BREAKING CHANGE: isolate scope bindings definition has changed.\n\n    To migrate the code follow the example below:\n\n    Before:\n\n    scope: {\n      myAttr: 'attribute',\n    }\n\n    After:\n\n    scope: {\n      myAttr: '@',\n    }\n\n    The removed `inject` wasn't generaly useful for directives so there should be no code using it.\n    ```\n\n\t5.2. 关闭 Issue: 如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。\n    \n完整的提交demo如下：\n\n```text\nfix(dev-infra): remove bots from special thanks section\n\nWith this change we remove known used bots from special thanks section in the changelog.\n\nPR Close #42697\n```\n\n那么每次都这样编写提交的内容，还要注意对应的格式。我们有没有简单方便的办法呢，那就是使用对应工具的插件。git-commit-plugin 插件可以帮助我们快速的边写提交的信息，但是插件本身并不支持格式化。所以，我在该插件的基础上做了二次开发，具体使用如下：\n\n1. 下载安装对应的插件：[git-commit-plugin-1.0.6.vsix](https://github.com/odinsam/git-commit-plugin/releases/download/1.0.6/git-commit-plugin-1.0.6.vsix)\n\n2. 在插件的扩展配置中，进行对应的提交模板配置。可以配置多个，这是因为我公司和我自己的提交格式都不一样。具体可以参见项目的 [readme.md](https://github.com/odinsam/git-commit-plugin/blob/master/README.md)\n\n```text\n\"GitCommitPlugin.Templates\": [\n    {\n        \"templateName\": \"Angular\",\n        \"templateContent\": \"<icon><space><type>(<scope>):<space><subject><enter><body><enter><footer>\"\n    },\n    {\n        \"templateName\": \"git-cz\",\n        \"templateContent\": \"<type>(<scope>):<space><icon><space><subject><enter><body><enter><footer>\"\n    }\n]\n```\n\n3. 配置插件是否启用图标\n\n```text\n\"GitCommitPlugin.ShowEmoji\": true\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/vscode-使用-git-commit-plugin-插件规范提交-Git.md","raw":"title: vscode 使用 git-commit-plugin 插件规范提交 Git\nauthor: OdinSam\ntags:\n  - VsCode\n  - Git\n  - 插件\ncategories:\n  - Git\nabbrlink: 60dd\ndate: 2021-06-30 12:38:00\n---\n>在团队协作开发时，每个人提交代码时都会写 commit message。每个人都有自己的书写风格，翻看我们组的git log, 可以说是五花八门，十分不利于阅读和维护。本文将介绍 Git 提交的规范以及如何利用 git-commit-plugin 插件快速提交规范的commit。\n\n<!--more-->\n\n一般来说，大厂都有一套的自己的提交规范，尤其是在一些大型开源项目中，commit message 都是十分一致的。因此，我们需要制定统一标准，促使团队形成一致的代码提交风格，更好的提高工作效率，成为一名有追求的工程师。其中 AngularJS 在 github 上 的提交记录被业内许多人认可，逐渐被大家引用。\n\n#### Commit message 的格式\n\n每次提交，Commit message 都包括三个部分：header，body 和 footer。\n\n```text\ntype(scope):空格subject\n换行\n[body]\n换行\n[footer]\n```\n\n##### 1. type 类型\n\ntype 是 commit 的类别，只允许如下几种标识：\n\n```text\n# 主要type\nfeat:     增加新功能\nfix:      修复bug\n\n# 特殊type\ndocs:    只改动了文档相关的内容\nstyle:    不影响代码含义的改动，例如去掉空格、改变缩进、增删分号\nbuild:    构造工具的或者外部依赖的改动，例如webpack，npm\nrefactor:  代码重构时使用\nrevert:   执行git revert打印的message\n\n# 暂不使用type\ntest:     添加测试或者修改现有测试\nperf:     提高性能的改动\nci:       与CI（持续集成服务）有关的改动\nchore:    不修改src或者test的其余修改，例如构建过程或辅助工具的变动\n```\n\n##### 2. scope\n\nscope也为必填项，用于描述改动的范围，格式为项目名/模块名，例如：xxxServices 。如果一次commit修改多个模块，建议拆分成多次commit，以便更好追踪和维护。\n\n##### 3. subject\n\ncommit 目的的简短描述，不超过50个字符。结尾一般是 #33224 这样的超链接。链接到本次提交的 url 但不强制\n\n##### 4. body\n\n对本次 commit 的详细描述\n\n##### 5. footer\n\nFooter 部分只用于以下两种情况：\n\t\n    5.1. 不兼容变动: 如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。例如下边这样：\n    \n    ```text\n    BREAKING CHANGE: isolate scope bindings definition has changed.\n\n    To migrate the code follow the example below:\n\n    Before:\n\n    scope: {\n      myAttr: 'attribute',\n    }\n\n    After:\n\n    scope: {\n      myAttr: '@',\n    }\n\n    The removed `inject` wasn't generaly useful for directives so there should be no code using it.\n    ```\n\n\t5.2. 关闭 Issue: 如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。\n    \n完整的提交demo如下：\n\n```text\nfix(dev-infra): remove bots from special thanks section\n\nWith this change we remove known used bots from special thanks section in the changelog.\n\nPR Close #42697\n```\n\n那么每次都这样编写提交的内容，还要注意对应的格式。我们有没有简单方便的办法呢，那就是使用对应工具的插件。git-commit-plugin 插件可以帮助我们快速的边写提交的信息，但是插件本身并不支持格式化。所以，我在该插件的基础上做了二次开发，具体使用如下：\n\n1. 下载安装对应的插件：[git-commit-plugin-1.0.6.vsix](https://github.com/odinsam/git-commit-plugin/releases/download/1.0.6/git-commit-plugin-1.0.6.vsix)\n\n2. 在插件的扩展配置中，进行对应的提交模板配置。可以配置多个，这是因为我公司和我自己的提交格式都不一样。具体可以参见项目的 [readme.md](https://github.com/odinsam/git-commit-plugin/blob/master/README.md)\n\n```text\n\"GitCommitPlugin.Templates\": [\n    {\n        \"templateName\": \"Angular\",\n        \"templateContent\": \"<icon><space><type>(<scope>):<space><subject><enter><body><enter><footer>\"\n    },\n    {\n        \"templateName\": \"git-cz\",\n        \"templateContent\": \"<type>(<scope>):<space><icon><space><subject><enter><body><enter><footer>\"\n    }\n]\n```\n\n3. 配置插件是否启用图标\n\n```text\n\"GitCommitPlugin.ShowEmoji\": true\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"vscode-使用-git-commit-plugin-插件规范提交-Git","published":1,"updated":"2023-03-10T05:00:47.892Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3l005j5cs9297j2t21","content":"<blockquote>\n<p>在团队协作开发时，每个人提交代码时都会写 commit message。每个人都有自己的书写风格，翻看我们组的git log, 可以说是五花八门，十分不利于阅读和维护。本文将介绍 Git 提交的规范以及如何利用 git-commit-plugin 插件快速提交规范的commit。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>一般来说，大厂都有一套的自己的提交规范，尤其是在一些大型开源项目中，commit message 都是十分一致的。因此，我们需要制定统一标准，促使团队形成一致的代码提交风格，更好的提高工作效率，成为一名有追求的工程师。其中 AngularJS 在 github 上 的提交记录被业内许多人认可，逐渐被大家引用。</p>\n<h4 id=\"commit-message-的格式\"><a class=\"markdownIt-Anchor\" href=\"#commit-message-的格式\"></a> Commit message 的格式</h4>\n<p>每次提交，Commit message 都包括三个部分：header，body 和 footer。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type(scope):空格subject</span><br><span class=\"line\">换行</span><br><span class=\"line\">[body]</span><br><span class=\"line\">换行</span><br><span class=\"line\">[footer]</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-type-类型\"><a class=\"markdownIt-Anchor\" href=\"#1-type-类型\"></a> 1. type 类型</h5>\n<p>type 是 commit 的类别，只允许如下几种标识：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 主要type</span><br><span class=\"line\">feat:     增加新功能</span><br><span class=\"line\">fix:      修复bug</span><br><span class=\"line\"></span><br><span class=\"line\"># 特殊type</span><br><span class=\"line\">docs:    只改动了文档相关的内容</span><br><span class=\"line\">style:    不影响代码含义的改动，例如去掉空格、改变缩进、增删分号</span><br><span class=\"line\">build:    构造工具的或者外部依赖的改动，例如webpack，npm</span><br><span class=\"line\">refactor:  代码重构时使用</span><br><span class=\"line\">revert:   执行git revert打印的message</span><br><span class=\"line\"></span><br><span class=\"line\"># 暂不使用type</span><br><span class=\"line\">test:     添加测试或者修改现有测试</span><br><span class=\"line\">perf:     提高性能的改动</span><br><span class=\"line\">ci:       与CI（持续集成服务）有关的改动</span><br><span class=\"line\">chore:    不修改src或者test的其余修改，例如构建过程或辅助工具的变动</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-scope\"><a class=\"markdownIt-Anchor\" href=\"#2-scope\"></a> 2. scope</h5>\n<p>scope也为必填项，用于描述改动的范围，格式为项目名/模块名，例如：xxxServices 。如果一次commit修改多个模块，建议拆分成多次commit，以便更好追踪和维护。</p>\n<h5 id=\"3-subject\"><a class=\"markdownIt-Anchor\" href=\"#3-subject\"></a> 3. subject</h5>\n<p>commit 目的的简短描述，不超过50个字符。结尾一般是 #33224 这样的超链接。链接到本次提交的 url 但不强制</p>\n<h5 id=\"4-body\"><a class=\"markdownIt-Anchor\" href=\"#4-body\"></a> 4. body</h5>\n<p>对本次 commit 的详细描述</p>\n<h5 id=\"5-footer\"><a class=\"markdownIt-Anchor\" href=\"#5-footer\"></a> 5. footer</h5>\n<p>Footer 部分只用于以下两种情况：</p>\n<pre><code>5.1. 不兼容变动: 如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。例如下边这样：\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BREAKING CHANGE: isolate scope bindings definition has changed.</span><br><span class=\"line\"></span><br><span class=\"line\">To migrate the code follow the example below:</span><br><span class=\"line\"></span><br><span class=\"line\">Before:</span><br><span class=\"line\"></span><br><span class=\"line\">scope: &#123;</span><br><span class=\"line\">  myAttr: &#x27;attribute&#x27;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">After:</span><br><span class=\"line\"></span><br><span class=\"line\">scope: &#123;</span><br><span class=\"line\">  myAttr: &#x27;@&#x27;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">The removed `inject` wasn&#x27;t generaly useful for directives so there should be no code using it.</span><br></pre></td></tr></table></figure>\n\n5.2. 关闭 Issue: 如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。\n</code></pre>\n<p>完整的提交demo如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fix(dev-infra): remove bots from special thanks section</span><br><span class=\"line\"></span><br><span class=\"line\">With this change we remove known used bots from special thanks section in the changelog.</span><br><span class=\"line\"></span><br><span class=\"line\">PR Close #42697</span><br></pre></td></tr></table></figure>\n<p>那么每次都这样编写提交的内容，还要注意对应的格式。我们有没有简单方便的办法呢，那就是使用对应工具的插件。git-commit-plugin 插件可以帮助我们快速的边写提交的信息，但是插件本身并不支持格式化。所以，我在该插件的基础上做了二次开发，具体使用如下：</p>\n<ol>\n<li>\n<p>下载安装对应的插件：<a href=\"https://github.com/odinsam/git-commit-plugin/releases/download/1.0.6/git-commit-plugin-1.0.6.vsix\">git-commit-plugin-1.0.6.vsix</a></p>\n</li>\n<li>\n<p>在插件的扩展配置中，进行对应的提交模板配置。可以配置多个，这是因为我公司和我自己的提交格式都不一样。具体可以参见项目的 <a href=\"https://github.com/odinsam/git-commit-plugin/blob/master/README.md\">readme.md</a></p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;GitCommitPlugin.Templates&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;templateName&quot;: &quot;Angular&quot;,</span><br><span class=\"line\">        &quot;templateContent&quot;: &quot;&lt;icon&gt;&lt;space&gt;&lt;type&gt;(&lt;scope&gt;):&lt;space&gt;&lt;subject&gt;&lt;enter&gt;&lt;body&gt;&lt;enter&gt;&lt;footer&gt;&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;templateName&quot;: &quot;git-cz&quot;,</span><br><span class=\"line\">        &quot;templateContent&quot;: &quot;&lt;type&gt;(&lt;scope&gt;):&lt;space&gt;&lt;icon&gt;&lt;space&gt;&lt;subject&gt;&lt;enter&gt;&lt;body&gt;&lt;enter&gt;&lt;footer&gt;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>配置插件是否启用图标</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;GitCommitPlugin.ShowEmoji&quot;: true</span><br></pre></td></tr></table></figure>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>在团队协作开发时，每个人提交代码时都会写 commit message。每个人都有自己的书写风格，翻看我们组的git log, 可以说是五花八门，十分不利于阅读和维护。本文将介绍 Git 提交的规范以及如何利用 git-commit-plugin 插件快速提交规范的commit。</p>\n</blockquote>","more":"<p>一般来说，大厂都有一套的自己的提交规范，尤其是在一些大型开源项目中，commit message 都是十分一致的。因此，我们需要制定统一标准，促使团队形成一致的代码提交风格，更好的提高工作效率，成为一名有追求的工程师。其中 AngularJS 在 github 上 的提交记录被业内许多人认可，逐渐被大家引用。</p>\n<h4 id=\"commit-message-的格式\"><a class=\"markdownIt-Anchor\" href=\"#commit-message-的格式\"></a> Commit message 的格式</h4>\n<p>每次提交，Commit message 都包括三个部分：header，body 和 footer。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type(scope):空格subject</span><br><span class=\"line\">换行</span><br><span class=\"line\">[body]</span><br><span class=\"line\">换行</span><br><span class=\"line\">[footer]</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-type-类型\"><a class=\"markdownIt-Anchor\" href=\"#1-type-类型\"></a> 1. type 类型</h5>\n<p>type 是 commit 的类别，只允许如下几种标识：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 主要type</span><br><span class=\"line\">feat:     增加新功能</span><br><span class=\"line\">fix:      修复bug</span><br><span class=\"line\"></span><br><span class=\"line\"># 特殊type</span><br><span class=\"line\">docs:    只改动了文档相关的内容</span><br><span class=\"line\">style:    不影响代码含义的改动，例如去掉空格、改变缩进、增删分号</span><br><span class=\"line\">build:    构造工具的或者外部依赖的改动，例如webpack，npm</span><br><span class=\"line\">refactor:  代码重构时使用</span><br><span class=\"line\">revert:   执行git revert打印的message</span><br><span class=\"line\"></span><br><span class=\"line\"># 暂不使用type</span><br><span class=\"line\">test:     添加测试或者修改现有测试</span><br><span class=\"line\">perf:     提高性能的改动</span><br><span class=\"line\">ci:       与CI（持续集成服务）有关的改动</span><br><span class=\"line\">chore:    不修改src或者test的其余修改，例如构建过程或辅助工具的变动</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-scope\"><a class=\"markdownIt-Anchor\" href=\"#2-scope\"></a> 2. scope</h5>\n<p>scope也为必填项，用于描述改动的范围，格式为项目名/模块名，例如：xxxServices 。如果一次commit修改多个模块，建议拆分成多次commit，以便更好追踪和维护。</p>\n<h5 id=\"3-subject\"><a class=\"markdownIt-Anchor\" href=\"#3-subject\"></a> 3. subject</h5>\n<p>commit 目的的简短描述，不超过50个字符。结尾一般是 #33224 这样的超链接。链接到本次提交的 url 但不强制</p>\n<h5 id=\"4-body\"><a class=\"markdownIt-Anchor\" href=\"#4-body\"></a> 4. body</h5>\n<p>对本次 commit 的详细描述</p>\n<h5 id=\"5-footer\"><a class=\"markdownIt-Anchor\" href=\"#5-footer\"></a> 5. footer</h5>\n<p>Footer 部分只用于以下两种情况：</p>\n<pre><code>5.1. 不兼容变动: 如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。例如下边这样：\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BREAKING CHANGE: isolate scope bindings definition has changed.</span><br><span class=\"line\"></span><br><span class=\"line\">To migrate the code follow the example below:</span><br><span class=\"line\"></span><br><span class=\"line\">Before:</span><br><span class=\"line\"></span><br><span class=\"line\">scope: &#123;</span><br><span class=\"line\">  myAttr: &#x27;attribute&#x27;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">After:</span><br><span class=\"line\"></span><br><span class=\"line\">scope: &#123;</span><br><span class=\"line\">  myAttr: &#x27;@&#x27;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">The removed `inject` wasn&#x27;t generaly useful for directives so there should be no code using it.</span><br></pre></td></tr></table></figure>\n\n5.2. 关闭 Issue: 如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。\n</code></pre>\n<p>完整的提交demo如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fix(dev-infra): remove bots from special thanks section</span><br><span class=\"line\"></span><br><span class=\"line\">With this change we remove known used bots from special thanks section in the changelog.</span><br><span class=\"line\"></span><br><span class=\"line\">PR Close #42697</span><br></pre></td></tr></table></figure>\n<p>那么每次都这样编写提交的内容，还要注意对应的格式。我们有没有简单方便的办法呢，那就是使用对应工具的插件。git-commit-plugin 插件可以帮助我们快速的边写提交的信息，但是插件本身并不支持格式化。所以，我在该插件的基础上做了二次开发，具体使用如下：</p>\n<ol>\n<li>\n<p>下载安装对应的插件：<a href=\"https://github.com/odinsam/git-commit-plugin/releases/download/1.0.6/git-commit-plugin-1.0.6.vsix\">git-commit-plugin-1.0.6.vsix</a></p>\n</li>\n<li>\n<p>在插件的扩展配置中，进行对应的提交模板配置。可以配置多个，这是因为我公司和我自己的提交格式都不一样。具体可以参见项目的 <a href=\"https://github.com/odinsam/git-commit-plugin/blob/master/README.md\">readme.md</a></p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;GitCommitPlugin.Templates&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;templateName&quot;: &quot;Angular&quot;,</span><br><span class=\"line\">        &quot;templateContent&quot;: &quot;&lt;icon&gt;&lt;space&gt;&lt;type&gt;(&lt;scope&gt;):&lt;space&gt;&lt;subject&gt;&lt;enter&gt;&lt;body&gt;&lt;enter&gt;&lt;footer&gt;&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        &quot;templateName&quot;: &quot;git-cz&quot;,</span><br><span class=\"line\">        &quot;templateContent&quot;: &quot;&lt;type&gt;(&lt;scope&gt;):&lt;space&gt;&lt;icon&gt;&lt;space&gt;&lt;subject&gt;&lt;enter&gt;&lt;body&gt;&lt;enter&gt;&lt;footer&gt;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>配置插件是否启用图标</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;GitCommitPlugin.ShowEmoji&quot;: true</span><br></pre></td></tr></table></figure>"},{"title":"vscode控制台中文乱码","author":"odinsam","abbrlink":"cda","date":"2021-06-06T03:27:00.000Z","_content":"> vscode是现在较为流行的一款开发工具，他可以按照用户对应需要的语言插件进行自定义安装和配置，在使用vscode的过程中发现终端输出控制台输出稳重会出现中文乱码的情况，网上搜索很多的解决方案都是修改系统的GBK，但是发现在修改了GBK以后可能会造成其他程序出现中文乱码以及其他的一些问题，这里我们使用修改PowerShell的OutputEncoding来解决这个问题。仅win10系统测试有效。\n\n<!-- more -->\n\n正确方法：\n\n> 1.打开 Windows PowerShell (管理员)，执行命令：\n\n    Set-ExecutionPolicy Unrestricted\n\n> 2.新建文档 profile.ps1\n\n> 3.用记事本编辑，粘贴以下代码并保存：\n\n    $OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding\n\n> 4.把 profile.ps1 保存到以下路径：\n\n    C:\\Windows\\System32\\WindowsPowerShell\\v1.0\n\n> 5.完成。\n\n> 6.检测是否成功\n\n    打开 PowerShell，执行：chcp 结果为 Active code page: 65001，说明设置成功了","source":"_posts/vscode控制台中文乱码.md","raw":"title: vscode控制台中文乱码\nauthor: odinsam\ntags:\n  - 中文乱码\n  - VsCode\n  - ''\ncategories:\n  - VsCode\n  - ''\nabbrlink: cda\ndate: 2021-06-06 11:27:00\n---\n> vscode是现在较为流行的一款开发工具，他可以按照用户对应需要的语言插件进行自定义安装和配置，在使用vscode的过程中发现终端输出控制台输出稳重会出现中文乱码的情况，网上搜索很多的解决方案都是修改系统的GBK，但是发现在修改了GBK以后可能会造成其他程序出现中文乱码以及其他的一些问题，这里我们使用修改PowerShell的OutputEncoding来解决这个问题。仅win10系统测试有效。\n\n<!-- more -->\n\n正确方法：\n\n> 1.打开 Windows PowerShell (管理员)，执行命令：\n\n    Set-ExecutionPolicy Unrestricted\n\n> 2.新建文档 profile.ps1\n\n> 3.用记事本编辑，粘贴以下代码并保存：\n\n    $OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding\n\n> 4.把 profile.ps1 保存到以下路径：\n\n    C:\\Windows\\System32\\WindowsPowerShell\\v1.0\n\n> 5.完成。\n\n> 6.检测是否成功\n\n    打开 PowerShell，执行：chcp 结果为 Active code page: 65001，说明设置成功了","slug":"vscode控制台中文乱码","published":1,"updated":"2021-06-09T05:36:24.282Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3l005m5cs90hpjbz4s","content":"<blockquote>\n<p>vscode是现在较为流行的一款开发工具，他可以按照用户对应需要的语言插件进行自定义安装和配置，在使用vscode的过程中发现终端输出控制台输出稳重会出现中文乱码的情况，网上搜索很多的解决方案都是修改系统的GBK，但是发现在修改了GBK以后可能会造成其他程序出现中文乱码以及其他的一些问题，这里我们使用修改PowerShell的OutputEncoding来解决这个问题。仅win10系统测试有效。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>正确方法：</p>\n<blockquote>\n<p>1.打开 Windows PowerShell (管理员)，执行命令：</p>\n</blockquote>\n<pre><code>Set-ExecutionPolicy Unrestricted\n</code></pre>\n<blockquote>\n<p>2.新建文档 profile.ps1</p>\n</blockquote>\n<blockquote>\n<p>3.用记事本编辑，粘贴以下代码并保存：</p>\n</blockquote>\n<pre><code>$OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding\n</code></pre>\n<blockquote>\n<p>4.把 profile.ps1 保存到以下路径：</p>\n</blockquote>\n<pre><code>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\n</code></pre>\n<blockquote>\n<p>5.完成。</p>\n</blockquote>\n<blockquote>\n<p>6.检测是否成功</p>\n</blockquote>\n<pre><code>打开 PowerShell，执行：chcp 结果为 Active code page: 65001，说明设置成功了</code></pre>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>vscode是现在较为流行的一款开发工具，他可以按照用户对应需要的语言插件进行自定义安装和配置，在使用vscode的过程中发现终端输出控制台输出稳重会出现中文乱码的情况，网上搜索很多的解决方案都是修改系统的GBK，但是发现在修改了GBK以后可能会造成其他程序出现中文乱码以及其他的一些问题，这里我们使用修改PowerShell的OutputEncoding来解决这个问题。仅win10系统测试有效。</p>\n</blockquote>","more":"<p>正确方法：</p>\n<blockquote>\n<p>1.打开 Windows PowerShell (管理员)，执行命令：</p>\n</blockquote>\n<pre><code>Set-ExecutionPolicy Unrestricted\n</code></pre>\n<blockquote>\n<p>2.新建文档 profile.ps1</p>\n</blockquote>\n<blockquote>\n<p>3.用记事本编辑，粘贴以下代码并保存：</p>\n</blockquote>\n<pre><code>$OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding\n</code></pre>\n<blockquote>\n<p>4.把 profile.ps1 保存到以下路径：</p>\n</blockquote>\n<pre><code>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\n</code></pre>\n<blockquote>\n<p>5.完成。</p>\n</blockquote>\n<blockquote>\n<p>6.检测是否成功</p>\n</blockquote>\n<pre><code>打开 PowerShell，执行：chcp 结果为 Active code page: 65001，说明设置成功了</code></pre>"},{"title":"vscode无法使用nuget的小问题","author":"odinsam","abbrlink":"80b6","date":"2021-05-28T21:29:00.000Z","_content":"> 在使用vscode的过程使用NuGet Package Manager插件安装Package包的时候会出现 <font color=\"red\">\"Versioning information could not be retrieved from the NuGet package repository. \"</font> 的错误导致无法安装Package包，可以修改fetchPackageVersions.js解决问题。\n\n<!-- more -->\n\n问题：\n\n> \"Versioning information could not be retrieved from the NuGet package repository. Please try again later.\"\n\n解决方式：\n\n> 打开 /Users/用户名/.vscode/extensions/jmrog.vscode-nuget-package-manager-1.1.6/out/src/actions/add-methods/fetchPackageVersions.js 修改后的代码 加上 <font color=#FF0000 >.toLowerCase()</font>\n\t\n   ```js\n    ...node_fetch_1.default(`${versionsUrl}${selectedPackageName.toLowerCase()}/index.json`, utils_1.getFetchOptions(vscode.workspace.getConfiguration('http')))\n   ```","source":"_posts/vscode无法使用nuget的小问题.md","raw":"title: vscode无法使用nuget的小问题\nauthor: odinsam\ntags:\n  - VsCode\n  - ''\n  - Nuget\n  - ''\ncategories:\n  - VsCode\n  - ''\nabbrlink: 80b6\ndate: 2021-05-29 05:29:00\n---\n> 在使用vscode的过程使用NuGet Package Manager插件安装Package包的时候会出现 <font color=\"red\">\"Versioning information could not be retrieved from the NuGet package repository. \"</font> 的错误导致无法安装Package包，可以修改fetchPackageVersions.js解决问题。\n\n<!-- more -->\n\n问题：\n\n> \"Versioning information could not be retrieved from the NuGet package repository. Please try again later.\"\n\n解决方式：\n\n> 打开 /Users/用户名/.vscode/extensions/jmrog.vscode-nuget-package-manager-1.1.6/out/src/actions/add-methods/fetchPackageVersions.js 修改后的代码 加上 <font color=#FF0000 >.toLowerCase()</font>\n\t\n   ```js\n    ...node_fetch_1.default(`${versionsUrl}${selectedPackageName.toLowerCase()}/index.json`, utils_1.getFetchOptions(vscode.workspace.getConfiguration('http')))\n   ```","slug":"vscode无法使用nuget的小问题","published":1,"updated":"2021-06-09T05:36:34.178Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3m005q5cs99hqr4049","content":"<blockquote>\n<p>在使用vscode的过程使用NuGet Package Manager插件安装Package包的时候会出现 <font color=\"red\">&quot;Versioning information could not be retrieved from the NuGet package repository. &quot;</font> 的错误导致无法安装Package包，可以修改fetchPackageVersions.js解决问题。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>问题：</p>\n<blockquote>\n<p>“Versioning information could not be retrieved from the NuGet package repository. Please try again later.”</p>\n</blockquote>\n<p>解决方式：</p>\n<blockquote>\n<p>打开 /Users/用户名/.vscode/extensions/jmrog.vscode-nuget-package-manager-1.1.6/out/src/actions/add-methods/fetchPackageVersions.js 修改后的代码 加上 <font color=#FF0000 >.toLowerCase()</font></p>\n</blockquote>\n   <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...node_fetch_1.default(<span class=\"string\">`<span class=\"subst\">$&#123;versionsUrl&#125;</span><span class=\"subst\">$&#123;selectedPackageName.toLowerCase()&#125;</span>/index.json`</span>, utils_1.getFetchOptions(vscode.workspace.getConfiguration(<span class=\"string\">&#x27;http&#x27;</span>)))</span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>在使用vscode的过程使用NuGet Package Manager插件安装Package包的时候会出现 <font color=\"red\">&quot;Versioning information could not be retrieved from the NuGet package repository. &quot;</font> 的错误导致无法安装Package包，可以修改fetchPackageVersions.js解决问题。</p>\n</blockquote>","more":"<p>问题：</p>\n<blockquote>\n<p>“Versioning information could not be retrieved from the NuGet package repository. Please try again later.”</p>\n</blockquote>\n<p>解决方式：</p>\n<blockquote>\n<p>打开 /Users/用户名/.vscode/extensions/jmrog.vscode-nuget-package-manager-1.1.6/out/src/actions/add-methods/fetchPackageVersions.js 修改后的代码 加上 <font color=#FF0000 >.toLowerCase()</font></p>\n</blockquote>\n   <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...node_fetch_1.default(<span class=\"string\">`<span class=\"subst\">$&#123;versionsUrl&#125;</span><span class=\"subst\">$&#123;selectedPackageName.toLowerCase()&#125;</span>/index.json`</span>, utils_1.getFetchOptions(vscode.workspace.getConfiguration(<span class=\"string\">&#x27;http&#x27;</span>)))</span><br></pre></td></tr></table></figure>"},{"title":"使用 BackgroundService 类在微服务中实现后台任务","author":"OdinSam","abbrlink":"2893","date":"2021-06-14T09:34:00.000Z","_content":"> 任何应用程序中都可能需要使用后台任务和计划作业，无论应用程序是否遵循微服务体系结构模式均是如此。 使用微服务体系结构的区别在于，你可以在一个单独的用于托管的进程/容器中实现后台任务。一般在 .NET 中，我们将这些类型的任务称为托管服务，因为它们是托管在主机/应用程序/微服务中的服务/逻辑。 请注意，在这种情况下，托管服务仅表示具有后台任务逻辑的类。\n\n<!--more-->\n\n#### 1. IHostedService介绍\n\n自 .NET Core 2.0 开始，该框架提供名为 IHostedService 的新接口，有助于轻松实现托管服务。 基本理念是，可以注册多个后台任务（托管服务），在 Web 主机或主机运行时在后台运行具体介绍如下图：\n   \n   ![IHostedService介绍](https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/multi-container-microservice-net-applications/media/background-tasks-with-ihostedservice/ihosted-service-webhost-vs-host.png) \n   \n但是，由于大多数后台任务在取消令牌管理和其他典型操作方面都有类似的需求，因此有一个非常方便且可以从中进行派生的抽象基类，名为 BackgroundService（自 .NET Core 2.1 起提供），该类提供设置后台任务所需的主要工作。从抽象基类派生时，只需在自定义的托管服务类中实现 ExecuteAsync() 方法，结合 [利用Canal集合RabbitMQ实现数据和缓存同步](https://www.odinsam.com/articles/a3b9.html) 这篇文章，就可以搭建Canal + RabbitMQ + CacheManager 的基本架构，从而实现由 Canal 监控和发现 mysql 数据库的增量信息并推送到 RabbitMQ ，而我们使用BackgroundSerivce 搭建的后台托管服务消费 RabbitMQ 信息修改 Redis 中的缓存数据，而 CacheManager 设定 Redis 缓存为缓存挡板，故而内存中的二级缓存也会得到对应修改。\n\n#### 2. 具体实现\n\n这里是以 ErrorCode 错误码为例，实现一系列操作。首先是 实现 BackgroundService 的子类 OdinBackgroundService ：\n    \n```csharp\npublic class OdinBackgroundService : BackgroundService\n{\n    private readonly ProjectExtendsOptions apiOptions;\n    private readonly ReceiveRabbitMQHelper receiveRabbitMQHelper;\n    private int executionCount = 0;\n    private Timer _timer;\n    public OdinBackgroundService()\n    {\n        this.apiOptions = OdinInjectHelper.GetService<IOptionsSnapshot<ProjectExtendsOptions>>().Value;\n        this.receiveRabbitMQHelper = new ReceiveRabbitMQHelper();\n    }\n\n    private void DoWork(object state)\n    {\n        receiveRabbitMQHelper.ReceiveMQ(apiOptions);\n    }\n\n    public override Task StartAsync(CancellationToken cancellationToken)\n    {\n        return ExecuteAsync(cancellationToken);\n    }\n    protected override Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        Log.Information($\"Service:【 Run 】\\tTime:【{DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n        _timer = new Timer(DoWork, null, TimeSpan.Zero, TimeSpan.FromMilliseconds(300));\n        return Task.CompletedTask;\n    }\n\n    public override Task StopAsync(CancellationToken cancellationToken)\n    {\n        Log.Information($\"Service:【 Stop 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n        _timer?.Change(Timeout.Infinite, 0);\n        return base.StopAsync(cancellationToken);\n    }\n\n    public override void Dispose()\n    {\n        _timer?.Dispose();\n    }\n}\n```\n\n这里采用轮询机制，每300ms消费一次 RabbitMQ 的信息，具体的消费代码 ReceiveRabbitMQHelper 如下:\n    \n```csharp\npublic class ReceiveRabbitMQHelper\n{\n    private readonly IRabbitMQReceiveServer rabbitMQReceiveServer;\n    private readonly IOdinCanalHelper canalHelper;\n    private readonly IOdinCacheManager cacheManager;\n\n    public ReceiveRabbitMQHelper()\n    {\n        this.rabbitMQReceiveServer = OdinInjectHelper.GetService<IRabbitMQReceiveServer>();\n        this.canalHelper = OdinInjectHelper.GetService<IOdinCanalHelper>();\n        this.cacheManager = OdinInjectHelper.GetService<IOdinCacheManager>();\n    }\n\n    public void ReceiveMQ(ProjectExtendsOptions apiOptions)\n    {\n        rabbitMQReceiveServer.ReceiveJsonMessage(\n            apiOptions.RabbitMQ,\n            new RabbitMQReceivedModel\n            {\n                ExchangeName = \"canal-exchange\",\n                QueueName = \"canal-queues\",\n                AutoAck = false\n            },\n            (BasicGetResult result, IModel channel) =>\n            {\n                var msg = RabbitMQReceiveHandler.ReceiveJsonMessageHandler(result, channel);\n                if (!string.IsNullOrEmpty(msg))\n                {\n                    System.Console.WriteLine($\"Canal-WorkService:【 Run 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n                    System.Console.WriteLine(msg);\n                    // 这里用来处理获取到的 RabbitMQ 的增量信息\n                    ErrorCodeHelper.ErrorCodeCanalHandler(canalHelper, cacheManager, msg);\n                    System.Console.WriteLine(\"\\r\\n\");\n                }\n            }\n        );\n    }\n}\n```\n\nErrorCodeCanalHandler用来处理获取到的 RabbitMQ 的增量信息，具体封装如下：\n\n```csharp\npublic class ErrorCodeHelper\n{\n    public static void ErrorCodeCanalHandler(IOdinCanalHelper canalHelper, IOdinCacheManager cacheManager, string canalString)\n    {\n        var obj = canalHelper.GetCanalInfo(canalString);\n        var type = obj.type;\n        switch (type.ToLower())\n        {\n            case \"insert\":\n                {\n                    var model = ConvertCanalDataToErrorCodeModel(obj);\n                    var flag = cacheManager.Add(model.ErrorCode, model);\n                    if (flag)\n                        System.Console.WriteLine(\"cacheManager add success\");\n                    else\n                        System.Console.WriteLine(\"cacheManager add fail\");\n                }\n                break;\n            case \"update\":\n                {\n                    var model = ConvertCanalDataToErrorCodeModel(obj);\n                    cacheManager.Cover<ErrorCode_Model>(model.ErrorCode, model);\n                    System.Console.WriteLine(\"cacheManager Cover success\");\n                }\n                break;\n            case \"delete\":\n                {\n                    var errorCode = GetErrorCode(obj);\n                    bool flag = cacheManager.Delete(errorCode);\n                    if (flag)\n                        System.Console.WriteLine(\"cacheManager delete success\");\n                    else\n                        System.Console.WriteLine(\"cacheManager delete fail\");\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    private static string GetErrorCode(OdinCanalModel obj)\n    {\n        var errorCode = obj.data[0].GetValue(\"ErrorCode\").ToString();\n        return errorCode;\n    }\n    private static ErrorCode_Model ConvertCanalDataToErrorCodeModel(OdinCanalModel obj)\n    {\n        var errorCode = obj.data[0].GetValue(\"ErrorCode\").ToString();\n        var codeShowMessage = obj.data[0].GetValue(\"CodeShowMessage\").ToString();\n        var codeErrorMessage = obj.data[0].GetValue(\"CodeErrorMessage\").ToString();\n        ErrorCode_Model model = new ErrorCode_Model()\n        {\n            ErrorCode = errorCode,\n            ErrorMessage = codeErrorMessage,\n            ShowMessage = codeErrorMessage,\n        };\n        return model;\n    }\n}\n```\n\n这样基本的搭建就完成了，完整代码可以在 [GitHub](https://github.com/odinsam/OdinMA) 。","source":"_posts/使用-BackgroundService-类在微服务中实现后台任务.md","raw":"title: 使用 BackgroundService 类在微服务中实现后台任务\nauthor: OdinSam\ntags:\n  - .Net Core\n  - 微服务\n  - BackgroundService\ncategories:\n  - .Net Core\nabbrlink: '2893'\ndate: 2021-06-14 17:34:00\n---\n> 任何应用程序中都可能需要使用后台任务和计划作业，无论应用程序是否遵循微服务体系结构模式均是如此。 使用微服务体系结构的区别在于，你可以在一个单独的用于托管的进程/容器中实现后台任务。一般在 .NET 中，我们将这些类型的任务称为托管服务，因为它们是托管在主机/应用程序/微服务中的服务/逻辑。 请注意，在这种情况下，托管服务仅表示具有后台任务逻辑的类。\n\n<!--more-->\n\n#### 1. IHostedService介绍\n\n自 .NET Core 2.0 开始，该框架提供名为 IHostedService 的新接口，有助于轻松实现托管服务。 基本理念是，可以注册多个后台任务（托管服务），在 Web 主机或主机运行时在后台运行具体介绍如下图：\n   \n   ![IHostedService介绍](https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/multi-container-microservice-net-applications/media/background-tasks-with-ihostedservice/ihosted-service-webhost-vs-host.png) \n   \n但是，由于大多数后台任务在取消令牌管理和其他典型操作方面都有类似的需求，因此有一个非常方便且可以从中进行派生的抽象基类，名为 BackgroundService（自 .NET Core 2.1 起提供），该类提供设置后台任务所需的主要工作。从抽象基类派生时，只需在自定义的托管服务类中实现 ExecuteAsync() 方法，结合 [利用Canal集合RabbitMQ实现数据和缓存同步](https://www.odinsam.com/articles/a3b9.html) 这篇文章，就可以搭建Canal + RabbitMQ + CacheManager 的基本架构，从而实现由 Canal 监控和发现 mysql 数据库的增量信息并推送到 RabbitMQ ，而我们使用BackgroundSerivce 搭建的后台托管服务消费 RabbitMQ 信息修改 Redis 中的缓存数据，而 CacheManager 设定 Redis 缓存为缓存挡板，故而内存中的二级缓存也会得到对应修改。\n\n#### 2. 具体实现\n\n这里是以 ErrorCode 错误码为例，实现一系列操作。首先是 实现 BackgroundService 的子类 OdinBackgroundService ：\n    \n```csharp\npublic class OdinBackgroundService : BackgroundService\n{\n    private readonly ProjectExtendsOptions apiOptions;\n    private readonly ReceiveRabbitMQHelper receiveRabbitMQHelper;\n    private int executionCount = 0;\n    private Timer _timer;\n    public OdinBackgroundService()\n    {\n        this.apiOptions = OdinInjectHelper.GetService<IOptionsSnapshot<ProjectExtendsOptions>>().Value;\n        this.receiveRabbitMQHelper = new ReceiveRabbitMQHelper();\n    }\n\n    private void DoWork(object state)\n    {\n        receiveRabbitMQHelper.ReceiveMQ(apiOptions);\n    }\n\n    public override Task StartAsync(CancellationToken cancellationToken)\n    {\n        return ExecuteAsync(cancellationToken);\n    }\n    protected override Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        Log.Information($\"Service:【 Run 】\\tTime:【{DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n        _timer = new Timer(DoWork, null, TimeSpan.Zero, TimeSpan.FromMilliseconds(300));\n        return Task.CompletedTask;\n    }\n\n    public override Task StopAsync(CancellationToken cancellationToken)\n    {\n        Log.Information($\"Service:【 Stop 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n        _timer?.Change(Timeout.Infinite, 0);\n        return base.StopAsync(cancellationToken);\n    }\n\n    public override void Dispose()\n    {\n        _timer?.Dispose();\n    }\n}\n```\n\n这里采用轮询机制，每300ms消费一次 RabbitMQ 的信息，具体的消费代码 ReceiveRabbitMQHelper 如下:\n    \n```csharp\npublic class ReceiveRabbitMQHelper\n{\n    private readonly IRabbitMQReceiveServer rabbitMQReceiveServer;\n    private readonly IOdinCanalHelper canalHelper;\n    private readonly IOdinCacheManager cacheManager;\n\n    public ReceiveRabbitMQHelper()\n    {\n        this.rabbitMQReceiveServer = OdinInjectHelper.GetService<IRabbitMQReceiveServer>();\n        this.canalHelper = OdinInjectHelper.GetService<IOdinCanalHelper>();\n        this.cacheManager = OdinInjectHelper.GetService<IOdinCacheManager>();\n    }\n\n    public void ReceiveMQ(ProjectExtendsOptions apiOptions)\n    {\n        rabbitMQReceiveServer.ReceiveJsonMessage(\n            apiOptions.RabbitMQ,\n            new RabbitMQReceivedModel\n            {\n                ExchangeName = \"canal-exchange\",\n                QueueName = \"canal-queues\",\n                AutoAck = false\n            },\n            (BasicGetResult result, IModel channel) =>\n            {\n                var msg = RabbitMQReceiveHandler.ReceiveJsonMessageHandler(result, channel);\n                if (!string.IsNullOrEmpty(msg))\n                {\n                    System.Console.WriteLine($\"Canal-WorkService:【 Run 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n                    System.Console.WriteLine(msg);\n                    // 这里用来处理获取到的 RabbitMQ 的增量信息\n                    ErrorCodeHelper.ErrorCodeCanalHandler(canalHelper, cacheManager, msg);\n                    System.Console.WriteLine(\"\\r\\n\");\n                }\n            }\n        );\n    }\n}\n```\n\nErrorCodeCanalHandler用来处理获取到的 RabbitMQ 的增量信息，具体封装如下：\n\n```csharp\npublic class ErrorCodeHelper\n{\n    public static void ErrorCodeCanalHandler(IOdinCanalHelper canalHelper, IOdinCacheManager cacheManager, string canalString)\n    {\n        var obj = canalHelper.GetCanalInfo(canalString);\n        var type = obj.type;\n        switch (type.ToLower())\n        {\n            case \"insert\":\n                {\n                    var model = ConvertCanalDataToErrorCodeModel(obj);\n                    var flag = cacheManager.Add(model.ErrorCode, model);\n                    if (flag)\n                        System.Console.WriteLine(\"cacheManager add success\");\n                    else\n                        System.Console.WriteLine(\"cacheManager add fail\");\n                }\n                break;\n            case \"update\":\n                {\n                    var model = ConvertCanalDataToErrorCodeModel(obj);\n                    cacheManager.Cover<ErrorCode_Model>(model.ErrorCode, model);\n                    System.Console.WriteLine(\"cacheManager Cover success\");\n                }\n                break;\n            case \"delete\":\n                {\n                    var errorCode = GetErrorCode(obj);\n                    bool flag = cacheManager.Delete(errorCode);\n                    if (flag)\n                        System.Console.WriteLine(\"cacheManager delete success\");\n                    else\n                        System.Console.WriteLine(\"cacheManager delete fail\");\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    private static string GetErrorCode(OdinCanalModel obj)\n    {\n        var errorCode = obj.data[0].GetValue(\"ErrorCode\").ToString();\n        return errorCode;\n    }\n    private static ErrorCode_Model ConvertCanalDataToErrorCodeModel(OdinCanalModel obj)\n    {\n        var errorCode = obj.data[0].GetValue(\"ErrorCode\").ToString();\n        var codeShowMessage = obj.data[0].GetValue(\"CodeShowMessage\").ToString();\n        var codeErrorMessage = obj.data[0].GetValue(\"CodeErrorMessage\").ToString();\n        ErrorCode_Model model = new ErrorCode_Model()\n        {\n            ErrorCode = errorCode,\n            ErrorMessage = codeErrorMessage,\n            ShowMessage = codeErrorMessage,\n        };\n        return model;\n    }\n}\n```\n\n这样基本的搭建就完成了，完整代码可以在 [GitHub](https://github.com/odinsam/OdinMA) 。","slug":"使用-BackgroundService-类在微服务中实现后台任务","published":1,"updated":"2021-06-14T10:18:51.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3n005t5cs91sjuckcu","content":"<blockquote>\n<p>任何应用程序中都可能需要使用后台任务和计划作业，无论应用程序是否遵循微服务体系结构模式均是如此。 使用微服务体系结构的区别在于，你可以在一个单独的用于托管的进程/容器中实现后台任务。一般在 .NET 中，我们将这些类型的任务称为托管服务，因为它们是托管在主机/应用程序/微服务中的服务/逻辑。 请注意，在这种情况下，托管服务仅表示具有后台任务逻辑的类。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-ihostedservice介绍\"><a class=\"markdownIt-Anchor\" href=\"#1-ihostedservice介绍\"></a> 1. IHostedService介绍</h4>\n<p>自 .NET Core 2.0 开始，该框架提供名为 IHostedService 的新接口，有助于轻松实现托管服务。 基本理念是，可以注册多个后台任务（托管服务），在 Web 主机或主机运行时在后台运行具体介绍如下图：</p>\n<p><img src=\"https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/multi-container-microservice-net-applications/media/background-tasks-with-ihostedservice/ihosted-service-webhost-vs-host.png\" alt=\"IHostedService介绍\" /></p>\n<p>但是，由于大多数后台任务在取消令牌管理和其他典型操作方面都有类似的需求，因此有一个非常方便且可以从中进行派生的抽象基类，名为 BackgroundService（自 .NET Core 2.1 起提供），该类提供设置后台任务所需的主要工作。从抽象基类派生时，只需在自定义的托管服务类中实现 ExecuteAsync() 方法，结合 <a href=\"https://www.odinsam.com/articles/a3b9.html\">利用Canal集合RabbitMQ实现数据和缓存同步</a> 这篇文章，就可以搭建Canal + RabbitMQ + CacheManager 的基本架构，从而实现由 Canal 监控和发现 mysql 数据库的增量信息并推送到 RabbitMQ ，而我们使用BackgroundSerivce 搭建的后台托管服务消费 RabbitMQ 信息修改 Redis 中的缓存数据，而 CacheManager 设定 Redis 缓存为缓存挡板，故而内存中的二级缓存也会得到对应修改。</p>\n<h4 id=\"2-具体实现\"><a class=\"markdownIt-Anchor\" href=\"#2-具体实现\"></a> 2. 具体实现</h4>\n<p>这里是以 ErrorCode 错误码为例，实现一系列操作。首先是 实现 BackgroundService 的子类 OdinBackgroundService ：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinBackgroundService</span> : <span class=\"title\">BackgroundService</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> ProjectExtendsOptions apiOptions;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> ReceiveRabbitMQHelper receiveRabbitMQHelper;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">int</span> executionCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Timer _timer;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinBackgroundService</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.apiOptions = OdinInjectHelper.GetService&lt;IOptionsSnapshot&lt;ProjectExtendsOptions&gt;&gt;().Value;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.receiveRabbitMQHelper = <span class=\"keyword\">new</span> ReceiveRabbitMQHelper();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">DoWork</span>(<span class=\"params\"><span class=\"built_in\">object</span> state</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        receiveRabbitMQHelper.ReceiveMQ(apiOptions);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> Task <span class=\"title\">StartAsync</span>(<span class=\"params\">CancellationToken cancellationToken</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ExecuteAsync(cancellationToken);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> Task <span class=\"title\">ExecuteAsync</span>(<span class=\"params\">CancellationToken stoppingToken</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 Run 】\\tTime:【<span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">        _timer = <span class=\"keyword\">new</span> Timer(DoWork, <span class=\"literal\">null</span>, TimeSpan.Zero, TimeSpan.FromMilliseconds(<span class=\"number\">300</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Task.CompletedTask;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> Task <span class=\"title\">StopAsync</span>(<span class=\"params\">CancellationToken cancellationToken</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 Stop 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">        _timer?.Change(Timeout.Infinite, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">base</span>.StopAsync(cancellationToken);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">Dispose</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _timer?.Dispose();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里采用轮询机制，每300ms消费一次 RabbitMQ 的信息，具体的消费代码 ReceiveRabbitMQHelper 如下:</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ReceiveRabbitMQHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> IRabbitMQReceiveServer rabbitMQReceiveServer;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> IOdinCanalHelper canalHelper;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> IOdinCacheManager cacheManager;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ReceiveRabbitMQHelper</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.rabbitMQReceiveServer = OdinInjectHelper.GetService&lt;IRabbitMQReceiveServer&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.canalHelper = OdinInjectHelper.GetService&lt;IOdinCanalHelper&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.cacheManager = OdinInjectHelper.GetService&lt;IOdinCacheManager&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ReceiveMQ</span>(<span class=\"params\">ProjectExtendsOptions apiOptions</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rabbitMQReceiveServer.ReceiveJsonMessage(</span><br><span class=\"line\">            apiOptions.RabbitMQ,</span><br><span class=\"line\">            <span class=\"keyword\">new</span> RabbitMQReceivedModel</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ExchangeName = <span class=\"string\">&quot;canal-exchange&quot;</span>,</span><br><span class=\"line\">                QueueName = <span class=\"string\">&quot;canal-queues&quot;</span>,</span><br><span class=\"line\">                AutoAck = <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            (BasicGetResult result, IModel channel) =&gt;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> msg = RabbitMQReceiveHandler.ReceiveJsonMessageHandler(result, channel);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(msg))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    System.Console.WriteLine(<span class=\"string\">$&quot;Canal-WorkService:【 Run 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">                    System.Console.WriteLine(msg);</span><br><span class=\"line\">                    <span class=\"comment\">// 这里用来处理获取到的 RabbitMQ 的增量信息</span></span><br><span class=\"line\">                    ErrorCodeHelper.ErrorCodeCanalHandler(canalHelper, cacheManager, msg);</span><br><span class=\"line\">                    System.Console.WriteLine(<span class=\"string\">&quot;\\r\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ErrorCodeCanalHandler用来处理获取到的 RabbitMQ 的增量信息，具体封装如下：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ErrorCodeHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ErrorCodeCanalHandler</span>(<span class=\"params\">IOdinCanalHelper canalHelper, IOdinCacheManager cacheManager, <span class=\"built_in\">string</span> canalString</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> obj = canalHelper.GetCanalInfo(canalString);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> type = obj.type;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (type.ToLower())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;insert&quot;</span>:</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> model = ConvertCanalDataToErrorCodeModel(obj);</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> flag = cacheManager.Add(model.ErrorCode, model);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">                        System.Console.WriteLine(<span class=\"string\">&quot;cacheManager add success&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        System.Console.WriteLine(<span class=\"string\">&quot;cacheManager add fail&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;update&quot;</span>:</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> model = ConvertCanalDataToErrorCodeModel(obj);</span><br><span class=\"line\">                    cacheManager.Cover&lt;ErrorCode_Model&gt;(model.ErrorCode, model);</span><br><span class=\"line\">                    System.Console.WriteLine(<span class=\"string\">&quot;cacheManager Cover success&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;delete&quot;</span>:</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> errorCode = GetErrorCode(obj);</span><br><span class=\"line\">                    <span class=\"built_in\">bool</span> flag = cacheManager.Delete(errorCode);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">                        System.Console.WriteLine(<span class=\"string\">&quot;cacheManager delete success&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        System.Console.WriteLine(<span class=\"string\">&quot;cacheManager delete fail&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"literal\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetErrorCode</span>(<span class=\"params\">OdinCanalModel obj</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> errorCode = obj.data[<span class=\"number\">0</span>].GetValue(<span class=\"string\">&quot;ErrorCode&quot;</span>).ToString();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> errorCode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ErrorCode_Model <span class=\"title\">ConvertCanalDataToErrorCodeModel</span>(<span class=\"params\">OdinCanalModel obj</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> errorCode = obj.data[<span class=\"number\">0</span>].GetValue(<span class=\"string\">&quot;ErrorCode&quot;</span>).ToString();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> codeShowMessage = obj.data[<span class=\"number\">0</span>].GetValue(<span class=\"string\">&quot;CodeShowMessage&quot;</span>).ToString();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> codeErrorMessage = obj.data[<span class=\"number\">0</span>].GetValue(<span class=\"string\">&quot;CodeErrorMessage&quot;</span>).ToString();</span><br><span class=\"line\">        ErrorCode_Model model = <span class=\"keyword\">new</span> ErrorCode_Model()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ErrorCode = errorCode,</span><br><span class=\"line\">            ErrorMessage = codeErrorMessage,</span><br><span class=\"line\">            ShowMessage = codeErrorMessage,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> model;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样基本的搭建就完成了，完整代码可以在 <a href=\"https://github.com/odinsam/OdinMA\">GitHub</a> 。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>任何应用程序中都可能需要使用后台任务和计划作业，无论应用程序是否遵循微服务体系结构模式均是如此。 使用微服务体系结构的区别在于，你可以在一个单独的用于托管的进程/容器中实现后台任务。一般在 .NET 中，我们将这些类型的任务称为托管服务，因为它们是托管在主机/应用程序/微服务中的服务/逻辑。 请注意，在这种情况下，托管服务仅表示具有后台任务逻辑的类。</p>\n</blockquote>","more":"<h4 id=\"1-ihostedservice介绍\"><a class=\"markdownIt-Anchor\" href=\"#1-ihostedservice介绍\"></a> 1. IHostedService介绍</h4>\n<p>自 .NET Core 2.0 开始，该框架提供名为 IHostedService 的新接口，有助于轻松实现托管服务。 基本理念是，可以注册多个后台任务（托管服务），在 Web 主机或主机运行时在后台运行具体介绍如下图：</p>\n<p><img src=\"https://docs.microsoft.com/zh-cn/dotnet/architecture/microservices/multi-container-microservice-net-applications/media/background-tasks-with-ihostedservice/ihosted-service-webhost-vs-host.png\" alt=\"IHostedService介绍\" /></p>\n<p>但是，由于大多数后台任务在取消令牌管理和其他典型操作方面都有类似的需求，因此有一个非常方便且可以从中进行派生的抽象基类，名为 BackgroundService（自 .NET Core 2.1 起提供），该类提供设置后台任务所需的主要工作。从抽象基类派生时，只需在自定义的托管服务类中实现 ExecuteAsync() 方法，结合 <a href=\"https://www.odinsam.com/articles/a3b9.html\">利用Canal集合RabbitMQ实现数据和缓存同步</a> 这篇文章，就可以搭建Canal + RabbitMQ + CacheManager 的基本架构，从而实现由 Canal 监控和发现 mysql 数据库的增量信息并推送到 RabbitMQ ，而我们使用BackgroundSerivce 搭建的后台托管服务消费 RabbitMQ 信息修改 Redis 中的缓存数据，而 CacheManager 设定 Redis 缓存为缓存挡板，故而内存中的二级缓存也会得到对应修改。</p>\n<h4 id=\"2-具体实现\"><a class=\"markdownIt-Anchor\" href=\"#2-具体实现\"></a> 2. 具体实现</h4>\n<p>这里是以 ErrorCode 错误码为例，实现一系列操作。首先是 实现 BackgroundService 的子类 OdinBackgroundService ：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinBackgroundService</span> : <span class=\"title\">BackgroundService</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> ProjectExtendsOptions apiOptions;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> ReceiveRabbitMQHelper receiveRabbitMQHelper;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">int</span> executionCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Timer _timer;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OdinBackgroundService</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.apiOptions = OdinInjectHelper.GetService&lt;IOptionsSnapshot&lt;ProjectExtendsOptions&gt;&gt;().Value;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.receiveRabbitMQHelper = <span class=\"keyword\">new</span> ReceiveRabbitMQHelper();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">DoWork</span>(<span class=\"params\"><span class=\"built_in\">object</span> state</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        receiveRabbitMQHelper.ReceiveMQ(apiOptions);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> Task <span class=\"title\">StartAsync</span>(<span class=\"params\">CancellationToken cancellationToken</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ExecuteAsync(cancellationToken);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> Task <span class=\"title\">ExecuteAsync</span>(<span class=\"params\">CancellationToken stoppingToken</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 Run 】\\tTime:【<span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">        _timer = <span class=\"keyword\">new</span> Timer(DoWork, <span class=\"literal\">null</span>, TimeSpan.Zero, TimeSpan.FromMilliseconds(<span class=\"number\">300</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Task.CompletedTask;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> Task <span class=\"title\">StopAsync</span>(<span class=\"params\">CancellationToken cancellationToken</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 Stop 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">        _timer?.Change(Timeout.Infinite, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">base</span>.StopAsync(cancellationToken);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">Dispose</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _timer?.Dispose();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里采用轮询机制，每300ms消费一次 RabbitMQ 的信息，具体的消费代码 ReceiveRabbitMQHelper 如下:</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ReceiveRabbitMQHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> IRabbitMQReceiveServer rabbitMQReceiveServer;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> IOdinCanalHelper canalHelper;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> IOdinCacheManager cacheManager;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ReceiveRabbitMQHelper</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.rabbitMQReceiveServer = OdinInjectHelper.GetService&lt;IRabbitMQReceiveServer&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.canalHelper = OdinInjectHelper.GetService&lt;IOdinCanalHelper&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.cacheManager = OdinInjectHelper.GetService&lt;IOdinCacheManager&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ReceiveMQ</span>(<span class=\"params\">ProjectExtendsOptions apiOptions</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rabbitMQReceiveServer.ReceiveJsonMessage(</span><br><span class=\"line\">            apiOptions.RabbitMQ,</span><br><span class=\"line\">            <span class=\"keyword\">new</span> RabbitMQReceivedModel</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ExchangeName = <span class=\"string\">&quot;canal-exchange&quot;</span>,</span><br><span class=\"line\">                QueueName = <span class=\"string\">&quot;canal-queues&quot;</span>,</span><br><span class=\"line\">                AutoAck = <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            (BasicGetResult result, IModel channel) =&gt;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> msg = RabbitMQReceiveHandler.ReceiveJsonMessageHandler(result, channel);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(msg))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    System.Console.WriteLine(<span class=\"string\">$&quot;Canal-WorkService:【 Run 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\">                    System.Console.WriteLine(msg);</span><br><span class=\"line\">                    <span class=\"comment\">// 这里用来处理获取到的 RabbitMQ 的增量信息</span></span><br><span class=\"line\">                    ErrorCodeHelper.ErrorCodeCanalHandler(canalHelper, cacheManager, msg);</span><br><span class=\"line\">                    System.Console.WriteLine(<span class=\"string\">&quot;\\r\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ErrorCodeCanalHandler用来处理获取到的 RabbitMQ 的增量信息，具体封装如下：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ErrorCodeHelper</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ErrorCodeCanalHandler</span>(<span class=\"params\">IOdinCanalHelper canalHelper, IOdinCacheManager cacheManager, <span class=\"built_in\">string</span> canalString</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> obj = canalHelper.GetCanalInfo(canalString);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> type = obj.type;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (type.ToLower())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;insert&quot;</span>:</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> model = ConvertCanalDataToErrorCodeModel(obj);</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> flag = cacheManager.Add(model.ErrorCode, model);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">                        System.Console.WriteLine(<span class=\"string\">&quot;cacheManager add success&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        System.Console.WriteLine(<span class=\"string\">&quot;cacheManager add fail&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;update&quot;</span>:</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> model = ConvertCanalDataToErrorCodeModel(obj);</span><br><span class=\"line\">                    cacheManager.Cover&lt;ErrorCode_Model&gt;(model.ErrorCode, model);</span><br><span class=\"line\">                    System.Console.WriteLine(<span class=\"string\">&quot;cacheManager Cover success&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;delete&quot;</span>:</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> errorCode = GetErrorCode(obj);</span><br><span class=\"line\">                    <span class=\"built_in\">bool</span> flag = cacheManager.Delete(errorCode);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">                        System.Console.WriteLine(<span class=\"string\">&quot;cacheManager delete success&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        System.Console.WriteLine(<span class=\"string\">&quot;cacheManager delete fail&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"literal\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetErrorCode</span>(<span class=\"params\">OdinCanalModel obj</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> errorCode = obj.data[<span class=\"number\">0</span>].GetValue(<span class=\"string\">&quot;ErrorCode&quot;</span>).ToString();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> errorCode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ErrorCode_Model <span class=\"title\">ConvertCanalDataToErrorCodeModel</span>(<span class=\"params\">OdinCanalModel obj</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> errorCode = obj.data[<span class=\"number\">0</span>].GetValue(<span class=\"string\">&quot;ErrorCode&quot;</span>).ToString();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> codeShowMessage = obj.data[<span class=\"number\">0</span>].GetValue(<span class=\"string\">&quot;CodeShowMessage&quot;</span>).ToString();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> codeErrorMessage = obj.data[<span class=\"number\">0</span>].GetValue(<span class=\"string\">&quot;CodeErrorMessage&quot;</span>).ToString();</span><br><span class=\"line\">        ErrorCode_Model model = <span class=\"keyword\">new</span> ErrorCode_Model()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ErrorCode = errorCode,</span><br><span class=\"line\">            ErrorMessage = codeErrorMessage,</span><br><span class=\"line\">            ShowMessage = codeErrorMessage,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> model;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样基本的搭建就完成了，完整代码可以在 <a href=\"https://github.com/odinsam/OdinMA\">GitHub</a> 。</p>"},{"title":"利用BackgroundService封装后台服务","author":"OdinSam","abbrlink":"c075","date":"2021-07-22T05:20:00.000Z","_content":">在之前的文章 [使用 BackgroundService 类在微服务中实现后台任务](/articles/2893.html) 中有介绍到如何利用 BackgroundService 来实现后台服务，这里我们依旧利用 BackgroundService 来进行类似 hangfire 的封装。\n\n<!--more-->\n\n#### OdinPlugs.OdinHostedService 使用方法\n\n##### 1 后台任务 - 普通任务，立即执行，只执行一次\n\n```csharp\nservices.AddOdinBgServiceNomalJob(opt =>\n{\n    opt.ActionJob = () =>\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - Nomal - Job - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n    };\n});\n```\n\n##### 2 后台任务 - 延迟调用，只执行一次\n\n```csharp\nservices.AddOdinBgServiceScheduleJob(opt =>\n{\n    opt.DueTime = 5000;\n    opt.ActionJob = () =>\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - ScheduleJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n    };\n});\n```\n\n##### 3 后台任务 - 循环任务执行：重复执行的任务，使用常见的时间循环模式\n\n```csharp\nservices.AddOdinBgServiceScheduleJob(opt =>\n{\n    opt.DueTime = 5000;\n    opt.ActionJob = () =>\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - ScheduleJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n    };\n});\n```\n\n##### 4 后台任务 - 循环任务执行：重复执行的任务(任务执行完后继续自动执行)\n\n```csharp\nservices.AddOdinBgServiceLoopJob(opt =>\n{\n    opt.ActionJob = () =>\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - LoopJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        Thread.Sleep(1000);\n    };\n});\n```\n\n##### 5 后台任务 - 自定义任务\n\n```csharp\nservices.AddOdinBgServiceJob(opt =>\n{\n    Timer timer = null;\n    void worker(object state)\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n    }\n    opt.StartAsyncAction = () =>\n    {\n        timer = new Timer(worker, null, 0, 2000);\n    };\n    opt.ExecuteAsyncAction = () =>\n    {\n\n    };\n    opt.StopAsyncAction = () =>\n    {\n        timer?.Change(Timeout.Infinite, 0);\n    };\n    opt.DisposeAction = () =>\n    {\n        timer?.Dispose();\n    };\n});\n```\n\n##### 6 后台任务 - 多任务执行\n\n```csharp\nservices\n    .AddOdinBgServiceJob(opt =>\n    {\n        Timer timer = null;\n        void worker(object state)\n        {\n#if DEBUG\n            Log.Information($\"Service:【 BgService - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        }\n        opt.StartAsyncAction = () =>\n        {\n            timer = new Timer(worker, null, 0, 2000);\n        };\n        opt.ExecuteAsyncAction = () =>\n        {\n\n        };\n        opt.StopAsyncAction = () =>\n        {\n            timer?.Change(Timeout.Infinite, 0);\n        };\n        opt.DisposeAction = () =>\n        {\n            timer?.Dispose();\n        };\n    })\n    .AddOdinBgServiceLoopJob(opt =>\n    {\n        opt.ActionJob = () =>\n        {\n            // new ReceiveRabbitMQHelper().ReceiveMQ(_Options);\n#if DEBUG\n            Log.Information($\"Service:【 BgService - LoopJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n            Thread.Sleep(1000);\n        };\n    })\n    .AddOdinBgServiceRecurringJob(opt =>\n    {\n        opt.Period = TimeSpan.FromSeconds(1);\n        opt.ActionJob = () =>\n        {\n            // new ReceiveRabbitMQHelper().ReceiveMQ(_Options);\n#if DEBUG\n            Log.Information($\"Service:【 BgService - RecurringJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        };\n    })\n    .AddOdinBgServiceNomalJob(opt =>\n    {\n        opt.ActionJob = () =>\n        {\n#if DEBUG\n            Log.Information($\"Service:【 BgService - Nomal- Job - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        };\n    })\n    .AddOdinBgServiceScheduleJob(opt =>\n    {\n        opt.DueTime = 5000;\n        opt.ActionJob = () =>\n        {\n#if DEBUG\n            Log.Information($\"Service:【 BgService - ScheduleJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        };\n    });\n```\n\n具体的代码在 [GitHub](https://github.com/odinsam/OdinPlugs.OdinHostedService) [![nuget](https://img.shields.io/nuget/v/OdinPlugs.OdinHostedService)](https://www.nuget.org/packages/OdinPlugs.OdinHostedService)","source":"_posts/利用BackgroundService封装后台服务.md","raw":"title: 利用BackgroundService封装后台服务\nauthor: OdinSam\ntags:\n  - .Net Core\n  - BackgroundService\n  - 后台服务\n  - 微服务\ncategories:\n  - .Net Core\nabbrlink: c075\ndate: 2021-07-22 13:20:00\n---\n>在之前的文章 [使用 BackgroundService 类在微服务中实现后台任务](/articles/2893.html) 中有介绍到如何利用 BackgroundService 来实现后台服务，这里我们依旧利用 BackgroundService 来进行类似 hangfire 的封装。\n\n<!--more-->\n\n#### OdinPlugs.OdinHostedService 使用方法\n\n##### 1 后台任务 - 普通任务，立即执行，只执行一次\n\n```csharp\nservices.AddOdinBgServiceNomalJob(opt =>\n{\n    opt.ActionJob = () =>\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - Nomal - Job - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n    };\n});\n```\n\n##### 2 后台任务 - 延迟调用，只执行一次\n\n```csharp\nservices.AddOdinBgServiceScheduleJob(opt =>\n{\n    opt.DueTime = 5000;\n    opt.ActionJob = () =>\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - ScheduleJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n    };\n});\n```\n\n##### 3 后台任务 - 循环任务执行：重复执行的任务，使用常见的时间循环模式\n\n```csharp\nservices.AddOdinBgServiceScheduleJob(opt =>\n{\n    opt.DueTime = 5000;\n    opt.ActionJob = () =>\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - ScheduleJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n    };\n});\n```\n\n##### 4 后台任务 - 循环任务执行：重复执行的任务(任务执行完后继续自动执行)\n\n```csharp\nservices.AddOdinBgServiceLoopJob(opt =>\n{\n    opt.ActionJob = () =>\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - LoopJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        Thread.Sleep(1000);\n    };\n});\n```\n\n##### 5 后台任务 - 自定义任务\n\n```csharp\nservices.AddOdinBgServiceJob(opt =>\n{\n    Timer timer = null;\n    void worker(object state)\n    {\n#if DEBUG\n        Log.Information($\"Service:【 BgService - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n    }\n    opt.StartAsyncAction = () =>\n    {\n        timer = new Timer(worker, null, 0, 2000);\n    };\n    opt.ExecuteAsyncAction = () =>\n    {\n\n    };\n    opt.StopAsyncAction = () =>\n    {\n        timer?.Change(Timeout.Infinite, 0);\n    };\n    opt.DisposeAction = () =>\n    {\n        timer?.Dispose();\n    };\n});\n```\n\n##### 6 后台任务 - 多任务执行\n\n```csharp\nservices\n    .AddOdinBgServiceJob(opt =>\n    {\n        Timer timer = null;\n        void worker(object state)\n        {\n#if DEBUG\n            Log.Information($\"Service:【 BgService - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        }\n        opt.StartAsyncAction = () =>\n        {\n            timer = new Timer(worker, null, 0, 2000);\n        };\n        opt.ExecuteAsyncAction = () =>\n        {\n\n        };\n        opt.StopAsyncAction = () =>\n        {\n            timer?.Change(Timeout.Infinite, 0);\n        };\n        opt.DisposeAction = () =>\n        {\n            timer?.Dispose();\n        };\n    })\n    .AddOdinBgServiceLoopJob(opt =>\n    {\n        opt.ActionJob = () =>\n        {\n            // new ReceiveRabbitMQHelper().ReceiveMQ(_Options);\n#if DEBUG\n            Log.Information($\"Service:【 BgService - LoopJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n            Thread.Sleep(1000);\n        };\n    })\n    .AddOdinBgServiceRecurringJob(opt =>\n    {\n        opt.Period = TimeSpan.FromSeconds(1);\n        opt.ActionJob = () =>\n        {\n            // new ReceiveRabbitMQHelper().ReceiveMQ(_Options);\n#if DEBUG\n            Log.Information($\"Service:【 BgService - RecurringJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        };\n    })\n    .AddOdinBgServiceNomalJob(opt =>\n    {\n        opt.ActionJob = () =>\n        {\n#if DEBUG\n            Log.Information($\"Service:【 BgService - Nomal- Job - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        };\n    })\n    .AddOdinBgServiceScheduleJob(opt =>\n    {\n        opt.DueTime = 5000;\n        opt.ActionJob = () =>\n        {\n#if DEBUG\n            Log.Information($\"Service:【 BgService - ScheduleJob - Running 】\\tTime:【 {DateTime.Now.ToString(\"yyyy-dd-MM hh:mm:ss\")} 】\");\n#endif\n        };\n    });\n```\n\n具体的代码在 [GitHub](https://github.com/odinsam/OdinPlugs.OdinHostedService) [![nuget](https://img.shields.io/nuget/v/OdinPlugs.OdinHostedService)](https://www.nuget.org/packages/OdinPlugs.OdinHostedService)","slug":"利用BackgroundService封装后台服务","published":1,"updated":"2023-03-10T05:36:31.049Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3o005w5cs9enqtc625","content":"<blockquote>\n<p>在之前的文章 <a href=\"/articles/2893.html\">使用 BackgroundService 类在微服务中实现后台任务</a> 中有介绍到如何利用 BackgroundService 来实现后台服务，这里我们依旧利用 BackgroundService 来进行类似 hangfire 的封装。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"odinplugsodinhostedservice-使用方法\"><a class=\"markdownIt-Anchor\" href=\"#odinplugsodinhostedservice-使用方法\"></a> OdinPlugs.OdinHostedService 使用方法</h4>\n<h5 id=\"1-后台任务-普通任务立即执行只执行一次\"><a class=\"markdownIt-Anchor\" href=\"#1-后台任务-普通任务立即执行只执行一次\"></a> 1 后台任务 - 普通任务，立即执行，只执行一次</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceNomalJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    opt.ActionJob = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - Nomal - Job - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-后台任务-延迟调用只执行一次\"><a class=\"markdownIt-Anchor\" href=\"#2-后台任务-延迟调用只执行一次\"></a> 2 后台任务 - 延迟调用，只执行一次</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceScheduleJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    opt.DueTime = <span class=\"number\">5000</span>;</span><br><span class=\"line\">    opt.ActionJob = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - ScheduleJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-后台任务-循环任务执行重复执行的任务使用常见的时间循环模式\"><a class=\"markdownIt-Anchor\" href=\"#3-后台任务-循环任务执行重复执行的任务使用常见的时间循环模式\"></a> 3 后台任务 - 循环任务执行：重复执行的任务，使用常见的时间循环模式</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceScheduleJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    opt.DueTime = <span class=\"number\">5000</span>;</span><br><span class=\"line\">    opt.ActionJob = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - ScheduleJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-后台任务-循环任务执行重复执行的任务任务执行完后继续自动执行\"><a class=\"markdownIt-Anchor\" href=\"#4-后台任务-循环任务执行重复执行的任务任务执行完后继续自动执行\"></a> 4 后台任务 - 循环任务执行：重复执行的任务(任务执行完后继续自动执行)</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceLoopJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    opt.ActionJob = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - LoopJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        Thread.Sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-后台任务-自定义任务\"><a class=\"markdownIt-Anchor\" href=\"#5-后台任务-自定义任务\"></a> 5 后台任务 - 自定义任务</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Timer timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">worker</span>(<span class=\"params\"><span class=\"built_in\">object</span> state</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    opt.StartAsyncAction = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        timer = <span class=\"keyword\">new</span> Timer(worker, <span class=\"literal\">null</span>, <span class=\"number\">0</span>, <span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    opt.ExecuteAsyncAction = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    opt.StopAsyncAction = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        timer?.Change(Timeout.Infinite, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    opt.DisposeAction = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        timer?.Dispose();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-后台任务-多任务执行\"><a class=\"markdownIt-Anchor\" href=\"#6-后台任务-多任务执行\"></a> 6 后台任务 - 多任务执行</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services</span><br><span class=\"line\">    .AddOdinBgServiceJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Timer timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">worker</span>(<span class=\"params\"><span class=\"built_in\">object</span> state</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        opt.StartAsyncAction = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            timer = <span class=\"keyword\">new</span> Timer(worker, <span class=\"literal\">null</span>, <span class=\"number\">0</span>, <span class=\"number\">2000</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        opt.ExecuteAsyncAction = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        opt.StopAsyncAction = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            timer?.Change(Timeout.Infinite, <span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        opt.DisposeAction = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            timer?.Dispose();</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .AddOdinBgServiceLoopJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.ActionJob = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// new ReceiveRabbitMQHelper().ReceiveMQ(_Options);</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - LoopJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">            Thread.Sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .AddOdinBgServiceRecurringJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.Period = TimeSpan.FromSeconds(<span class=\"number\">1</span>);</span><br><span class=\"line\">        opt.ActionJob = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// new ReceiveRabbitMQHelper().ReceiveMQ(_Options);</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - RecurringJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .AddOdinBgServiceNomalJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.ActionJob = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - Nomal- Job - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .AddOdinBgServiceScheduleJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.DueTime = <span class=\"number\">5000</span>;</span><br><span class=\"line\">        opt.ActionJob = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - ScheduleJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<p>具体的代码在 <a href=\"https://github.com/odinsam/OdinPlugs.OdinHostedService\">GitHub</a> <a href=\"https://www.nuget.org/packages/OdinPlugs.OdinHostedService\"><img src=\"https://img.shields.io/nuget/v/OdinPlugs.OdinHostedService\" alt=\"nuget\" /></a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>在之前的文章 <a href=\"/articles/2893.html\">使用 BackgroundService 类在微服务中实现后台任务</a> 中有介绍到如何利用 BackgroundService 来实现后台服务，这里我们依旧利用 BackgroundService 来进行类似 hangfire 的封装。</p>\n</blockquote>","more":"<h4 id=\"odinplugsodinhostedservice-使用方法\"><a class=\"markdownIt-Anchor\" href=\"#odinplugsodinhostedservice-使用方法\"></a> OdinPlugs.OdinHostedService 使用方法</h4>\n<h5 id=\"1-后台任务-普通任务立即执行只执行一次\"><a class=\"markdownIt-Anchor\" href=\"#1-后台任务-普通任务立即执行只执行一次\"></a> 1 后台任务 - 普通任务，立即执行，只执行一次</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceNomalJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    opt.ActionJob = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - Nomal - Job - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-后台任务-延迟调用只执行一次\"><a class=\"markdownIt-Anchor\" href=\"#2-后台任务-延迟调用只执行一次\"></a> 2 后台任务 - 延迟调用，只执行一次</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceScheduleJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    opt.DueTime = <span class=\"number\">5000</span>;</span><br><span class=\"line\">    opt.ActionJob = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - ScheduleJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-后台任务-循环任务执行重复执行的任务使用常见的时间循环模式\"><a class=\"markdownIt-Anchor\" href=\"#3-后台任务-循环任务执行重复执行的任务使用常见的时间循环模式\"></a> 3 后台任务 - 循环任务执行：重复执行的任务，使用常见的时间循环模式</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceScheduleJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    opt.DueTime = <span class=\"number\">5000</span>;</span><br><span class=\"line\">    opt.ActionJob = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - ScheduleJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-后台任务-循环任务执行重复执行的任务任务执行完后继续自动执行\"><a class=\"markdownIt-Anchor\" href=\"#4-后台任务-循环任务执行重复执行的任务任务执行完后继续自动执行\"></a> 4 后台任务 - 循环任务执行：重复执行的任务(任务执行完后继续自动执行)</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceLoopJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    opt.ActionJob = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - LoopJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        Thread.Sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-后台任务-自定义任务\"><a class=\"markdownIt-Anchor\" href=\"#5-后台任务-自定义任务\"></a> 5 后台任务 - 自定义任务</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.AddOdinBgServiceJob(opt =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Timer timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">worker</span>(<span class=\"params\"><span class=\"built_in\">object</span> state</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">        Log.Information(<span class=\"string\">$&quot;Service:【 BgService - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    opt.StartAsyncAction = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        timer = <span class=\"keyword\">new</span> Timer(worker, <span class=\"literal\">null</span>, <span class=\"number\">0</span>, <span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    opt.ExecuteAsyncAction = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    opt.StopAsyncAction = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        timer?.Change(Timeout.Infinite, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    opt.DisposeAction = () =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        timer?.Dispose();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"6-后台任务-多任务执行\"><a class=\"markdownIt-Anchor\" href=\"#6-后台任务-多任务执行\"></a> 6 后台任务 - 多任务执行</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services</span><br><span class=\"line\">    .AddOdinBgServiceJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Timer timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">worker</span>(<span class=\"params\"><span class=\"built_in\">object</span> state</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        opt.StartAsyncAction = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            timer = <span class=\"keyword\">new</span> Timer(worker, <span class=\"literal\">null</span>, <span class=\"number\">0</span>, <span class=\"number\">2000</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        opt.ExecuteAsyncAction = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        opt.StopAsyncAction = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            timer?.Change(Timeout.Infinite, <span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        opt.DisposeAction = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            timer?.Dispose();</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .AddOdinBgServiceLoopJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.ActionJob = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// new ReceiveRabbitMQHelper().ReceiveMQ(_Options);</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - LoopJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">            Thread.Sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .AddOdinBgServiceRecurringJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.Period = TimeSpan.FromSeconds(<span class=\"number\">1</span>);</span><br><span class=\"line\">        opt.ActionJob = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// new ReceiveRabbitMQHelper().ReceiveMQ(_Options);</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - RecurringJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .AddOdinBgServiceNomalJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.ActionJob = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - Nomal- Job - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .AddOdinBgServiceScheduleJob(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.DueTime = <span class=\"number\">5000</span>;</span><br><span class=\"line\">        opt.ActionJob = () =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></span><br><span class=\"line\">            Log.Information(<span class=\"string\">$&quot;Service:【 BgService - ScheduleJob - Running 】\\tTime:【 <span class=\"subst\">&#123;DateTime.Now.ToString(<span class=\"string\">&quot;yyyy-dd-MM hh:mm:ss&quot;</span>)&#125;</span> 】&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<p>具体的代码在 <a href=\"https://github.com/odinsam/OdinPlugs.OdinHostedService\">GitHub</a> <a href=\"https://www.nuget.org/packages/OdinPlugs.OdinHostedService\"><img src=\"https://img.shields.io/nuget/v/OdinPlugs.OdinHostedService\" alt=\"nuget\" /></a></p>"},{"title":"关于net core动态加载配置文件的小问题","author":"odinsam","abbrlink":"8950","date":"2021-05-27T13:57:00.000Z","_content":"> 在我的项目当中配置文件较多，例如包括 <font color=\"blue\">项目自身的配置文件</font>、<font color=\"blue\">consul.config</font>、<font color=\"blue\">redis.cofing</font>、<font color=\"blue\">identityServer.config</font> 等等，要在项目启动的时候动态加载所有的配置文件。在我的项目中有 serverConfig 文件夹中有对应的所有的配置文件需要动态加载所有文件，在加载过程中发现按照文件路径无法加载 win10 环境。最后发现加载时不能使用绝对路径需要使用相对路径。  \n\n<!-- more -->\n\n\n#### 需求场景:\n\n> serverConfig 中有对应的一系列配置文件。其中 cnf.json 为主配置文件,里边有当前项目的运行环境的配置，还有其他的文件夹以及对应的其他的配置文件。\n\n    现在需要在Config Builder之前递归加载所有的配置文件。\n\n#### 问题:\n\n> 在编码后运行发现，总是找不对对应的配置文件（win 10 环境），代码如下:\n\n    ```csharp\n    public void LoadConfigFiles(string currentPath, IConfigurationBuilder config)\n    {\n        foreach (var item in Directory.GetFiles(currentPath))\n        {\n            if (Path.GetFileName(item) != \"cnf.json\")\n            {\n                if (File.Exists(item))\n                    config.Add(new JsonConfigurationSource { Path = item, Optional = false, ReloadOnChange = true });\n            }\n        }\n        var dir = Directory.GetDirectories(currentPath);\n        if (dir != null && dir.Length > 0)\n        {\n            foreach (var dirItem in dir)\n            {\n                if (!Path.GetDirectoryName(dirItem).EndsWith(Path.Combine(FileHelper.DirectorySeparatorChar, \"envConfig\")))\n                    LoadConfigFiles(dirItem, config);\n            }\n        }\n    }\n    ```\n    代码总是报错，提示找不对config文件\n\n#### 解决:\n\n> 最后发现 config.add 加载的文件路径需要是相对路径而不能是绝对路径，解决代码如下:\n\n    ```csharp\n    public void LoadConfigFiles(string currentPath, IConfigurationBuilder config, string rootPath)\n    {\n        foreach (var item in Directory.GetFiles(currentPath))\n        {\n            if (Path.GetFileName(item) != \"cnf.json\")\n            {\n\n                var configPath = item.Replace(rootPath, \"\");\n                if (File.Exists(item))\n                    config.Add(new JsonConfigurationSource { Path = configPath, Optional = false, ReloadOnChange = true });     //config.add 加载的文件 路径需要是相对路径 而不能是绝对路径\n            }\n        }\n        var dir = Directory.GetDirectories(currentPath);\n        if (dir != null && dir.Length > 0)\n        {\n            foreach (var dirItem in dir)\n            {\n                if (!Path.GetDirectoryName(dirItem).EndsWith(Path.Combine(FileHelper.DirectorySeparatorChar, \"envConfig\")))\n                    LoadConfigFiles(dirItem, config, rootPath);\n            }\n        }\n    }\n    ```","source":"_posts/关于net-core动态加载配置文件的小问题.md","raw":"title: 关于net core动态加载配置文件的小问题\nauthor: odinsam\ntags:\n  - .Net Core\n  - ''\ncategories:\n  - .Net Core\nabbrlink: '8950'\ndate: 2021-05-27 21:57:00\n---\n> 在我的项目当中配置文件较多，例如包括 <font color=\"blue\">项目自身的配置文件</font>、<font color=\"blue\">consul.config</font>、<font color=\"blue\">redis.cofing</font>、<font color=\"blue\">identityServer.config</font> 等等，要在项目启动的时候动态加载所有的配置文件。在我的项目中有 serverConfig 文件夹中有对应的所有的配置文件需要动态加载所有文件，在加载过程中发现按照文件路径无法加载 win10 环境。最后发现加载时不能使用绝对路径需要使用相对路径。  \n\n<!-- more -->\n\n\n#### 需求场景:\n\n> serverConfig 中有对应的一系列配置文件。其中 cnf.json 为主配置文件,里边有当前项目的运行环境的配置，还有其他的文件夹以及对应的其他的配置文件。\n\n    现在需要在Config Builder之前递归加载所有的配置文件。\n\n#### 问题:\n\n> 在编码后运行发现，总是找不对对应的配置文件（win 10 环境），代码如下:\n\n    ```csharp\n    public void LoadConfigFiles(string currentPath, IConfigurationBuilder config)\n    {\n        foreach (var item in Directory.GetFiles(currentPath))\n        {\n            if (Path.GetFileName(item) != \"cnf.json\")\n            {\n                if (File.Exists(item))\n                    config.Add(new JsonConfigurationSource { Path = item, Optional = false, ReloadOnChange = true });\n            }\n        }\n        var dir = Directory.GetDirectories(currentPath);\n        if (dir != null && dir.Length > 0)\n        {\n            foreach (var dirItem in dir)\n            {\n                if (!Path.GetDirectoryName(dirItem).EndsWith(Path.Combine(FileHelper.DirectorySeparatorChar, \"envConfig\")))\n                    LoadConfigFiles(dirItem, config);\n            }\n        }\n    }\n    ```\n    代码总是报错，提示找不对config文件\n\n#### 解决:\n\n> 最后发现 config.add 加载的文件路径需要是相对路径而不能是绝对路径，解决代码如下:\n\n    ```csharp\n    public void LoadConfigFiles(string currentPath, IConfigurationBuilder config, string rootPath)\n    {\n        foreach (var item in Directory.GetFiles(currentPath))\n        {\n            if (Path.GetFileName(item) != \"cnf.json\")\n            {\n\n                var configPath = item.Replace(rootPath, \"\");\n                if (File.Exists(item))\n                    config.Add(new JsonConfigurationSource { Path = configPath, Optional = false, ReloadOnChange = true });     //config.add 加载的文件 路径需要是相对路径 而不能是绝对路径\n            }\n        }\n        var dir = Directory.GetDirectories(currentPath);\n        if (dir != null && dir.Length > 0)\n        {\n            foreach (var dirItem in dir)\n            {\n                if (!Path.GetDirectoryName(dirItem).EndsWith(Path.Combine(FileHelper.DirectorySeparatorChar, \"envConfig\")))\n                    LoadConfigFiles(dirItem, config, rootPath);\n            }\n        }\n    }\n    ```","slug":"关于net-core动态加载配置文件的小问题","published":1,"updated":"2021-06-10T09:57:40.509Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3p005z5cs9fm0pe9li","content":"<blockquote>\n<p>在我的项目当中配置文件较多，例如包括 <font color=\"blue\">项目自身的配置文件</font>、<font color=\"blue\">consul.config</font>、<font color=\"blue\">redis.cofing</font>、<font color=\"blue\">identityServer.config</font> 等等，要在项目启动的时候动态加载所有的配置文件。在我的项目中有 serverConfig 文件夹中有对应的所有的配置文件需要动态加载所有文件，在加载过程中发现按照文件路径无法加载 win10 环境。最后发现加载时不能使用绝对路径需要使用相对路径。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"需求场景\"><a class=\"markdownIt-Anchor\" href=\"#需求场景\"></a> 需求场景:</h4>\n<blockquote>\n<p>serverConfig 中有对应的一系列配置文件。其中 cnf.json 为主配置文件,里边有当前项目的运行环境的配置，还有其他的文件夹以及对应的其他的配置文件。</p>\n</blockquote>\n<pre><code>现在需要在Config Builder之前递归加载所有的配置文件。\n</code></pre>\n<h4 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\"></a> 问题:</h4>\n<blockquote>\n<p>在编码后运行发现，总是找不对对应的配置文件（win 10 环境），代码如下:</p>\n</blockquote>\n<pre><code><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">LoadConfigFiles</span>(<span class=\"params\"><span class=\"built_in\">string</span> currentPath, IConfigurationBuilder config</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> Directory.GetFiles(currentPath))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Path.GetFileName(item) != <span class=\"string\">&quot;cnf.json&quot;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(item))</span><br><span class=\"line\">                config.Add(<span class=\"keyword\">new</span> JsonConfigurationSource &#123; Path = item, Optional = <span class=\"literal\">false</span>, ReloadOnChange = <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dir = Directory.GetDirectories(currentPath);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dir != <span class=\"literal\">null</span> &amp;&amp; dir.Length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> dirItem <span class=\"keyword\">in</span> dir)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!Path.GetDirectoryName(dirItem).EndsWith(Path.Combine(FileHelper.DirectorySeparatorChar, <span class=\"string\">&quot;envConfig&quot;</span>)))</span><br><span class=\"line\">                LoadConfigFiles(dirItem, config);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n代码总是报错，提示找不对config文件\n</code></pre>\n<h4 id=\"解决\"><a class=\"markdownIt-Anchor\" href=\"#解决\"></a> 解决:</h4>\n<blockquote>\n<p>最后发现 config.add 加载的文件路径需要是相对路径而不能是绝对路径，解决代码如下:</p>\n</blockquote>\n<pre><code><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">LoadConfigFiles</span>(<span class=\"params\"><span class=\"built_in\">string</span> currentPath, IConfigurationBuilder config, <span class=\"built_in\">string</span> rootPath</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> Directory.GetFiles(currentPath))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Path.GetFileName(item) != <span class=\"string\">&quot;cnf.json&quot;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> configPath = item.Replace(rootPath, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(item))</span><br><span class=\"line\">                config.Add(<span class=\"keyword\">new</span> JsonConfigurationSource &#123; Path = configPath, Optional = <span class=\"literal\">false</span>, ReloadOnChange = <span class=\"literal\">true</span> &#125;);     <span class=\"comment\">//config.add 加载的文件 路径需要是相对路径 而不能是绝对路径</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dir = Directory.GetDirectories(currentPath);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dir != <span class=\"literal\">null</span> &amp;&amp; dir.Length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> dirItem <span class=\"keyword\">in</span> dir)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!Path.GetDirectoryName(dirItem).EndsWith(Path.Combine(FileHelper.DirectorySeparatorChar, <span class=\"string\">&quot;envConfig&quot;</span>)))</span><br><span class=\"line\">                LoadConfigFiles(dirItem, config, rootPath);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></code></pre>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>在我的项目当中配置文件较多，例如包括 <font color=\"blue\">项目自身的配置文件</font>、<font color=\"blue\">consul.config</font>、<font color=\"blue\">redis.cofing</font>、<font color=\"blue\">identityServer.config</font> 等等，要在项目启动的时候动态加载所有的配置文件。在我的项目中有 serverConfig 文件夹中有对应的所有的配置文件需要动态加载所有文件，在加载过程中发现按照文件路径无法加载 win10 环境。最后发现加载时不能使用绝对路径需要使用相对路径。</p>\n</blockquote>","more":"<h4 id=\"需求场景\"><a class=\"markdownIt-Anchor\" href=\"#需求场景\"></a> 需求场景:</h4>\n<blockquote>\n<p>serverConfig 中有对应的一系列配置文件。其中 cnf.json 为主配置文件,里边有当前项目的运行环境的配置，还有其他的文件夹以及对应的其他的配置文件。</p>\n</blockquote>\n<pre><code>现在需要在Config Builder之前递归加载所有的配置文件。\n</code></pre>\n<h4 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\"></a> 问题:</h4>\n<blockquote>\n<p>在编码后运行发现，总是找不对对应的配置文件（win 10 环境），代码如下:</p>\n</blockquote>\n<pre><code><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">LoadConfigFiles</span>(<span class=\"params\"><span class=\"built_in\">string</span> currentPath, IConfigurationBuilder config</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> Directory.GetFiles(currentPath))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Path.GetFileName(item) != <span class=\"string\">&quot;cnf.json&quot;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(item))</span><br><span class=\"line\">                config.Add(<span class=\"keyword\">new</span> JsonConfigurationSource &#123; Path = item, Optional = <span class=\"literal\">false</span>, ReloadOnChange = <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dir = Directory.GetDirectories(currentPath);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dir != <span class=\"literal\">null</span> &amp;&amp; dir.Length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> dirItem <span class=\"keyword\">in</span> dir)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!Path.GetDirectoryName(dirItem).EndsWith(Path.Combine(FileHelper.DirectorySeparatorChar, <span class=\"string\">&quot;envConfig&quot;</span>)))</span><br><span class=\"line\">                LoadConfigFiles(dirItem, config);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n代码总是报错，提示找不对config文件\n</code></pre>\n<h4 id=\"解决\"><a class=\"markdownIt-Anchor\" href=\"#解决\"></a> 解决:</h4>\n<blockquote>\n<p>最后发现 config.add 加载的文件路径需要是相对路径而不能是绝对路径，解决代码如下:</p>\n</blockquote>\n<pre><code><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">LoadConfigFiles</span>(<span class=\"params\"><span class=\"built_in\">string</span> currentPath, IConfigurationBuilder config, <span class=\"built_in\">string</span> rootPath</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> Directory.GetFiles(currentPath))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Path.GetFileName(item) != <span class=\"string\">&quot;cnf.json&quot;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> configPath = item.Replace(rootPath, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(item))</span><br><span class=\"line\">                config.Add(<span class=\"keyword\">new</span> JsonConfigurationSource &#123; Path = configPath, Optional = <span class=\"literal\">false</span>, ReloadOnChange = <span class=\"literal\">true</span> &#125;);     <span class=\"comment\">//config.add 加载的文件 路径需要是相对路径 而不能是绝对路径</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dir = Directory.GetDirectories(currentPath);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dir != <span class=\"literal\">null</span> &amp;&amp; dir.Length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> dirItem <span class=\"keyword\">in</span> dir)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!Path.GetDirectoryName(dirItem).EndsWith(Path.Combine(FileHelper.DirectorySeparatorChar, <span class=\"string\">&quot;envConfig&quot;</span>)))</span><br><span class=\"line\">                LoadConfigFiles(dirItem, config, rootPath);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></code></pre>"},{"title":"关于Mapster对象映射器的封装和使用","author":"OdinSam","abbrlink":"9cc8","date":"2021-07-15T05:10:00.000Z","_content":">说到 .NET 中的对象映射框架，大部分人的第一映像就是 AutoMapper ，而 Mapster 相对知道的人较少。但其实 Mapster 是一个高性能的对象映射框架，与 AutoMapper 相比，Mapster 在速度和内存占用方面表现更加优秀，可以在只使用1/3内存的情况下获得4倍的性能提升。\n\n<!--more-->\n\n#### 1. 基础类\n\n```csharp\npublic class Student\n{\n    public string StuName { get; set; }\n    public string StuAddress { get; set; }\n}\npublic class Student_DbModel\n{\n    public string StudentName { get; set; }\n    public string StudentAddress { get; set; }\n}\n```\n\n#### 2. Startup.cs 注册全局映射Config，也可以不注册\n\n```csharp\n// 使用 OdinInjectCore 注入\nservices.AddOdinTypeAdapter(opt =>\n    {\n        opt.ForType<ErrorCode_DbModel, ErrorCode_Model>()\n                .Map(dest => dest.ShowMessage, src => src.CodeShowMessage);\n    });\n// 使用 .net core DI 注入\nservices.AddSingleton<ITypeAdapterMapster>(provider => new TypeAdapterMapster(opt =>\n    {\n        opt.ForType<ErrorCode_DbModel, ErrorCode_Model>()\n                .Map(dest => dest.ShowMessage, src => src.CodeShowMessage);\n    }));\n```\n\n#### 3. 使用时获取全局注册Config\n\n```csharp\n// 使用 OdinInjectCore 获取 TypeAdapterMapster\nvar mapsterConfig = OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig();\n// 使用 .net core 默认 DI 获取 TypeAdapterMapster\nvar mapsterConfig = services.BuildServiceProvider().GetService<ITypeAdapterMapster>().GetConfig();\n```\n\n#### 4. 获取数据准备映射转换对象\n\n```csharp\n// 通过 SqlSugar 获取数据库中的数据\nList<Student_DbModel> stuDbModels = DbScoped.Sugar.Queryable<Student_DbModel>().ToList();\nStudent_DbModel stuDbModel = stuDbModels[0];\n```\n\n#### 5. 对象映射转换\n\n```csharp\n// 使用全局映射配置转换目标对象类型\nvar stu = stuDbModel.OdinTypeAdapterBuilder<Student_DbModel, Student>(\n        OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig()\n    );\n\n// 使用自定义映射配置转换目标对象类型\n// 需要注意的是: 因为没有传全局映射配置, 此时虽然全局配置也有 StudentName 属性映射 StuName 的配置，但是会以当前自定义配置为准\nvar stu = stuDbModel.OdinTypeAdapterBuilder<Student_DbModel, Student>(\n        opt =>\n        {\n            opt.Map(dest => dest.StuName, src => src.StudentName);\n        }\n    );\n\n// 使用自定义映射+全局映射配置转换目标对象对象类型\n// 需要注意的是: 因为全局映射配置中有 StudentName 属性映射 StuName 的配置，所以当自定义配置与全局配置都存在时，以全局配置为准\nvar stu = stuDbModel.OdinTypeAdapterBuilder<Student_DbModel, Student>(\n        opt =>\n        {\n            opt.Map(dest => dest.StuName, src => src.StudentName);\n            opt.Map(dest => dest.StuAddress, src => src.StudentAddress);\n        },\n        OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig()\n    );\n```\n\n#### 6. 集合映射转换\n\n将 stuDbModels List<ErrorCode_DbModel> 集合映射转换为 stuLst List类型的集合\n\n泛型参数说明:\n\n\n|参数名称|说明|\n|:----  |:----  |\n|Student_DbModel|映射的源类型|\n|Student|转换的目标类型|\n|List|最终转换后的集合类型|\n\n```csharp\n// 使用全局映射配置转换目标对象类型\nvar stuLst = stuDbModels.OdinTypeAdapterBuilder<Student_DbModel, Student, List<Student>>(\n        OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig()\n    );\n\n// 使用自定义映射配置转换目标对象类型\n// 需要注意的是: 因为没有传全局映射配置, 此时虽然全局配置也有 StudentName 属性映射 StuName 的配置，但是会以当前自定义配置为准\nvar stuLst = stuDbModels.OdinTypeAdapterBuilder<Student_DbModel, Student, List<Student>>(\n        opt =>\n        {\n            opt.Map(dest => dest.StuName, src => src.StudentName);\n        }\n    );\n\n// 使用自定义映射+全局映射配置转换目标对象对象类型\n// 需要注意的是: 因为全局映射配置中有 StudentName 属性映射 StuName 的配置，所以当自定义配置与全局配置都存在时，以全局配置为准\nvar stuLst = stuDbModels.OdinTypeAdapterBuilder<Student_DbModel, Student, List<Student>>(\n        opt =>\n        {\n            opt.Map(dest => dest.StuName, src => src.StudentName);\n            opt.Map(dest => dest.StuAddress, src => src.StudentAddress);\n        },\n        OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig()\n    );\n```\n\n关于 Mapster 更详细的用法，请参照 [Mapster 官网](https://github.com/MapsterMapper/Mapster)。\n\n具体封装代码详见 [Github](https://github.com/odinsam/OdinPlugs.OdinUtils)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/关于Mapster对象映射器的封装和使用.md","raw":"title: 关于Mapster对象映射器的封装和使用\nauthor: OdinSam\ntags:\n  - .Net Core\n  - Mapster\ncategories:\n  - .Net Core\nabbrlink: 9cc8\ndate: 2021-07-15 13:10:00\n---\n>说到 .NET 中的对象映射框架，大部分人的第一映像就是 AutoMapper ，而 Mapster 相对知道的人较少。但其实 Mapster 是一个高性能的对象映射框架，与 AutoMapper 相比，Mapster 在速度和内存占用方面表现更加优秀，可以在只使用1/3内存的情况下获得4倍的性能提升。\n\n<!--more-->\n\n#### 1. 基础类\n\n```csharp\npublic class Student\n{\n    public string StuName { get; set; }\n    public string StuAddress { get; set; }\n}\npublic class Student_DbModel\n{\n    public string StudentName { get; set; }\n    public string StudentAddress { get; set; }\n}\n```\n\n#### 2. Startup.cs 注册全局映射Config，也可以不注册\n\n```csharp\n// 使用 OdinInjectCore 注入\nservices.AddOdinTypeAdapter(opt =>\n    {\n        opt.ForType<ErrorCode_DbModel, ErrorCode_Model>()\n                .Map(dest => dest.ShowMessage, src => src.CodeShowMessage);\n    });\n// 使用 .net core DI 注入\nservices.AddSingleton<ITypeAdapterMapster>(provider => new TypeAdapterMapster(opt =>\n    {\n        opt.ForType<ErrorCode_DbModel, ErrorCode_Model>()\n                .Map(dest => dest.ShowMessage, src => src.CodeShowMessage);\n    }));\n```\n\n#### 3. 使用时获取全局注册Config\n\n```csharp\n// 使用 OdinInjectCore 获取 TypeAdapterMapster\nvar mapsterConfig = OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig();\n// 使用 .net core 默认 DI 获取 TypeAdapterMapster\nvar mapsterConfig = services.BuildServiceProvider().GetService<ITypeAdapterMapster>().GetConfig();\n```\n\n#### 4. 获取数据准备映射转换对象\n\n```csharp\n// 通过 SqlSugar 获取数据库中的数据\nList<Student_DbModel> stuDbModels = DbScoped.Sugar.Queryable<Student_DbModel>().ToList();\nStudent_DbModel stuDbModel = stuDbModels[0];\n```\n\n#### 5. 对象映射转换\n\n```csharp\n// 使用全局映射配置转换目标对象类型\nvar stu = stuDbModel.OdinTypeAdapterBuilder<Student_DbModel, Student>(\n        OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig()\n    );\n\n// 使用自定义映射配置转换目标对象类型\n// 需要注意的是: 因为没有传全局映射配置, 此时虽然全局配置也有 StudentName 属性映射 StuName 的配置，但是会以当前自定义配置为准\nvar stu = stuDbModel.OdinTypeAdapterBuilder<Student_DbModel, Student>(\n        opt =>\n        {\n            opt.Map(dest => dest.StuName, src => src.StudentName);\n        }\n    );\n\n// 使用自定义映射+全局映射配置转换目标对象对象类型\n// 需要注意的是: 因为全局映射配置中有 StudentName 属性映射 StuName 的配置，所以当自定义配置与全局配置都存在时，以全局配置为准\nvar stu = stuDbModel.OdinTypeAdapterBuilder<Student_DbModel, Student>(\n        opt =>\n        {\n            opt.Map(dest => dest.StuName, src => src.StudentName);\n            opt.Map(dest => dest.StuAddress, src => src.StudentAddress);\n        },\n        OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig()\n    );\n```\n\n#### 6. 集合映射转换\n\n将 stuDbModels List<ErrorCode_DbModel> 集合映射转换为 stuLst List类型的集合\n\n泛型参数说明:\n\n\n|参数名称|说明|\n|:----  |:----  |\n|Student_DbModel|映射的源类型|\n|Student|转换的目标类型|\n|List|最终转换后的集合类型|\n\n```csharp\n// 使用全局映射配置转换目标对象类型\nvar stuLst = stuDbModels.OdinTypeAdapterBuilder<Student_DbModel, Student, List<Student>>(\n        OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig()\n    );\n\n// 使用自定义映射配置转换目标对象类型\n// 需要注意的是: 因为没有传全局映射配置, 此时虽然全局配置也有 StudentName 属性映射 StuName 的配置，但是会以当前自定义配置为准\nvar stuLst = stuDbModels.OdinTypeAdapterBuilder<Student_DbModel, Student, List<Student>>(\n        opt =>\n        {\n            opt.Map(dest => dest.StuName, src => src.StudentName);\n        }\n    );\n\n// 使用自定义映射+全局映射配置转换目标对象对象类型\n// 需要注意的是: 因为全局映射配置中有 StudentName 属性映射 StuName 的配置，所以当自定义配置与全局配置都存在时，以全局配置为准\nvar stuLst = stuDbModels.OdinTypeAdapterBuilder<Student_DbModel, Student, List<Student>>(\n        opt =>\n        {\n            opt.Map(dest => dest.StuName, src => src.StudentName);\n            opt.Map(dest => dest.StuAddress, src => src.StudentAddress);\n        },\n        OdinInjectCore.GetService<ITypeAdapterMapster>().GetConfig()\n    );\n```\n\n关于 Mapster 更详细的用法，请参照 [Mapster 官网](https://github.com/MapsterMapper/Mapster)。\n\n具体封装代码详见 [Github](https://github.com/odinsam/OdinPlugs.OdinUtils)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"关于Mapster对象映射器的封装和使用","published":1,"updated":"2023-03-10T05:19:36.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza3p00625cs900l3fhg4","content":"<blockquote>\n<p>说到 .NET 中的对象映射框架，大部分人的第一映像就是 AutoMapper ，而 Mapster 相对知道的人较少。但其实 Mapster 是一个高性能的对象映射框架，与 AutoMapper 相比，Mapster 在速度和内存占用方面表现更加优秀，可以在只使用1/3内存的情况下获得4倍的性能提升。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-基础类\"><a class=\"markdownIt-Anchor\" href=\"#1-基础类\"></a> 1. 基础类</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> StuName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> StuAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Student_DbModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> StudentName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> StudentAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-startupcs-注册全局映射config也可以不注册\"><a class=\"markdownIt-Anchor\" href=\"#2-startupcs-注册全局映射config也可以不注册\"></a> 2. Startup.cs 注册全局映射Config，也可以不注册</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用 OdinInjectCore 注入</span></span><br><span class=\"line\">services.AddOdinTypeAdapter(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.ForType&lt;ErrorCode_DbModel, ErrorCode_Model&gt;()</span><br><span class=\"line\">                .Map(dest =&gt; dest.ShowMessage, src =&gt; src.CodeShowMessage);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">// 使用 .net core DI 注入</span></span><br><span class=\"line\">services.AddSingleton&lt;ITypeAdapterMapster&gt;(provider =&gt; <span class=\"keyword\">new</span> TypeAdapterMapster(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.ForType&lt;ErrorCode_DbModel, ErrorCode_Model&gt;()</span><br><span class=\"line\">                .Map(dest =&gt; dest.ShowMessage, src =&gt; src.CodeShowMessage);</span><br><span class=\"line\">    &#125;));</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-使用时获取全局注册config\"><a class=\"markdownIt-Anchor\" href=\"#3-使用时获取全局注册config\"></a> 3. 使用时获取全局注册Config</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用 OdinInjectCore 获取 TypeAdapterMapster</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mapsterConfig = OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig();</span><br><span class=\"line\"><span class=\"comment\">// 使用 .net core 默认 DI 获取 TypeAdapterMapster</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mapsterConfig = services.BuildServiceProvider().GetService&lt;ITypeAdapterMapster&gt;().GetConfig();</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-获取数据准备映射转换对象\"><a class=\"markdownIt-Anchor\" href=\"#4-获取数据准备映射转换对象\"></a> 4. 获取数据准备映射转换对象</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过 SqlSugar 获取数据库中的数据</span></span><br><span class=\"line\">List&lt;Student_DbModel&gt; stuDbModels = DbScoped.Sugar.Queryable&lt;Student_DbModel&gt;().ToList();</span><br><span class=\"line\">Student_DbModel stuDbModel = stuDbModels[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-对象映射转换\"><a class=\"markdownIt-Anchor\" href=\"#5-对象映射转换\"></a> 5. 对象映射转换</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用全局映射配置转换目标对象类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stu = stuDbModel.OdinTypeAdapterBuilder&lt;Student_DbModel, Student&gt;(</span><br><span class=\"line\">        OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig()</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用自定义映射配置转换目标对象类型</span></span><br><span class=\"line\"><span class=\"comment\">// 需要注意的是: 因为没有传全局映射配置, 此时虽然全局配置也有 StudentName 属性映射 StuName 的配置，但是会以当前自定义配置为准</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stu = stuDbModel.OdinTypeAdapterBuilder&lt;Student_DbModel, Student&gt;(</span><br><span class=\"line\">        opt =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuName, src =&gt; src.StudentName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用自定义映射+全局映射配置转换目标对象对象类型</span></span><br><span class=\"line\"><span class=\"comment\">// 需要注意的是: 因为全局映射配置中有 StudentName 属性映射 StuName 的配置，所以当自定义配置与全局配置都存在时，以全局配置为准</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stu = stuDbModel.OdinTypeAdapterBuilder&lt;Student_DbModel, Student&gt;(</span><br><span class=\"line\">        opt =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuName, src =&gt; src.StudentName);</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuAddress, src =&gt; src.StudentAddress);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig()</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-集合映射转换\"><a class=\"markdownIt-Anchor\" href=\"#6-集合映射转换\"></a> 6. 集合映射转换</h4>\n<p>将 stuDbModels List&lt;ErrorCode_DbModel&gt; 集合映射转换为 stuLst List类型的集合</p>\n<p>泛型参数说明:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名称</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Student_DbModel</td>\n<td style=\"text-align:left\">映射的源类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Student</td>\n<td style=\"text-align:left\">转换的目标类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">List</td>\n<td style=\"text-align:left\">最终转换后的集合类型</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用全局映射配置转换目标对象类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stuLst = stuDbModels.OdinTypeAdapterBuilder&lt;Student_DbModel, Student, List&lt;Student&gt;&gt;(</span><br><span class=\"line\">        OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig()</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用自定义映射配置转换目标对象类型</span></span><br><span class=\"line\"><span class=\"comment\">// 需要注意的是: 因为没有传全局映射配置, 此时虽然全局配置也有 StudentName 属性映射 StuName 的配置，但是会以当前自定义配置为准</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stuLst = stuDbModels.OdinTypeAdapterBuilder&lt;Student_DbModel, Student, List&lt;Student&gt;&gt;(</span><br><span class=\"line\">        opt =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuName, src =&gt; src.StudentName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用自定义映射+全局映射配置转换目标对象对象类型</span></span><br><span class=\"line\"><span class=\"comment\">// 需要注意的是: 因为全局映射配置中有 StudentName 属性映射 StuName 的配置，所以当自定义配置与全局配置都存在时，以全局配置为准</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stuLst = stuDbModels.OdinTypeAdapterBuilder&lt;Student_DbModel, Student, List&lt;Student&gt;&gt;(</span><br><span class=\"line\">        opt =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuName, src =&gt; src.StudentName);</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuAddress, src =&gt; src.StudentAddress);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig()</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n<p>关于 Mapster 更详细的用法，请参照 <a href=\"https://github.com/MapsterMapper/Mapster\">Mapster 官网</a>。</p>\n<p>具体封装代码详见 <a href=\"https://github.com/odinsam/OdinPlugs.OdinUtils\">Github</a></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>说到 .NET 中的对象映射框架，大部分人的第一映像就是 AutoMapper ，而 Mapster 相对知道的人较少。但其实 Mapster 是一个高性能的对象映射框架，与 AutoMapper 相比，Mapster 在速度和内存占用方面表现更加优秀，可以在只使用1/3内存的情况下获得4倍的性能提升。</p>\n</blockquote>","more":"<h4 id=\"1-基础类\"><a class=\"markdownIt-Anchor\" href=\"#1-基础类\"></a> 1. 基础类</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Student</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> StuName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> StuAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Student_DbModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> StudentName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> StudentAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-startupcs-注册全局映射config也可以不注册\"><a class=\"markdownIt-Anchor\" href=\"#2-startupcs-注册全局映射config也可以不注册\"></a> 2. Startup.cs 注册全局映射Config，也可以不注册</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用 OdinInjectCore 注入</span></span><br><span class=\"line\">services.AddOdinTypeAdapter(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.ForType&lt;ErrorCode_DbModel, ErrorCode_Model&gt;()</span><br><span class=\"line\">                .Map(dest =&gt; dest.ShowMessage, src =&gt; src.CodeShowMessage);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"comment\">// 使用 .net core DI 注入</span></span><br><span class=\"line\">services.AddSingleton&lt;ITypeAdapterMapster&gt;(provider =&gt; <span class=\"keyword\">new</span> TypeAdapterMapster(opt =&gt;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        opt.ForType&lt;ErrorCode_DbModel, ErrorCode_Model&gt;()</span><br><span class=\"line\">                .Map(dest =&gt; dest.ShowMessage, src =&gt; src.CodeShowMessage);</span><br><span class=\"line\">    &#125;));</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-使用时获取全局注册config\"><a class=\"markdownIt-Anchor\" href=\"#3-使用时获取全局注册config\"></a> 3. 使用时获取全局注册Config</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用 OdinInjectCore 获取 TypeAdapterMapster</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mapsterConfig = OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig();</span><br><span class=\"line\"><span class=\"comment\">// 使用 .net core 默认 DI 获取 TypeAdapterMapster</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mapsterConfig = services.BuildServiceProvider().GetService&lt;ITypeAdapterMapster&gt;().GetConfig();</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-获取数据准备映射转换对象\"><a class=\"markdownIt-Anchor\" href=\"#4-获取数据准备映射转换对象\"></a> 4. 获取数据准备映射转换对象</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过 SqlSugar 获取数据库中的数据</span></span><br><span class=\"line\">List&lt;Student_DbModel&gt; stuDbModels = DbScoped.Sugar.Queryable&lt;Student_DbModel&gt;().ToList();</span><br><span class=\"line\">Student_DbModel stuDbModel = stuDbModels[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-对象映射转换\"><a class=\"markdownIt-Anchor\" href=\"#5-对象映射转换\"></a> 5. 对象映射转换</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用全局映射配置转换目标对象类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stu = stuDbModel.OdinTypeAdapterBuilder&lt;Student_DbModel, Student&gt;(</span><br><span class=\"line\">        OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig()</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用自定义映射配置转换目标对象类型</span></span><br><span class=\"line\"><span class=\"comment\">// 需要注意的是: 因为没有传全局映射配置, 此时虽然全局配置也有 StudentName 属性映射 StuName 的配置，但是会以当前自定义配置为准</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stu = stuDbModel.OdinTypeAdapterBuilder&lt;Student_DbModel, Student&gt;(</span><br><span class=\"line\">        opt =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuName, src =&gt; src.StudentName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用自定义映射+全局映射配置转换目标对象对象类型</span></span><br><span class=\"line\"><span class=\"comment\">// 需要注意的是: 因为全局映射配置中有 StudentName 属性映射 StuName 的配置，所以当自定义配置与全局配置都存在时，以全局配置为准</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stu = stuDbModel.OdinTypeAdapterBuilder&lt;Student_DbModel, Student&gt;(</span><br><span class=\"line\">        opt =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuName, src =&gt; src.StudentName);</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuAddress, src =&gt; src.StudentAddress);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig()</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-集合映射转换\"><a class=\"markdownIt-Anchor\" href=\"#6-集合映射转换\"></a> 6. 集合映射转换</h4>\n<p>将 stuDbModels List&lt;ErrorCode_DbModel&gt; 集合映射转换为 stuLst List类型的集合</p>\n<p>泛型参数说明:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名称</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Student_DbModel</td>\n<td style=\"text-align:left\">映射的源类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Student</td>\n<td style=\"text-align:left\">转换的目标类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">List</td>\n<td style=\"text-align:left\">最终转换后的集合类型</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用全局映射配置转换目标对象类型</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stuLst = stuDbModels.OdinTypeAdapterBuilder&lt;Student_DbModel, Student, List&lt;Student&gt;&gt;(</span><br><span class=\"line\">        OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig()</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用自定义映射配置转换目标对象类型</span></span><br><span class=\"line\"><span class=\"comment\">// 需要注意的是: 因为没有传全局映射配置, 此时虽然全局配置也有 StudentName 属性映射 StuName 的配置，但是会以当前自定义配置为准</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stuLst = stuDbModels.OdinTypeAdapterBuilder&lt;Student_DbModel, Student, List&lt;Student&gt;&gt;(</span><br><span class=\"line\">        opt =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuName, src =&gt; src.StudentName);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用自定义映射+全局映射配置转换目标对象对象类型</span></span><br><span class=\"line\"><span class=\"comment\">// 需要注意的是: 因为全局映射配置中有 StudentName 属性映射 StuName 的配置，所以当自定义配置与全局配置都存在时，以全局配置为准</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> stuLst = stuDbModels.OdinTypeAdapterBuilder&lt;Student_DbModel, Student, List&lt;Student&gt;&gt;(</span><br><span class=\"line\">        opt =&gt;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuName, src =&gt; src.StudentName);</span><br><span class=\"line\">            opt.Map(dest =&gt; dest.StuAddress, src =&gt; src.StudentAddress);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        OdinInjectCore.GetService&lt;ITypeAdapterMapster&gt;().GetConfig()</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n<p>关于 Mapster 更详细的用法，请参照 <a href=\"https://github.com/MapsterMapper/Mapster\">Mapster 官网</a>。</p>\n<p>具体封装代码详见 <a href=\"https://github.com/odinsam/OdinPlugs.OdinUtils\">Github</a></p>"},{"title":"利用Canal集合RabbitMQ实现数据和缓存同步","author":"OdinSam","abbrlink":"a3b9","date":"2021-06-08T21:34:00.000Z","_content":"> Canal的主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费。他可以模拟 MySQL slave 的交互协议，伪装自己为 MySQL slave ，向 MySQL master 发送 dump 协议。MySQL master收到dump请求，开始推送 binary log 给 slave (即canal)，canal解析binary log 对象(原始为 byte 流)。\n\n<!-- more -->\n\n#### Canal介绍\n\n> Canal 的 Github：https://github.com/alibaba/canal 里边有详细介绍说明以及安装方法。具体不在叙述。\n\n#### MySql改动\n\n> 首先需要给mysql创建对应的canal用户\n\n```sql\nCREATE USER canal IDENTIFIED BY 'canal';\nGRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'canal'@'%';\nFLUSH PRIVILEGES;\n```\n> 其次修改 my.cnf 文件并 <font color=\"red\">重启数据库</font>\n\n```ini\n[mysqld]\nlog-bin=mysql-bin # 开启 binlog\nbinlog-format=ROW # 选择 ROW 模式\nserver_id=1 # 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复\n```\n\n#### Canal配置\n\n> Canal单机环境(开发代码测试)主要配置两个文件，分别是 conf/canal.properties 文件和 conf/example/instance.properties 文件。具体配置如下:\n\n  canal.properties\n\n```config\n##################################################################################################\n####### 这部分结构是配置文件自带的 只需要写清楚即可，其中 exchange 为 rabbitMQ的exchange的名字\n####### username 和 password 是 rabbitMQ 的 用户名和密码 (我自己新建了一个rabbitMQ用户)\n##################################################################################################\n    \n#########                   RabbitMQ         #############\n##################################################\nrabbitmq.host = 127.0.0.1\nrabbitmq.virtual.host = /\nrabbitmq.exchange = canal-exchange\nrabbitmq.username = canalConsumer\nrabbitmq.password = canalConsumer\nrabbitmq.deliveryMode =\n```\n   \n   最为主要的是要找到配置文件中 <font color=\"red\">canal.serverMode = rabbitMQ</font> 他的默认值是 tcp 切记要改为 <font color=\"red\">rabbitMQ</font>\n\n\n\t\n  instance.properties\n\n```config\ncanal.instance.master.address=127.0.0.1:3306  #数据库的 ip:port\n    \ncanal.instance.dbUsername=canal \t#数据库的 用户名\ncanal.instance.dbPassword=173Canal~\t#数据库的 密码 \n    \ncanal.instance.tsdb.dir=${canal.file.data.dir:../conf}/${canal.instance.destination:}\ncanal.instance.tsdb.url=jdbc:h2:${canal.instance.tsdb.dir}/h2;CACHE_SIZE=1000;MODE=MYSQL;\n#canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb\n    \n# canal.instance.filter.regex=.*\\\\..*\t# https://github.com/alibaba/canal/wiki/AdminGuide 搜索 canal.instance.filter.regex 有详细说明\ncanal.instance.filter.regex=db_OdinOIS.Logs  # 要监控的库和表  https://github.com/alibaba/canal/wiki/AdminGuide 搜索 \ncanal.instance.filter.regex 有详细说明\n    \ncanal.mq.topic=canal-routingkey # rabbitMQ 创建 queues 时的 routing key 的值\n```\n\n#### 数据解析\n\n> 至此如果以上步骤都没有问题的话，执行 ./bin/startup.sh 启动，并在你监控的表中设置增量数据，rabbitMQ 就会有对应数据。获取到的数据为json格式，具体说明如下:\n\n```json\n{\n\t// data内为获取到的增量数据 key是数据库对应的字段 value是数据库的值\n\t\"data\": [{\n\t\t\"id\": \"1487\",\n\t\t\"Timestamp\": \"2021-06-09 05:23:12.538+08:00\",\n\t\t\"Level\": \"Information\",\n\t\t\"Message\": \"Entity Framework Core\",\n\t\t\"Exception\": null,\n\t\t\"Properties\": \"\",\n\t\t\"_ts\": null\n\t}],\n\t// 库名\n\t\"database\": \"db_OdinOIS\",\n\t\"es\": 1623187400000,\n\t\"id\": 1,\n\t\"isDdl\": false,\n\t// 字段对应mysql的数据类型\n\t\"mysqlType\": {\n\t\t\"id\": \"int\",\n\t\t\"Timestamp\": \"varchar(100)\",\n\t\t\"Level\": \"varchar(15)\",\n\t\t\"Message\": \"text\",\n\t\t\"Exception\": \"text\",\n\t\t\"Properties\": \"text\",\n\t\t\"_ts\": \"timestamp\"\n\t},\n\t// 如果是 update 操作这里会是更新前的数据\n\t\"old\": null,\n\t// 主键\n\t\"pkNames\": [\"id\"],\n\t\"sql\": \"\",\n\t\"sqlType\": {\n\t\t\"id\": 4,\n\t\t\"Timestamp\": 12,\n\t\t\"Level\": 12,\n\t\t\"Message\": 2005,\n\t\t\"Exception\": -4,\n\t\t\"Properties\": 2005,\n\t\t\"_ts\": 93\n\t},\n\t// 表名字\n\t\"table\": \"Logs\",\n\t// 时间戳\n\t\"ts\": 1623187530269,\n\t// 操作类型\n\t\"type\": \"INSERT\"\n}\n```\n   \n这样我们就可以利用代码从 rabbitMQ 中消费对应的信息，然后再做其他操作。当然也可以利用 Canal 结合 redis 实现 mysql 和缓存数据同步，在利用CacheManager类库，利用redis做挡板，就可以同时实现 redis 缓存和内存缓存同步。这样整个分布式项目就可以实现读写分离、缓存同步。","source":"_posts/利用Canal集合RabbitMQ实现数据和缓存同步.md","raw":"title: 利用Canal集合RabbitMQ实现数据和缓存同步\nauthor: OdinSam\ntags:\n  - Mysql\n  - .Net Core\n  - Canal\n  - RabbitMQ\ncategories:\n  - .Net Core\n  - RabbitMQ\n  - MySql\n  - Canal\n  - ''\nabbrlink: a3b9\ndate: 2021-06-09 05:34:00\n---\n> Canal的主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费。他可以模拟 MySQL slave 的交互协议，伪装自己为 MySQL slave ，向 MySQL master 发送 dump 协议。MySQL master收到dump请求，开始推送 binary log 给 slave (即canal)，canal解析binary log 对象(原始为 byte 流)。\n\n<!-- more -->\n\n#### Canal介绍\n\n> Canal 的 Github：https://github.com/alibaba/canal 里边有详细介绍说明以及安装方法。具体不在叙述。\n\n#### MySql改动\n\n> 首先需要给mysql创建对应的canal用户\n\n```sql\nCREATE USER canal IDENTIFIED BY 'canal';\nGRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'canal'@'%';\nFLUSH PRIVILEGES;\n```\n> 其次修改 my.cnf 文件并 <font color=\"red\">重启数据库</font>\n\n```ini\n[mysqld]\nlog-bin=mysql-bin # 开启 binlog\nbinlog-format=ROW # 选择 ROW 模式\nserver_id=1 # 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复\n```\n\n#### Canal配置\n\n> Canal单机环境(开发代码测试)主要配置两个文件，分别是 conf/canal.properties 文件和 conf/example/instance.properties 文件。具体配置如下:\n\n  canal.properties\n\n```config\n##################################################################################################\n####### 这部分结构是配置文件自带的 只需要写清楚即可，其中 exchange 为 rabbitMQ的exchange的名字\n####### username 和 password 是 rabbitMQ 的 用户名和密码 (我自己新建了一个rabbitMQ用户)\n##################################################################################################\n    \n#########                   RabbitMQ         #############\n##################################################\nrabbitmq.host = 127.0.0.1\nrabbitmq.virtual.host = /\nrabbitmq.exchange = canal-exchange\nrabbitmq.username = canalConsumer\nrabbitmq.password = canalConsumer\nrabbitmq.deliveryMode =\n```\n   \n   最为主要的是要找到配置文件中 <font color=\"red\">canal.serverMode = rabbitMQ</font> 他的默认值是 tcp 切记要改为 <font color=\"red\">rabbitMQ</font>\n\n\n\t\n  instance.properties\n\n```config\ncanal.instance.master.address=127.0.0.1:3306  #数据库的 ip:port\n    \ncanal.instance.dbUsername=canal \t#数据库的 用户名\ncanal.instance.dbPassword=173Canal~\t#数据库的 密码 \n    \ncanal.instance.tsdb.dir=${canal.file.data.dir:../conf}/${canal.instance.destination:}\ncanal.instance.tsdb.url=jdbc:h2:${canal.instance.tsdb.dir}/h2;CACHE_SIZE=1000;MODE=MYSQL;\n#canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb\n    \n# canal.instance.filter.regex=.*\\\\..*\t# https://github.com/alibaba/canal/wiki/AdminGuide 搜索 canal.instance.filter.regex 有详细说明\ncanal.instance.filter.regex=db_OdinOIS.Logs  # 要监控的库和表  https://github.com/alibaba/canal/wiki/AdminGuide 搜索 \ncanal.instance.filter.regex 有详细说明\n    \ncanal.mq.topic=canal-routingkey # rabbitMQ 创建 queues 时的 routing key 的值\n```\n\n#### 数据解析\n\n> 至此如果以上步骤都没有问题的话，执行 ./bin/startup.sh 启动，并在你监控的表中设置增量数据，rabbitMQ 就会有对应数据。获取到的数据为json格式，具体说明如下:\n\n```json\n{\n\t// data内为获取到的增量数据 key是数据库对应的字段 value是数据库的值\n\t\"data\": [{\n\t\t\"id\": \"1487\",\n\t\t\"Timestamp\": \"2021-06-09 05:23:12.538+08:00\",\n\t\t\"Level\": \"Information\",\n\t\t\"Message\": \"Entity Framework Core\",\n\t\t\"Exception\": null,\n\t\t\"Properties\": \"\",\n\t\t\"_ts\": null\n\t}],\n\t// 库名\n\t\"database\": \"db_OdinOIS\",\n\t\"es\": 1623187400000,\n\t\"id\": 1,\n\t\"isDdl\": false,\n\t// 字段对应mysql的数据类型\n\t\"mysqlType\": {\n\t\t\"id\": \"int\",\n\t\t\"Timestamp\": \"varchar(100)\",\n\t\t\"Level\": \"varchar(15)\",\n\t\t\"Message\": \"text\",\n\t\t\"Exception\": \"text\",\n\t\t\"Properties\": \"text\",\n\t\t\"_ts\": \"timestamp\"\n\t},\n\t// 如果是 update 操作这里会是更新前的数据\n\t\"old\": null,\n\t// 主键\n\t\"pkNames\": [\"id\"],\n\t\"sql\": \"\",\n\t\"sqlType\": {\n\t\t\"id\": 4,\n\t\t\"Timestamp\": 12,\n\t\t\"Level\": 12,\n\t\t\"Message\": 2005,\n\t\t\"Exception\": -4,\n\t\t\"Properties\": 2005,\n\t\t\"_ts\": 93\n\t},\n\t// 表名字\n\t\"table\": \"Logs\",\n\t// 时间戳\n\t\"ts\": 1623187530269,\n\t// 操作类型\n\t\"type\": \"INSERT\"\n}\n```\n   \n这样我们就可以利用代码从 rabbitMQ 中消费对应的信息，然后再做其他操作。当然也可以利用 Canal 结合 redis 实现 mysql 和缓存数据同步，在利用CacheManager类库，利用redis做挡板，就可以同时实现 redis 缓存和内存缓存同步。这样整个分布式项目就可以实现读写分离、缓存同步。","slug":"利用Canal集合RabbitMQ实现数据和缓存同步","published":1,"updated":"2023-03-10T05:23:19.045Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza5400fc5cs9ae031jj5","content":"<blockquote>\n<p>Canal的主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费。他可以模拟 MySQL slave 的交互协议，伪装自己为 MySQL slave ，向 MySQL master 发送 dump 协议。MySQL master收到dump请求，开始推送 binary log 给 slave (即canal)，canal解析binary log 对象(原始为 byte 流)。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"canal介绍\"><a class=\"markdownIt-Anchor\" href=\"#canal介绍\"></a> Canal介绍</h4>\n<blockquote>\n<p>Canal 的 Github：<a href=\"https://github.com/alibaba/canal\">https://github.com/alibaba/canal</a> 里边有详细介绍说明以及安装方法。具体不在叙述。</p>\n</blockquote>\n<h4 id=\"mysql改动\"><a class=\"markdownIt-Anchor\" href=\"#mysql改动\"></a> MySql改动</h4>\n<blockquote>\n<p>首先需要给mysql创建对应的canal用户</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> canal IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;canal&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">SELECT</span>, REPLICATION SLAVE, REPLICATION CLIENT <span class=\"keyword\">ON</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> <span class=\"string\">&#x27;canal&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>其次修改 my.cnf 文件并 <font color=\"red\">重启数据库</font></p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"attr\">log-bin</span>=mysql-bin <span class=\"comment\"># 开启 binlog</span></span><br><span class=\"line\"><span class=\"attr\">binlog-format</span>=ROW <span class=\"comment\"># 选择 ROW 模式</span></span><br><span class=\"line\"><span class=\"attr\">server_id</span>=<span class=\"number\">1</span> <span class=\"comment\"># 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"canal配置\"><a class=\"markdownIt-Anchor\" href=\"#canal配置\"></a> Canal配置</h4>\n<blockquote>\n<p>Canal单机环境(开发代码测试)主要配置两个文件，分别是 conf/canal.properties 文件和 conf/example/instance.properties 文件。具体配置如下:</p>\n</blockquote>\n<p>canal.properties</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##################################################################################################</span><br><span class=\"line\">####### 这部分结构是配置文件自带的 只需要写清楚即可，其中 exchange 为 rabbitMQ的exchange的名字</span><br><span class=\"line\">####### username 和 password 是 rabbitMQ 的 用户名和密码 (我自己新建了一个rabbitMQ用户)</span><br><span class=\"line\">##################################################################################################</span><br><span class=\"line\">    </span><br><span class=\"line\">#########                   RabbitMQ         #############</span><br><span class=\"line\">##################################################</span><br><span class=\"line\">rabbitmq.host = 127.0.0.1</span><br><span class=\"line\">rabbitmq.virtual.host = /</span><br><span class=\"line\">rabbitmq.exchange = canal-exchange</span><br><span class=\"line\">rabbitmq.username = canalConsumer</span><br><span class=\"line\">rabbitmq.password = canalConsumer</span><br><span class=\"line\">rabbitmq.deliveryMode =</span><br></pre></td></tr></table></figure>\n<p>最为主要的是要找到配置文件中 <font color=\"red\">canal.serverMode = rabbitMQ</font> 他的默认值是 tcp 切记要改为 <font color=\"red\">rabbitMQ</font></p>\n<p>instance.properties</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canal.instance.master.address=127.0.0.1:3306  #数据库的 ip:port</span><br><span class=\"line\">    </span><br><span class=\"line\">canal.instance.dbUsername=canal \t#数据库的 用户名</span><br><span class=\"line\">canal.instance.dbPassword=173Canal~\t#数据库的 密码 </span><br><span class=\"line\">    </span><br><span class=\"line\">canal.instance.tsdb.dir=$&#123;canal.file.data.dir:../conf&#125;/$&#123;canal.instance.destination:&#125;</span><br><span class=\"line\">canal.instance.tsdb.url=jdbc:h2:$&#123;canal.instance.tsdb.dir&#125;/h2;CACHE_SIZE=1000;MODE=MYSQL;</span><br><span class=\"line\">#canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb</span><br><span class=\"line\">    </span><br><span class=\"line\"># canal.instance.filter.regex=.*\\\\..*\t# https://github.com/alibaba/canal/wiki/AdminGuide 搜索 canal.instance.filter.regex 有详细说明</span><br><span class=\"line\">canal.instance.filter.regex=db_OdinOIS.Logs  # 要监控的库和表  https://github.com/alibaba/canal/wiki/AdminGuide 搜索 </span><br><span class=\"line\">canal.instance.filter.regex 有详细说明</span><br><span class=\"line\">    </span><br><span class=\"line\">canal.mq.topic=canal-routingkey # rabbitMQ 创建 queues 时的 routing key 的值</span><br></pre></td></tr></table></figure>\n<h4 id=\"数据解析\"><a class=\"markdownIt-Anchor\" href=\"#数据解析\"></a> 数据解析</h4>\n<blockquote>\n<p>至此如果以上步骤都没有问题的话，执行 ./bin/startup.sh 启动，并在你监控的表中设置增量数据，rabbitMQ 就会有对应数据。获取到的数据为json格式，具体说明如下:</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// data内为获取到的增量数据 key是数据库对应的字段 value是数据库的值</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;data&quot;</span>: [&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1487&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Timestamp&quot;</span>: <span class=\"string\">&quot;2021-06-09 05:23:12.538+08:00&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Level&quot;</span>: <span class=\"string\">&quot;Information&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Message&quot;</span>: <span class=\"string\">&quot;Entity Framework Core&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Exception&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Properties&quot;</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;_ts&quot;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">\t&#125;],</span><br><span class=\"line\">\t<span class=\"comment\">// 库名</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;database&quot;</span>: <span class=\"string\">&quot;db_OdinOIS&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;es&quot;</span>: <span class=\"number\">1623187400000</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;isDdl&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 字段对应mysql的数据类型</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;mysqlType&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;int&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Timestamp&quot;</span>: <span class=\"string\">&quot;varchar(100)&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Level&quot;</span>: <span class=\"string\">&quot;varchar(15)&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Message&quot;</span>: <span class=\"string\">&quot;text&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Exception&quot;</span>: <span class=\"string\">&quot;text&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Properties&quot;</span>: <span class=\"string\">&quot;text&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;_ts&quot;</span>: <span class=\"string\">&quot;timestamp&quot;</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 如果是 update 操作这里会是更新前的数据</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;old&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 主键</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;pkNames&quot;</span>: [<span class=\"string\">&quot;id&quot;</span>],</span><br><span class=\"line\">\t<span class=\"attr\">&quot;sql&quot;</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;sqlType&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Timestamp&quot;</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Level&quot;</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Message&quot;</span>: <span class=\"number\">2005</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Exception&quot;</span>: <span class=\"number\">-4</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Properties&quot;</span>: <span class=\"number\">2005</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;_ts&quot;</span>: <span class=\"number\">93</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 表名字</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;table&quot;</span>: <span class=\"string\">&quot;Logs&quot;</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 时间戳</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;ts&quot;</span>: <span class=\"number\">1623187530269</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 操作类型</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;INSERT&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以利用代码从 rabbitMQ 中消费对应的信息，然后再做其他操作。当然也可以利用 Canal 结合 redis 实现 mysql 和缓存数据同步，在利用CacheManager类库，利用redis做挡板，就可以同时实现 redis 缓存和内存缓存同步。这样整个分布式项目就可以实现读写分离、缓存同步。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Canal的主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费。他可以模拟 MySQL slave 的交互协议，伪装自己为 MySQL slave ，向 MySQL master 发送 dump 协议。MySQL master收到dump请求，开始推送 binary log 给 slave (即canal)，canal解析binary log 对象(原始为 byte 流)。</p>\n</blockquote>","more":"<h4 id=\"canal介绍\"><a class=\"markdownIt-Anchor\" href=\"#canal介绍\"></a> Canal介绍</h4>\n<blockquote>\n<p>Canal 的 Github：<a href=\"https://github.com/alibaba/canal\">https://github.com/alibaba/canal</a> 里边有详细介绍说明以及安装方法。具体不在叙述。</p>\n</blockquote>\n<h4 id=\"mysql改动\"><a class=\"markdownIt-Anchor\" href=\"#mysql改动\"></a> MySql改动</h4>\n<blockquote>\n<p>首先需要给mysql创建对应的canal用户</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> canal IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;canal&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">SELECT</span>, REPLICATION SLAVE, REPLICATION CLIENT <span class=\"keyword\">ON</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> <span class=\"string\">&#x27;canal&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>其次修改 my.cnf 文件并 <font color=\"red\">重启数据库</font></p>\n</blockquote>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"attr\">log-bin</span>=mysql-bin <span class=\"comment\"># 开启 binlog</span></span><br><span class=\"line\"><span class=\"attr\">binlog-format</span>=ROW <span class=\"comment\"># 选择 ROW 模式</span></span><br><span class=\"line\"><span class=\"attr\">server_id</span>=<span class=\"number\">1</span> <span class=\"comment\"># 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"canal配置\"><a class=\"markdownIt-Anchor\" href=\"#canal配置\"></a> Canal配置</h4>\n<blockquote>\n<p>Canal单机环境(开发代码测试)主要配置两个文件，分别是 conf/canal.properties 文件和 conf/example/instance.properties 文件。具体配置如下:</p>\n</blockquote>\n<p>canal.properties</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##################################################################################################</span><br><span class=\"line\">####### 这部分结构是配置文件自带的 只需要写清楚即可，其中 exchange 为 rabbitMQ的exchange的名字</span><br><span class=\"line\">####### username 和 password 是 rabbitMQ 的 用户名和密码 (我自己新建了一个rabbitMQ用户)</span><br><span class=\"line\">##################################################################################################</span><br><span class=\"line\">    </span><br><span class=\"line\">#########                   RabbitMQ         #############</span><br><span class=\"line\">##################################################</span><br><span class=\"line\">rabbitmq.host = 127.0.0.1</span><br><span class=\"line\">rabbitmq.virtual.host = /</span><br><span class=\"line\">rabbitmq.exchange = canal-exchange</span><br><span class=\"line\">rabbitmq.username = canalConsumer</span><br><span class=\"line\">rabbitmq.password = canalConsumer</span><br><span class=\"line\">rabbitmq.deliveryMode =</span><br></pre></td></tr></table></figure>\n<p>最为主要的是要找到配置文件中 <font color=\"red\">canal.serverMode = rabbitMQ</font> 他的默认值是 tcp 切记要改为 <font color=\"red\">rabbitMQ</font></p>\n<p>instance.properties</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canal.instance.master.address=127.0.0.1:3306  #数据库的 ip:port</span><br><span class=\"line\">    </span><br><span class=\"line\">canal.instance.dbUsername=canal \t#数据库的 用户名</span><br><span class=\"line\">canal.instance.dbPassword=173Canal~\t#数据库的 密码 </span><br><span class=\"line\">    </span><br><span class=\"line\">canal.instance.tsdb.dir=$&#123;canal.file.data.dir:../conf&#125;/$&#123;canal.instance.destination:&#125;</span><br><span class=\"line\">canal.instance.tsdb.url=jdbc:h2:$&#123;canal.instance.tsdb.dir&#125;/h2;CACHE_SIZE=1000;MODE=MYSQL;</span><br><span class=\"line\">#canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb</span><br><span class=\"line\">    </span><br><span class=\"line\"># canal.instance.filter.regex=.*\\\\..*\t# https://github.com/alibaba/canal/wiki/AdminGuide 搜索 canal.instance.filter.regex 有详细说明</span><br><span class=\"line\">canal.instance.filter.regex=db_OdinOIS.Logs  # 要监控的库和表  https://github.com/alibaba/canal/wiki/AdminGuide 搜索 </span><br><span class=\"line\">canal.instance.filter.regex 有详细说明</span><br><span class=\"line\">    </span><br><span class=\"line\">canal.mq.topic=canal-routingkey # rabbitMQ 创建 queues 时的 routing key 的值</span><br></pre></td></tr></table></figure>\n<h4 id=\"数据解析\"><a class=\"markdownIt-Anchor\" href=\"#数据解析\"></a> 数据解析</h4>\n<blockquote>\n<p>至此如果以上步骤都没有问题的话，执行 ./bin/startup.sh 启动，并在你监控的表中设置增量数据，rabbitMQ 就会有对应数据。获取到的数据为json格式，具体说明如下:</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// data内为获取到的增量数据 key是数据库对应的字段 value是数据库的值</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;data&quot;</span>: [&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;1487&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Timestamp&quot;</span>: <span class=\"string\">&quot;2021-06-09 05:23:12.538+08:00&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Level&quot;</span>: <span class=\"string\">&quot;Information&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Message&quot;</span>: <span class=\"string\">&quot;Entity Framework Core&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Exception&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Properties&quot;</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;_ts&quot;</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">\t&#125;],</span><br><span class=\"line\">\t<span class=\"comment\">// 库名</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;database&quot;</span>: <span class=\"string\">&quot;db_OdinOIS&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;es&quot;</span>: <span class=\"number\">1623187400000</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;isDdl&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 字段对应mysql的数据类型</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;mysqlType&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;int&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Timestamp&quot;</span>: <span class=\"string\">&quot;varchar(100)&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Level&quot;</span>: <span class=\"string\">&quot;varchar(15)&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Message&quot;</span>: <span class=\"string\">&quot;text&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Exception&quot;</span>: <span class=\"string\">&quot;text&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Properties&quot;</span>: <span class=\"string\">&quot;text&quot;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;_ts&quot;</span>: <span class=\"string\">&quot;timestamp&quot;</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 如果是 update 操作这里会是更新前的数据</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;old&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 主键</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;pkNames&quot;</span>: [<span class=\"string\">&quot;id&quot;</span>],</span><br><span class=\"line\">\t<span class=\"attr\">&quot;sql&quot;</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;sqlType&quot;</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;id&quot;</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Timestamp&quot;</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Level&quot;</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Message&quot;</span>: <span class=\"number\">2005</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Exception&quot;</span>: <span class=\"number\">-4</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;Properties&quot;</span>: <span class=\"number\">2005</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;_ts&quot;</span>: <span class=\"number\">93</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 表名字</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;table&quot;</span>: <span class=\"string\">&quot;Logs&quot;</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 时间戳</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;ts&quot;</span>: <span class=\"number\">1623187530269</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 操作类型</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;INSERT&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以利用代码从 rabbitMQ 中消费对应的信息，然后再做其他操作。当然也可以利用 Canal 结合 redis 实现 mysql 和缓存数据同步，在利用CacheManager类库，利用redis做挡板，就可以同时实现 redis 缓存和内存缓存同步。这样整个分布式项目就可以实现读写分离、缓存同步。</p>"},{"title":"基于HttpClientFactory的封装和使用","author":"OdinSam","abbrlink":"4ff6","date":"2021-06-10T22:08:00.000Z","_content":"> .Net Core2.0 版本以前 HttpClient 还是挺坑的，我们需要操心怎么建立如何释放，而且代码质量不好还会影响 HttpClient 的性能和访问速度。2.0版本以后 HttpClientFactory 的出现解决了我们所有的痛点，我们不须要关心如何建立 HttpClient 又如何释放它。经过它能够建立具备特定业务的HttpClient，并且能够很友好的和 DI 容器结合使用。\n\n<!--more-->\n\n\n#### 1. 首先在 Startup.cs 文件的 ConfigureServices 方法中注入 HttpClient\n    \n```csharp\nvar handler = new HttpClientHandler();\nforeach (var cerItem in _Options.SslCers)\n{\n    if (!string.IsNullOrEmpty(cerItem.CerPath))\n    {\n        var clientCertificate = new X509Certificate2(cerItem.CerPath, cerItem.CerPassword);\n        handler.ClientCertificates.Add(clientCertificate);\n    }\n}\nvar handlerWithCer = new HttpClientHandler();\nforeach (var cerItem in _Options.SslCers)\n{\n    if (!string.IsNullOrEmpty(cerItem.CerPath))\n    {\n        var clientCertificate = new X509Certificate2(cerItem.CerPath, cerItem.CerPassword);\n        handlerWithCer.ClientCertificates.Add(clientCertificate);\n    }\n}\nservices.AddHttpClient(\"OdinClient\", c =>\n{\n}).ConfigurePrimaryHttpMessageHandler(() => handler);\nservices.AddHttpClient(\"OdinClientCer\", c =>\n{\n}).ConfigurePrimaryHttpMessageHandler(() => handlerWithCer);\n```\n\n这里我注入了两个 HttpClient，一个是没有证书的，一个是有证书的。<font color=\"red\">如何在 Post 和 Get 的时候动态传递证书，有知道的小伙伴可以留言告诉我一下（我没找到这个解决的办法）。</font>\n\n#### 2. 接下来可以在拦截器里开启 Request.Body 重复读取。\n    \n```csharp\ncontext.HttpContext.Request.EnableBuffering();\n```\n\n#### 3. 封装获取Request.Body的方法\n    \n```csharp\npublic static class HttpRequestExtends\n{\n    public static string ReadRequestBody(this HttpRequest request)\n    {\n        var reader = new StreamReader(request.Body);\n        var data = reader.ReadToEndAsync();\n        request.Body.Seek(0, SeekOrigin.Begin);\n        return data.Result;\n    }\n}\n```\n\n#### 4. 封装HttpClient方法(这里只是封装了 Get 和 Post 作为演示)\n\n```csharp\npublic class OdinHttpClientFactory : IOdinHttpClientFactory\n{\n    public static async Task<T> GetRequestAsync<T>(string clientName, string uri, Dictionary<string, string> customHeaders = null, string mediaType = \"application/json\")\n    {\n        var clientFactory = OdinInjectHelper.GetService<IHttpClientFactory>();\n        var client = clientFactory.CreateClient(clientName);\n        var request = new HttpRequestMessage()\n        {\n            RequestUri = new Uri(uri),\n            Method = HttpMethod.Get,\n        };\n        RequestHeaderAdd(request, customHeaders);\n        request.Headers.Accept.Add(new MediaTypeWithQualityHeaderValue(mediaType));\n        return await GetResponseResult<T>(client, request);\n    }\n\n    public static async Task<T> PostRequestAsync<T>(string clientName, string uri, Object obj, Dictionary<string, string> customHeaders = null,\n                                                string mediaType = \"application/json\", Encoding encoder = null)\n    {\n        var clientFactory = OdinInjectHelper.GetService<IHttpClientFactory>();\n        var client = clientFactory.CreateClient(clientName);\n        var request = new HttpRequestMessage()\n        {\n            RequestUri = new Uri(uri),\n            Method = HttpMethod.Post,\n        };\n        RequestHeaderAdd(request, customHeaders);\n        request.Content = GenerateContent(obj, mediaType, encoder);\n        return await GetResponseResult<T>(client, request);\n    }\n\n    private static HttpContent GenerateContent(Object obj, string mediaType, Encoding encoder)\n    {\n        if (typeof(String) == obj.GetType())\n        {\n            return GenerateContent<String>(obj.ToString(), mediaType, encoder);\n        }\n        else\n        {\n            return GenerateContent<Object>(obj, mediaType, encoder);\n        }\n    }\n    private static HttpContent GenerateContent<T>(T obj, string mediaType, Encoding encoder)\n    {\n        StringBuilder jsonContent = new StringBuilder();\n        string sendContent = string.Empty;\n        Dictionary<string, string> dic = ConvertPostDataToDictionary<T>(obj, encoder);\n        if (mediaType == \"application/json\")\n        {\n            sendContent = JsonConvert.SerializeObject(dic);\n        }\n        else\n        {\n            sendContent = ConvertDictionaryToPostFormData(dic).ToString();\n        }\n        return new StringContent(\n                        sendContent,\n                        encoder == null ? Encoding.UTF8 : encoder,\n                        mediaType);\n    }\n\n    private async static Task<T> PostResponseResult<T>(HttpClient client, HttpRequestMessage request)\n    {\n        var response = await client.SendAsync(request);\n        if (response.IsSuccessStatusCode)\n        {\n            return GetResult<T>(response);\n        }\n        else\n            throw new Exception(\"请求出错\");\n    }\n    private async static Task<T> GetResponseResult<T>(HttpClient client, HttpRequestMessage request)\n    {\n        var response = await client.SendAsync(request);\n        if (response.IsSuccessStatusCode)\n        {\n            return GetResult<T>(response);\n        }\n        else\n            throw new Exception(\"请求出错\");\n    }\n    private static void RequestHeaderAdd(HttpRequestMessage request, Dictionary<string, string> customHeaders)\n    {\n        if (customHeaders != null)\n        {\n            foreach (KeyValuePair<string, string> customHeader in customHeaders)\n            {\n                request.Headers.Add(customHeader.Key, customHeader.Value);\n            }\n        }\n    }\n    private static T GetResult<T>(HttpResponseMessage httpResponseMessage)\n    {\n        // 确认响应成功，否则抛出异常\n        // result.EnsureSuccessStatusCode();\n        if (typeof(T) == typeof(byte[]))\n        {\n            return (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsByteArrayAsync(), typeof(T));\n        }\n        else if (typeof(T) == typeof(Stream))\n        {\n            return (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsStreamAsync().Result, typeof(T));\n        }\n        else\n        {\n            if (typeof(T) == typeof(string))\n                return (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsStringAsync().Result, typeof(T));\n            return JsonConvert.DeserializeObject<T>(httpResponseMessage.Content.ReadAsStringAsync().Result);\n        }\n    }\n\n    public static Dictionary<string, string> ConvertPostDataToDictionary<T>(T obj, Encoding encoder = null)\n    {\n        Dictionary<string, string> dic = new Dictionary<string, string>();\n        if (typeof(T) == typeof(String))\n        {\n            foreach (var item in obj.ToString().Split('&'))\n            {\n                dic.Add(\n                    item.Split('=')[0],\n                    encoder == null || encoder == Encoding.UTF8 ?\n                    item.Split('=')[1]\n                    :\n                    item.Split('=')[1].ConvertStringEncode(Encoding.UTF8, encoder)\n                    );\n            }\n        }\n        else\n        {\n            foreach (var item in obj.GetType().GetRuntimeProperties())\n            {\n                dic.Add(item.Name,\n                        encoder == null || encoder == Encoding.UTF8 ?\n                        item.GetValue(obj).ToString()\n                        :\n                        item.GetValue(obj).ToString().ConvertStringEncode(Encoding.UTF8, encoder)\n                        );\n            }\n        }\n        return dic;\n    }\n    private static StringBuilder ConvertDictionaryToPostFormData(Dictionary<string, string> dic)\n    {\n        StringBuilder builder = new StringBuilder();\n        if (dic != null)\n        {\n            bool hasParam = false;\n            foreach (KeyValuePair<string, string> kv in dic)\n            {\n                string name = kv.Key;\n                string value = kv.Value;\n                // 忽略参数名或参数值为空的参数\n                if (!string.IsNullOrEmpty(name) && !string.IsNullOrEmpty(value))\n                {\n                    if (hasParam)\n                    {\n                        builder.Append(\"&\");\n                    }\n                    builder.Append(name);\n                    builder.Append(\"=\");\n                    builder.Append(value);\n                    hasParam = true;\n                }\n            }\n        }\n        return builder;\n    }\n}\n```\n\n#### 5. 最后封装获取Request.Body内容后二次封装的方法，因为我会遇到 一个 Post 请求但是 Url 还带有参数的情况，所以这里封装的稍微复杂一些\n    \n```csharp\npublic static RequestParamsModel GetRequestParams(this Controller controller, string paramFormat = null)\n{\n    HttpContext context = controller.HttpContext;\n    var request = context.Request;\n    JObject jobj = new JObject();\n    RequestParamsModel requestParams = new RequestParamsModel();\n    if (!string.IsNullOrEmpty(context.Request.QueryString.ToString()))\n    {\n        string param = request.QueryString.ToString().Substring(1);\n        requestParams.RequestQueryString = JsonConvert.DeserializeObject<JObject>(JsonConvert.SerializeObject(OdinHttpClientFactory.ConvertPostDataToDictionary<string>(param)));\n    }\n    if (request.ContentType != null && request.ContentType.StartsWith(\"application/json\"))\n    {\n        string param = request.ReadRequestBody();\n        requestParams.RequestFormData = JsonConvert.DeserializeObject<JObject>(param);\n    }\n    if (request.ContentType != null &&\n            (request.ContentType.StartsWith(\"text/plain\") || request.ContentType.StartsWith(\"application/javascript\") ||\n            request.ContentType.StartsWith(\"text/html\") || request.ContentType.StartsWith(\"application/xml\")))\n    {\n        string param = request.ReadRequestBody();\n        requestParams.RequestFormDataString = param.Replace(\"\\r\", \"\").Replace(\"\\n\", \"\").Replace(\" \", \"\");\n    }\n    if (request.ContentType != null && request.ContentType.StartsWith(\"application/x-www-form-urlencoded\"))\n    {\n        string param = request.ReadRequestBody();\n        requestParams.RequestFormData = JsonConvert.DeserializeObject<JObject>(JsonConvert.SerializeObject(OdinHttpClientFactory.ConvertPostDataToDictionary<string>(param)));\n    }\n    if (request.ContentType != null && request.ContentType.StartsWith(\"multipart/form-data\"))\n    {\n        Dictionary<string, string> dic = new Dictionary<string, string>();\n        foreach (var kv in request.Form)\n        {\n            dic.Add(kv.Key, kv.Value);\n        }\n        requestParams.RequestFormData = JsonConvert.DeserializeObject<JObject>(JsonConvert.SerializeObject(dic));\n        List<Dictionary<string, MemoryStream>> files = new List<Dictionary<string, MemoryStream>>();\n        long filesize = 0;\n        foreach (var file in request.Form.Files)\n        {\n            filesize += file.Length;\n            if (filesize > 1024 * 1024 * 4)\n                throw new Exception(\"文件过大无法上传，请联系管理员申请使用大文件上传服务器\");\n            var fileBytes = new Byte[file.Length];\n            MemoryStream fileStream = new MemoryStream(fileBytes);\n            file.CopyTo(fileStream);\n            files.Add(new Dictionary<string, MemoryStream>() { { file.Name, fileStream } });\n        }\n        requestParams.RequestUploadFile = files;\n    }\n    return requestParams;\n}\n```\n\n\t其中文件上传大小可以通过配置文件限制，现在及时我们遇到有Get请求，但是带着FormData文件的情况，我们也可以正常获取所有信息，其中信息内容格式如下：\n    \n```csharp\npublic class RequestParamsModel\n{\n    /// <summary>\n    /// Url 地址栏参数信息 自动转化为 JObject\n    /// </summary>\n    /// <value></value>\n    public JObject RequestQueryString { get; set; }\n    /// <summary>\n    /// 当 请求内容包含 application/text application/xml text/plain 和 application/javascript 是，获取内容一律视为 string，后期再自行处理\n    /// </summary>\n    /// <value></value>\n    public String RequestFormDataString { get; set; }\n    /// <summary>\n    /// FormData 请求时所有的键值对，自动转化为 JObject\n    /// </summary>\n    /// <value></value>\n    public JObject RequestFormData { get; set; }\n    /// <summary>\n    /// FormData 请求时附带的文件，key为文件名 value为文件的stream格式\n    /// </summary>\n    /// <value></value>\n    public List<Dictionary<string, MemoryStream>> RequestUploadFile { get; set; }\n}\n```\n\n#### 6. 其中，这个封装并没有处理Body包含 binary 格式和 GraphQL 格式，如有需要可以自行扩展。此时，当我们遇到\n    \n```csharp\nvar obj = OdinHttpClientFactory.PostRequestAsync<OdinActionResult>(\"OdinClient\",\n                            \"http://127.0.0.1:20303/api/v1/LinkTrack/pfda?id=4&name=admin\",\n                            new { User = \"odinsam\" });\n```\n\n\t这样的请求时，我们就会得到如下内容:(OdinActionResult是我自己定义的一个统一返回格式而已)\n\n```csharp\nRequestQueryString - null\n{\"id\":\"4\",\"name\":\"admin\"}\nRequestFormDataString - null\nRequestFormData\n{\"User\":\"odinsam\"}\nRequestUploadFile - null\n```\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/基于HttpClientFactory的封装和使用.md","raw":"title: 基于HttpClientFactory的封装和使用\nauthor: OdinSam\ntags:\n  - .Net Core\n  - HttpClientFactory\ncategories:\n  - .Net Core\nabbrlink: 4ff6\ndate: 2021-06-11 06:08:00\n---\n> .Net Core2.0 版本以前 HttpClient 还是挺坑的，我们需要操心怎么建立如何释放，而且代码质量不好还会影响 HttpClient 的性能和访问速度。2.0版本以后 HttpClientFactory 的出现解决了我们所有的痛点，我们不须要关心如何建立 HttpClient 又如何释放它。经过它能够建立具备特定业务的HttpClient，并且能够很友好的和 DI 容器结合使用。\n\n<!--more-->\n\n\n#### 1. 首先在 Startup.cs 文件的 ConfigureServices 方法中注入 HttpClient\n    \n```csharp\nvar handler = new HttpClientHandler();\nforeach (var cerItem in _Options.SslCers)\n{\n    if (!string.IsNullOrEmpty(cerItem.CerPath))\n    {\n        var clientCertificate = new X509Certificate2(cerItem.CerPath, cerItem.CerPassword);\n        handler.ClientCertificates.Add(clientCertificate);\n    }\n}\nvar handlerWithCer = new HttpClientHandler();\nforeach (var cerItem in _Options.SslCers)\n{\n    if (!string.IsNullOrEmpty(cerItem.CerPath))\n    {\n        var clientCertificate = new X509Certificate2(cerItem.CerPath, cerItem.CerPassword);\n        handlerWithCer.ClientCertificates.Add(clientCertificate);\n    }\n}\nservices.AddHttpClient(\"OdinClient\", c =>\n{\n}).ConfigurePrimaryHttpMessageHandler(() => handler);\nservices.AddHttpClient(\"OdinClientCer\", c =>\n{\n}).ConfigurePrimaryHttpMessageHandler(() => handlerWithCer);\n```\n\n这里我注入了两个 HttpClient，一个是没有证书的，一个是有证书的。<font color=\"red\">如何在 Post 和 Get 的时候动态传递证书，有知道的小伙伴可以留言告诉我一下（我没找到这个解决的办法）。</font>\n\n#### 2. 接下来可以在拦截器里开启 Request.Body 重复读取。\n    \n```csharp\ncontext.HttpContext.Request.EnableBuffering();\n```\n\n#### 3. 封装获取Request.Body的方法\n    \n```csharp\npublic static class HttpRequestExtends\n{\n    public static string ReadRequestBody(this HttpRequest request)\n    {\n        var reader = new StreamReader(request.Body);\n        var data = reader.ReadToEndAsync();\n        request.Body.Seek(0, SeekOrigin.Begin);\n        return data.Result;\n    }\n}\n```\n\n#### 4. 封装HttpClient方法(这里只是封装了 Get 和 Post 作为演示)\n\n```csharp\npublic class OdinHttpClientFactory : IOdinHttpClientFactory\n{\n    public static async Task<T> GetRequestAsync<T>(string clientName, string uri, Dictionary<string, string> customHeaders = null, string mediaType = \"application/json\")\n    {\n        var clientFactory = OdinInjectHelper.GetService<IHttpClientFactory>();\n        var client = clientFactory.CreateClient(clientName);\n        var request = new HttpRequestMessage()\n        {\n            RequestUri = new Uri(uri),\n            Method = HttpMethod.Get,\n        };\n        RequestHeaderAdd(request, customHeaders);\n        request.Headers.Accept.Add(new MediaTypeWithQualityHeaderValue(mediaType));\n        return await GetResponseResult<T>(client, request);\n    }\n\n    public static async Task<T> PostRequestAsync<T>(string clientName, string uri, Object obj, Dictionary<string, string> customHeaders = null,\n                                                string mediaType = \"application/json\", Encoding encoder = null)\n    {\n        var clientFactory = OdinInjectHelper.GetService<IHttpClientFactory>();\n        var client = clientFactory.CreateClient(clientName);\n        var request = new HttpRequestMessage()\n        {\n            RequestUri = new Uri(uri),\n            Method = HttpMethod.Post,\n        };\n        RequestHeaderAdd(request, customHeaders);\n        request.Content = GenerateContent(obj, mediaType, encoder);\n        return await GetResponseResult<T>(client, request);\n    }\n\n    private static HttpContent GenerateContent(Object obj, string mediaType, Encoding encoder)\n    {\n        if (typeof(String) == obj.GetType())\n        {\n            return GenerateContent<String>(obj.ToString(), mediaType, encoder);\n        }\n        else\n        {\n            return GenerateContent<Object>(obj, mediaType, encoder);\n        }\n    }\n    private static HttpContent GenerateContent<T>(T obj, string mediaType, Encoding encoder)\n    {\n        StringBuilder jsonContent = new StringBuilder();\n        string sendContent = string.Empty;\n        Dictionary<string, string> dic = ConvertPostDataToDictionary<T>(obj, encoder);\n        if (mediaType == \"application/json\")\n        {\n            sendContent = JsonConvert.SerializeObject(dic);\n        }\n        else\n        {\n            sendContent = ConvertDictionaryToPostFormData(dic).ToString();\n        }\n        return new StringContent(\n                        sendContent,\n                        encoder == null ? Encoding.UTF8 : encoder,\n                        mediaType);\n    }\n\n    private async static Task<T> PostResponseResult<T>(HttpClient client, HttpRequestMessage request)\n    {\n        var response = await client.SendAsync(request);\n        if (response.IsSuccessStatusCode)\n        {\n            return GetResult<T>(response);\n        }\n        else\n            throw new Exception(\"请求出错\");\n    }\n    private async static Task<T> GetResponseResult<T>(HttpClient client, HttpRequestMessage request)\n    {\n        var response = await client.SendAsync(request);\n        if (response.IsSuccessStatusCode)\n        {\n            return GetResult<T>(response);\n        }\n        else\n            throw new Exception(\"请求出错\");\n    }\n    private static void RequestHeaderAdd(HttpRequestMessage request, Dictionary<string, string> customHeaders)\n    {\n        if (customHeaders != null)\n        {\n            foreach (KeyValuePair<string, string> customHeader in customHeaders)\n            {\n                request.Headers.Add(customHeader.Key, customHeader.Value);\n            }\n        }\n    }\n    private static T GetResult<T>(HttpResponseMessage httpResponseMessage)\n    {\n        // 确认响应成功，否则抛出异常\n        // result.EnsureSuccessStatusCode();\n        if (typeof(T) == typeof(byte[]))\n        {\n            return (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsByteArrayAsync(), typeof(T));\n        }\n        else if (typeof(T) == typeof(Stream))\n        {\n            return (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsStreamAsync().Result, typeof(T));\n        }\n        else\n        {\n            if (typeof(T) == typeof(string))\n                return (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsStringAsync().Result, typeof(T));\n            return JsonConvert.DeserializeObject<T>(httpResponseMessage.Content.ReadAsStringAsync().Result);\n        }\n    }\n\n    public static Dictionary<string, string> ConvertPostDataToDictionary<T>(T obj, Encoding encoder = null)\n    {\n        Dictionary<string, string> dic = new Dictionary<string, string>();\n        if (typeof(T) == typeof(String))\n        {\n            foreach (var item in obj.ToString().Split('&'))\n            {\n                dic.Add(\n                    item.Split('=')[0],\n                    encoder == null || encoder == Encoding.UTF8 ?\n                    item.Split('=')[1]\n                    :\n                    item.Split('=')[1].ConvertStringEncode(Encoding.UTF8, encoder)\n                    );\n            }\n        }\n        else\n        {\n            foreach (var item in obj.GetType().GetRuntimeProperties())\n            {\n                dic.Add(item.Name,\n                        encoder == null || encoder == Encoding.UTF8 ?\n                        item.GetValue(obj).ToString()\n                        :\n                        item.GetValue(obj).ToString().ConvertStringEncode(Encoding.UTF8, encoder)\n                        );\n            }\n        }\n        return dic;\n    }\n    private static StringBuilder ConvertDictionaryToPostFormData(Dictionary<string, string> dic)\n    {\n        StringBuilder builder = new StringBuilder();\n        if (dic != null)\n        {\n            bool hasParam = false;\n            foreach (KeyValuePair<string, string> kv in dic)\n            {\n                string name = kv.Key;\n                string value = kv.Value;\n                // 忽略参数名或参数值为空的参数\n                if (!string.IsNullOrEmpty(name) && !string.IsNullOrEmpty(value))\n                {\n                    if (hasParam)\n                    {\n                        builder.Append(\"&\");\n                    }\n                    builder.Append(name);\n                    builder.Append(\"=\");\n                    builder.Append(value);\n                    hasParam = true;\n                }\n            }\n        }\n        return builder;\n    }\n}\n```\n\n#### 5. 最后封装获取Request.Body内容后二次封装的方法，因为我会遇到 一个 Post 请求但是 Url 还带有参数的情况，所以这里封装的稍微复杂一些\n    \n```csharp\npublic static RequestParamsModel GetRequestParams(this Controller controller, string paramFormat = null)\n{\n    HttpContext context = controller.HttpContext;\n    var request = context.Request;\n    JObject jobj = new JObject();\n    RequestParamsModel requestParams = new RequestParamsModel();\n    if (!string.IsNullOrEmpty(context.Request.QueryString.ToString()))\n    {\n        string param = request.QueryString.ToString().Substring(1);\n        requestParams.RequestQueryString = JsonConvert.DeserializeObject<JObject>(JsonConvert.SerializeObject(OdinHttpClientFactory.ConvertPostDataToDictionary<string>(param)));\n    }\n    if (request.ContentType != null && request.ContentType.StartsWith(\"application/json\"))\n    {\n        string param = request.ReadRequestBody();\n        requestParams.RequestFormData = JsonConvert.DeserializeObject<JObject>(param);\n    }\n    if (request.ContentType != null &&\n            (request.ContentType.StartsWith(\"text/plain\") || request.ContentType.StartsWith(\"application/javascript\") ||\n            request.ContentType.StartsWith(\"text/html\") || request.ContentType.StartsWith(\"application/xml\")))\n    {\n        string param = request.ReadRequestBody();\n        requestParams.RequestFormDataString = param.Replace(\"\\r\", \"\").Replace(\"\\n\", \"\").Replace(\" \", \"\");\n    }\n    if (request.ContentType != null && request.ContentType.StartsWith(\"application/x-www-form-urlencoded\"))\n    {\n        string param = request.ReadRequestBody();\n        requestParams.RequestFormData = JsonConvert.DeserializeObject<JObject>(JsonConvert.SerializeObject(OdinHttpClientFactory.ConvertPostDataToDictionary<string>(param)));\n    }\n    if (request.ContentType != null && request.ContentType.StartsWith(\"multipart/form-data\"))\n    {\n        Dictionary<string, string> dic = new Dictionary<string, string>();\n        foreach (var kv in request.Form)\n        {\n            dic.Add(kv.Key, kv.Value);\n        }\n        requestParams.RequestFormData = JsonConvert.DeserializeObject<JObject>(JsonConvert.SerializeObject(dic));\n        List<Dictionary<string, MemoryStream>> files = new List<Dictionary<string, MemoryStream>>();\n        long filesize = 0;\n        foreach (var file in request.Form.Files)\n        {\n            filesize += file.Length;\n            if (filesize > 1024 * 1024 * 4)\n                throw new Exception(\"文件过大无法上传，请联系管理员申请使用大文件上传服务器\");\n            var fileBytes = new Byte[file.Length];\n            MemoryStream fileStream = new MemoryStream(fileBytes);\n            file.CopyTo(fileStream);\n            files.Add(new Dictionary<string, MemoryStream>() { { file.Name, fileStream } });\n        }\n        requestParams.RequestUploadFile = files;\n    }\n    return requestParams;\n}\n```\n\n\t其中文件上传大小可以通过配置文件限制，现在及时我们遇到有Get请求，但是带着FormData文件的情况，我们也可以正常获取所有信息，其中信息内容格式如下：\n    \n```csharp\npublic class RequestParamsModel\n{\n    /// <summary>\n    /// Url 地址栏参数信息 自动转化为 JObject\n    /// </summary>\n    /// <value></value>\n    public JObject RequestQueryString { get; set; }\n    /// <summary>\n    /// 当 请求内容包含 application/text application/xml text/plain 和 application/javascript 是，获取内容一律视为 string，后期再自行处理\n    /// </summary>\n    /// <value></value>\n    public String RequestFormDataString { get; set; }\n    /// <summary>\n    /// FormData 请求时所有的键值对，自动转化为 JObject\n    /// </summary>\n    /// <value></value>\n    public JObject RequestFormData { get; set; }\n    /// <summary>\n    /// FormData 请求时附带的文件，key为文件名 value为文件的stream格式\n    /// </summary>\n    /// <value></value>\n    public List<Dictionary<string, MemoryStream>> RequestUploadFile { get; set; }\n}\n```\n\n#### 6. 其中，这个封装并没有处理Body包含 binary 格式和 GraphQL 格式，如有需要可以自行扩展。此时，当我们遇到\n    \n```csharp\nvar obj = OdinHttpClientFactory.PostRequestAsync<OdinActionResult>(\"OdinClient\",\n                            \"http://127.0.0.1:20303/api/v1/LinkTrack/pfda?id=4&name=admin\",\n                            new { User = \"odinsam\" });\n```\n\n\t这样的请求时，我们就会得到如下内容:(OdinActionResult是我自己定义的一个统一返回格式而已)\n\n```csharp\nRequestQueryString - null\n{\"id\":\"4\",\"name\":\"admin\"}\nRequestFormDataString - null\nRequestFormData\n{\"User\":\"odinsam\"}\nRequestUploadFile - null\n```\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"基于HttpClientFactory的封装和使用","published":1,"updated":"2021-06-10T22:49:13.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza5400fd5cs9b4ygh31z","content":"<blockquote>\n<p>.Net Core2.0 版本以前 HttpClient 还是挺坑的，我们需要操心怎么建立如何释放，而且代码质量不好还会影响 HttpClient 的性能和访问速度。2.0版本以后 HttpClientFactory 的出现解决了我们所有的痛点，我们不须要关心如何建立 HttpClient 又如何释放它。经过它能够建立具备特定业务的HttpClient，并且能够很友好的和 DI 容器结合使用。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"1-首先在-startupcs-文件的-configureservices-方法中注入-httpclient\"><a class=\"markdownIt-Anchor\" href=\"#1-首先在-startupcs-文件的-configureservices-方法中注入-httpclient\"></a> 1. 首先在 Startup.cs 文件的 ConfigureServices 方法中注入 HttpClient</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> handler = <span class=\"keyword\">new</span> HttpClientHandler();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> cerItem <span class=\"keyword\">in</span> _Options.SslCers)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(cerItem.CerPath))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientCertificate = <span class=\"keyword\">new</span> X509Certificate2(cerItem.CerPath, cerItem.CerPassword);</span><br><span class=\"line\">        handler.ClientCertificates.Add(clientCertificate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> handlerWithCer = <span class=\"keyword\">new</span> HttpClientHandler();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> cerItem <span class=\"keyword\">in</span> _Options.SslCers)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(cerItem.CerPath))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientCertificate = <span class=\"keyword\">new</span> X509Certificate2(cerItem.CerPath, cerItem.CerPassword);</span><br><span class=\"line\">        handlerWithCer.ClientCertificates.Add(clientCertificate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">services.AddHttpClient(<span class=\"string\">&quot;OdinClient&quot;</span>, c =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;).ConfigurePrimaryHttpMessageHandler(() =&gt; handler);</span><br><span class=\"line\">services.AddHttpClient(<span class=\"string\">&quot;OdinClientCer&quot;</span>, c =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;).ConfigurePrimaryHttpMessageHandler(() =&gt; handlerWithCer);</span><br></pre></td></tr></table></figure>\n<p>这里我注入了两个 HttpClient，一个是没有证书的，一个是有证书的。<font color=\"red\">如何在 Post 和 Get 的时候动态传递证书，有知道的小伙伴可以留言告诉我一下（我没找到这个解决的办法）。</font></p>\n<h4 id=\"2-接下来可以在拦截器里开启-requestbody-重复读取\"><a class=\"markdownIt-Anchor\" href=\"#2-接下来可以在拦截器里开启-requestbody-重复读取\"></a> 2. 接下来可以在拦截器里开启 Request.Body 重复读取。</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">context.HttpContext.Request.EnableBuffering();</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-封装获取requestbody的方法\"><a class=\"markdownIt-Anchor\" href=\"#3-封装获取requestbody的方法\"></a> 3. 封装获取Request.Body的方法</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">HttpRequestExtends</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">ReadRequestBody</span>(<span class=\"params\"><span class=\"keyword\">this</span> HttpRequest request</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> StreamReader(request.Body);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = reader.ReadToEndAsync();</span><br><span class=\"line\">        request.Body.Seek(<span class=\"number\">0</span>, SeekOrigin.Begin);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data.Result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-封装httpclient方法这里只是封装了-get-和-post-作为演示\"><a class=\"markdownIt-Anchor\" href=\"#4-封装httpclient方法这里只是封装了-get-和-post-作为演示\"></a> 4. 封装HttpClient方法(这里只是封装了 Get 和 Post 作为演示)</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinHttpClientFactory</span> : <span class=\"title\">IOdinHttpClientFactory</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">async</span> <span class=\"title\">Task</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">GetRequestAsync</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> clientName, <span class=\"built_in\">string</span> uri, Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; customHeaders = <span class=\"literal\">null</span>, <span class=\"built_in\">string</span> mediaType = <span class=\"string\">&quot;application/json&quot;</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientFactory = OdinInjectHelper.GetService&lt;IHttpClientFactory&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> client = clientFactory.CreateClient(clientName);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> request = <span class=\"keyword\">new</span> HttpRequestMessage()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            RequestUri = <span class=\"keyword\">new</span> Uri(uri),</span><br><span class=\"line\">            Method = HttpMethod.Get,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        RequestHeaderAdd(request, customHeaders);</span><br><span class=\"line\">        request.Headers.Accept.Add(<span class=\"keyword\">new</span> MediaTypeWithQualityHeaderValue(mediaType));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> GetResponseResult&lt;T&gt;(client, request);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">async</span> <span class=\"title\">Task</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">PostRequestAsync</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> clientName, <span class=\"built_in\">string</span> uri, Object obj, Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; customHeaders = <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                <span class=\"built_in\">string</span> mediaType = <span class=\"string\">&quot;application/json&quot;</span>, Encoding encoder = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientFactory = OdinInjectHelper.GetService&lt;IHttpClientFactory&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> client = clientFactory.CreateClient(clientName);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> request = <span class=\"keyword\">new</span> HttpRequestMessage()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            RequestUri = <span class=\"keyword\">new</span> Uri(uri),</span><br><span class=\"line\">            Method = HttpMethod.Post,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        RequestHeaderAdd(request, customHeaders);</span><br><span class=\"line\">        request.Content = GenerateContent(obj, mediaType, encoder);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> GetResponseResult&lt;T&gt;(client, request);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> HttpContent <span class=\"title\">GenerateContent</span>(<span class=\"params\">Object obj, <span class=\"built_in\">string</span> mediaType, Encoding encoder</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(String) == obj.GetType())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> GenerateContent&lt;String&gt;(obj.ToString(), mediaType, encoder);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> GenerateContent&lt;Object&gt;(obj, mediaType, encoder);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> HttpContent <span class=\"title\">GenerateContent</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">T obj, <span class=\"built_in\">string</span> mediaType, Encoding encoder</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        StringBuilder jsonContent = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"built_in\">string</span> sendContent = <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\">        Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; dic = ConvertPostDataToDictionary&lt;T&gt;(obj, encoder);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mediaType == <span class=\"string\">&quot;application/json&quot;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sendContent = JsonConvert.SerializeObject(dic);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sendContent = ConvertDictionaryToPostFormData(dic).ToString();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> StringContent(</span><br><span class=\"line\">                        sendContent,</span><br><span class=\"line\">                        encoder == <span class=\"literal\">null</span> ? Encoding.UTF8 : encoder,</span><br><span class=\"line\">                        mediaType);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">async</span> <span class=\"keyword\">static</span> <span class=\"title\">Task</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">PostResponseResult</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">HttpClient client, HttpRequestMessage request</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> response = <span class=\"keyword\">await</span> client.SendAsync(request);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (response.IsSuccessStatusCode)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> GetResult&lt;T&gt;(response);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;请求出错&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">async</span> <span class=\"keyword\">static</span> <span class=\"title\">Task</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">GetResponseResult</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">HttpClient client, HttpRequestMessage request</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> response = <span class=\"keyword\">await</span> client.SendAsync(request);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (response.IsSuccessStatusCode)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> GetResult&lt;T&gt;(response);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;请求出错&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">RequestHeaderAdd</span>(<span class=\"params\">HttpRequestMessage request, Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; customHeaders</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (customHeaders != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (KeyValuePair&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; customHeader <span class=\"keyword\">in</span> customHeaders)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                request.Headers.Add(customHeader.Key, customHeader.Value);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> T <span class=\"title\">GetResult</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">HttpResponseMessage httpResponseMessage</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 确认响应成功，否则抛出异常</span></span><br><span class=\"line\">        <span class=\"comment\">// result.EnsureSuccessStatusCode();</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(T) == <span class=\"keyword\">typeof</span>(<span class=\"built_in\">byte</span>[]))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsByteArrayAsync(), <span class=\"keyword\">typeof</span>(T));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(T) == <span class=\"keyword\">typeof</span>(Stream))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsStreamAsync().Result, <span class=\"keyword\">typeof</span>(T));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(T) == <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsStringAsync().Result, <span class=\"keyword\">typeof</span>(T));</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonConvert.DeserializeObject&lt;T&gt;(httpResponseMessage.Content.ReadAsStringAsync().Result);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"title\">Dictionary</span>&lt;<span class=\"title\">string</span>, <span class=\"title\">string</span>&gt; <span class=\"title\">ConvertPostDataToDictionary</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">T obj, Encoding encoder = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; dic = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(T) == <span class=\"keyword\">typeof</span>(String))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> obj.ToString().Split(<span class=\"string\">&#x27;&amp;&#x27;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dic.Add(</span><br><span class=\"line\">                    item.Split(<span class=\"string\">&#x27;=&#x27;</span>)[<span class=\"number\">0</span>],</span><br><span class=\"line\">                    encoder == <span class=\"literal\">null</span> || encoder == Encoding.UTF8 ?</span><br><span class=\"line\">                    item.Split(<span class=\"string\">&#x27;=&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    :</span><br><span class=\"line\">                    item.Split(<span class=\"string\">&#x27;=&#x27;</span>)[<span class=\"number\">1</span>].ConvertStringEncode(Encoding.UTF8, encoder)</span><br><span class=\"line\">                    );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> obj.GetType().GetRuntimeProperties())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dic.Add(item.Name,</span><br><span class=\"line\">                        encoder == <span class=\"literal\">null</span> || encoder == Encoding.UTF8 ?</span><br><span class=\"line\">                        item.GetValue(obj).ToString()</span><br><span class=\"line\">                        :</span><br><span class=\"line\">                        item.GetValue(obj).ToString().ConvertStringEncode(Encoding.UTF8, encoder)</span><br><span class=\"line\">                        );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dic;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> StringBuilder <span class=\"title\">ConvertDictionaryToPostFormData</span>(<span class=\"params\">Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; dic</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dic != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">bool</span> hasParam = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (KeyValuePair&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; kv <span class=\"keyword\">in</span> dic)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">string</span> name = kv.Key;</span><br><span class=\"line\">                <span class=\"built_in\">string</span> <span class=\"keyword\">value</span> = kv.Value;</span><br><span class=\"line\">                <span class=\"comment\">// 忽略参数名或参数值为空的参数</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(name) &amp;&amp; !<span class=\"built_in\">string</span>.IsNullOrEmpty(<span class=\"keyword\">value</span>))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (hasParam)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">&quot;&amp;&quot;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    builder.Append(name);</span><br><span class=\"line\">                    builder.Append(<span class=\"string\">&quot;=&quot;</span>);</span><br><span class=\"line\">                    builder.Append(<span class=\"keyword\">value</span>);</span><br><span class=\"line\">                    hasParam = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-最后封装获取requestbody内容后二次封装的方法因为我会遇到-一个-post-请求但是-url-还带有参数的情况所以这里封装的稍微复杂一些\"><a class=\"markdownIt-Anchor\" href=\"#5-最后封装获取requestbody内容后二次封装的方法因为我会遇到-一个-post-请求但是-url-还带有参数的情况所以这里封装的稍微复杂一些\"></a> 5. 最后封装获取Request.Body内容后二次封装的方法，因为我会遇到 一个 Post 请求但是 Url 还带有参数的情况，所以这里封装的稍微复杂一些</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RequestParamsModel <span class=\"title\">GetRequestParams</span>(<span class=\"params\"><span class=\"keyword\">this</span> Controller controller, <span class=\"built_in\">string</span> paramFormat = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    HttpContext context = controller.HttpContext;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> request = context.Request;</span><br><span class=\"line\">    JObject jobj = <span class=\"keyword\">new</span> JObject();</span><br><span class=\"line\">    RequestParamsModel requestParams = <span class=\"keyword\">new</span> RequestParamsModel();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(context.Request.QueryString.ToString()))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> param = request.QueryString.ToString().Substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">        requestParams.RequestQueryString = JsonConvert.DeserializeObject&lt;JObject&gt;(JsonConvert.SerializeObject(OdinHttpClientFactory.ConvertPostDataToDictionary&lt;<span class=\"built_in\">string</span>&gt;(param)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (request.ContentType != <span class=\"literal\">null</span> &amp;&amp; request.ContentType.StartsWith(<span class=\"string\">&quot;application/json&quot;</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> param = request.ReadRequestBody();</span><br><span class=\"line\">        requestParams.RequestFormData = JsonConvert.DeserializeObject&lt;JObject&gt;(param);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (request.ContentType != <span class=\"literal\">null</span> &amp;&amp;</span><br><span class=\"line\">            (request.ContentType.StartsWith(<span class=\"string\">&quot;text/plain&quot;</span>) || request.ContentType.StartsWith(<span class=\"string\">&quot;application/javascript&quot;</span>) ||</span><br><span class=\"line\">            request.ContentType.StartsWith(<span class=\"string\">&quot;text/html&quot;</span>) || request.ContentType.StartsWith(<span class=\"string\">&quot;application/xml&quot;</span>)))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> param = request.ReadRequestBody();</span><br><span class=\"line\">        requestParams.RequestFormDataString = param.Replace(<span class=\"string\">&quot;\\r&quot;</span>, <span class=\"string\">&quot;&quot;</span>).Replace(<span class=\"string\">&quot;\\n&quot;</span>, <span class=\"string\">&quot;&quot;</span>).Replace(<span class=\"string\">&quot; &quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (request.ContentType != <span class=\"literal\">null</span> &amp;&amp; request.ContentType.StartsWith(<span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> param = request.ReadRequestBody();</span><br><span class=\"line\">        requestParams.RequestFormData = JsonConvert.DeserializeObject&lt;JObject&gt;(JsonConvert.SerializeObject(OdinHttpClientFactory.ConvertPostDataToDictionary&lt;<span class=\"built_in\">string</span>&gt;(param)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (request.ContentType != <span class=\"literal\">null</span> &amp;&amp; request.ContentType.StartsWith(<span class=\"string\">&quot;multipart/form-data&quot;</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; dic = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> kv <span class=\"keyword\">in</span> request.Form)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dic.Add(kv.Key, kv.Value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        requestParams.RequestFormData = JsonConvert.DeserializeObject&lt;JObject&gt;(JsonConvert.SerializeObject(dic));</span><br><span class=\"line\">        List&lt;Dictionary&lt;<span class=\"built_in\">string</span>, MemoryStream&gt;&gt; files = <span class=\"keyword\">new</span> List&lt;Dictionary&lt;<span class=\"built_in\">string</span>, MemoryStream&gt;&gt;();</span><br><span class=\"line\">        <span class=\"built_in\">long</span> filesize = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> file <span class=\"keyword\">in</span> request.Form.Files)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            filesize += file.Length;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (filesize &gt; <span class=\"number\">1024</span> * <span class=\"number\">1024</span> * <span class=\"number\">4</span>)</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;文件过大无法上传，请联系管理员申请使用大文件上传服务器&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> fileBytes = <span class=\"keyword\">new</span> Byte[file.Length];</span><br><span class=\"line\">            MemoryStream fileStream = <span class=\"keyword\">new</span> MemoryStream(fileBytes);</span><br><span class=\"line\">            file.CopyTo(fileStream);</span><br><span class=\"line\">            files.Add(<span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">string</span>, MemoryStream&gt;() &#123; &#123; file.Name, fileStream &#125; &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        requestParams.RequestUploadFile = files;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> requestParams;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>其中文件上传大小可以通过配置文件限制，现在及时我们遇到有Get请求，但是带着FormData文件的情况，我们也可以正常获取所有信息，其中信息内容格式如下：\n</code></pre>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">RequestParamsModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Url 地址栏参数信息 自动转化为 JObject</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> JObject RequestQueryString &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 当 请求内容包含 application/text application/xml text/plain 和 application/javascript 是，获取内容一律视为 string，后期再自行处理</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String RequestFormDataString &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> FormData 请求时所有的键值对，自动转化为 JObject</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> JObject RequestFormData &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> FormData 请求时附带的文件，key为文件名 value为文件的stream格式</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Dictionary&lt;<span class=\"built_in\">string</span>, MemoryStream&gt;&gt; RequestUploadFile &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-其中这个封装并没有处理body包含-binary-格式和-graphql-格式如有需要可以自行扩展-此时当我们遇到\"><a class=\"markdownIt-Anchor\" href=\"#6-其中这个封装并没有处理body包含-binary-格式和-graphql-格式如有需要可以自行扩展-此时当我们遇到\"></a> 6. 其中，这个封装并没有处理Body包含 binary 格式和 GraphQL 格式，如有需要可以自行扩展。此时，当我们遇到</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = OdinHttpClientFactory.PostRequestAsync&lt;OdinActionResult&gt;(<span class=\"string\">&quot;OdinClient&quot;</span>,</span><br><span class=\"line\">                            <span class=\"string\">&quot;http://127.0.0.1:20303/api/v1/LinkTrack/pfda?id=4&amp;name=admin&quot;</span>,</span><br><span class=\"line\">                            <span class=\"keyword\">new</span> &#123; User = <span class=\"string\">&quot;odinsam&quot;</span> &#125;);</span><br></pre></td></tr></table></figure>\n<pre><code>这样的请求时，我们就会得到如下内容:(OdinActionResult是我自己定义的一个统一返回格式而已)\n</code></pre>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RequestQueryString - <span class=\"literal\">null</span></span><br><span class=\"line\">&#123;<span class=\"string\">&quot;id&quot;</span>:<span class=\"string\">&quot;4&quot;</span>,<span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;admin&quot;</span>&#125;</span><br><span class=\"line\">RequestFormDataString - <span class=\"literal\">null</span></span><br><span class=\"line\">RequestFormData</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;User&quot;</span>:<span class=\"string\">&quot;odinsam&quot;</span>&#125;</span><br><span class=\"line\">RequestUploadFile - <span class=\"literal\">null</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>.Net Core2.0 版本以前 HttpClient 还是挺坑的，我们需要操心怎么建立如何释放，而且代码质量不好还会影响 HttpClient 的性能和访问速度。2.0版本以后 HttpClientFactory 的出现解决了我们所有的痛点，我们不须要关心如何建立 HttpClient 又如何释放它。经过它能够建立具备特定业务的HttpClient，并且能够很友好的和 DI 容器结合使用。</p>\n</blockquote>","more":"<h4 id=\"1-首先在-startupcs-文件的-configureservices-方法中注入-httpclient\"><a class=\"markdownIt-Anchor\" href=\"#1-首先在-startupcs-文件的-configureservices-方法中注入-httpclient\"></a> 1. 首先在 Startup.cs 文件的 ConfigureServices 方法中注入 HttpClient</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> handler = <span class=\"keyword\">new</span> HttpClientHandler();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> cerItem <span class=\"keyword\">in</span> _Options.SslCers)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(cerItem.CerPath))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientCertificate = <span class=\"keyword\">new</span> X509Certificate2(cerItem.CerPath, cerItem.CerPassword);</span><br><span class=\"line\">        handler.ClientCertificates.Add(clientCertificate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> handlerWithCer = <span class=\"keyword\">new</span> HttpClientHandler();</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> cerItem <span class=\"keyword\">in</span> _Options.SslCers)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(cerItem.CerPath))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientCertificate = <span class=\"keyword\">new</span> X509Certificate2(cerItem.CerPath, cerItem.CerPassword);</span><br><span class=\"line\">        handlerWithCer.ClientCertificates.Add(clientCertificate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">services.AddHttpClient(<span class=\"string\">&quot;OdinClient&quot;</span>, c =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;).ConfigurePrimaryHttpMessageHandler(() =&gt; handler);</span><br><span class=\"line\">services.AddHttpClient(<span class=\"string\">&quot;OdinClientCer&quot;</span>, c =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;).ConfigurePrimaryHttpMessageHandler(() =&gt; handlerWithCer);</span><br></pre></td></tr></table></figure>\n<p>这里我注入了两个 HttpClient，一个是没有证书的，一个是有证书的。<font color=\"red\">如何在 Post 和 Get 的时候动态传递证书，有知道的小伙伴可以留言告诉我一下（我没找到这个解决的办法）。</font></p>\n<h4 id=\"2-接下来可以在拦截器里开启-requestbody-重复读取\"><a class=\"markdownIt-Anchor\" href=\"#2-接下来可以在拦截器里开启-requestbody-重复读取\"></a> 2. 接下来可以在拦截器里开启 Request.Body 重复读取。</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">context.HttpContext.Request.EnableBuffering();</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-封装获取requestbody的方法\"><a class=\"markdownIt-Anchor\" href=\"#3-封装获取requestbody的方法\"></a> 3. 封装获取Request.Body的方法</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">HttpRequestExtends</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">ReadRequestBody</span>(<span class=\"params\"><span class=\"keyword\">this</span> HttpRequest request</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> StreamReader(request.Body);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = reader.ReadToEndAsync();</span><br><span class=\"line\">        request.Body.Seek(<span class=\"number\">0</span>, SeekOrigin.Begin);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data.Result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-封装httpclient方法这里只是封装了-get-和-post-作为演示\"><a class=\"markdownIt-Anchor\" href=\"#4-封装httpclient方法这里只是封装了-get-和-post-作为演示\"></a> 4. 封装HttpClient方法(这里只是封装了 Get 和 Post 作为演示)</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">OdinHttpClientFactory</span> : <span class=\"title\">IOdinHttpClientFactory</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">async</span> <span class=\"title\">Task</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">GetRequestAsync</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> clientName, <span class=\"built_in\">string</span> uri, Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; customHeaders = <span class=\"literal\">null</span>, <span class=\"built_in\">string</span> mediaType = <span class=\"string\">&quot;application/json&quot;</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientFactory = OdinInjectHelper.GetService&lt;IHttpClientFactory&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> client = clientFactory.CreateClient(clientName);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> request = <span class=\"keyword\">new</span> HttpRequestMessage()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            RequestUri = <span class=\"keyword\">new</span> Uri(uri),</span><br><span class=\"line\">            Method = HttpMethod.Get,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        RequestHeaderAdd(request, customHeaders);</span><br><span class=\"line\">        request.Headers.Accept.Add(<span class=\"keyword\">new</span> MediaTypeWithQualityHeaderValue(mediaType));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> GetResponseResult&lt;T&gt;(client, request);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">async</span> <span class=\"title\">Task</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">PostRequestAsync</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> clientName, <span class=\"built_in\">string</span> uri, Object obj, Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; customHeaders = <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                <span class=\"built_in\">string</span> mediaType = <span class=\"string\">&quot;application/json&quot;</span>, Encoding encoder = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> clientFactory = OdinInjectHelper.GetService&lt;IHttpClientFactory&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> client = clientFactory.CreateClient(clientName);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> request = <span class=\"keyword\">new</span> HttpRequestMessage()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            RequestUri = <span class=\"keyword\">new</span> Uri(uri),</span><br><span class=\"line\">            Method = HttpMethod.Post,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        RequestHeaderAdd(request, customHeaders);</span><br><span class=\"line\">        request.Content = GenerateContent(obj, mediaType, encoder);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> GetResponseResult&lt;T&gt;(client, request);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> HttpContent <span class=\"title\">GenerateContent</span>(<span class=\"params\">Object obj, <span class=\"built_in\">string</span> mediaType, Encoding encoder</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(String) == obj.GetType())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> GenerateContent&lt;String&gt;(obj.ToString(), mediaType, encoder);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> GenerateContent&lt;Object&gt;(obj, mediaType, encoder);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> HttpContent <span class=\"title\">GenerateContent</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">T obj, <span class=\"built_in\">string</span> mediaType, Encoding encoder</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        StringBuilder jsonContent = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"built_in\">string</span> sendContent = <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\">        Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; dic = ConvertPostDataToDictionary&lt;T&gt;(obj, encoder);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mediaType == <span class=\"string\">&quot;application/json&quot;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sendContent = JsonConvert.SerializeObject(dic);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sendContent = ConvertDictionaryToPostFormData(dic).ToString();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> StringContent(</span><br><span class=\"line\">                        sendContent,</span><br><span class=\"line\">                        encoder == <span class=\"literal\">null</span> ? Encoding.UTF8 : encoder,</span><br><span class=\"line\">                        mediaType);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">async</span> <span class=\"keyword\">static</span> <span class=\"title\">Task</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">PostResponseResult</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">HttpClient client, HttpRequestMessage request</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> response = <span class=\"keyword\">await</span> client.SendAsync(request);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (response.IsSuccessStatusCode)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> GetResult&lt;T&gt;(response);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;请求出错&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">async</span> <span class=\"keyword\">static</span> <span class=\"title\">Task</span>&lt;<span class=\"title\">T</span>&gt; <span class=\"title\">GetResponseResult</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">HttpClient client, HttpRequestMessage request</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> response = <span class=\"keyword\">await</span> client.SendAsync(request);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (response.IsSuccessStatusCode)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> GetResult&lt;T&gt;(response);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;请求出错&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">RequestHeaderAdd</span>(<span class=\"params\">HttpRequestMessage request, Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; customHeaders</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (customHeaders != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (KeyValuePair&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; customHeader <span class=\"keyword\">in</span> customHeaders)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                request.Headers.Add(customHeader.Key, customHeader.Value);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> T <span class=\"title\">GetResult</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">HttpResponseMessage httpResponseMessage</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 确认响应成功，否则抛出异常</span></span><br><span class=\"line\">        <span class=\"comment\">// result.EnsureSuccessStatusCode();</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(T) == <span class=\"keyword\">typeof</span>(<span class=\"built_in\">byte</span>[]))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsByteArrayAsync(), <span class=\"keyword\">typeof</span>(T));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(T) == <span class=\"keyword\">typeof</span>(Stream))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsStreamAsync().Result, <span class=\"keyword\">typeof</span>(T));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(T) == <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (T)Convert.ChangeType(httpResponseMessage.Content.ReadAsStringAsync().Result, <span class=\"keyword\">typeof</span>(T));</span><br><span class=\"line\">            <span class=\"keyword\">return</span> JsonConvert.DeserializeObject&lt;T&gt;(httpResponseMessage.Content.ReadAsStringAsync().Result);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"title\">Dictionary</span>&lt;<span class=\"title\">string</span>, <span class=\"title\">string</span>&gt; <span class=\"title\">ConvertPostDataToDictionary</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\">T obj, Encoding encoder = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; dic = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(T) == <span class=\"keyword\">typeof</span>(String))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> obj.ToString().Split(<span class=\"string\">&#x27;&amp;&#x27;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dic.Add(</span><br><span class=\"line\">                    item.Split(<span class=\"string\">&#x27;=&#x27;</span>)[<span class=\"number\">0</span>],</span><br><span class=\"line\">                    encoder == <span class=\"literal\">null</span> || encoder == Encoding.UTF8 ?</span><br><span class=\"line\">                    item.Split(<span class=\"string\">&#x27;=&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">                    :</span><br><span class=\"line\">                    item.Split(<span class=\"string\">&#x27;=&#x27;</span>)[<span class=\"number\">1</span>].ConvertStringEncode(Encoding.UTF8, encoder)</span><br><span class=\"line\">                    );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> obj.GetType().GetRuntimeProperties())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dic.Add(item.Name,</span><br><span class=\"line\">                        encoder == <span class=\"literal\">null</span> || encoder == Encoding.UTF8 ?</span><br><span class=\"line\">                        item.GetValue(obj).ToString()</span><br><span class=\"line\">                        :</span><br><span class=\"line\">                        item.GetValue(obj).ToString().ConvertStringEncode(Encoding.UTF8, encoder)</span><br><span class=\"line\">                        );</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dic;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> StringBuilder <span class=\"title\">ConvertDictionaryToPostFormData</span>(<span class=\"params\">Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; dic</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        StringBuilder builder = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dic != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">bool</span> hasParam = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (KeyValuePair&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; kv <span class=\"keyword\">in</span> dic)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">string</span> name = kv.Key;</span><br><span class=\"line\">                <span class=\"built_in\">string</span> <span class=\"keyword\">value</span> = kv.Value;</span><br><span class=\"line\">                <span class=\"comment\">// 忽略参数名或参数值为空的参数</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(name) &amp;&amp; !<span class=\"built_in\">string</span>.IsNullOrEmpty(<span class=\"keyword\">value</span>))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (hasParam)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        builder.Append(<span class=\"string\">&quot;&amp;&quot;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    builder.Append(name);</span><br><span class=\"line\">                    builder.Append(<span class=\"string\">&quot;=&quot;</span>);</span><br><span class=\"line\">                    builder.Append(<span class=\"keyword\">value</span>);</span><br><span class=\"line\">                    hasParam = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-最后封装获取requestbody内容后二次封装的方法因为我会遇到-一个-post-请求但是-url-还带有参数的情况所以这里封装的稍微复杂一些\"><a class=\"markdownIt-Anchor\" href=\"#5-最后封装获取requestbody内容后二次封装的方法因为我会遇到-一个-post-请求但是-url-还带有参数的情况所以这里封装的稍微复杂一些\"></a> 5. 最后封装获取Request.Body内容后二次封装的方法，因为我会遇到 一个 Post 请求但是 Url 还带有参数的情况，所以这里封装的稍微复杂一些</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RequestParamsModel <span class=\"title\">GetRequestParams</span>(<span class=\"params\"><span class=\"keyword\">this</span> Controller controller, <span class=\"built_in\">string</span> paramFormat = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    HttpContext context = controller.HttpContext;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> request = context.Request;</span><br><span class=\"line\">    JObject jobj = <span class=\"keyword\">new</span> JObject();</span><br><span class=\"line\">    RequestParamsModel requestParams = <span class=\"keyword\">new</span> RequestParamsModel();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(context.Request.QueryString.ToString()))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> param = request.QueryString.ToString().Substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">        requestParams.RequestQueryString = JsonConvert.DeserializeObject&lt;JObject&gt;(JsonConvert.SerializeObject(OdinHttpClientFactory.ConvertPostDataToDictionary&lt;<span class=\"built_in\">string</span>&gt;(param)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (request.ContentType != <span class=\"literal\">null</span> &amp;&amp; request.ContentType.StartsWith(<span class=\"string\">&quot;application/json&quot;</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> param = request.ReadRequestBody();</span><br><span class=\"line\">        requestParams.RequestFormData = JsonConvert.DeserializeObject&lt;JObject&gt;(param);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (request.ContentType != <span class=\"literal\">null</span> &amp;&amp;</span><br><span class=\"line\">            (request.ContentType.StartsWith(<span class=\"string\">&quot;text/plain&quot;</span>) || request.ContentType.StartsWith(<span class=\"string\">&quot;application/javascript&quot;</span>) ||</span><br><span class=\"line\">            request.ContentType.StartsWith(<span class=\"string\">&quot;text/html&quot;</span>) || request.ContentType.StartsWith(<span class=\"string\">&quot;application/xml&quot;</span>)))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> param = request.ReadRequestBody();</span><br><span class=\"line\">        requestParams.RequestFormDataString = param.Replace(<span class=\"string\">&quot;\\r&quot;</span>, <span class=\"string\">&quot;&quot;</span>).Replace(<span class=\"string\">&quot;\\n&quot;</span>, <span class=\"string\">&quot;&quot;</span>).Replace(<span class=\"string\">&quot; &quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (request.ContentType != <span class=\"literal\">null</span> &amp;&amp; request.ContentType.StartsWith(<span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> param = request.ReadRequestBody();</span><br><span class=\"line\">        requestParams.RequestFormData = JsonConvert.DeserializeObject&lt;JObject&gt;(JsonConvert.SerializeObject(OdinHttpClientFactory.ConvertPostDataToDictionary&lt;<span class=\"built_in\">string</span>&gt;(param)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (request.ContentType != <span class=\"literal\">null</span> &amp;&amp; request.ContentType.StartsWith(<span class=\"string\">&quot;multipart/form-data&quot;</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; dic = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> kv <span class=\"keyword\">in</span> request.Form)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dic.Add(kv.Key, kv.Value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        requestParams.RequestFormData = JsonConvert.DeserializeObject&lt;JObject&gt;(JsonConvert.SerializeObject(dic));</span><br><span class=\"line\">        List&lt;Dictionary&lt;<span class=\"built_in\">string</span>, MemoryStream&gt;&gt; files = <span class=\"keyword\">new</span> List&lt;Dictionary&lt;<span class=\"built_in\">string</span>, MemoryStream&gt;&gt;();</span><br><span class=\"line\">        <span class=\"built_in\">long</span> filesize = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> file <span class=\"keyword\">in</span> request.Form.Files)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            filesize += file.Length;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (filesize &gt; <span class=\"number\">1024</span> * <span class=\"number\">1024</span> * <span class=\"number\">4</span>)</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">&quot;文件过大无法上传，请联系管理员申请使用大文件上传服务器&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> fileBytes = <span class=\"keyword\">new</span> Byte[file.Length];</span><br><span class=\"line\">            MemoryStream fileStream = <span class=\"keyword\">new</span> MemoryStream(fileBytes);</span><br><span class=\"line\">            file.CopyTo(fileStream);</span><br><span class=\"line\">            files.Add(<span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">string</span>, MemoryStream&gt;() &#123; &#123; file.Name, fileStream &#125; &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        requestParams.RequestUploadFile = files;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> requestParams;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>其中文件上传大小可以通过配置文件限制，现在及时我们遇到有Get请求，但是带着FormData文件的情况，我们也可以正常获取所有信息，其中信息内容格式如下：\n</code></pre>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">RequestParamsModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Url 地址栏参数信息 自动转化为 JObject</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> JObject RequestQueryString &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> 当 请求内容包含 application/text application/xml text/plain 和 application/javascript 是，获取内容一律视为 string，后期再自行处理</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String RequestFormDataString &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> FormData 请求时所有的键值对，自动转化为 JObject</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> JObject RequestFormData &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> FormData 请求时附带的文件，key为文件名 value为文件的stream格式</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;value&gt;</span><span class=\"doctag\">&lt;/value&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Dictionary&lt;<span class=\"built_in\">string</span>, MemoryStream&gt;&gt; RequestUploadFile &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6-其中这个封装并没有处理body包含-binary-格式和-graphql-格式如有需要可以自行扩展-此时当我们遇到\"><a class=\"markdownIt-Anchor\" href=\"#6-其中这个封装并没有处理body包含-binary-格式和-graphql-格式如有需要可以自行扩展-此时当我们遇到\"></a> 6. 其中，这个封装并没有处理Body包含 binary 格式和 GraphQL 格式，如有需要可以自行扩展。此时，当我们遇到</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = OdinHttpClientFactory.PostRequestAsync&lt;OdinActionResult&gt;(<span class=\"string\">&quot;OdinClient&quot;</span>,</span><br><span class=\"line\">                            <span class=\"string\">&quot;http://127.0.0.1:20303/api/v1/LinkTrack/pfda?id=4&amp;name=admin&quot;</span>,</span><br><span class=\"line\">                            <span class=\"keyword\">new</span> &#123; User = <span class=\"string\">&quot;odinsam&quot;</span> &#125;);</span><br></pre></td></tr></table></figure>\n<pre><code>这样的请求时，我们就会得到如下内容:(OdinActionResult是我自己定义的一个统一返回格式而已)\n</code></pre>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RequestQueryString - <span class=\"literal\">null</span></span><br><span class=\"line\">&#123;<span class=\"string\">&quot;id&quot;</span>:<span class=\"string\">&quot;4&quot;</span>,<span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;admin&quot;</span>&#125;</span><br><span class=\"line\">RequestFormDataString - <span class=\"literal\">null</span></span><br><span class=\"line\">RequestFormData</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;User&quot;</span>:<span class=\"string\">&quot;odinsam&quot;</span>&#125;</span><br><span class=\"line\">RequestUploadFile - <span class=\"literal\">null</span></span><br></pre></td></tr></table></figure>"},{"title":"基于git-commit-plugin插件的扩展","author":"OdinSam","abbrlink":"9b56","date":"2021-06-29T15:57:00.000Z","_content":"> Git 每次提交代码，都要写 Commit message（提交说明），否则就不允许提交。但是，一般来说，commit message 应该清晰明了，说明本次提交的目的。因为我使用vscode开发工具，所以就找到了一款叫做 git-commit-plugin 的插件。\n\n<!--more-->\n\n目前，社区有多种 Commit message 的写法规范。本文介绍Angular 规范是目前使用最广的写法，比较合理和系统化，并且有配套的工具。前前端框架Angular.js采用的就是该规范。\n\n> Commit message 的格式\n\n\t每次提交，Commit message 都包括三个部分：header，body 和 footer。\n\n```text\n<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n但是每个公司或者个人的提交格式可能都不一致，而 git-commit-plugin 插件没有模板配置功能。所以在作者的基础上新增了一个提交模板配置功能。\n\n> 配置格式\n\n```json\n{\n    \"templateName\": \"Angular\",\n    \"templateContent\": \"<icon><space><type>(<scope>):<space><subject><enter><body><enter><footer>\"\n},\n{\n    \"templateName\": \"git-cz\",\n    \"templateContent\": \"<type>(<scope>):<space><icon><space><subject><enter><body><enter><footer>\"\n}\n```\n\n其中 &lt;space&gt; 代表空格,&lt;enter&gt; 代表换行,并且可以调整icon的位置。\n\n","source":"_posts/基于git-commit-plugin插件的扩展.md","raw":"title: 基于git-commit-plugin插件的扩展\nauthor: OdinSam\ntags:\n  - Git\n  - VsCode\n  - 插件\n  - ''\n  - ''\ncategories:\n  - VsCode插件开发\nabbrlink: 9b56\ndate: 2021-06-29 23:57:00\n---\n> Git 每次提交代码，都要写 Commit message（提交说明），否则就不允许提交。但是，一般来说，commit message 应该清晰明了，说明本次提交的目的。因为我使用vscode开发工具，所以就找到了一款叫做 git-commit-plugin 的插件。\n\n<!--more-->\n\n目前，社区有多种 Commit message 的写法规范。本文介绍Angular 规范是目前使用最广的写法，比较合理和系统化，并且有配套的工具。前前端框架Angular.js采用的就是该规范。\n\n> Commit message 的格式\n\n\t每次提交，Commit message 都包括三个部分：header，body 和 footer。\n\n```text\n<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n但是每个公司或者个人的提交格式可能都不一致，而 git-commit-plugin 插件没有模板配置功能。所以在作者的基础上新增了一个提交模板配置功能。\n\n> 配置格式\n\n```json\n{\n    \"templateName\": \"Angular\",\n    \"templateContent\": \"<icon><space><type>(<scope>):<space><subject><enter><body><enter><footer>\"\n},\n{\n    \"templateName\": \"git-cz\",\n    \"templateContent\": \"<type>(<scope>):<space><icon><space><subject><enter><body><enter><footer>\"\n}\n```\n\n其中 &lt;space&gt; 代表空格,&lt;enter&gt; 代表换行,并且可以调整icon的位置。\n\n","slug":"基于git-commit-plugin插件的扩展","published":1,"updated":"2021-06-29T17:05:55.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf2yza5500ff5cs9hbs0gm7u","content":"<blockquote>\n<p>Git 每次提交代码，都要写 Commit message（提交说明），否则就不允许提交。但是，一般来说，commit message 应该清晰明了，说明本次提交的目的。因为我使用vscode开发工具，所以就找到了一款叫做 git-commit-plugin 的插件。</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>目前，社区有多种 Commit message 的写法规范。本文介绍Angular 规范是目前使用最广的写法，比较合理和系统化，并且有配套的工具。前前端框架Angular.js采用的就是该规范。</p>\n<blockquote>\n<p>Commit message 的格式</p>\n</blockquote>\n<pre><code>每次提交，Commit message 都包括三个部分：header，body 和 footer。\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class=\"line\">&lt;BLANK LINE&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;BLANK LINE&gt;</span><br><span class=\"line\">&lt;footer&gt;</span><br></pre></td></tr></table></figure>\n<p>但是每个公司或者个人的提交格式可能都不一致，而 git-commit-plugin 插件没有模板配置功能。所以在作者的基础上新增了一个提交模板配置功能。</p>\n<blockquote>\n<p>配置格式</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;templateName&quot;</span>: <span class=\"string\">&quot;Angular&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;templateContent&quot;</span>: <span class=\"string\">&quot;&lt;icon&gt;&lt;space&gt;&lt;type&gt;(&lt;scope&gt;):&lt;space&gt;&lt;subject&gt;&lt;enter&gt;&lt;body&gt;&lt;enter&gt;&lt;footer&gt;&quot;</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;templateName&quot;</span>: <span class=\"string\">&quot;git-cz&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;templateContent&quot;</span>: <span class=\"string\">&quot;&lt;type&gt;(&lt;scope&gt;):&lt;space&gt;&lt;icon&gt;&lt;space&gt;&lt;subject&gt;&lt;enter&gt;&lt;body&gt;&lt;enter&gt;&lt;footer&gt;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中 &lt;space&gt; 代表空格,&lt;enter&gt; 代表换行,并且可以调整icon的位置。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"<blockquote>\n<p>Git 每次提交代码，都要写 Commit message（提交说明），否则就不允许提交。但是，一般来说，commit message 应该清晰明了，说明本次提交的目的。因为我使用vscode开发工具，所以就找到了一款叫做 git-commit-plugin 的插件。</p>\n</blockquote>","more":"<p>目前，社区有多种 Commit message 的写法规范。本文介绍Angular 规范是目前使用最广的写法，比较合理和系统化，并且有配套的工具。前前端框架Angular.js采用的就是该规范。</p>\n<blockquote>\n<p>Commit message 的格式</p>\n</blockquote>\n<pre><code>每次提交，Commit message 都包括三个部分：header，body 和 footer。\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class=\"line\">&lt;BLANK LINE&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;BLANK LINE&gt;</span><br><span class=\"line\">&lt;footer&gt;</span><br></pre></td></tr></table></figure>\n<p>但是每个公司或者个人的提交格式可能都不一致，而 git-commit-plugin 插件没有模板配置功能。所以在作者的基础上新增了一个提交模板配置功能。</p>\n<blockquote>\n<p>配置格式</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;templateName&quot;</span>: <span class=\"string\">&quot;Angular&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;templateContent&quot;</span>: <span class=\"string\">&quot;&lt;icon&gt;&lt;space&gt;&lt;type&gt;(&lt;scope&gt;):&lt;space&gt;&lt;subject&gt;&lt;enter&gt;&lt;body&gt;&lt;enter&gt;&lt;footer&gt;&quot;</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;templateName&quot;</span>: <span class=\"string\">&quot;git-cz&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;templateContent&quot;</span>: <span class=\"string\">&quot;&lt;type&gt;(&lt;scope&gt;):&lt;space&gt;&lt;icon&gt;&lt;space&gt;&lt;subject&gt;&lt;enter&gt;&lt;body&gt;&lt;enter&gt;&lt;footer&gt;&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中 &lt;space&gt; 代表空格,&lt;enter&gt; 代表换行,并且可以调整icon的位置。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"clf2yza1s00015cs9dwgb0ips","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza24000i5cs932uyexo6"},{"post_id":"clf2yza22000f5cs960jt855e","category_id":"clf2yza21000c5cs93tvj44l5","_id":"clf2yza27000o5cs94nb6cvew"},{"post_id":"clf2yza1v00035cs9f0ikh3cf","category_id":"clf2yza21000c5cs93tvj44l5","_id":"clf2yza29000s5cs97vo3d9hs"},{"post_id":"clf2yza26000m5cs9fj0qfyw9","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza2a000v5cs9fp24c7i7"},{"post_id":"clf2yza1y00075cs9cp0i3p7p","category_id":"clf2yza21000c5cs93tvj44l5","_id":"clf2yza2b00105cs99srh7zeo"},{"post_id":"clf2yza27000n5cs9cqemewh5","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza2b00135cs965hsb354"},{"post_id":"clf2yza28000r5cs9gy88drz5","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza2d00165cs9bttr21dc"},{"post_id":"clf2yza2000095cs9hh8k203h","category_id":"clf2yza21000c5cs93tvj44l5","_id":"clf2yza2d001a5cs97915fbik"},{"post_id":"clf2yza29000u5cs97gwy0cni","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza2g001e5cs921vu5ppb"},{"post_id":"clf2yza2a000z5cs9bqxp01jw","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza2h001h5cs9hjqr6ecm"},{"post_id":"clf2yza21000b5cs9ebx4ggul","category_id":"clf2yza21000c5cs93tvj44l5","_id":"clf2yza2i001k5cs938o1200d"},{"post_id":"clf2yza24000h5cs9d8nh2x1t","category_id":"clf2yza2c00145cs99e27bohs","_id":"clf2yza2j001n5cs9gvq9fr9y"},{"post_id":"clf2yza2m001v5cs901m1by9m","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza2p00245cs92qz02jsc"},{"post_id":"clf2yza2m001v5cs901m1by9m","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza2q00275cs9385525zb"},{"post_id":"clf2yza2e001d5cs99sj4h4s0","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza2r002a5cs98blpc5t2"},{"post_id":"clf2yza2e001d5cs99sj4h4s0","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza2s002e5cs91krj07y0"},{"post_id":"clf2yza2n001x5cs9gen4ff6p","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza2t002i5cs91erf0o8x"},{"post_id":"clf2yza2n001x5cs9gen4ff6p","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza2u002l5cs97oes1kfw"},{"post_id":"clf2yza2o001z5cs985qc7paz","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza2v002o5cs94vkfhgoj"},{"post_id":"clf2yza2o001z5cs985qc7paz","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza2w002s5cs9blzchnzb"},{"post_id":"clf2yza2b00125cs95ooq8s0u","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza2w002v5cs92y3217kf"},{"post_id":"clf2yza2b00125cs95ooq8s0u","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza2x002z5cs91w7f7o0f"},{"post_id":"clf2yza2p00235cs9b4hjb3lz","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza2y00315cs9ekcn8p48"},{"post_id":"clf2yza2p00235cs9b4hjb3lz","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza2z00355cs9ep26cf1x"},{"post_id":"clf2yza2q00255cs9bzxbd7iv","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza2z00375cs945nj0guc"},{"post_id":"clf2yza2q00255cs9bzxbd7iv","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza30003b5cs9b3rg6btu"},{"post_id":"clf2yza2h001g5cs93bbf892b","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza31003e5cs9679q702v"},{"post_id":"clf2yza2h001g5cs93bbf892b","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza33003i5cs9ffzl5awo"},{"post_id":"clf2yza2r00295cs91r0xdo8o","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza33003l5cs958aw836o"},{"post_id":"clf2yza2r00295cs91r0xdo8o","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza34003n5cs9dg5i1qwq"},{"post_id":"clf2yza2r002c5cs9bsayagdm","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza35003r5cs9ckxw790c"},{"post_id":"clf2yza2r002c5cs9bsayagdm","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza35003u5cs9831c4pdk"},{"post_id":"clf2yza2h001j5cs9dq2h8b88","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza36003y5cs99h80grgw"},{"post_id":"clf2yza2h001j5cs9dq2h8b88","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3600405cs99v8wh2mz"},{"post_id":"clf2yza2t002h5cs90qngh4t8","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3700435cs97d2v1azc"},{"post_id":"clf2yza2t002h5cs90qngh4t8","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3800465cs9f2jrdlu3"},{"post_id":"clf2yza2t002j5cs98r2fe1gn","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza39004a5cs9a3o127x7"},{"post_id":"clf2yza2t002j5cs98r2fe1gn","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza39004c5cs94y0wgctf"},{"post_id":"clf2yza2c00155cs9cugscyn5","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3a004e5cs9bkad666y"},{"post_id":"clf2yza2c00155cs9cugscyn5","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3b004i5cs9c3qs0bsf"},{"post_id":"clf2yza2u002m5cs95vincu1h","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3c004l5cs9b460753w"},{"post_id":"clf2yza2u002m5cs95vincu1h","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3e004q5cs980dmarqg"},{"post_id":"clf2yza2v002q5cs9a8lid3sx","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3e004t5cs97r3n2jhm"},{"post_id":"clf2yza2v002q5cs9a8lid3sx","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3f004y5cs9dp1l5y86"},{"post_id":"clf2yza2i001m5cs90w2zarh3","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3g00505cs99tb8dgkl"},{"post_id":"clf2yza2i001m5cs90w2zarh3","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3h00545cs98wuw4ece"},{"post_id":"clf2yza2w002u5cs9efn94ur7","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3i00575cs9bo4wa5l9"},{"post_id":"clf2yza2w002u5cs9efn94ur7","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3j005b5cs98xbbds6b"},{"post_id":"clf2yza2x002x5cs9a6zvckcz","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3j005e5cs9b2z6gvf5"},{"post_id":"clf2yza2x002x5cs9a6zvckcz","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3k005g5cs9grx087q6"},{"post_id":"clf2yza2k001q5cs9h2jk9iux","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3l005l5cs9h6em6cca"},{"post_id":"clf2yza2k001q5cs9h2jk9iux","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3m005o5cs9dp408hvo"},{"post_id":"clf2yza2y00305cs9g7q774v5","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3n005s5cs9g9khcf14"},{"post_id":"clf2yza2y00305cs9g7q774v5","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3o005u5cs9cbk136b5"},{"post_id":"clf2yza2y00335cs9cwsg1xsk","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3p005y5cs91mlbdebc"},{"post_id":"clf2yza2y00335cs9cwsg1xsk","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3p00605cs903ziczo8"},{"post_id":"clf2yza2d00195cs91nj7ez2p","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3q00635cs9det85h8j"},{"post_id":"clf2yza2d00195cs91nj7ez2p","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3q00665cs97epba7o8"},{"post_id":"clf2yza2z00365cs9frvk2g43","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3q00685cs9hbulbn47"},{"post_id":"clf2yza2z00365cs9frvk2g43","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3r006a5cs9eyk9d3bp"},{"post_id":"clf2yza3000395cs90fa48sbx","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3r006b5cs98wbo4i96"},{"post_id":"clf2yza3000395cs90fa48sbx","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3r006d5cs98efo1dbk"},{"post_id":"clf2yza2l001t5cs9e4bner4f","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3r006e5cs94fs7ap47"},{"post_id":"clf2yza2l001t5cs9e4bner4f","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3r006g5cs99g6c7dmw"},{"post_id":"clf2yza31003d5cs93oqs6xwa","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3s006i5cs9h39dbfn5"},{"post_id":"clf2yza31003d5cs93oqs6xwa","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3s006l5cs961gn5ysb"},{"post_id":"clf2yza32003g5cs91imkbk3j","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3s006n5cs90ttv17ja"},{"post_id":"clf2yza32003g5cs91imkbk3j","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3s006q5cs9fvu66byx"},{"post_id":"clf2yza33003k5cs98bu81nql","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3s006s5cs91dpp4b7d"},{"post_id":"clf2yza33003k5cs98bu81nql","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3s006v5cs9962q3ae6"},{"post_id":"clf2yza33003m5cs91lbh247o","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3s006w5cs94la9csrz"},{"post_id":"clf2yza33003m5cs91lbh247o","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3t006y5cs9gkasflze"},{"post_id":"clf2yza34003p5cs948e5duat","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3t006z5cs9b5wke829"},{"post_id":"clf2yza34003p5cs948e5duat","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3t00705cs99ery93m7"},{"post_id":"clf2yza35003s5cs96plc7963","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3t00725cs9e8owctby"},{"post_id":"clf2yza35003s5cs96plc7963","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3t00735cs96xpz781t"},{"post_id":"clf2yza35003w5cs975o3dseq","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3t00765cs97a1tekmk"},{"post_id":"clf2yza35003w5cs975o3dseq","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3t00785cs9da7143xs"},{"post_id":"clf2yza36003z5cs9050j0yq6","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3u007b5cs9f1rrg90l"},{"post_id":"clf2yza36003z5cs9050j0yq6","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3u007d5cs919o4h8o2"},{"post_id":"clf2yza3700425cs9abvd09zm","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3u007g5cs98izpc5n6"},{"post_id":"clf2yza3700425cs9abvd09zm","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3u007i5cs9e4vs07rj"},{"post_id":"clf2yza3700455cs9fwsjgia2","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3u007k5cs90btvf9w0"},{"post_id":"clf2yza3700455cs9fwsjgia2","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3u007m5cs9130pccey"},{"post_id":"clf2yza3800485cs9eeyghly9","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3v007p5cs9c8ra9e31"},{"post_id":"clf2yza3800485cs9eeyghly9","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3v007r5cs9f63meefm"},{"post_id":"clf2yza39004b5cs97jr880k4","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3v007t5cs90tvbg4g6"},{"post_id":"clf2yza39004b5cs97jr880k4","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3v007v5cs95fmram8s"},{"post_id":"clf2yza3a004d5cs90nmpehp5","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3v007y5cs9athnc22q"},{"post_id":"clf2yza3a004d5cs90nmpehp5","category_id":"clf2yza2m001u5cs91qor98fm","_id":"clf2yza3v007z5cs9h8zgbnav"},{"post_id":"clf2yza3e004r5cs9c7vaa25g","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3v00805cs9dz7wdjgu"},{"post_id":"clf2yza3e004r5cs9c7vaa25g","category_id":"clf2yza3c004o5cs9a1jp8v96","_id":"clf2yza3w00825cs9b16qg6ys"},{"post_id":"clf2yza3b004g5cs9ab16b89y","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3w00835cs9d9gx0yeo"},{"post_id":"clf2yza3b004g5cs9ab16b89y","category_id":"clf2yza3c004o5cs9a1jp8v96","_id":"clf2yza3w00855cs946xs8vco"},{"post_id":"clf2yza3f004v5cs9e9e09lht","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3w00865cs9h1f7hrcl"},{"post_id":"clf2yza3f004v5cs9e9e09lht","category_id":"clf2yza3c004o5cs9a1jp8v96","_id":"clf2yza3w00885cs9h8dp014r"},{"post_id":"clf2yza3g004z5cs94yl15wd2","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3w008a5cs98vcn7491"},{"post_id":"clf2yza3g004z5cs94yl15wd2","category_id":"clf2yza3c004o5cs9a1jp8v96","_id":"clf2yza3x008d5cs904x4gzlt"},{"post_id":"clf2yza3b004j5cs939t379jn","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3x008f5cs958kvhb1k"},{"post_id":"clf2yza3b004j5cs939t379jn","category_id":"clf2yza3c004o5cs9a1jp8v96","_id":"clf2yza3x008i5cs91jdb36ld"},{"post_id":"clf2yza3g00525cs9hz89118n","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3x008j5cs9fkwac7i4"},{"post_id":"clf2yza3g00525cs9hz89118n","category_id":"clf2yza3c004o5cs9a1jp8v96","_id":"clf2yza3x008k5cs9erz79zag"},{"post_id":"clf2yza3i00565cs94w3kdtix","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3x008n5cs9db0g5d7z"},{"post_id":"clf2yza3i00565cs94w3kdtix","category_id":"clf2yza3c004o5cs9a1jp8v96","_id":"clf2yza3x008p5cs9ewxj583g"},{"post_id":"clf2yza3c004n5cs9e2vq2k3z","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3y008s5cs9cihycibo"},{"post_id":"clf2yza3c004n5cs9e2vq2k3z","category_id":"clf2yza3c004o5cs9a1jp8v96","_id":"clf2yza3y008t5cs9cn91g177"},{"post_id":"clf2yza3i00595cs9a1thc5uv","category_id":"clf2yza2e001b5cs9enni6x86","_id":"clf2yza3y008v5cs9byx7au65"},{"post_id":"clf2yza3i00595cs9a1thc5uv","category_id":"clf2yza3c004o5cs9a1jp8v96","_id":"clf2yza3y008w5cs9akf85yaf"},{"post_id":"clf2yza3j005d5cs9dy7k8m42","category_id":"clf2yza3k005i5cs9gwmubvjo","_id":"clf2yza3y008y5cs973jghz2t"},{"post_id":"clf2yza3n005t5cs91sjuckcu","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza3y00905cs90f0p3d08"},{"post_id":"clf2yza3k005f5cs9f9c979ka","category_id":"clf2yza3m005r5cs90maq3rlf","_id":"clf2yza3z00935cs98ejt4axw"},{"post_id":"clf2yza3o005w5cs9enqtc625","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza3z00955cs9hlp84sz7"},{"post_id":"clf2yza3p005z5cs9fm0pe9li","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza4000975cs92pj9bpdu"},{"post_id":"clf2yza3l005j5cs9297j2t21","category_id":"clf2yza3o005x5cs93x0u9der","_id":"clf2yza4000985cs93o1yaunz"},{"post_id":"clf2yza3p00625cs900l3fhg4","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza4000995cs9gyrs7uut"},{"post_id":"clf2yza3l005m5cs90hpjbz4s","category_id":"clf2yza3q00645cs9gx8p7yzj","_id":"clf2yza40009b5cs991mwbdyf"},{"post_id":"clf2yza3m005q5cs99hqr4049","category_id":"clf2yza3q00645cs9gx8p7yzj","_id":"clf2yza40009c5cs95v425yff"},{"post_id":"clf2yza5400fd5cs9b4ygh31z","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza5600fi5cs96gxeg69b"},{"post_id":"clf2yza5500ff5cs9hbs0gm7u","category_id":"clf2yza5600fk5cs97p10e38y","_id":"clf2yza5700fr5cs953i99t0s"},{"post_id":"clf2yza5400fc5cs9ae031jj5","category_id":"clf2yza1w00045cs97drlh1bd","_id":"clf2yza5800fx5cs95tkld0nh"},{"post_id":"clf2yza5400fc5cs9ae031jj5","category_id":"clf2yza5500fg5cs90h6l2jp0","_id":"clf2yza5800fy5cs95wi74eis"},{"post_id":"clf2yza5400fc5cs9ae031jj5","category_id":"clf2yza5600fo5cs9a2ms2aes","_id":"clf2yza5800fz5cs968mn1xbe"},{"post_id":"clf2yza5400fc5cs9ae031jj5","category_id":"clf2yza5700ft5cs97oupfysd","_id":"clf2yza5800g05cs9afz959kn"}],"PostTag":[{"post_id":"clf2yza1s00015cs9dwgb0ips","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza29000t5cs9chonaup3"},{"post_id":"clf2yza1s00015cs9dwgb0ips","tag_id":"clf2yza22000d5cs939137qxj","_id":"clf2yza2a000x5cs91cbbg1qk"},{"post_id":"clf2yza1s00015cs9dwgb0ips","tag_id":"clf2yza25000k5cs9dtyve69x","_id":"clf2yza2b00115cs92nl91ofz"},{"post_id":"clf2yza1v00035cs9f0ikh3cf","tag_id":"clf2yza28000q5cs91sps0u1p","_id":"clf2yza2d00185cs95ne2cxn8"},{"post_id":"clf2yza1v00035cs9f0ikh3cf","tag_id":"clf2yza2a000y5cs90poc97a2","_id":"clf2yza2e001c5cs92upv7phr"},{"post_id":"clf2yza1y00075cs9cp0i3p7p","tag_id":"clf2yza2d00175cs930fwbcg4","_id":"clf2yza2k001o5cs95be49olc"},{"post_id":"clf2yza1y00075cs9cp0i3p7p","tag_id":"clf2yza2a000y5cs90poc97a2","_id":"clf2yza2l001r5cs9b6hzcy4e"},{"post_id":"clf2yza2000095cs9hh8k203h","tag_id":"clf2yza2i001l5cs9gfrlcm20","_id":"clf2yza2n001y5cs9hntc19bd"},{"post_id":"clf2yza2000095cs9hh8k203h","tag_id":"clf2yza2a000y5cs90poc97a2","_id":"clf2yza2o00215cs9agtx66ng"},{"post_id":"clf2yza21000b5cs9ebx4ggul","tag_id":"clf2yza2n001w5cs97pn90is1","_id":"clf2yza2r002b5cs9029ff07o"},{"post_id":"clf2yza21000b5cs9ebx4ggul","tag_id":"clf2yza2a000y5cs90poc97a2","_id":"clf2yza2s002f5cs99ded2jm1"},{"post_id":"clf2yza22000f5cs960jt855e","tag_id":"clf2yza2a000y5cs90poc97a2","_id":"clf2yza2v002p5cs9h8a48e7e"},{"post_id":"clf2yza22000f5cs960jt855e","tag_id":"clf2yza2s002g5cs952pnaqt6","_id":"clf2yza2w002t5cs9fbin4tf2"},{"post_id":"clf2yza24000h5cs9d8nh2x1t","tag_id":"clf2yza2v002n5cs9gohh35ty","_id":"clf2yza30003c5cs98fuw52zb"},{"post_id":"clf2yza24000h5cs9d8nh2x1t","tag_id":"clf2yza2w002w5cs90biugvr3","_id":"clf2yza32003f5cs9gi7bao2t"},{"post_id":"clf2yza24000h5cs9d8nh2x1t","tag_id":"clf2yza2y00325cs97jpc6z1r","_id":"clf2yza33003j5cs98p3c7v6l"},{"post_id":"clf2yza26000m5cs9fj0qfyw9","tag_id":"clf2yza3000385cs96w4s0etb","_id":"clf2yza34003q5cs9781y0giy"},{"post_id":"clf2yza26000m5cs9fj0qfyw9","tag_id":"clf2yza32003h5cs956pr22g9","_id":"clf2yza35003t5cs9603zftbm"},{"post_id":"clf2yza26000m5cs9fj0qfyw9","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza36003x5cs9fkisfhmw"},{"post_id":"clf2yza27000n5cs9cqemewh5","tag_id":"clf2yza34003o5cs9782b5tsh","_id":"clf2yza3700445cs91x4ybf88"},{"post_id":"clf2yza27000n5cs9cqemewh5","tag_id":"clf2yza35003v5cs9bh2n5jki","_id":"clf2yza3800475cs904gu606c"},{"post_id":"clf2yza28000r5cs9gy88drz5","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza3b004h5cs9aylm7apf"},{"post_id":"clf2yza28000r5cs9gy88drz5","tag_id":"clf2yza3700415cs93anahz9o","_id":"clf2yza3b004k5cs934hbh3zt"},{"post_id":"clf2yza28000r5cs9gy88drz5","tag_id":"clf2yza3900495cs9d7rwbtuc","_id":"clf2yza3e004p5cs9hm0eef6i"},{"post_id":"clf2yza29000u5cs97gwy0cni","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza3e004s5cs96vn8bdto"},{"post_id":"clf2yza29000u5cs97gwy0cni","tag_id":"clf2yza3a004f5cs9dngc4s63","_id":"clf2yza3f004w5cs916ltbz5n"},{"post_id":"clf2yza2a000z5cs9bqxp01jw","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza3h00555cs940heba8j"},{"post_id":"clf2yza2a000z5cs9bqxp01jw","tag_id":"clf2yza3c004m5cs91jsjfni7","_id":"clf2yza3i00585cs9hyswgnpe"},{"post_id":"clf2yza2a000z5cs9bqxp01jw","tag_id":"clf2yza3a004f5cs9dngc4s63","_id":"clf2yza3j005c5cs9e1pp9z46"},{"post_id":"clf2yza2b00125cs95ooq8s0u","tag_id":"clf2yza3g00515cs9bi8e0i6g","_id":"clf2yza3l005k5cs9e7ro44s6"},{"post_id":"clf2yza2b00125cs95ooq8s0u","tag_id":"clf2yza3j005a5cs91boreesh","_id":"clf2yza3m005n5cs9b5kodevv"},{"post_id":"clf2yza3p005z5cs9fm0pe9li","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza3q00655cs9bjog69gs"},{"post_id":"clf2yza2c00155cs9cugscyn5","tag_id":"clf2yza3j005a5cs91boreesh","_id":"clf2yza3r006h5cs9ddudbx1y"},{"post_id":"clf2yza2c00155cs9cugscyn5","tag_id":"clf2yza3m005p5cs99b9ic456","_id":"clf2yza3s006j5cs9bnpndrij"},{"post_id":"clf2yza2c00155cs9cugscyn5","tag_id":"clf2yza3o005v5cs93wlf9sir","_id":"clf2yza3s006m5cs9epaq13ub"},{"post_id":"clf2yza2c00155cs9cugscyn5","tag_id":"clf2yza3p00615cs9750pfejx","_id":"clf2yza3s006o5cs98l10cnrb"},{"post_id":"clf2yza2c00155cs9cugscyn5","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza3s006r5cs99ue91gj3"},{"post_id":"clf2yza2c00155cs9cugscyn5","tag_id":"clf2yza3r006c5cs94kwr1dap","_id":"clf2yza3s006t5cs92x48ezjd"},{"post_id":"clf2yza2d00195cs91nj7ez2p","tag_id":"clf2yza3m005p5cs99b9ic456","_id":"clf2yza3t00755cs90kcpcklh"},{"post_id":"clf2yza2d00195cs91nj7ez2p","tag_id":"clf2yza3o005v5cs93wlf9sir","_id":"clf2yza3t00775cs97xv5h5a8"},{"post_id":"clf2yza2d00195cs91nj7ez2p","tag_id":"clf2yza3s006p5cs9gi1mfplb","_id":"clf2yza3u007a5cs96ji9b8og"},{"post_id":"clf2yza2d00195cs91nj7ez2p","tag_id":"clf2yza3s006u5cs96az12by4","_id":"clf2yza3u007c5cs9e2a8d262"},{"post_id":"clf2yza2d00195cs91nj7ez2p","tag_id":"clf2yza3t006x5cs95qqqhqxg","_id":"clf2yza3u007f5cs9cjcy1sv5"},{"post_id":"clf2yza2d00195cs91nj7ez2p","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza3u007h5cs98fiz9d8c"},{"post_id":"clf2yza2e001d5cs99sj4h4s0","tag_id":"clf2yza3t00745cs90kp30l92","_id":"clf2yza3u007l5cs9hzov9xlt"},{"post_id":"clf2yza2e001d5cs99sj4h4s0","tag_id":"clf2yza3t00795cs9f6f7765b","_id":"clf2yza3u007n5cs90zu555iz"},{"post_id":"clf2yza2e001d5cs99sj4h4s0","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza3v007q5cs94gq13wdc"},{"post_id":"clf2yza2h001g5cs93bbf892b","tag_id":"clf2yza3u007j5cs9evrrdjqx","_id":"clf2yza3v007u5cs97pje5s6x"},{"post_id":"clf2yza2h001g5cs93bbf892b","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza3v007w5cs9d0mnaojd"},{"post_id":"clf2yza2h001j5cs9dq2h8b88","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza3w00895cs9huvrbkv9"},{"post_id":"clf2yza2h001j5cs9dq2h8b88","tag_id":"clf2yza3v007x5cs95wnc2gfe","_id":"clf2yza3w008b5cs92yfv8xiv"},{"post_id":"clf2yza2h001j5cs9dq2h8b88","tag_id":"clf2yza3w00815cs929qzfwf1","_id":"clf2yza3x008e5cs9g6opd2ya"},{"post_id":"clf2yza2h001j5cs9dq2h8b88","tag_id":"clf2yza3w00845cs93lczcl35","_id":"clf2yza3x008g5cs9gl9ae2fz"},{"post_id":"clf2yza2i001m5cs90w2zarh3","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza3x008m5cs950wf20gd"},{"post_id":"clf2yza2i001m5cs90w2zarh3","tag_id":"clf2yza3w008c5cs9fbqxhjf2","_id":"clf2yza3x008o5cs98a5k4er6"},{"post_id":"clf2yza2i001m5cs90w2zarh3","tag_id":"clf2yza3x008h5cs9h2hma3e7","_id":"clf2yza3y008r5cs9402icf0t"},{"post_id":"clf2yza2k001q5cs9h2jk9iux","tag_id":"clf2yza3x008l5cs9fhgret1v","_id":"clf2yza3y008z5cs97uuf01df"},{"post_id":"clf2yza2k001q5cs9h2jk9iux","tag_id":"clf2yza3x008q5cs929qx56tl","_id":"clf2yza3y00915cs99lfqcuyl"},{"post_id":"clf2yza2k001q5cs9h2jk9iux","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza3z00945cs9d8g7gpmu"},{"post_id":"clf2yza2l001t5cs9e4bner4f","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza42009h5cs937b3g2n8"},{"post_id":"clf2yza2l001t5cs9e4bner4f","tag_id":"clf2yza3y00925cs92tfb1rqi","_id":"clf2yza42009i5cs9b7l8a66k"},{"post_id":"clf2yza2l001t5cs9e4bner4f","tag_id":"clf2yza3z00965cs9gwymamyn","_id":"clf2yza43009k5cs9g8lpfwc9"},{"post_id":"clf2yza2l001t5cs9e4bner4f","tag_id":"clf2yza40009a5cs9ayvseizk","_id":"clf2yza43009l5cs90tr93d8t"},{"post_id":"clf2yza2l001t5cs9e4bner4f","tag_id":"clf2yza40009d5cs9g34v69ku","_id":"clf2yza43009n5cs94kx12rpl"},{"post_id":"clf2yza2l001t5cs9e4bner4f","tag_id":"clf2yza40009e5cs96huq2a1e","_id":"clf2yza43009o5cs9b56jad81"},{"post_id":"clf2yza2l001t5cs9e4bner4f","tag_id":"clf2yza41009f5cs94svmbvq3","_id":"clf2yza44009q5cs9051l3uqy"},{"post_id":"clf2yza2m001v5cs901m1by9m","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza44009r5cs924r307uk"},{"post_id":"clf2yza2m001v5cs901m1by9m","tag_id":"clf2yza42009j5cs9akwv33bt","_id":"clf2yza44009t5cs921qpa9z8"},{"post_id":"clf2yza2m001v5cs901m1by9m","tag_id":"clf2yza43009m5cs99t0ma426","_id":"clf2yza44009u5cs95t281r38"},{"post_id":"clf2yza2n001x5cs9gen4ff6p","tag_id":"clf2yza43009p5cs9denj9gvq","_id":"clf2yza46009x5cs9d40rhbb4"},{"post_id":"clf2yza2n001x5cs9gen4ff6p","tag_id":"clf2yza44009s5cs90mfddoci","_id":"clf2yza46009y5cs99uln1h6x"},{"post_id":"clf2yza2n001x5cs9gen4ff6p","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4600a05cs92lfu8ryf"},{"post_id":"clf2yza2o001z5cs985qc7paz","tag_id":"clf2yza45009w5cs99u0ggil1","_id":"clf2yza4700a35cs91yy39k3o"},{"post_id":"clf2yza2o001z5cs985qc7paz","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4700a45cs950y5coti"},{"post_id":"clf2yza2o001z5cs985qc7paz","tag_id":"clf2yza4600a15cs9ae8fhf39","_id":"clf2yza4700a65cs9caw61svw"},{"post_id":"clf2yza2p00235cs9b4hjb3lz","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4900a95cs92rkl49jo"},{"post_id":"clf2yza2p00235cs9b4hjb3lz","tag_id":"clf2yza4700a55cs9dohhevh5","_id":"clf2yza4900aa5cs96qepfgra"},{"post_id":"clf2yza2p00235cs9b4hjb3lz","tag_id":"clf2yza4900a75cs9b1222ldv","_id":"clf2yza4900ac5cs9gk7h2lix"},{"post_id":"clf2yza2q00255cs9bzxbd7iv","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4900ae5cs9bjebhxar"},{"post_id":"clf2yza2q00255cs9bzxbd7iv","tag_id":"clf2yza4900ab5cs9btxbcool","_id":"clf2yza4a00af5cs9g9wg3lgo"},{"post_id":"clf2yza2r00295cs91r0xdo8o","tag_id":"clf2yza4900ad5cs9381eescv","_id":"clf2yza4b00ai5cs9esj2e1ii"},{"post_id":"clf2yza2r00295cs91r0xdo8o","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4b00aj5cs92hw4epo7"},{"post_id":"clf2yza2r002c5cs9bsayagdm","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4b00am5cs99xpxhw99"},{"post_id":"clf2yza2r002c5cs9bsayagdm","tag_id":"clf2yza4b00ak5cs9dii48o8o","_id":"clf2yza4b00an5cs97f7k1ynz"},{"post_id":"clf2yza2t002h5cs90qngh4t8","tag_id":"clf2yza4b00al5cs9ajklbdiw","_id":"clf2yza4c00aq5cs96pzrdije"},{"post_id":"clf2yza2t002h5cs90qngh4t8","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4d00ar5cs96hn03yot"},{"post_id":"clf2yza2t002j5cs98r2fe1gn","tag_id":"clf2yza4c00ap5cs93qr0ffls","_id":"clf2yza4d00au5cs9hiiq0h07"},{"post_id":"clf2yza2t002j5cs98r2fe1gn","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4d00av5cs9c3rc1kmb"},{"post_id":"clf2yza2u002m5cs95vincu1h","tag_id":"clf2yza4d00at5cs95qdjfrz3","_id":"clf2yza4e00ay5cs9b5q87e29"},{"post_id":"clf2yza2u002m5cs95vincu1h","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4e00az5cs9cy03gnej"},{"post_id":"clf2yza2v002q5cs9a8lid3sx","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4e00b25cs91jqifa0u"},{"post_id":"clf2yza2v002q5cs9a8lid3sx","tag_id":"clf2yza4c00ap5cs93qr0ffls","_id":"clf2yza4e00b35cs995wkhwfo"},{"post_id":"clf2yza2w002u5cs9efn94ur7","tag_id":"clf2yza4c00ap5cs93qr0ffls","_id":"clf2yza4f00b65cs91rf88q9w"},{"post_id":"clf2yza2w002u5cs9efn94ur7","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4f00b75cs93numhpbr"},{"post_id":"clf2yza2x002x5cs9a6zvckcz","tag_id":"clf2yza4f00b55cs92m7v7axb","_id":"clf2yza4f00ba5cs93qfn4f9l"},{"post_id":"clf2yza2x002x5cs9a6zvckcz","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4f00bb5cs9165fb1q9"},{"post_id":"clf2yza2y00305cs9g7q774v5","tag_id":"clf2yza3g00515cs9bi8e0i6g","_id":"clf2yza4f00bd5cs93ycifask"},{"post_id":"clf2yza2y00335cs9cwsg1xsk","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4g00bg5cs9ainpc4xy"},{"post_id":"clf2yza2y00335cs9cwsg1xsk","tag_id":"clf2yza4g00be5cs93kkoabb4","_id":"clf2yza4g00bh5cs95jvq0a1m"},{"post_id":"clf2yza2z00365cs9frvk2g43","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4h00bk5cs9ahc2eli4"},{"post_id":"clf2yza2z00365cs9frvk2g43","tag_id":"clf2yza4g00bi5cs94fr45ox9","_id":"clf2yza4h00bl5cs97uqsbkm2"},{"post_id":"clf2yza3000395cs90fa48sbx","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4h00bp5cs983j22a61"},{"post_id":"clf2yza3000395cs90fa48sbx","tag_id":"clf2yza4h00bm5cs98f199rm9","_id":"clf2yza4h00bq5cs92r6b0s1x"},{"post_id":"clf2yza3000395cs90fa48sbx","tag_id":"clf2yza4h00bn5cs94mdr6qn3","_id":"clf2yza4h00bs5cs97ttj4g1d"},{"post_id":"clf2yza31003d5cs93oqs6xwa","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4i00bu5cs9exuy0rji"},{"post_id":"clf2yza31003d5cs93oqs6xwa","tag_id":"clf2yza4h00br5cs90s9wa94k","_id":"clf2yza4i00bv5cs9e288eyel"},{"post_id":"clf2yza32003g5cs91imkbk3j","tag_id":"clf2yza4h00bt5cs9b7mnenea","_id":"clf2yza4i00by5cs9hqahhb6y"},{"post_id":"clf2yza32003g5cs91imkbk3j","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4i00bz5cs96egpaipk"},{"post_id":"clf2yza33003k5cs98bu81nql","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4j00c25cs9hsg67lm4"},{"post_id":"clf2yza33003k5cs98bu81nql","tag_id":"clf2yza4i00c05cs97aqvbxnn","_id":"clf2yza4j00c35cs90tr4aerq"},{"post_id":"clf2yza33003m5cs91lbh247o","tag_id":"clf2yza44009s5cs90mfddoci","_id":"clf2yza4j00c65cs943y7gplo"},{"post_id":"clf2yza33003m5cs91lbh247o","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4j00c75cs9btuzgadt"},{"post_id":"clf2yza34003p5cs948e5duat","tag_id":"clf2yza4j00c55cs954jigmxc","_id":"clf2yza4k00ca5cs9320k9zue"},{"post_id":"clf2yza34003p5cs948e5duat","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4k00cb5cs91g84gz5l"},{"post_id":"clf2yza35003s5cs96plc7963","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4k00cg5cs9fcw0elqh"},{"post_id":"clf2yza35003s5cs96plc7963","tag_id":"clf2yza4k00cc5cs93vrob7ps","_id":"clf2yza4k00ch5cs9dwecamm5"},{"post_id":"clf2yza35003s5cs96plc7963","tag_id":"clf2yza4k00cd5cs93fw40o91","_id":"clf2yza4l00cj5cs9fyd5fwi9"},{"post_id":"clf2yza35003s5cs96plc7963","tag_id":"clf2yza4k00ce5cs9186h2ud7","_id":"clf2yza4l00ck5cs95m0m79qd"},{"post_id":"clf2yza35003w5cs975o3dseq","tag_id":"clf2yza4k00cf5cs9glknfq0e","_id":"clf2yza4l00cn5cs99o7rbwdo"},{"post_id":"clf2yza35003w5cs975o3dseq","tag_id":"clf2yza4g00be5cs93kkoabb4","_id":"clf2yza4l00co5cs9gvqdbf82"},{"post_id":"clf2yza35003w5cs975o3dseq","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4l00cq5cs93wsa8znw"},{"post_id":"clf2yza36003z5cs9050j0yq6","tag_id":"clf2yza4l00cm5cs96uiz07hv","_id":"clf2yza4m00ct5cs9dlfy6wk6"},{"post_id":"clf2yza36003z5cs9050j0yq6","tag_id":"clf2yza4l00cp5cs9bz5s22t5","_id":"clf2yza4m00cu5cs9hkrb1wyb"},{"post_id":"clf2yza36003z5cs9050j0yq6","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4m00cw5cs92bu5biq3"},{"post_id":"clf2yza3700425cs9abvd09zm","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4m00cy5cs9as0i4rty"},{"post_id":"clf2yza3700425cs9abvd09zm","tag_id":"clf2yza4m00cv5cs91kqie45v","_id":"clf2yza4m00cz5cs95ajzhvtq"},{"post_id":"clf2yza3700455cs9fwsjgia2","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4n00d25cs92558110a"},{"post_id":"clf2yza3700455cs9fwsjgia2","tag_id":"clf2yza4m00d05cs91f8idf59","_id":"clf2yza4n00d35cs93q92c394"},{"post_id":"clf2yza3800485cs9eeyghly9","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4n00d75cs9ey8ya52p"},{"post_id":"clf2yza3800485cs9eeyghly9","tag_id":"clf2yza4n00d45cs9djoy3jo9","_id":"clf2yza4o00d85cs9art955c3"},{"post_id":"clf2yza3800485cs9eeyghly9","tag_id":"clf2yza4n00d55cs933crh4ic","_id":"clf2yza4o00da5cs96jk3asef"},{"post_id":"clf2yza39004b5cs97jr880k4","tag_id":"clf2yza4n00d65cs9btffe464","_id":"clf2yza4p00dd5cs97nyrh6m0"},{"post_id":"clf2yza39004b5cs97jr880k4","tag_id":"clf2yza4o00d95cs9dajb8zjz","_id":"clf2yza4p00de5cs9520jgazy"},{"post_id":"clf2yza39004b5cs97jr880k4","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4p00dg5cs94heldi4y"},{"post_id":"clf2yza3a004d5cs90nmpehp5","tag_id":"clf2yza3q00675cs9ctwvbsu6","_id":"clf2yza4p00dh5cs98wt77m79"},{"post_id":"clf2yza3b004g5cs9ab16b89y","tag_id":"clf2yza4p00df5cs91r5abiqi","_id":"clf2yza4p00dj5cs9horp2gmc"},{"post_id":"clf2yza3b004j5cs939t379jn","tag_id":"clf2yza4b00al5cs9ajklbdiw","_id":"clf2yza4q00dm5cs9fo3ygacd"},{"post_id":"clf2yza3b004j5cs939t379jn","tag_id":"clf2yza4p00df5cs91r5abiqi","_id":"clf2yza4q00dn5cs95d0s7qd3"},{"post_id":"clf2yza3c004n5cs9e2vq2k3z","tag_id":"clf2yza43009m5cs99t0ma426","_id":"clf2yza4r00dr5cs99iac94u0"},{"post_id":"clf2yza3c004n5cs9e2vq2k3z","tag_id":"clf2yza4700a55cs9dohhevh5","_id":"clf2yza4r00ds5cs94xbxdmcg"},{"post_id":"clf2yza3c004n5cs9e2vq2k3z","tag_id":"clf2yza4p00df5cs91r5abiqi","_id":"clf2yza4s00du5cs9hjutf004"},{"post_id":"clf2yza3e004r5cs9c7vaa25g","tag_id":"clf2yza4p00df5cs91r5abiqi","_id":"clf2yza4s00dw5cs9b0to6e3l"},{"post_id":"clf2yza3e004r5cs9c7vaa25g","tag_id":"clf2yza4r00dt5cs9gafhcpoj","_id":"clf2yza4s00dx5cs92hy92gf7"},{"post_id":"clf2yza3f004v5cs9e9e09lht","tag_id":"clf2yza4p00df5cs91r5abiqi","_id":"clf2yza4t00e15cs90kvn2n4o"},{"post_id":"clf2yza3f004v5cs9e9e09lht","tag_id":"clf2yza4s00dy5cs9db8m788h","_id":"clf2yza4t00e25cs99br71ykg"},{"post_id":"clf2yza3f004v5cs9e9e09lht","tag_id":"clf2yza4s00dz5cs9fncfc9yz","_id":"clf2yza4t00e45cs94xkwgm3g"},{"post_id":"clf2yza3g004z5cs94yl15wd2","tag_id":"clf2yza4p00df5cs91r5abiqi","_id":"clf2yza4t00e55cs9bmsfaem4"},{"post_id":"clf2yza3g00525cs9hz89118n","tag_id":"clf2yza4p00df5cs91r5abiqi","_id":"clf2yza4u00e85cs91whbfbsg"},{"post_id":"clf2yza3g00525cs9hz89118n","tag_id":"clf2yza4t00e65cs98efnc773","_id":"clf2yza4u00e95cs9344sfabk"},{"post_id":"clf2yza3i00565cs94w3kdtix","tag_id":"clf2yza4p00df5cs91r5abiqi","_id":"clf2yza4u00ec5cs919kp7zge"},{"post_id":"clf2yza3i00565cs94w3kdtix","tag_id":"clf2yza4u00ea5cs95ah970ug","_id":"clf2yza4u00ed5cs9dtbg8zn5"},{"post_id":"clf2yza3i00595cs9a1thc5uv","tag_id":"clf2yza4p00df5cs91r5abiqi","_id":"clf2yza4x00ef5cs9fhv66upp"},{"post_id":"clf2yza3j005d5cs9dy7k8m42","tag_id":"clf2yza4u00ee5cs95cc9e16r","_id":"clf2yza4x00eh5cs99sp8h7bt"},{"post_id":"clf2yza3k005f5cs9f9c979ka","tag_id":"clf2yza4x00eg5cs9a86ngfj5","_id":"clf2yza4y00ej5cs9co6i9u59"},{"post_id":"clf2yza3l005j5cs9297j2t21","tag_id":"clf2yza4x00ei5cs99en63laz","_id":"clf2yza4y00en5cs9cy0d0kw5"},{"post_id":"clf2yza3l005j5cs9297j2t21","tag_id":"clf2yza4y00ek5cs9g6ocdkau","_id":"clf2yza4y00eo5cs94mnr0rdo"},{"post_id":"clf2yza3l005j5cs9297j2t21","tag_id":"clf2yza4y00el5cs90iftfrs0","_id":"clf2yza4y00eq5cs9gef0fjcx"},{"post_id":"clf2yza3l005m5cs90hpjbz4s","tag_id":"clf2yza4y00em5cs9gxca17x0","_id":"clf2yza4z00es5cs94f5fcuo8"},{"post_id":"clf2yza3l005m5cs90hpjbz4s","tag_id":"clf2yza4x00ei5cs99en63laz","_id":"clf2yza4z00et5cs907nr8zpc"},{"post_id":"clf2yza3m005q5cs99hqr4049","tag_id":"clf2yza4x00ei5cs99en63laz","_id":"clf2yza4z00ew5cs9ay3hga6u"},{"post_id":"clf2yza3m005q5cs99hqr4049","tag_id":"clf2yza4z00eu5cs90zbf7jdh","_id":"clf2yza4z00ex5cs9hhx08ouv"},{"post_id":"clf2yza3n005t5cs91sjuckcu","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza5000f05cs90ziif2bw"},{"post_id":"clf2yza3n005t5cs91sjuckcu","tag_id":"clf2yza4z00ev5cs9df3x6qef","_id":"clf2yza5000f15cs968az27zv"},{"post_id":"clf2yza3n005t5cs91sjuckcu","tag_id":"clf2yza4z00ey5cs960r08rdf","_id":"clf2yza5000f35cs9gm3z75xr"},{"post_id":"clf2yza3o005w5cs9enqtc625","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza5000f65cs9hcvmdy4b"},{"post_id":"clf2yza3o005w5cs9enqtc625","tag_id":"clf2yza4z00ey5cs960r08rdf","_id":"clf2yza5000f75cs928hx6x40"},{"post_id":"clf2yza3o005w5cs9enqtc625","tag_id":"clf2yza5000f25cs98pjr949g","_id":"clf2yza5100f85cs980xk4kmd"},{"post_id":"clf2yza3o005w5cs9enqtc625","tag_id":"clf2yza4z00ev5cs9df3x6qef","_id":"clf2yza5100f95cs96go59vyw"},{"post_id":"clf2yza3p00625cs900l3fhg4","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza5100fa5cs99b6wghhi"},{"post_id":"clf2yza3p00625cs900l3fhg4","tag_id":"clf2yza5000f55cs972sgdw19","_id":"clf2yza5100fb5cs93jdha0bw"},{"post_id":"clf2yza5500ff5cs9hbs0gm7u","tag_id":"clf2yza4y00ek5cs9g6ocdkau","_id":"clf2yza5600fh5cs98xbh3evv"},{"post_id":"clf2yza5500ff5cs9hbs0gm7u","tag_id":"clf2yza4x00ei5cs99en63laz","_id":"clf2yza5600fl5cs90htf7e27"},{"post_id":"clf2yza5500ff5cs9hbs0gm7u","tag_id":"clf2yza4y00el5cs90iftfrs0","_id":"clf2yza5600fm5cs99p4x5j45"},{"post_id":"clf2yza5400fc5cs9ae031jj5","tag_id":"clf2yza32003h5cs956pr22g9","_id":"clf2yza5700fp5cs988h1edsj"},{"post_id":"clf2yza5400fc5cs9ae031jj5","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza5700fq5cs9gj7jhv97"},{"post_id":"clf2yza5400fc5cs9ae031jj5","tag_id":"clf2yza5500fe5cs98ryse2lf","_id":"clf2yza5700fs5cs9c13kaubs"},{"post_id":"clf2yza5400fc5cs9ae031jj5","tag_id":"clf2yza5600fj5cs91upi137u","_id":"clf2yza5700fu5cs9cd4te27n"},{"post_id":"clf2yza5400fd5cs9b4ygh31z","tag_id":"clf2yza1x00055cs9ax0odtcv","_id":"clf2yza5700fv5cs94h0b82to"},{"post_id":"clf2yza5400fd5cs9b4ygh31z","tag_id":"clf2yza5600fn5cs974i2ftdg","_id":"clf2yza5700fw5cs9hrkkhqoe"}],"Tag":[{"name":".Net Core","_id":"clf2yza1x00055cs9ax0odtcv"},{"name":"链路追踪","_id":"clf2yza22000d5cs939137qxj"},{"name":"ApiLinkMonitor","_id":"clf2yza25000k5cs9dtyve69x"},{"name":"Dio","_id":"clf2yza28000q5cs91sps0u1p"},{"name":"Flutter","_id":"clf2yza2a000y5cs90poc97a2"},{"name":"OdinUtils","_id":"clf2yza2d00175cs930fwbcg4"},{"name":"Plugin","_id":"clf2yza2i001l5cs9gfrlcm20"},{"name":"source-gen","_id":"clf2yza2n001w5cs97pn90is1"},{"name":"reflectable","_id":"clf2yza2s002g5cs952pnaqt6"},{"name":"Hexo","_id":"clf2yza2v002n5cs9gohh35ty"},{"name":"Seo","_id":"clf2yza2w002w5cs90biugvr3"},{"name":"Pure","_id":"clf2yza2y00325cs97jpc6z1r"},{"name":"IdentityServer4","_id":"clf2yza3000385cs96w4s0etb"},{"name":"Mysql","_id":"clf2yza32003h5cs956pr22g9"},{"name":"SqlSugar","_id":"clf2yza34003o5cs9782b5tsh"},{"name":"Cap","_id":"clf2yza35003v5cs9bh2n5jki"},{"name":"Json","_id":"clf2yza3700415cs93anahz9o"},{"name":"Long类型数据","_id":"clf2yza3900495cs9d7rwbtuc"},{"name":"Log","_id":"clf2yza3a004f5cs9dngc4s63"},{"name":"Serilog","_id":"clf2yza3c004m5cs91jsjfni7"},{"name":"vue","_id":"clf2yza3g00515cs9bi8e0i6g"},{"name":"插值语法","_id":"clf2yza3j005a5cs91boreesh"},{"name":"v-bind","_id":"clf2yza3m005p5cs99b9ic456"},{"name":"v-model","_id":"clf2yza3o005v5cs93wlf9sir"},{"name":"模板语法","_id":"clf2yza3p00615cs9750pfejx"},{"name":"vue2","_id":"clf2yza3q00675cs9ctwvbsu6"},{"name":"指令语法","_id":"clf2yza3r006c5cs94kwr1dap"},{"name":"数据绑定","_id":"clf2yza3s006p5cs9gi1mfplb"},{"name":"单向绑定","_id":"clf2yza3s006u5cs96az12by4"},{"name":"双向绑定","_id":"clf2yza3t006x5cs95qqqhqxg"},{"name":"el","_id":"clf2yza3t00745cs90kp30l92"},{"name":"data","_id":"clf2yza3t00795cs9f6f7765b"},{"name":"mvvm","_id":"clf2yza3u007j5cs9evrrdjqx"},{"name":"JavaScript","_id":"clf2yza3v007x5cs95wnc2gfe"},{"name":"数据代理","_id":"clf2yza3w00815cs929qzfwf1"},{"name":"defineProperty","_id":"clf2yza3w00845cs93lczcl35"},{"name":"@click","_id":"clf2yza3w008c5cs9fbqxhjf2"},{"name":"eventObject","_id":"clf2yza3x008h5cs9h2hma3e7"},{"name":"keydown","_id":"clf2yza3x008l5cs9fhgret1v"},{"name":"keyup","_id":"clf2yza3x008q5cs929qx56tl"},{"name":"prevent","_id":"clf2yza3y00925cs92tfb1rqi"},{"name":"stop","_id":"clf2yza3z00965cs9gwymamyn"},{"name":"once","_id":"clf2yza40009a5cs9ayvseizk"},{"name":"capture","_id":"clf2yza40009d5cs9g34v69ku"},{"name":"self","_id":"clf2yza40009e5cs96huq2a1e"},{"name":"passive","_id":"clf2yza41009f5cs94svmbvq3"},{"name":"计算属性","_id":"clf2yza42009j5cs9akwv33bt"},{"name":"computed","_id":"clf2yza43009m5cs99t0ma426"},{"name":"class","_id":"clf2yza43009p5cs9denj9gvq"},{"name":"style","_id":"clf2yza44009s5cs90mfddoci"},{"name":"v-指令","_id":"clf2yza45009w5cs99u0ggil1"},{"name":"指令","_id":"clf2yza4600a15cs9ae8fhf39"},{"name":"watch","_id":"clf2yza4700a55cs9dohhevh5"},{"name":"监视属性","_id":"clf2yza4900a75cs9b1222ldv"},{"name":"vue.set","_id":"clf2yza4900ab5cs9btxbcool"},{"name":"Form","_id":"clf2yza4900ad5cs9381eescv"},{"name":"Filter","_id":"clf2yza4b00ak5cs9dii48o8o"},{"name":"生命周期","_id":"clf2yza4b00al5cs9ajklbdiw"},{"name":"component","_id":"clf2yza4c00ap5cs93qr0ffls"},{"name":"components","_id":"clf2yza4d00at5cs95qdjfrz3"},{"name":"cli","_id":"clf2yza4f00b55cs92m7v7axb"},{"name":"props","_id":"clf2yza4g00be5cs93kkoabb4"},{"name":"ref属性","_id":"clf2yza4g00bi5cs94fr45ox9"},{"name":"maxins","_id":"clf2yza4h00bm5cs98f199rm9"},{"name":"混入","_id":"clf2yza4h00bn5cs94mdr6qn3"},{"name":"plugins","_id":"clf2yza4h00br5cs90s9wa94k"},{"name":"webstorage","_id":"clf2yza4h00bt5cs9b7mnenea"},{"name":"自定义事件","_id":"clf2yza4i00c05cs97aqvbxnn"},{"name":"eventbus","_id":"clf2yza4j00c55cs954jigmxc"},{"name":"消息订阅","_id":"clf2yza4k00cc5cs93vrob7ps"},{"name":"subscribe","_id":"clf2yza4k00cd5cs93fw40o91"},{"name":"unsubscribe","_id":"clf2yza4k00ce5cs9186h2ud7"},{"name":"nexttick","_id":"clf2yza4k00cf5cs9glknfq0e"},{"name":"proxy","_id":"clf2yza4l00cm5cs96uiz07hv"},{"name":"axios","_id":"clf2yza4l00cp5cs9bz5s22t5"},{"name":"animate","_id":"clf2yza4m00cv5cs91kqie45v"},{"name":"vuex","_id":"clf2yza4m00d05cs91f8idf59"},{"name":"slot","_id":"clf2yza4n00d45cs9djoy3jo9"},{"name":"插槽","_id":"clf2yza4n00d55cs933crh4ic"},{"name":"router","_id":"clf2yza4n00d65cs9btffe464"},{"name":"路由","_id":"clf2yza4o00d95cs9dajb8zjz"},{"name":"vue3","_id":"clf2yza4p00df5cs91r5abiqi"},{"name":"hook","_id":"clf2yza4r00dt5cs9gafhcpoj"},{"name":"toRef","_id":"clf2yza4s00dy5cs9db8m788h"},{"name":"toRefs","_id":"clf2yza4s00dz5cs9fncfc9yz"},{"name":"compositionApi","_id":"clf2yza4t00e65cs98efnc773"},{"name":"Pinia","_id":"clf2yza4u00ea5cs95ah970ug"},{"name":"MySql","_id":"clf2yza4u00ee5cs95cc9e16r"},{"name":"macos","_id":"clf2yza4x00eg5cs9a86ngfj5"},{"name":"VsCode","_id":"clf2yza4x00ei5cs99en63laz"},{"name":"Git","_id":"clf2yza4y00ek5cs9g6ocdkau"},{"name":"插件","_id":"clf2yza4y00el5cs90iftfrs0"},{"name":"中文乱码","_id":"clf2yza4y00em5cs9gxca17x0"},{"name":"Nuget","_id":"clf2yza4z00eu5cs90zbf7jdh"},{"name":"微服务","_id":"clf2yza4z00ev5cs9df3x6qef"},{"name":"BackgroundService","_id":"clf2yza4z00ey5cs960r08rdf"},{"name":"后台服务","_id":"clf2yza5000f25cs98pjr949g"},{"name":"Mapster","_id":"clf2yza5000f55cs972sgdw19"},{"name":"Canal","_id":"clf2yza5500fe5cs98ryse2lf"},{"name":"RabbitMQ","_id":"clf2yza5600fj5cs91upi137u"},{"name":"HttpClientFactory","_id":"clf2yza5600fn5cs974i2ftdg"}]}}