<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OdinSam&#39;s blogs-一个热爱编程性格开朗的Coder</title>
  
  
  <link href="https://www.odinsam.com/atom.xml" rel="self"/>
  
  <link href="https://www.odinsam.com/"/>
  <updated>2023-03-10T09:09:07.200Z</updated>
  <id>https://www.odinsam.com/</id>
  
  <author>
    <name>OdinSam</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flutter - OdinUtils封装</title>
    <link href="https://www.odinsam.com/articles/eff3.html"/>
    <id>https://www.odinsam.com/articles/eff3.html</id>
    <published>2022-12-03T09:00:00.000Z</published>
    <updated>2023-03-10T09:09:07.200Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Flutter - OdinUtils封装 完整代码可以在 <a href="https://github.com/odinsam/OdinPlugin/tree/master/odinUtils">GitHub</a></p></blockquote><span id="more"></span><h4 id="flutter-odinutils封装-plateform-version"><a class="markdownIt-Anchor" href="#flutter-odinutils封装-plateform-version"></a> Flutter - OdinUtils封装 <img src="https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow" alt="plateform" /> <img src="https://img.shields.io/badge/pub.dev-1.0.1-greenyellow" alt="version" /></h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="comment"># dart linq function</span></span><br><span class="line">  <span class="attr">flinq:</span> <span class="string">^2.0.2</span></span><br><span class="line">  <span class="comment"># dart crypto</span></span><br><span class="line">  <span class="attr">crypto:</span> <span class="string">^3.0.2</span> </span><br></pre></td></tr></table></figure><ol><li>OdinUtils 扩展方法包括内容如下:</li></ol><table><thead><tr><th>扩展类型</th><th>方法名称</th><th>方法描述</th></tr></thead><tbody><tr><td>String</td><td>compareIgnoreCase</td><td>忽略大小写比较</td></tr><tr><td>String</td><td>isChinaCardId</td><td>判断中国身份号码格式</td></tr><tr><td>String</td><td>isChinaMobile</td><td>判断中国移动电话号码格式</td></tr><tr><td>String</td><td>isIpAddress</td><td>判断Ip地址格式</td></tr><tr><td>String</td><td>isEmail</td><td>判断邮箱地址格式</td></tr><tr><td>String</td><td>isUrl</td><td>判断url地址格式</td></tr><tr><td>String</td><td>toMd5</td><td>string进行md5加密</td></tr><tr><td>String</td><td>toSHA1</td><td>string进行SHA1加密</td></tr><tr><td>String</td><td>toCharList</td><td>转CharList List类型</td></tr><tr><td>int</td><td>unixTimerToTimer</td><td>UnixTimer时间戳转DateTime</td></tr><tr><td>DatTime</td><td>toUnixTime</td><td>DateTime转UnixTimer时间戳</td></tr><tr><td>DatTime</td><td>减运算符 - 运算符重载</td><td>时间差</td></tr><tr><td>DatTime</td><td>isLeapYear</td><td>是否是闰年</td></tr><tr><td>Random</td><td>odinNextInt</td><td>随机 A-B 之间的int随机数</td></tr><tr><td>Random</td><td>odinNextDouble</td><td>随机 A-B 之间的double随机数</td></tr><tr><td>ParamsSignUtils</td><td>urlAddSign</td><td>url添加sign签名</td></tr><tr><td>ParamsSignUtils</td><td>validateSign</td><td>验证url sign签名 是否正确</td></tr><tr><td>ParamsSignUtils</td><td>createUrlSign</td><td>创建 sign签名 是否正确</td></tr></tbody></table><ol start="2"><li>OdinUtils Utils方法包括内容如下:</li></ol><table><thead><tr><th>工具类类型</th><th>方法名称</th><th>方法描述</th></tr></thead><tbody><tr><td>String</td><td>OdinStringUtils.generationCode</td><td>按长度生成对应的字符串</td></tr><tr><td>String</td><td>OdinStringUtils.generationLimpidCode</td><td>按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字</td></tr><tr><td>OdinAlgorithm</td><td>OdinAlgorithm.getRandomListByWeight</td><td>按权重返回对应需要个数的数组</td></tr><tr><td>OdinRandomUtils</td><td>OdinRandomUtils.createRandom</td><td>创建random随机对象</td></tr><tr><td>OdinTransformUtils</td><td>OdinTransformUtils.convertNumberToChineseMoneyWords</td><td>数字转人民币大写</td></tr><tr><td>OdinTransformUtils</td><td>OdinTransformUtils.convertNumberToChineseNumber</td><td>数字转中文大写</td></tr><tr><td>OdinTransformUtils</td><td>OdinTransformUtils.convertDateToChineseDate</td><td>日期转中文大写</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseCalendarHoliday</td><td>计算中国农历节日</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).weekDayHoliday</td><td>按某月第几周第几日计算的节日</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).dateHoliday</td><td>按公历日计算的节日</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).weekDayStr</td><td>周几的字符</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).dateString</td><td>公历日期中文表示法 如一九九七年七月一日</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).isLeapYear</td><td>当前是否公历闰年</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseConstellation</td><td>28星宿计算</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseHour</td><td>时辰</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).isChineseLeapMonth</td><td>是否闰月</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).isChineseLeapYear</td><td>当年是否有闰月</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseDay</td><td>农历日</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseDayString</td><td>农历日中文表示</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseMonth</td><td>农历的月份</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseMonthString</td><td>农历月份字符串</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseYear</td><td>取农历年份</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseYearString</td><td>中文纪年</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseDateString</td><td>取农历日期表示法：农历一九九七年正月初五</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).chineseTwentyFourDay</td><td>当前日期后一个最近节气</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).constellation计算指定日期的星座序号</td><td></td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).animal</td><td>计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的 鼠年为1,其它类推</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).animalString</td><td>取属相字符串</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).ganZhiYearString</td><td>取农历年的干支表示法如 乙丑年</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).ganZhiMonthString</td><td>取干支的月表示字符串，注意农历的闰月不记干支</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).ganZhiDayString</td><td>取干支日表示法</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).ganZhiDateString</td><td>取当前日期的干支表示法如 甲子年乙丑月丙庚日</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).nextDay</td><td>取下一天</td></tr><tr><td>OdinChineseCalendar</td><td>OdinChineseCalendar(Date类型).pervDay</td><td>取前一天</td></tr></tbody></table><ol start="3"><li>test</li></ol><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">test(<span class="string">&#x27;createUrlSign&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;name=odinsam&amp;age=19&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> signUrl = ParamsSignUtils();</span><br><span class="line">    <span class="keyword">var</span> newUrl = signUrl.urlAddSign(url, <span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    <span class="built_in">print</span>(newUrl);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;validateUrlSign&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;age=19&amp;name=odinsam&amp;sign=34fa599226a44fc7f2431c78a6b15393&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> signUrl = ParamsSignUtils();</span><br><span class="line">    <span class="keyword">var</span> flag = signUrl.validateSign(url, <span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;验证结果:<span class="subst">$flag</span>&quot;</span>);</span><br><span class="line">    expect(flag, <span class="keyword">true</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;paramsSign&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> kv = SplayTreeMap();</span><br><span class="line">    kv.addAll(&#123;<span class="string">&quot;b&quot;</span>:<span class="string">&quot;b&quot;</span>&#125;);</span><br><span class="line">    kv.addAll(&#123;<span class="string">&quot;a&quot;</span>:<span class="string">&quot;a&quot;</span>&#125;);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> kv.entries)&#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;key:<span class="subst">$&#123;k.key&#125;</span>\tvalue:<span class="subst">$&#123;k.value&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span>(kv[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;OdinChineseCalendar&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> str = OdinChineseCalendar(<span class="built_in">DateTime</span>.now()).chineseCalendarHoliday();</span><br><span class="line">    <span class="built_in">print</span>(str);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;transformChineseDate&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> date = <span class="built_in">DateTime</span>.now().toString().split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> str = OdinTransformUtils.convertDateToChineseDate(date);</span><br><span class="line">    <span class="built_in">print</span>(str);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;transformChineseNumber&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> str = OdinTransformUtils.convertNumberToChineseNumber(<span class="string">&quot;100002001.32&quot;</span>);</span><br><span class="line">    <span class="built_in">print</span>(str);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;transformMoneyWork&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> str = OdinTransformUtils.convertNumberToChineseMoneyWords(<span class="string">&quot;30003.3275&quot;</span>);</span><br><span class="line">    <span class="built_in">print</span>(str);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;timer&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> dt = OdinChineseCalendar(<span class="built_in">DateTime</span>.now());</span><br><span class="line">    <span class="built_in">print</span>(dt.dateString());</span><br><span class="line">    <span class="built_in">print</span>(dt.ganZhiDateString());</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;listSum&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> lst = &lt;<span class="built_in">Map</span>&lt;Stu, <span class="built_in">int</span>&gt;&gt;[</span><br><span class="line">      &#123;Stu(<span class="string">&quot;odinsam1&quot;</span>,<span class="number">120</span>):<span class="number">6</span>&#125;,&#123;Stu(<span class="string">&quot;odinsam2&quot;</span>,<span class="number">220</span>):<span class="number">30</span>&#125;,&#123;Stu(<span class="string">&quot;odinsam3&quot;</span>,<span class="number">120</span>):<span class="number">130</span>&#125;,&#123;Stu(<span class="string">&quot;odinsam4&quot;</span>,<span class="number">420</span>):<span class="number">834</span>&#125;</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">var</span> i1=<span class="number">0</span>,i2=<span class="number">0</span>,i3=<span class="number">0</span>,i4=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> wlst = OdinAlgorithm.getRandomListByWeight(lst, <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">if</span>(wlst[<span class="number">0</span>].keys.first.name==<span class="string">&quot;odinsam1&quot;</span>)&#123;</span><br><span class="line">        i1+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(wlst[<span class="number">0</span>].keys.first.name==<span class="string">&quot;odinsam2&quot;</span>)&#123;</span><br><span class="line">        i2+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(wlst[<span class="number">0</span>].keys.first.name==<span class="string">&quot;odinsam3&quot;</span>)&#123;</span><br><span class="line">        i3+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(wlst[<span class="number">0</span>].keys.first.name==<span class="string">&quot;odinsam4&quot;</span>)&#123;</span><br><span class="line">        i4+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1:<span class="subst">$&#123;i1&#125;</span>\t\t2:<span class="subst">$&#123;i2&#125;</span>\t\t3:<span class="subst">$&#123;i3&#125;</span>\t\t4:<span class="subst">$&#123;i4&#125;</span>&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;stringUtils&#x27;</span>,()&#123;</span><br><span class="line">    <span class="built_in">String</span> str=<span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    expect(str.compareIgnoreCase(<span class="string">&quot;ABC&quot;</span>), <span class="keyword">true</span>);</span><br><span class="line">    expect(str.compareIgnoreCase(<span class="string">&quot;ABC&quot;</span>,ignoreCase: <span class="keyword">false</span>), <span class="keyword">false</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">判断中国身份号码格式</span></span></span><br><span class="line">  test(<span class="string">&#x27;stringRegex-中国身份号码格式&#x27;</span>,()&#123;</span><br><span class="line">    <span class="built_in">String</span> str=<span class="string">&quot;62010419820729029x&quot;</span>;</span><br><span class="line">    expect(str.isChinaCardId(), <span class="keyword">true</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">判断中国移动电话号码格式</span></span></span><br><span class="line">  test(<span class="string">&#x27;stringRegex-中国移动电话号码格式&#x27;</span>,()&#123;</span><br><span class="line">    <span class="built_in">String</span> str=<span class="string">&quot;17377777777&quot;</span>;</span><br><span class="line">    expect(str.isChinaMobile(), <span class="keyword">true</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">判断邮箱地址格式</span></span></span><br><span class="line">  test(<span class="string">&#x27;stringRegex-邮箱地址格式&#x27;</span>,()&#123;</span><br><span class="line">    <span class="built_in">String</span> str=<span class="string">&quot;123456@qq.com&quot;</span>;</span><br><span class="line">    expect(str.isEmail(), <span class="keyword">true</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">判断url地址格式</span></span></span><br><span class="line">  test(<span class="string">&#x27;stringRegex-url地址格式&#x27;</span>,()&#123;</span><br><span class="line">    <span class="built_in">String</span> str=<span class="string">&quot;https://www.baidu.com&quot;</span>;</span><br><span class="line">    expect(str.isUrl(), <span class="keyword">true</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">判断Ip地址格式</span></span></span><br><span class="line">  test(<span class="string">&#x27;stringRegex-Ip地址格式&#x27;</span>,()&#123;</span><br><span class="line">    <span class="built_in">String</span> str=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    expect(str.isIpAddress(), <span class="keyword">true</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">string进行md5加密</span></span></span><br><span class="line">  test(<span class="string">&#x27;stringMd5&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&quot;odinsam&quot;</span>;</span><br><span class="line">    expect(str.toMd5(), <span class="string">&quot;6f61c3e668ff2fc275895b843044829c&quot;</span>);</span><br><span class="line">    expect(str.toMd5(upperCase: <span class="keyword">true</span>), <span class="string">&quot;6F61C3E668FF2FC275895B843044829C&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">string进行SHA1加密</span></span></span><br><span class="line">  test(<span class="string">&#x27;stringSHA1&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&quot;odinsam&quot;</span>;</span><br><span class="line">    expect(str.toSHA1(), <span class="string">&quot;6d07eb5c4263173417428f226655438d346471f9&quot;</span>);</span><br><span class="line">    expect(str.toSHA1(upperCase: <span class="keyword">true</span>), <span class="string">&quot;6D07EB5C4263173417428F226655438D346471F9&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">UnixTimer时间戳转DateTime  DateTime转UnixTimer时间戳</span></span></span><br><span class="line">  test(<span class="string">&#x27;time&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> dt = <span class="built_in">DateTime</span>.now();</span><br><span class="line">    <span class="built_in">int</span> unixTime = dt.toUnixTime();</span><br><span class="line">    <span class="built_in">print</span>(dt.toString());</span><br><span class="line">    <span class="built_in">print</span>(unixTime);</span><br><span class="line">    <span class="built_in">print</span>(unixTime.unixTimerToTimer());</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">按长度生成对应的字符串</span></span></span><br><span class="line">  test(<span class="string">&#x27;generationCode&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> str = OdinStringUtils.generationCode(<span class="number">4</span>);</span><br><span class="line">    <span class="built_in">print</span>(str);</span><br><span class="line">    expect(str.length, <span class="number">4</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">按长度生成对应的字符串，不包含 0 o 1 I 等容易混淆的之母和数字</span></span></span><br><span class="line">  test(<span class="string">&#x27;generationLimpidCode&#x27;</span>,()&#123;</span><br><span class="line">    <span class="keyword">var</span> str = OdinStringUtils.generationLimpidCode(<span class="number">6</span>);</span><br><span class="line">    <span class="built_in">print</span>(str);</span><br><span class="line">    expect(str.length, <span class="number">6</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;<span class="subst">$MethodChannelOdinutils</span> is the default instance&#x27;</span>, () &#123;</span><br><span class="line">    expect(initialPlatform, isInstanceOf&lt;MethodChannelOdinutils&gt;());</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;getPlatformVersion&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    Odinutils odinutilsPlugin = Odinutils();</span><br><span class="line">    MockOdinutilsPlatform fakePlatform = MockOdinutilsPlatform();</span><br><span class="line">    OdinutilsPlatform.instance = fakePlatform;</span><br><span class="line"></span><br><span class="line">    expect(<span class="keyword">await</span> odinutilsPlugin.getPlatformVersion(), <span class="string">&#x27;42&#x27;</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h4 id="getting-started"><a class="markdownIt-Anchor" href="#getting-started"></a> Getting Started</h4><p>pub.dev发布地址：<a href="https://pub.dev/packages/odinutils">odinSam-Flutter - OdinUtils 工具类封装</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Flutter - OdinUtils封装 完整代码可以在 &lt;a href=&quot;https://github.com/odinsam/OdinPlugin/tree/master/odinUtils&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Flutter" scheme="https://www.odinsam.com/categories/Flutter/"/>
    
    
    <category term="Flutter" scheme="https://www.odinsam.com/tags/Flutter/"/>
    
    <category term="OdinUtils" scheme="https://www.odinsam.com/tags/OdinUtils/"/>
    
  </entry>
  
  <entry>
    <title>Flutter - Plugin发布</title>
    <link href="https://www.odinsam.com/articles/c804.html"/>
    <id>https://www.odinsam.com/articles/c804.html</id>
    <published>2022-12-01T08:56:00.000Z</published>
    <updated>2023-03-10T09:00:23.446Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Flutter - Plugin发布</p></blockquote><span id="more"></span><h4 id="plugin发布"><a class="markdownIt-Anchor" href="#plugin发布"></a> Plugin发布</h4><ol><li>执行 flutter pub publish --dry-run 检查是否具备发布条件</li></ol><p>遇到的问题</p><p>It‘s strongly recommended to include a “homepage“ or “repository“ field</p><p>解决方案：</p><p>在 pubspec.yaml 中配置 主页 homepage 地址 :<br />homepage: <a href="https://github.com/author/gitname.git">https://github.com/author/gitname.git</a><br />curl <a href="http://google.com">google.com</a> 检测终端代理是否成功连接google服务器<br />export http_proxy=http://127.0.0.1:10818<br />export https_proxy=http://127.0.0.1:10818<br />仅能保证当前终端一次性连接成功</p><figure class="highlight plaintext"><figcaption><span>vi ~/.zshrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># proxy</span><br><span class="line">proxy () &#123;</span><br><span class="line">  export http_proxy=&quot;http://127.0.0.1:10818&quot;</span><br><span class="line">  export https_proxy=$http_proxy</span><br><span class="line">  echo &quot;HTTP Proxy on&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># noproxy</span><br><span class="line">noproxy () &#123;</span><br><span class="line">  unset http_proxy</span><br><span class="line">  unset https_proxy</span><br><span class="line">  echo &quot;HTTP Proxy off&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>source ~/.zshrc</p><ol start="2"><li><p>终端命令<br />proxy 开启代理<br />noproxy 关闭代理</p></li><li><p>发布插件</p></li></ol><figure class="highlight cmd"><figcaption><span>终端执行</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter packages pub publish --server=https://pub.dartlang.org </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Flutter - Plugin发布&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Flutter" scheme="https://www.odinsam.com/categories/Flutter/"/>
    
    
    <category term="Flutter" scheme="https://www.odinsam.com/tags/Flutter/"/>
    
    <category term="Plugin" scheme="https://www.odinsam.com/tags/Plugin/"/>
    
  </entry>
  
  <entry>
    <title>Flutter - OdinDio 基于Dio的封装</title>
    <link href="https://www.odinsam.com/articles/b092.html"/>
    <id>https://www.odinsam.com/articles/b092.html</id>
    <published>2022-11-28T08:52:00.000Z</published>
    <updated>2023-03-10T08:56:02.002Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Dio是Flutter中较为流行的http操作类。 OdinDio基于Dio封装,完整代码可以在 <a href="https://github.com/odinsam/OdinPlugin/tree/feature/1.0.0/odindio">GitHub</a> 。</p></blockquote><span id="more"></span><h4 id="odindio"><a class="markdownIt-Anchor" href="#odindio"></a> OdinDio</h4><p>OdinDio单例模式，基于dio封装<br /><img src="https://img.shields.io/badge/Plateform-ios%7Candroid%7Cwindws%7Clinux-greenyellow" alt="plateform" /> <img src="https://img.shields.io/badge/pub.dev-1.0.1-greenyellow" alt="version" /></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">pubspec.yaml</span></span><br><span class="line">  <span class="attr">dependencies:</span></span><br><span class="line">    <span class="attr">json_annotation:</span> <span class="string">^4.4.0</span></span><br><span class="line">    <span class="attr">odindio:</span> <span class="string">^1.0.1</span></span><br><span class="line">  <span class="attr">dev_dependencies:</span></span><br><span class="line">    <span class="attr">json_serializable:</span> <span class="string">^6.2.0</span></span><br><span class="line">    <span class="attr">build_runner:</span> <span class="string">any</span></span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:convert&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:dio/dio.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter_test/flutter_test.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:odindio/odin_dio_interceptor.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:odindio/odindio.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:odindio/odindio_platform_interface.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:odindio/odindio_method_channel.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:plugin_platform_interface/plugin_platform_interface.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;models/post_model.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;models/student_model.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;models/ten_model.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;models/test_model.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:path/path.dart&#x27;</span> <span class="keyword">as</span> path;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dart:io&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;odindio_test.reflectable.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MockOdindioPlatform</span></span></span><br><span class="line"><span class="class">    <span class="title">with</span> <span class="title">MockPlatformInterfaceMixin</span></span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">OdindioPlatform</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Future&lt;<span class="built_in">String?</span>&gt; getPlatformVersion() =&gt; Future.value(<span class="string">&#x27;42&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">多请求</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiRequest</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> Future&lt;Response&lt;<span class="built_in">dynamic</span>&gt;&gt; req1&lt;T&gt;() <span class="keyword">async</span> &#123;</span><br><span class="line">    OdinDio odindioPlugin = OdinDio();</span><br><span class="line">    odindioPlugin.setBaseUrl(<span class="string">&quot;http://httpbin.org&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> odindioPlugin.<span class="keyword">get</span>(<span class="string">&#x27;/json&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> Future&lt;Response&lt;<span class="built_in">dynamic</span>&gt;&gt; req2&lt;T&gt;() <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> odindioPlugin = OdinDio();</span><br><span class="line">    odindioPlugin.setBaseUrl(<span class="string">&quot;http://tenapi.cn&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> odindioPlugin.<span class="keyword">get</span>(<span class="string">&#x27;/acg&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  initializeReflectable();</span><br><span class="line">  <span class="keyword">final</span> OdindioPlatform initialPlatform = OdindioPlatform.instance;</span><br><span class="line"></span><br><span class="line">  test(<span class="string">&#x27;<span class="subst">$MethodChannelOdindio</span> is the default instance&#x27;</span>, () &#123;</span><br><span class="line">    expect(initialPlatform, isInstanceOf&lt;MethodChannelOdindio&gt;());</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/// <span class="markdown">get request return Model </span></span></span><br><span class="line">  test(<span class="string">&#x27;getJson-1&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// getJson no param</span></span><br><span class="line">    OdinDio odindioPlugin = OdinDio();</span><br><span class="line">    odindioPlugin.setBaseUrl(<span class="string">&quot;http://httpbin.org&quot;</span>);</span><br><span class="line">    odindioPlugin.removeDioLog();</span><br><span class="line">    <span class="comment">//定义拦截器</span></span><br><span class="line">    <span class="keyword">var</span> odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;onRequestHandler1&quot;</span>);</span><br><span class="line">    &#125;, onResponseHandler: (response, handler) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;onResponseHandler1&quot;</span>);</span><br><span class="line">    &#125;, onErrorHandler: (err, handler) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;err1&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> odi2 = OdinDioInterceptor(onRequestHandler: (request, handler) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;onRequestHandler2&quot;</span>);</span><br><span class="line">    &#125;, onResponseHandler: (response, handler) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;onResponseHandler2&quot;</span>);</span><br><span class="line">    &#125;, onErrorHandler: (err, handler) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;err2&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//添加拦截器</span></span><br><span class="line">    odindioPlugin.interceptors().addAll([odi1, odi2]);</span><br><span class="line">    <span class="comment">//移除拦截器</span></span><br><span class="line">    odindioPlugin.interceptors().remove(odi1);</span><br><span class="line">    <span class="keyword">var</span> model = <span class="keyword">await</span> odindioPlugin.getModel&lt;TestModel&gt;(<span class="string">&#x27;/json&#x27;</span>);</span><br><span class="line">    <span class="built_in">print</span>(json.encode(model));</span><br><span class="line">    <span class="comment">// expect(model.slideshow!.title, &#x27;Sample Slide Show&#x27;);</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">get request return Model List</span></span></span><br><span class="line">  test(<span class="string">&#x27;getJson-2&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// getJson no param</span></span><br><span class="line">    OdinDio odindioPlugin = OdinDio();</span><br><span class="line">    odindioPlugin.removeDioLog();</span><br><span class="line">    odindioPlugin.addDioLog();</span><br><span class="line">    odindioPlugin.setBaseUrl(<span class="string">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> models = <span class="keyword">await</span> odindioPlugin.getModels&lt;StudentModel&gt;(<span class="string">&#x27;/stus&#x27;</span>);</span><br><span class="line">    <span class="built_in">print</span>(json.encode(models));</span><br><span class="line">    expect(models.length, greaterThan(<span class="number">0</span>));</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">get request by queryParameters return Model List</span></span></span><br><span class="line">  test(<span class="string">&#x27;getJson-3&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// getJson with params</span></span><br><span class="line">    <span class="keyword">var</span> odinDioPlugin = OdinDio();</span><br><span class="line">    odinDioPlugin.setBaseUrl(<span class="string">&quot;https://tenapi.cn&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> model = <span class="keyword">await</span> odinDioPlugin.getModel&lt;TenModel&gt;(<span class="string">&quot;/qqname&quot;</span>,</span><br><span class="line">        queryParameters: &#123;<span class="string">&quot;qq&quot;</span>: <span class="string">&quot;123456&quot;</span>&#125;,</span><br><span class="line">        options: Options(responseType: ResponseType.json));</span><br><span class="line">    <span class="built_in">print</span>(json.encode(model));</span><br><span class="line">    expect(model.name, <span class="string">&#x27;腾讯视频&#x27;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">get request by Stream</span></span></span><br><span class="line">  test(<span class="string">&#x27;getStream&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// get stream</span></span><br><span class="line">    <span class="keyword">var</span> odinDioPlugin = OdinDio();</span><br><span class="line">    odinDioPlugin.setBaseUrl(<span class="string">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> stream = <span class="keyword">await</span> odinDioPlugin.getStream(<span class="string">&#x27;/stream&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> lst = &lt;<span class="built_in">int</span>&gt;[];</span><br><span class="line">    <span class="keyword">var</span> bytes = <span class="keyword">await</span> stream.first;</span><br><span class="line">    lst = <span class="built_in">List</span>.from(bytes.toList());</span><br><span class="line">    <span class="built_in">print</span>(utf8.decode(lst));</span><br><span class="line">    expect(utf8.decode(lst).length, greaterThan(<span class="number">0</span>));</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">get request return Bytes(List<span class="xml"><span class="tag">&lt;<span class="name">int</span>&gt;</span></span>)</span></span></span><br><span class="line">  test(<span class="string">&#x27;getBytes&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// get Bytes</span></span><br><span class="line">    <span class="keyword">var</span> odinDioPlugin = OdinDio();</span><br><span class="line">    odinDioPlugin.setBaseUrl(<span class="string">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> lst = <span class="keyword">await</span> odinDioPlugin.getBytes(<span class="string">&#x27;/stream&#x27;</span>);</span><br><span class="line">    <span class="built_in">print</span>(utf8.decode(lst));</span><br><span class="line">    expect(utf8.decode(lst).length, greaterThan(<span class="number">0</span>));</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">post request return Model</span></span></span><br><span class="line">  test(<span class="string">&#x27;postStu&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// post with param and return Json</span></span><br><span class="line">    <span class="keyword">var</span> odinDioPlugin = OdinDio();</span><br><span class="line">    odinDioPlugin.setBaseUrl(<span class="string">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class="line">    odinDioPlugin.removeDioLog();</span><br><span class="line">    <span class="keyword">var</span> data = odinDioPlugin.dataToFormData(&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;bakabaka&quot;</span>&#125;);</span><br><span class="line">    <span class="keyword">var</span> response5 = <span class="keyword">await</span> odinDioPlugin.post(<span class="string">&#x27;/postStu&#x27;</span>,</span><br><span class="line">        data: data, options: Options(headers: &#123;<span class="string">&quot;customNewPost&quot;</span>: <span class="string">&quot;newPost&quot;</span>&#125;));</span><br><span class="line">    <span class="keyword">var</span> model = odinDioPlugin.dioResultToModel&lt;PostModel&gt;(response5.data);</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;model: <span class="subst">$&#123;json.encode(model)&#125;</span>&quot;</span>);</span><br><span class="line">    expect(model.code, <span class="number">0</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">multirequest</span></span></span><br><span class="line">  test(<span class="string">&#x27;multirequest&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> odinDioPlugin = OdinDio();</span><br><span class="line">    <span class="keyword">var</span> response6 = <span class="keyword">await</span> odinDioPlugin</span><br><span class="line">        .multiRequest([MultiRequest.req1(), MultiRequest.req2()]);</span><br><span class="line">    <span class="keyword">var</span> rep1 = response6[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> rep1model = odinDioPlugin.dioResultToModel&lt;TestModel&gt;(rep1.data);</span><br><span class="line">    <span class="built_in">print</span>(json.encode(rep1model));</span><br><span class="line">    expect(rep1model.slideshow!.author, <span class="string">&quot;Yours Truly&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> rep2 = response6[<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">print</span>(json.encode(rep2.data.length));</span><br><span class="line">    expect(rep2.data!.length, greaterThan(<span class="number">0</span>));</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">downloadFile</span></span></span><br><span class="line">  test(<span class="string">&#x27;downloadFile&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="built_in">double</span> currentProgress = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">var</span> odinDioPlugin = OdinDio();</span><br><span class="line">    odinDioPlugin.setBaseUrl(<span class="string">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class="line">    <span class="keyword">final</span> cur = path.dirname(Platform.script.path).substring(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> savePath = path.join(cur, <span class="string">&#x27;download.txt&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> response7 = <span class="keyword">await</span> odinDioPlugin.downloadFile(</span><br><span class="line">        <span class="string">&#x27;/static/output.txt&#x27;</span>, savePath, onReceiveProgress: (received, total) &#123;</span><br><span class="line">      <span class="keyword">if</span> (total != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="comment">///<span class="markdown">当前下载的百分比例</span></span></span><br><span class="line">        <span class="keyword">var</span> downloadRatio = (received / total * <span class="number">100</span>).toStringAsFixed(<span class="number">0</span>);</span><br><span class="line">        currentProgress = received / total;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> f = File(savePath);</span><br><span class="line">    expect(f.readAsStringSync(), equals(<span class="string">&#x27;I am a text file&#x27;</span>));</span><br><span class="line">    f.deleteSync(recursive: <span class="keyword">false</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">upload file</span></span></span><br><span class="line">  test(<span class="string">&#x27;uploadFile&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> odinDioPlugin = OdinDio();</span><br><span class="line">    <span class="keyword">final</span> cur = path.dirname(Platform.script.path).substring(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> uploadFile1 = path.join(cur, <span class="string">&#x27;upload1.txt&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> uploadFile2 = path.join(cur, <span class="string">&#x27;upload2.txt&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> uploadFile3 = path.join(cur, <span class="string">&#x27;upload3.txt&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> formData = odinDioPlugin.dataToFormData(&#123;</span><br><span class="line">      <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;wendux&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;age&#x27;</span>: <span class="number">25</span>,</span><br><span class="line">      <span class="string">&#x27;file&#x27;</span>:</span><br><span class="line">          <span class="keyword">await</span> MultipartFile.fromFile(uploadFile1, filename: <span class="string">&#x27;upload1.txt&#x27;</span>),</span><br><span class="line">      <span class="string">&#x27;files&#x27;</span>: [</span><br><span class="line">        <span class="keyword">await</span> MultipartFile.fromFile(uploadFile2, filename: <span class="string">&#x27;upload2.txt&#x27;</span>),</span><br><span class="line">        <span class="keyword">await</span> MultipartFile.fromFile(uploadFile3, filename: <span class="string">&#x27;upload3.txt&#x27;</span>),</span><br><span class="line">      ]</span><br><span class="line">    &#125;);</span><br><span class="line">    odinDioPlugin.setBaseUrl(<span class="string">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> response6 = <span class="keyword">await</span> odinDioPlugin.post(<span class="string">&#x27;/upload&#x27;</span>, data: formData);</span><br><span class="line">    <span class="built_in">print</span>(response6.data);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">post stream data</span></span></span><br><span class="line">  test(<span class="string">&#x27;post stream data&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> odinDioPlugin = OdinDio();</span><br><span class="line">    <span class="keyword">var</span> formData = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;wendux&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">25</span>&#125;;</span><br><span class="line">    <span class="keyword">var</span> lst = utf8.encode(formData.toString());</span><br><span class="line">    odinDioPlugin.setBaseUrl(<span class="string">&quot;http://192.168.1.145:8899&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> response6 = <span class="keyword">await</span> odinDioPlugin.postDataByStream(<span class="string">&#x27;/stu&#x27;</span>,</span><br><span class="line">        data: odinDioPlugin.listIntToStreamFormData(lst),</span><br><span class="line">        options: Options(headers: &#123;</span><br><span class="line">          Headers.contentLengthHeader: lst.length, <span class="comment">// 设置content-length</span></span><br><span class="line">        &#125;));</span><br><span class="line">    <span class="built_in">print</span>(response6.data);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown">完成和终止请求/响应</span></span></span><br><span class="line">  test(<span class="string">&#x27;resolve&#x27;</span>, () <span class="keyword">async</span> &#123;</span><br><span class="line">    <span class="comment">// getJson no param</span></span><br><span class="line">    <span class="keyword">var</span> odinDioPlugin = OdinDio();</span><br><span class="line">    odinDioPlugin.setBaseUrl(<span class="string">&quot;http://httpbin.org&quot;</span>);</span><br><span class="line">    <span class="comment">//定义拦截器</span></span><br><span class="line">    <span class="keyword">var</span> odi1 = OdinDioInterceptor(onRequestHandler: (request, handler) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;onRequestHandler1&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> handler</span><br><span class="line">          .resolve(Response(requestOptions: request, data: <span class="string">&#x27;fake data&#x27;</span>));</span><br><span class="line">    &#125;, onResponseHandler: (response, handler) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;onResponseHandler1&quot;</span>);</span><br><span class="line">    &#125;, onErrorHandler: (err, handler) &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;err1&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    odinDioPlugin.interceptors().add(odi1);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> model = <span class="keyword">await</span> odinDioPlugin.<span class="keyword">get</span>(<span class="string">&#x27;/json&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">on</span> DioError <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="keyword">if</span> (e.response != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="built_in">print</span>(e.response!.data);</span><br><span class="line">        <span class="built_in">print</span>(e.response!.headers);</span><br><span class="line">        <span class="built_in">print</span>(e.response!.requestOptions);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Something happened in setting up or sending the request that triggered an Error</span></span><br><span class="line">        <span class="built_in">print</span>(e.requestOptions);</span><br><span class="line">        <span class="built_in">print</span>(e.message);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// expect(model.slideshow!.title, &#x27;Sample Slide Show&#x27;);</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pub.dev发布地址：<a href="https://pub.dev/packages/odindio">odinSam-Flutter - OdinDio封装</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Dio是Flutter中较为流行的http操作类。 OdinDio基于Dio封装,完整代码可以在 &lt;a href=&quot;https://github.com/odinsam/OdinPlugin/tree/feature/1.0.0/odindio&quot;&gt;GitHub&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Flutter" scheme="https://www.odinsam.com/categories/Flutter/"/>
    
    
    <category term="Dio" scheme="https://www.odinsam.com/tags/Dio/"/>
    
    <category term="Flutter" scheme="https://www.odinsam.com/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter - 基于reflectable反射以及调用</title>
    <link href="https://www.odinsam.com/articles/4998.html"/>
    <id>https://www.odinsam.com/articles/4998.html</id>
    <published>2022-11-28T08:49:00.000Z</published>
    <updated>2023-03-10T08:52:08.193Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Flutter默认不允许反射。可以利用基于reflectable反射以及调用。</p></blockquote><span id="more"></span><ol><li>引入类库</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dependencies:</span></span><br><span class="line">  <span class="attr">reflectable:</span> <span class="string">^3.0.10</span></span><br></pre></td></tr></table></figure><ol start="2"><li>反射帮助类</li></ol><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:reflectable/reflectable.dart&#x27;</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reflector</span> <span class="keyword">extends</span> <span class="title">Reflectable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> Reflector()</span><br><span class="line">      : <span class="keyword">super</span>(</span><br><span class="line">      invokingCapability,</span><br><span class="line">      declarationsCapability,</span><br><span class="line">      typeRelationsCapability,</span><br><span class="line">      libraryCapability); <span class="comment">// Request the capability to invoke methods.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>反射注解类</li></ol><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:odindio/reflector.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:reflectable/mirrors.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> odinReflectable = Reflector();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OdinReflect</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> T reflectInstanceFromMap&lt;T&gt;(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; map,</span><br><span class="line">      &#123;methodName = <span class="string">&quot;fromJson&quot;</span>&#125;) &#123;</span><br><span class="line">    <span class="comment">//反射T类型</span></span><br><span class="line">    ClassMirror classMirror = odinReflectable.reflectType(T) <span class="keyword">as</span> ClassMirror;</span><br><span class="line">    <span class="comment">// 调用工厂构造函数</span></span><br><span class="line">    <span class="keyword">var</span> instance = classMirror.newInstance(methodName, [map]) <span class="keyword">as</span> T;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>model类</li></ol><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:json_annotation/json_annotation.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:odindio/odin_reflect.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">part</span> <span class="string">&#x27;post_model.g.dart&#x27;</span>;</span><br><span class="line"><span class="comment">//反射注解</span></span><br><span class="line"><span class="meta">@odinReflectable</span></span><br><span class="line"><span class="meta">@JsonSerializable</span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PostModel</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">int?</span> code;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> message;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">List</span>&lt;Data&gt;? data;</span><br><span class="line"></span><br><span class="line">  PostModel(&#123;</span><br><span class="line">    <span class="keyword">this</span>.code,</span><br><span class="line">    <span class="keyword">this</span>.message,</span><br><span class="line">    <span class="keyword">this</span>.data,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> PostModel.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      _$PostModelFromJson(json);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; _$PostModelToJson(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement fromJson</span></span><br><span class="line">    <span class="keyword">throw</span> UnimplementedError();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@JsonSerializable</span>()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Data</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">int?</span> id;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String?</span> stuName;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">int?</span> age;</span><br><span class="line"></span><br><span class="line">  Data(&#123;</span><br><span class="line">    <span class="keyword">this</span>.id,</span><br><span class="line">    <span class="keyword">this</span>.stuName,</span><br><span class="line">    <span class="keyword">this</span>.age,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">factory</span> Data.fromJson(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; json) =&gt;</span><br><span class="line">      _$DataFromJson(json);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">dynamic</span>&gt; toJson() =&gt; _$DataToJson(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>具体使用:</li></ol><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;odindio_test.reflectable.dart&#x27;</span>;</span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  initializeReflectable();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">T dioResultToModel&lt;T&gt;(<span class="built_in">dynamic</span> data)&#123;</span><br><span class="line">  <span class="keyword">var</span> value = OdinReflect.reflectInstanceFromMap&lt;T&gt;(data);</span><br><span class="line">  <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><figcaption><span>终端执行 生成反射辅助类</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter pub run build_runner clean &amp;&amp; flutter pub run build_runner build --delete-conflicting-outputs </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Flutter默认不允许反射。可以利用基于reflectable反射以及调用。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Flutter" scheme="https://www.odinsam.com/categories/Flutter/"/>
    
    
    <category term="Flutter" scheme="https://www.odinsam.com/tags/Flutter/"/>
    
    <category term="reflectable" scheme="https://www.odinsam.com/tags/reflectable/"/>
    
  </entry>
  
  <entry>
    <title>Flutter - source-gen 命令与配置</title>
    <link href="https://www.odinsam.com/articles/a7f.html"/>
    <id>https://www.odinsam.com/articles/a7f.html</id>
    <published>2022-11-28T08:46:00.000Z</published>
    <updated>2023-03-10T08:48:27.810Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Flutter 通过 source-gen 生成对应的model类</p></blockquote><span id="more"></span><h4 id="1-命令"><a class="markdownIt-Anchor" href="#1-命令"></a> 1. 命令</h4><ol><li>引入 part ‘xxx.g.dart’; 生成对应 xxx.g.dart 文件</li></ol><figure class="highlight cmd"><figcaption><span>终端执行</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter pub run build_runner clean &amp;&amp; flutter pub run build_runner build --delete-conflicting-outputs</span><br></pre></td></tr></table></figure><ol start="2"><li>生成配置</li></ol><figure class="highlight yaml"><figcaption><span>根目录下新建文件 build.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">targets:</span></span><br><span class="line">  <span class="string">$default:</span></span><br><span class="line">    <span class="attr">builders:</span></span><br><span class="line">      <span class="attr">reflectable:</span></span><br><span class="line">        <span class="attr">generate_for:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">test/**.dart</span></span><br><span class="line">        <span class="attr">options:</span></span><br><span class="line">          <span class="attr">formatted:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Flutter 通过 source-gen 生成对应的model类&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Flutter" scheme="https://www.odinsam.com/categories/Flutter/"/>
    
    
    <category term="Flutter" scheme="https://www.odinsam.com/tags/Flutter/"/>
    
    <category term="source-gen" scheme="https://www.odinsam.com/tags/source-gen/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 - Pinia 状态管理框架</title>
    <link href="https://www.odinsam.com/articles/99b6.html"/>
    <id>https://www.odinsam.com/articles/99b6.html</id>
    <published>2022-10-25T08:38:00.000Z</published>
    <updated>2023-03-10T08:45:54.186Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。</p></blockquote><span id="more"></span><h4 id="1-与vuex的对比"><a class="markdownIt-Anchor" href="#1-与vuex的对比"></a> 1. 与vuex的对比</h4><ol><li>pinia中只有state、getter、action，抛弃了Vuex中的Mutation，减少工作量。</li><li>pinia中的action支持同步和异步，Vuex不支持</li><li>良好的Typescript支持，Vue使用TS来编写时使用pinia非常合适</li><li>无需创建各个模块嵌套。在Vuex中如果数据过多，一般会通常分模块来进行管理，回略显得麻烦，而pinia中每个store都是独立的，互相不影响。</li><li>体积非常小，只有1KB左右。</li><li>pinia支持插件来扩展自身功能。</li><li>支持服务端渲染。</li></ol><h4 id="2-安装和使用"><a class="markdownIt-Anchor" href="#2-安装和使用"></a> 2. 安装和使用</h4><ol><li>安装：vue create vue-app 采用 Manually select features 形式安装。</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//上下移动  space空格选中  a全选  i反选    enter回车确定</span><br><span class="line">Vue CLI v5.<span class="number">0</span>.<span class="number">8</span></span><br><span class="line">? Please pick a preset: Manually select features</span><br><span class="line">? Check the features needed <span class="keyword">for</span> your project: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed)</span><br><span class="line"> ◉ Babel</span><br><span class="line"> ◉ TypeScript</span><br><span class="line">❯◯ Progressive Web App (PWA) Support</span><br><span class="line"> ◉ Router</span><br><span class="line"> ◯ Vuex</span><br><span class="line"> ◉ CSS Pre-processors</span><br><span class="line"> ◉ Linter / Formatter</span><br><span class="line"> ◯ Unit Testing</span><br><span class="line"> ◯ E2E Testing</span><br></pre></td></tr></table></figure><p>在这里一般选择 babel/ts/router/css/linter这几个选项,选择好后 enter回车确认</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Vue CLI v5.<span class="number">0</span>.<span class="number">8</span></span><br><span class="line">? Please pick a preset: Manually select features</span><br><span class="line">? Check the features needed <span class="keyword">for</span> your project: Babel, TS, Router, CSS Pre-processors, Linter</span><br><span class="line">? Choose a version of Vue.js that you want to <span class="built_in">start</span> the project with (Use arrow keys)</span><br><span class="line">❯ <span class="number">3</span>.x </span><br><span class="line">  <span class="number">2</span>.x </span><br></pre></td></tr></table></figure><p>选择vue的版本，当然是选择vue3了。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? Use class-style component syntax? (y/N) </span><br></pre></td></tr></table></figure><p>是否使用Class风格装饰器？ 原本是：home = new Vue()创建vue实例，用装饰器后：class home extends Vue{}。直接enter回车即选择No</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? Use Babel alongside TypeScript (required <span class="keyword">for</span> modern <span class="built_in">mode</span>, auto-detected polyfills, transpiling JSX)? (Y/n) </span><br></pre></td></tr></table></figure><p>使用Babel与TypeScript一起用于自动检测的填充? 选择yes</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use history <span class="built_in">mode</span> <span class="keyword">for</span> router? (Requires proper server setup <span class="keyword">for</span> index fallback <span class="keyword">in</span> production)</span><br></pre></td></tr></table></figure><p>是否使用router的history模式。router路由有hash模式和history模式（url带#和不带）.选择yes</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): (Use arrow keys)</span><br><span class="line">❯ Sass/SCSS (with dart-sass) </span><br><span class="line">  Less </span><br><span class="line">  Stylus</span><br></pre></td></tr></table></figure><p>css处理模式。看情况选择。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">? Pick a linter / formatter config: (Use arrow keys)</span><br><span class="line">❯ ESLint with error prevention only </span><br><span class="line">  ESLint + Airbnb config </span><br><span class="line">  ESLint + Standard config </span><br><span class="line">  ESLint + Prettier</span><br></pre></td></tr></table></figure><p>代码检查与代码格式. 选择 ESLint + Prettier</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Pick additional lint features: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed)</span><br><span class="line">❯◉ Lint on save</span><br><span class="line"> ◯ Lint and fix on commit</span><br></pre></td></tr></table></figure><p>项目校验格式 Lint on save 是保存时，Lint and fix on commit是提交时.选择 Lint on save</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">? Where <span class="keyword">do</span> you prefer placing config <span class="keyword">for</span> Babel, ESLint, etc.? (Use arrow keys)</span><br><span class="line">❯ <span class="keyword">In</span> dedicated config files </span><br><span class="line">  <span class="keyword">In</span> package.json </span><br></pre></td></tr></table></figure><p>项目的配置文件存放 In dedicated config files 独立配置文件，In package.json 存放在package.json。选择 In package.json</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? Save this as a preset <span class="keyword">for</span> future projects? (y/N) </span><br></pre></td></tr></table></figure><p>询问保存该配置是否作为后续项目的可选配置，选择是，则会要求给该配置命名，这个自己定就行,我输入为：default-setting.配置后会在创建项目时：vue create projectName 看到这个配置。例如:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Vue CLI v5.<span class="number">0</span>.<span class="number">8</span></span><br><span class="line">? Please pick a preset: </span><br><span class="line">❯ odinsam_vue+babel+ts+history+dart-sass+linter+prettier ([Vue <span class="number">3</span>] dart-sass, babel, typescript, router, eslint) </span><br><span class="line">  Default ([Vue <span class="number">3</span>] babel, eslint) </span><br><span class="line">  Default ([Vue <span class="number">2</span>] babel, eslint) </span><br><span class="line">  Manually select features </span><br></pre></td></tr></table></figure><ol start="2"><li>配置linter和prettier.添加 .prettierrc.js</li></ol><figure class="highlight js"><figcaption><span>.prettierrc.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// 一行最多 180 字符</span></span><br><span class="line">  <span class="attr">printWidth</span>: <span class="number">180</span>,</span><br><span class="line">  <span class="comment">// 使用 4 个空格缩进</span></span><br><span class="line">  <span class="attr">tabWidth</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="comment">// 不使用缩进符，而使用空格</span></span><br><span class="line">  <span class="attr">useTabs</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 行尾需要有分号</span></span><br><span class="line">  <span class="attr">semi</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 使用单引号</span></span><br><span class="line">  <span class="attr">singleQuote</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 对象的 key 仅在必要时用引号</span></span><br><span class="line">  <span class="attr">quoteProps</span>: <span class="string">&#x27;as-needed&#x27;</span>,</span><br><span class="line">  <span class="comment">// jsx 不使用单引号，而使用双引号</span></span><br><span class="line">  <span class="attr">jsxSingleQuote</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 末尾不需要逗号</span></span><br><span class="line">  <span class="attr">trailingComma</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">  <span class="comment">// 大括号内的首尾需要空格</span></span><br><span class="line">  <span class="attr">bracketSpacing</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// jsx 标签的反尖括号需要换行</span></span><br><span class="line">  <span class="attr">jsxBracketSameLine</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 箭头函数，只有一个参数的时候，也需要括号  avoid 能省略括号的时候就省略 例如x =&gt; x</span></span><br><span class="line">  <span class="attr">arrowParens</span>: <span class="string">&#x27;avoid&#x27;</span>,</span><br><span class="line">  <span class="comment">// 每个文件格式化的范围是文件的全部内容</span></span><br><span class="line">  <span class="attr">rangeStart</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">rangeEnd</span>: <span class="literal">Infinity</span>,</span><br><span class="line">  <span class="comment">// 不需要写文件开头的 @prettier</span></span><br><span class="line">  <span class="attr">requirePragma</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 不需要自动在文件开头插入 @prettier</span></span><br><span class="line">  <span class="attr">insertPragma</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 使用默认的折行标准</span></span><br><span class="line">  <span class="attr">proseWrap</span>: <span class="string">&#x27;preserve&#x27;</span>,</span><br><span class="line">  <span class="comment">// 根据显示样式决定 html 要不要折行</span></span><br><span class="line">  <span class="attr">htmlWhitespaceSensitivity</span>: <span class="string">&#x27;css&#x27;</span>,</span><br><span class="line">  <span class="comment">// 换行符使用 lf</span></span><br><span class="line">  <span class="attr">endOfLine</span>: <span class="string">&#x27;auto&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>安装并使用pinia. npm i pinia 或者 yarn add pinia 。 main.js使用pinia</li></ol><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"></span><br><span class="line">createApp(App).use(router).mount(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="3-创建storestore的本质是一个函数包括两个参数第一个是store的名字第二个是store的配置项-配置项中包括-stateactions和getters-state-是-store-的核心部分是需要统一管理的状态actions-相当于组件中的-methods即业务操作getter-完全等同于-store-状态的-计算值"><a class="markdownIt-Anchor" href="#3-创建storestore的本质是一个函数包括两个参数第一个是store的名字第二个是store的配置项-配置项中包括-stateactions和getters-state-是-store-的核心部分是需要统一管理的状态actions-相当于组件中的-methods即业务操作getter-完全等同于-store-状态的-计算值"></a> 3. 创建store.store的本质是一个函数包括两个参数，第一个是store的名字，第二个是store的配置项。配置项中包括 state,actions和getters. state 是 store 的核心部分是需要统一管理的状态.Actions 相当于组件中的 methods即业务操作.getter 完全等同于 Store 状态的 计算值</h4><figure class="highlight js"><figcaption><span>store/xxx.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第一个参数是store的名字，第二是参数是配置对象</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useAccountStore = defineStore(<span class="string">&#x27;account&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">// 配置state</span></span><br><span class="line">  <span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">loginUser</span>: <span class="string">&#x27;odinsam&#x27;</span>, <span class="attr">isLogin</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//配置getters</span></span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="attr">getAddAge</span>: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> !state.isLogin</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 配置actions</span></span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="function"><span class="title">setUserName</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.loginUser = <span class="string">&#x27;action user&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">loginUser</span>: <span class="built_in">this</span>.loginUser &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="4-使用store"><a class="markdownIt-Anchor" href="#4-使用store"></a> 4. 使用store</h4><figure class="highlight js"><figcaption><span>HomView.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;home&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btnLogin&quot;</span>&gt;</span>home login<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--在模板中可以使用解构的store数据--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>store:&#123;&#123; isLogin &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeUserbtnLogin&quot;</span>&gt;</span>change user<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>user:&#123;&#123; loginUser &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;invokeAction&quot;</span>&gt;</span>invoke action<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>getter store:&#123;&#123; accountStore.changeLoginState &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;Vue logo&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../assets/logo.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">msg</span>=<span class="string">&quot;Welcome to Your Vue.js + TypeScript App&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 引入 store</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; useAccountStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/account&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 引入 storeToRefs  将解构的store中的数据变为响应式数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">&#x27;@/components/HelloWorld.vue&#x27;</span> <span class="comment">// @ is an alias to /src</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 调用函数创建store实例</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">const</span> accountStore = useAccountStore()</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="keyword">function</span> <span class="title">btnLogin</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="built_in">console</span>.log(<span class="string">&#x27;btn login&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="comment">// 在组件的methods中可以直接使用accountStore实例对象</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  accountStore.isLogin = <span class="literal">true</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 解构store的数据在模板中使用，并使其为响应式的数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">const</span> &#123; isLogin, loginUser &#125; = storeToRefs(accountStore)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">const</span> changeUserbtnLogin = <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="built_in">console</span>.log(<span class="string">&#x27;function changeUserbtnLogin&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  accountStore.loginUser = <span class="string">&#x27;abc&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">const</span> invokeAction = <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="built_in">console</span>.log(<span class="string">&#x27;function invokeAction&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  accountStore.setUserName()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"> 可以使用 store.$onAction() 订阅 action 及其结果。 </span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"> 传递给它的回调在 action 之前执行。 </span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"> after 处理 Promise 并允许您在 action 完成后执行函数。 </span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"> 以类似的方式，onError 允许您在处理中抛出错误。 这些对于在运行时跟踪错误很有用，类似于 Vue 文档中的这个提示。</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"> &#123;</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">    name, // action 的名字</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">    store, // store 实例</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">    args, // 调用这个 action 的参数</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">    after, // 在这个 action 执行完毕之后，执行这个函数</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">    onError, // 在这个 action 抛出异常的时候，执行这个函数</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">  &#125;</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"> */</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">accountStore.$onAction(<span class="function">(<span class="params">&#123; name, store, args, after, onError &#125;</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="comment">//actions被调用触发</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="built_in">console</span>.log(<span class="string">&#x27;anonymous function&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="comment">//如果 actions 是 setUserName</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">if</span> (name === <span class="string">&#x27;setUserName&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// 执行成功后出发</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    after(<span class="function"><span class="params">reject</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="built_in">console</span>.log(<span class="string">&#x27;store&#x27;</span>, store)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="built_in">console</span>.log(<span class="string">&#x27;args&#x27;</span>, args)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="comment">//这里可以执行一些操作</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="built_in">console</span>.log(<span class="string">&#x27;reject.loginUser:&#x27;</span>, reject.loginUser)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="comment">// actions error时出发</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  onError(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">console</span>.log(<span class="string">&#x27;function onError&#x27;</span>, error)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="5-pinia插件的使用plugins"><a class="markdownIt-Anchor" href="#5-pinia插件的使用plugins"></a> 5. pinia插件的使用plugins.</h4><p>由于是底层 API，Pinia Store可以完全扩展。 您可以执行的操作列表：向 Store 添加新属性、定义 Store 时添加新选项、为 Store 添加新方法、包装现有方法、更改甚至取消操作、实现本地存储等副作用、仅适用于特定 Store。</p><h4 id="6-使用-piniause-将插件添加到-pinia-实例-给pania添加公共属性和公共方法-在vue中可以灵活使用"><a class="markdownIt-Anchor" href="#6-使用-piniause-将插件添加到-pinia-实例-给pania添加公共属性和公共方法-在vue中可以灵活使用"></a> 6. 使用 pinia.use() 将插件添加到 pinia 实例。给pania添加公共属性和公共方法。在vue中可以灵活使用</h4><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">const</span> pinia = createPinia()</span><br><span class="line"><span class="comment">// 扩展 PiniaCustomProperties 接口定义插件中添加的公共属性和公共方法。 然后可以安全地写入和读取它</span></span><br><span class="line">declare <span class="built_in">module</span> <span class="string">&#x27;pinia&#x27;</span> &#123;</span><br><span class="line">  <span class="keyword">export</span> interface PiniaCustomProperties &#123;</span><br><span class="line">    <span class="attr">pluginsAuthor</span>: string</span><br><span class="line">    pubs(): <span class="keyword">void</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过插件给pinia添加公共属性</span></span><br><span class="line">pinia.use(<span class="function"><span class="params">context</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; store &#125; = context</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">pluginsAuthor</span>: store.$state.loginUser &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//通过插件给pinia添加公共属性</span></span><br><span class="line">pinia.use(<span class="function"><span class="params">context</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; store &#125; = context</span><br><span class="line">  store.pubs = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;pinia plugins add public method&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//因为context中可以解构出store，所以上边的代码可以简写为</span></span><br><span class="line"><span class="comment">// pinia.use((&#123; store &#125;) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   return &#123; pluginsAuthor: store.$state.loginUser &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// pinia.use((&#123; store &#125;) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   store.pubs = function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(&#x27;pinia plugins add public method&#x27;)</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">createApp(App).use(router).use(pinia).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>HelloView.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getPulicProto&quot;</span>&gt;</span>pinia plugins public proto and invoke public methos<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>pluginsAuthor:&#123;&#123; propto &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">let</span> propto = ref(<span class="string">&#x27;原始值&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">const</span> getPulicProto = <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="built_in">console</span>.log(<span class="string">&#x27;function getPulicProto&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  accountStore.pubs()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  propto.value = accountStore.pluginsAuthor</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Pinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。与 Vuex 相比，Pinia 提供了一个更简单的 API，具有更少的规范，提供了 Composition-API 风格的 API，最重要的是，在与 TypeScript 一起使用时具有可靠的类型推断支持。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue3/"/>
    
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
    <category term="Pinia" scheme="https://www.odinsam.com/tags/Pinia/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 - 07. vue3中新增的一些组件</title>
    <link href="https://www.odinsam.com/articles/40e7.html"/>
    <id>https://www.odinsam.com/articles/40e7.html</id>
    <published>2022-10-22T08:34:00.000Z</published>
    <updated>2023-03-10T08:37:18.127Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/151c.html">Vue3.0 学习系列</a></p></blockquote><span id="more"></span><h4 id="1-fragment"><a class="markdownIt-Anchor" href="#1-fragment"></a> 1. Fragment</h4><p>在vue2中，组件时必须有一个跟标签的<br />在vue3中，组件可以没有跟标签，内部会将多个标签包含在一个Fragment虚拟元素中<br />优势在于可以减少标签层级、减小内存占用</p><h4 id="2-teleport"><a class="markdownIt-Anchor" href="#2-teleport"></a> 2. Teleport</h4><p>teplport是一种能够将我们的组件的html结构移动到指定位置的技术<br />移动的位置可以写html元素也可以是css选择： body或者#root 等</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;teleport to=<span class="string">&quot;移动的位置&quot;</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    需要移动的组件</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/teleport&gt;</span><br></pre></td></tr></table></figure><h4 id="3-suspense"><a class="markdownIt-Anchor" href="#3-suspense"></a> 3. Suspense</h4><p>等待异步组件时渲染一些额外内容，让应用有更好的用户体验<br />使用Suspense并使用异步动态引入对象，可以在setup中返回异步结果 return { await new Promise() }</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">Suspense</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:default</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Child</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:fallback</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Loading</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">// 异步动态引入组件</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">const</span> child = defineAsyncComponent(<span class="function">()=&gt;</span><span class="keyword">return</span> <span class="keyword">import</span>(<span class="string">&#x27;./components/xxx.vue&#x27;</span>))</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="4-全局api的转移"><a class="markdownIt-Anchor" href="#4-全局api的转移"></a> 4. 全局API的转移</h4><table><thead><tr><th>vue2 全局api</th><th>vue3 全局api</th></tr></thead><tbody><tr><td><a href="http://Vue.config.xxx">Vue.config.xxx</a></td><td><a href="http://app.config.xxx">app.config.xxx</a></td></tr><tr><td>Vue.config.productionTip</td><td>移除</td></tr><tr><td>Vue.component</td><td>app.component</td></tr><tr><td>Vue.directive</td><td>app.directive</td></tr><tr><td>Vue.mixin</td><td>app.mixin</td></tr><tr><td>Vue.use</td><td>app.use</td></tr><tr><td>Vue.prototype</td><td>app.config.globalProperties</td></tr></tbody></table><h4 id="5-一些其他的改变"><a class="markdownIt-Anchor" href="#5-一些其他的改变"></a> 5. 一些其他的改变</h4><ol><li>data在vue3中必须是函数形式</li><li>过度类名的更改 vue3中 v-enter-from v-leave-to</li><li>移除keycCode作为v-on的修饰符,同时也不支持config.keyCodes</li><li>移除v-on.native修饰符</li><li>移除过滤器 filter</li></ol><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/151c.html&quot;&gt;Vue3.0 学习系列&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue3/"/>
    
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 - 06. 其他的CompositionApi及总结</title>
    <link href="https://www.odinsam.com/articles/9754.html"/>
    <id>https://www.odinsam.com/articles/9754.html</id>
    <published>2022-10-21T08:30:00.000Z</published>
    <updated>2023-03-10T08:33:51.406Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/151c.html">Vue3.0 学习系列</a></p></blockquote><span id="more"></span><h4 id="1-shallowreactive"><a class="markdownIt-Anchor" href="#1-shallowreactive"></a> 1. shallowReactive</h4><p>shallowReactive只处理对象最外层属性的响应式，浅层次的。</p><h4 id="2-shallowref"><a class="markdownIt-Anchor" href="#2-shallowref"></a> 2. shallowRef</h4><p>shallowRef只处理基本数据类型的响应式，不处理对象类型的响应式。如果是基本数据类型，shallowRef与ref没有区别。但shallowRef不处理对象类型即，如果是对象类型shallowRef则不会处理为响应式数据<br />使用时机<br />如果一个对象数据，结构比较深，但变化时只是外层属性变化，则可以使用shallowReactive。<br />如果一个对象谁，后续功能不会修改该对象中的属性，而是生成新的对象来替换，则可以使用shallowRef</p><h4 id="3-readonly-与-shallowreadonly"><a class="markdownIt-Anchor" href="#3-readonly-与-shallowreadonly"></a> 3. readonly 与 shallowReadonly</h4><p>readonly 会让一个响应式数据变为只读 - 深只读<br />shallowReadonly 让一个响应式数据变为只读 - 浅只读<br />当不希望数据修改时可以使用</p><h4 id="4-toraw-与-markraw"><a class="markdownIt-Anchor" href="#4-toraw-与-markraw"></a> 4. toRaw 与 markRaw</h4><p>toRow 可以将响应式数据变为原始数据 const x = toRaw(person) toRaw的参数需要是refImpl类型的数据<br />markRaw 标记一个对象，使其永远不会再变为响应式对象</p><h4 id="5-customref"><a class="markdownIt-Anchor" href="#5-customref"></a> 5. customRef</h4><p>创建一个自定义的ref，并对其依赖项跟踪和更新触发进行显式控制。</p><figure class="highlight js"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Student组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>数据：&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; customRef &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"></span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">*/</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;Student&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">setup</span>(<span class="params">props, context</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">myref</span>(<span class="params">value</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">let</span> timer;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">return</span> customRef(<span class="function">(<span class="params">track, trigger</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="function"><span class="title">get</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="comment">// 通知vue跟踪value的变化</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        track();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">return</span> value;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="function"><span class="title">set</span>(<span class="params">newValue</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="built_in">clearTimeout</span>(timer)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            value = newValue;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="comment">// 通知vue重新解析模板</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            trigger()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        &#125;, <span class="number">500</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> msg = myref(<span class="string">&#x27;&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            msg</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="6-provider与inject"><a class="markdownIt-Anchor" href="#6-provider与inject"></a> 6. provider与inject</h4><p>provider和inject可以实现组件间数据通信的方式。<br />在父组件中使用provider提供数据，在后代组件（子孙组件）中使用inject来获取数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">x</span>:<span class="number">1</span>,<span class="attr">y</span>:<span class="number">2</span> &#125;;</span><br><span class="line">provider(<span class="string">&#x27;data&#x27;</span>,obj)</span><br><span class="line"><span class="comment">//子组件</span></span><br><span class="line"><span class="keyword">let</span> obj = inject(<span class="string">&#x27;data&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="7-对响应式数据的判断"><a class="markdownIt-Anchor" href="#7-对响应式数据的判断"></a> 7. 对响应式数据的判断</h4><p>isRef 检查一个值是否是一个 ref 对象<br />isReactvie 检查一个对象是否是 reactive创建的响应式代理<br />isReadonly 检查一个对象是否有 readonly 创建的只读对象<br />isProxy 检查一个对象是否是 reactive或者 readonly 方法创建的代理</p><h4 id="8-compositionapi的优势"><a class="markdownIt-Anchor" href="#8-compositionapi的优势"></a> 8. CompositionApi的优势</h4><p>传统的OptionApi中，新增或者修改一个需求，需要在 data、methods、computed里修改或添加对应的代码<br />CompositionApi的优势在于我们可以更优雅的阻止我们的代码、函数。让相关功能的代码更加有序的组织自一起。</p><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/151c.html&quot;&gt;Vue3.0 学习系列&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue3/"/>
    
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
    <category term="compositionApi" scheme="https://www.odinsam.com/tags/compositionApi/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 - 05. toRef与toRefs</title>
    <link href="https://www.odinsam.com/articles/ba93.html"/>
    <id>https://www.odinsam.com/articles/ba93.html</id>
    <published>2022-10-21T08:29:00.000Z</published>
    <updated>2023-03-10T08:30:33.923Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/151c.html">Vue3.0 学习系列</a></p></blockquote><span id="more"></span><h4 id="toref"><a class="markdownIt-Anchor" href="#toref"></a> toRef</h4><ol><li>作用：创建一个对象，起value值指向另一个对象中的某个属性</li><li>const name = toRef(person,‘name’)</li><li>应用：要将响应式对象中的某个属性单独提供给外部使用</li><li>toRefs 与 toRef 功能一致，但可以批量创建多个ref对象 toRefs(person)</li></ol><figure class="highlight js"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Student组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;person&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>姓名:&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>年龄:&#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>薪资:&#123;&#123;salary&#125;&#125;K<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;person.name+=&#x27;~&#x27;&quot;</span>&gt;</span>修改姓名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;person.age++&quot;</span>&gt;</span>修改年龄<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;person.job.j.salary++&quot;</span>&gt;</span>修改薪资<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; reactive, toRef, toRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/reactivity&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"></span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">*/</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;Student&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">setup</span>(<span class="params">props, context</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> person = reactive(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">name</span>: <span class="string">&#x27;odinsam&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">age</span>: <span class="number">20</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">job</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">j</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">salary</span>:<span class="number">50</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            person,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            ...toRefs(person),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">salary</span>:toRef(person.job.j,<span class="string">&#x27;salary&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/151c.html&quot;&gt;Vue3.0 学习系列&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue3/"/>
    
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
    <category term="toRef" scheme="https://www.odinsam.com/tags/toRef/"/>
    
    <category term="toRefs" scheme="https://www.odinsam.com/tags/toRefs/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 - 04. vue3中的hook</title>
    <link href="https://www.odinsam.com/articles/bd63.html"/>
    <id>https://www.odinsam.com/articles/bd63.html</id>
    <published>2022-10-21T08:27:00.000Z</published>
    <updated>2023-03-10T08:28:50.986Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/151c.html">Vue3.0 学习系列</a></p></blockquote><span id="more"></span><h4 id="hook"><a class="markdownIt-Anchor" href="#hook"></a> hook</h4><ol><li>hook的本质是一个函数，把setup函数中使用的组合api进行封装。</li><li>hook有点类似vue2中的mixin。</li><li>自定义hook可以让setup中的逻辑更加清楚易懂</li></ol><figure class="highlight js"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>点击的鼠标的坐标是:&#123;&#123;mpoint.x&#125;&#125;,&#123;&#123;mpoint.y&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>hook中回传的信息:&#123;&#123;param.title&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"></span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">*/</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">//引入自定义hook函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> usePoint <span class="keyword">from</span> <span class="string">&#x27;../hooks/usePoint&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;Student&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">setup</span>(<span class="params">props, context</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> title = ref(<span class="string">&#x27;Student组件&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> &#123;mpoint,param &#125; = usePoint(&#123;<span class="attr">title</span>:title.value&#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            title,mpoint,param</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>hooks/usePoint.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onBeforeUnmount, onMounted, reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/runtime-core&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params">param</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> mpoint = reactive(&#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span> &#125;);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">savePotin</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        mpoint.x = event.pageX;</span><br><span class="line">        mpoint.y = event.pageY;</span><br><span class="line">        param.title = param.title + <span class="string">&#x27;-hook&#x27;</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;param&#x27;</span>, param);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;mouse click point,&#x27;</span>, event.pageX, event.pageY);</span><br><span class="line">    &#125;</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;click&#x27;</span>, savePotin);</span><br><span class="line">    &#125;);</span><br><span class="line">    onBeforeUnmount(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">window</span>.removeEventListener(<span class="string">&#x27;click&#x27;</span>, savePotin);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//使用hook一定要给当前函数返回信息</span></span><br><span class="line">    <span class="keyword">return</span> &#123; mpoint, param &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>app组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isShowStuCpm&quot;</span>&gt;</span>显示、隐藏student组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Student</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Student</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">setup</span>(<span class="params">props, context</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> isShow = ref(<span class="literal">true</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> isShowStuCpm = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            isShow.value = !isShow.value</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            isShow,isShowStuCpm</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/151c.html&quot;&gt;Vue3.0 学习系列&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue3/"/>
    
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
    <category term="hook" scheme="https://www.odinsam.com/tags/hook/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 - 03. 生命周期</title>
    <link href="https://www.odinsam.com/articles/4ed.html"/>
    <id>https://www.odinsam.com/articles/4ed.html</id>
    <published>2022-10-21T08:24:00.000Z</published>
    <updated>2023-03-10T08:26:57.440Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/151c.html">Vue3.0 学习系列</a></p></blockquote><span id="more"></span><h4 id="生命周期"><a class="markdownIt-Anchor" href="#生命周期"></a> 生命周期</h4><ol><li>vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.</li><li>在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名</li><li>具体的变化如下<br />beforeCreate ==&gt; setup()<br />created ==&gt; setup()<br />beforeMount ==&gt; onBeforeMount<br />mounted ==&gt; onMounted<br />beforeUpdate ==&gt; onBeforeUpdate<br />updated ==&gt; onUpdated<br />beforeUnmount ==&gt; onBeforeUnmount<br />unmounted ==&gt; onUnmounted</li><li>基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查<br /><img src="/images/4ed/lifecycle.vue3.png" alt="生命周期" /></li></ol><figure class="highlight js"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Student组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>increment: &#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btnIncrement&quot;</span>&gt;</span>increment<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml"></span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">*/</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123;onBeforeMount, onBeforeUnmount, onBeforeUpdate, onMounted, onUnmounted, onUpdated, ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;Student&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//vue2配置项的形式编写生命周期函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// beforeCreate() &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//     console.log(&#x27;---beforeCreate---&#x27;);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// &#125;,</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// created() &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//     console.log(&#x27;---beforeCreate---&#x27;);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// &#125;,</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// beforeMount() &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//     console.log(&#x27;---beforeMount---&#x27;);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// &#125;,</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// mounted() &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//     console.log(&#x27;---mounted---&#x27;);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// &#125;,</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// beforeUpdate() &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//     console.log(&#x27;---beforeUpdate---&#x27;);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// &#125;,</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// updated() &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//     console.log(&#x27;---updated---&#x27;);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// &#125;,</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// beforeUnmount() &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//     console.log(&#x27;---beforeUnmount---&#x27;);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// &#125;,</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// unmounted() &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//     console.log(&#x27;---unmounted---&#x27;);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// &#125;,</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">setup</span>(<span class="params">props, context</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> sum = ref(<span class="number">0</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> btnIncrement = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            sum.value++;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">//组合api形式编写生命周期函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        onBeforeMount(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;---onBeforeMount---&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        onMounted(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;---onMounted---&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        onBeforeUpdate(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;---onBeforeUpdate---&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        onUpdated(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;---onUpdated---&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        onBeforeUnmount(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;---onBeforeUnmount---&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        onUnmounted(<span class="function">()=&gt;</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;---onUnmounted---&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            sum,btnIncrement</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        生命周期：</span><br><span class="line">        <span class="number">1.</span> vue3的生命周期改变了vue2中挂载流程的 beforeDestroy和destroyed 函数，改变为 beforeUnmount 和 unmounted.</span><br><span class="line">        <span class="number">2.</span> 在vue3中可以用配置项的形式编写生命周期函数，但也可以是用组合函数的形式在setup中编写生命周期函数。但是所有生命周期函数都需要改名</span><br><span class="line">        <span class="number">3.</span> 具体的变化如下</span><br><span class="line">            beforeCreate ==&gt;  setup()</span><br><span class="line">            created ==&gt; setup()</span><br><span class="line">            beforeMount ==&gt; onBeforeMount</span><br><span class="line">            mounted ==&gt; onMounted</span><br><span class="line">            beforeUpdate ==&gt; onBeforeUpdate</span><br><span class="line">            updated ==&gt; onUpdated</span><br><span class="line">            beforeUnmount ==&gt; onBeforeUnmount</span><br><span class="line">            unmounted ==&gt; onUnmounted</span><br><span class="line">        <span class="number">4.</span> 基本流程与vue2一致没有改变,只是减去了对是否包含el配置项的检查</span><br><span class="line">    --&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>app组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isShowStudent&quot;</span>&gt;</span>显示、隐藏student组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Student</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123;ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Student</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">setup</span>(<span class="params">props, context</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> isShow = ref(<span class="literal">true</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> isShowStudent = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            isShow.value = !isShow.value</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            isShow,isShowStudent,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/151c.html&quot;&gt;Vue3.0 学习系列&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue3/"/>
    
    
    <category term="生命周期" scheme="https://www.odinsam.com/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 - 02. 计算属性与监视属性</title>
    <link href="https://www.odinsam.com/articles/3ab3.html"/>
    <id>https://www.odinsam.com/articles/3ab3.html</id>
    <published>2022-10-21T08:20:00.000Z</published>
    <updated>2023-03-10T08:23:16.360Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/151c.html">Vue3.0 学习系列</a></p></blockquote><span id="more"></span><h4 id="计算属性"><a class="markdownIt-Anchor" href="#计算属性"></a> 计算属性</h4><ol><li>与vue2中的写法基本一致，直接在setup中定义计算属性 计算属性:computed()</li><li>只有get的简写形式 计算属性:computed(()=&gt;{ return xxx })</li><li>有get有set的写法 计算属性:computed({ get(){ return xxx }, set(value){ xxx } })</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fullName = computed(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> firstName + <span class="string">&#x27;-&#x27;</span> + lastName;</span><br><span class="line">&#125;),</span><br><span class="line"><span class="comment">//完整写法</span></span><br><span class="line"><span class="keyword">let</span> fullName = computed(&#123;</span><br><span class="line">    <span class="function"><span class="title">get</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> person.firstName + <span class="string">&#x27;-&#x27;</span> + person.lastName;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">set</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">        person.firstName = value.split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">        person.lastName = value.split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="监视属性"><a class="markdownIt-Anchor" href="#监视属性"></a> 监视属性</h4><ol><li>watch([需要监视的属性],(newValue,oldValue)=&gt;{ 监视的方法 },{ immediate:true,deep:true })</li><li>监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项</li><li>当watch监视的是reactive的对象时，无法正确的获取到oldValue的值</li><li>当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效</li><li>当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 监视ref基本数据类型</span></span><br><span class="line">watch([sum, message], <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;sum或message改变了&#x27;</span>,newValue,oldValue);</span><br><span class="line">&#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;)</span><br><span class="line"><span class="comment">// 2. 监视reactvie对象类型 deep无效无需配置</span></span><br><span class="line">watch([person], <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;person改变了&#x27;</span>,newValue,oldValue);</span><br><span class="line">&#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;)</span><br><span class="line"><span class="comment">// 3. 监视reactvie对象类型的某一个属性</span></span><br><span class="line">watch(<span class="function">()=&gt;</span>person.firstName, <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;person的firstName改变了&#x27;</span>,newValue,oldValue);</span><br><span class="line">&#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;)</span><br><span class="line"><span class="comment">// 4. 监视reactvie对象类型的一些属性</span></span><br><span class="line">watch([<span class="function">()=&gt;</span>person.firstName,<span class="function">()=&gt;</span>person.lastName], <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;person的firstName、lastName改变了&#x27;</span>,newValue,oldValue);</span><br><span class="line">&#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;)</span><br><span class="line"><span class="comment">// 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到</span></span><br><span class="line">watch([<span class="function">()=&gt;</span>person.job], <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;person的job改变了&#x27;</span>,newValue,oldValue);</span><br><span class="line">&#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span>,<span class="attr">deep</span>:<span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><h4 id="watcheffect"><a class="markdownIt-Anchor" href="#watcheffect"></a> watchEffect</h4><ol><li>不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。</li><li>watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">watchEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(person));</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;watchEffect监视&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Student组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>计算属性-computed<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;person.firstName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;person.lastName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>爱好:&#123;&#123;person.hobby&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>全名:&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>修改全名<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fullName&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>stu的Job  <span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123;JSON.stringify(person.job)&#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>监视属性-watch<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>求和:&#123;&#123;sum&#125;&#125;,信息:&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btnEdit&quot;</span>&gt;</span>修改sum和message<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btnStuName&quot;</span>&gt;</span>修改stu的姓名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btnEditStuHobby&quot;</span>&gt;</span>修改stu的爱好<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btnEditStuJobA&quot;</span>&gt;</span>修改job中的a值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123;ref, computed, reactive,watch, watchEffect&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;Student&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">setup</span>(<span class="params">props, context</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> sum = ref(<span class="number">0</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> message = ref(<span class="string">&#x27;消息&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> person = reactive(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">firstName</span>: <span class="string">&#x27;odin&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">lastName</span>: <span class="string">&#x27;sam&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">hobby</span>: [<span class="string">&#x27;抽烟&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>, <span class="string">&#x27;烫头&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">job</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">a</span>:&#123;<span class="attr">x</span>:<span class="number">1</span>,<span class="attr">y</span>:<span class="number">2</span>&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> btnEdit = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            sum.value++;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            message.value+=<span class="string">&quot;~&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> btnStuName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            person.firstName += <span class="string">&quot;!&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            person.lastName += <span class="string">&quot;~&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> btnEditStuHobby = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            person.hobby.push(<span class="string">&#x27;学习&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> btnEditStuJobA = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            person.job.a.x += <span class="number">10</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        计算属性</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        1. 与vue2中的写法基本一致，直接在setup中定义计算属性  计算属性:computed()</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        2. 只有get的简写形式 计算属性:computed(()=&gt;&#123; return xxx &#125;)</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        3. 有get有set的写法 计算属性:computed(&#123; get()&#123; return xxx &#125;, set(value)&#123; xxx &#125; &#125;)</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">*/</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">//简写</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// let fullName = computed(() =&gt; &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">//     return firstName + &#x27;-&#x27; + lastName;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// &#125;),</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">//完整写法</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> fullName = computed(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="function"><span class="title">get</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">return</span> person.firstName + <span class="string">&#x27;-&#x27;</span> + person.lastName;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="function"><span class="title">set</span>(<span class="params">value</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                person.firstName = value.split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                person.lastName = value.split(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        监视属性</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        1. watch([需要监视的属性],(newValue,oldValue)=&gt;&#123; 监视的方法 &#125;,&#123; immediate:true,deep:true &#125;)</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        2. 监视ref基本类型数据,可以将需要监视的属性以数组的形式作为第一个参数,第二个参数是监视的方法，第三个参数是监视的配置项</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        3. 当watch监视的是reactive的对象时，无法正确的获取到oldValue的值</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        4. 当watch监视的是reactive的对象时，默认就开启了深度监视 deep配置无效</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        5. 当watch监视的是reactive的对象的某个属性,且该属性又是一个对象是，需要配置deep深度监视.例如 监视person.job 但是job依旧是一个对象，此时就需要deep深度监视</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">*/</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 1. 监视ref基本数据类型</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        watch([sum, message], <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;sum或message改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 2. 监视reactvie对象类型 deep无效无需配置</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        watch([person], <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;person改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 3. 监视reactvie对象类型的某一个属性</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        watch(<span class="function">()=&gt;</span>person.firstName, <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;person的firstName改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 4. 监视reactvie对象类型的一些属性</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        watch([<span class="function">()=&gt;</span>person.firstName,<span class="function">()=&gt;</span>person.lastName], <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;person的firstName、lastName改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 5. 当监视reactive数据的某个对象，且对象内部依旧是一个对象时，需要开启deep深度监视。否则监视不到</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        watch([<span class="function">()=&gt;</span>person.job], <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;person的job改变了&#x27;</span>,newValue,oldValue);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;, &#123; <span class="attr">immediate</span>: <span class="literal">true</span>, <span class="attr">deep</span>: <span class="literal">true</span> &#125;),</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        watchEffect</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        1. 不用指明监视的属性，监视的回调中用到那个属性，就监视那个属性。</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        2. watchEffect与computed有点类似。但 computed 注重计算出来的值（回调函数的返回值），所以一定要有return。而watchEffect更注重的是过程（回调函数的函数体），所以不用写返回值。</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">*/</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        watchEffect(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(person));</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&#x27;watchEffect监视&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            person,fullName,btnEdit,sum,message,btnStuName,btnEditStuHobby,btnEditStuJobA</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/151c.html&quot;&gt;Vue3.0 学习系列&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue3/"/>
    
    
    <category term="computed" scheme="https://www.odinsam.com/tags/computed/"/>
    
    <category term="watch" scheme="https://www.odinsam.com/tags/watch/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 - 01. 初识vue3</title>
    <link href="https://www.odinsam.com/articles/2774.html"/>
    <id>https://www.odinsam.com/articles/2774.html</id>
    <published>2022-10-20T08:13:00.000Z</published>
    <updated>2023-03-10T08:20:02.586Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/151c.html">Vue3.0 学习系列</a></p></blockquote><span id="more"></span><h4 id="1-mainjs-与vue2的区别"><a class="markdownIt-Anchor" href="#1-mainjs-与vue2的区别"></a> 1. main.js 与vue2的区别</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入的不在是vue的构造函数，而是一个名为createApp的工厂函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//createApp(app)创建应用实例对象app，类似vue2中的vm，但比vm更轻</span></span><br><span class="line">createApp(App).mount(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="2-setup函数"><a class="markdownIt-Anchor" href="#2-setup函数"></a> 2. setup函数</h4><ol><li>vue3.0中的衣蛾新配置项setup.setup是所有组合api的基础</li><li>组件中所有用都的 数据、方法等都要配置在setup中。</li><li>setup函数的返回值有两种，<br />如果返回一个对象，则对象中的属性、方法等在模板中军可以直接使用<br />如果返回一个渲染函数，则可以自定渲染内容</li><li>setup不能是一个async函数，因为返回值不再是return的对象而是promise。末班看不到reutnr对象中的属性。</li><li>尽量不要vue3与vue2混用。如果重名以vue3为主</li><li>ref可以将string、number转换为引用实现的实例对象(refimpl).从而实现数据的响应式操作.模板在解析是如果显示的数据是refimpl对象则会自动获取value的值.对象类型的数据使用了reactive函数实现了响应式.</li><li>reactive只能将对象类型的数据改变为响应式数据。并且在获取时不需要再通过value而可以直接获取 let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。</li><li>reactive定义的响应式数据可以直接修改对象的属性、通过数组的下标操作数组.具体实现原理如下:</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;<span class="attr">name</span>:<span class="string">&#x27;odinsam&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Proxy</span>(person,&#123;</span><br><span class="line">    <span class="comment">// 读取属性时调用</span></span><br><span class="line">    <span class="function"><span class="title">get</span>(<span class="params">target,propName</span>)</span> &#123; <span class="keyword">return</span> <span class="built_in">Reflect</span>.get(target,propName) &#125;</span><br><span class="line">    <span class="comment">// 新增、修改时调用</span></span><br><span class="line">    <span class="function"><span class="title">set</span>(<span class="params">target,propName,value</span>)</span> &#123; <span class="built_in">Reflect</span>.set(target,propName,value) &#125;</span><br><span class="line">    <span class="comment">// 删除属性时调用</span></span><br><span class="line">    <span class="function"><span class="title">deleteProperty</span>(<span class="params">target,propName</span>)</span>&#123; <span class="keyword">return</span> <span class="built_in">Reflect</span>.deleteProperty(target,propName) &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>备注:<br />ref通常用来定义基本类型数据，reactive通常定义对象类型的数据<br />ref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据<br />ref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value</p><ol start="9"><li>setup在beforeCreate之前执行，且this是undefind</li><li>setup的参数<br />props:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性<br />context:<br />attrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 attrs slots:收到的插槽内容，相当于 this.slots<br />emit: 分发自定义事件的函数 相当于 this.$emit</li></ol><figure class="highlight js"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>props信息:&#123;&#123;propa&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名:&#123;&#123;stuName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>班级:&#123;&#123;stuInfo1.className&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>年龄:&#123;&#123;stuInfo1.stuAge&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>性别:&#123;&#123;stuInfo2.sex&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>地址:&#123;&#123;stuInfo2.address&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>爱好:&#123;&#123;stuInfo2.hobby&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;stuInfo2.newProto&quot;</span>&gt;</span>新属性:&#123;&#123;stuInfo2.newProto&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;slotStu&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;btnClick&quot;</span>&gt;</span>edit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addProto&quot;</span>&gt;</span>add Prototype<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;deleteProto&quot;</span>&gt;</span>delete Prototype<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;customEventClick&quot;</span>&gt;</span>emit触发自定义事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  </span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// ref 可以将基本数据类型或者对象改变为响应式数据 let name = ref(&#x27;odinsam&#x27;)</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// reactive 只能将对象类型的数据改变为响应式数据 let stuInfo = reactive(&#123;sex:&#x27;男&#x27;,address:&#x27;beijing&#x27;&#125;)</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// 实现原理</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">            let person = &#123;name:&#x27;odinsam&#x27;&#125;</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">            let p = new Proxy(person,&#123;</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">                // 读取属性时调用</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">                get(target,propName) &#123; return Reflect.get(target,propName) &#125;</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">                // 新增、修改时调用</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">                set(target,propName,value) &#123; Reflect.set(target,propName,value) &#125;</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">                // 删除属性时调用</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">                deleteProperty(target,propName)&#123; return Reflect.deleteProperty(target,propName) &#125;</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">            &#125;)</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">    */</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//备注:</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// 1. ref通常用来定义基本类型数据，reactive通常定义对象类型的数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// 2. ref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">// 3. ref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">import</span> &#123; ref,reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;Student&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//接收父组件通过props传递的数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>: [<span class="string">&#x27;propa&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//申明父组件传递的自定义事件。不申明会有警告</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">emit</span>: [<span class="string">&#x27;cmpEvent&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">    props:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">    context:</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">    attrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 $attrs</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        slot:收到的插槽内容，相当于 this.$slots</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">        emit: 分发自定义事件的函数 相当于 this.$emit</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">     */</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">setup</span>(<span class="params">props,context</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">//将数据转换为refimpl对象从而实现响应式编程</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> stuName = ref(<span class="string">&#x27;odinsam&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> stuInfo1 = ref(&#123; <span class="attr">className</span>: <span class="string">&#x27;一年级&#x27;</span>, <span class="attr">stuAge</span>: <span class="number">19</span> &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> stuInfo2 = reactive(&#123; <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span>, <span class="attr">address</span>: <span class="string">&#x27;beijing&#x27;</span>,<span class="attr">hobby</span>:[<span class="string">&#x27;学习&#x27;</span>,<span class="string">&#x27;游戏&#x27;</span>,<span class="string">&#x27;看电影&#x27;</span>] &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">btnClick</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(stuName);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">//获取refimpl对象的值通过value属性</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            stuName.value = <span class="string">&#x27;changeName&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            stuInfo1.value.className = <span class="string">&#x27;二年级&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            stuInfo1.value.stuAge = <span class="number">20</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">//reactive定义的代理对象在获取时不需要再通过value而可以直接获取 </span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            stuInfo2.sex = <span class="string">&#x27;女&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            stuInfo2.address = <span class="string">&#x27;nanjing&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// vue3可以直接修改对象的属性、通过数组的下标操作数组.</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">addProto</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">//vue2 中 需要 this.$set(对象,&#x27;属性名&#x27;,属性的值) 操作    </span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            stuInfo2.newProto = <span class="string">&#x27;新属性&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">deleteProto</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">//vue2 中 需要 this.$delete(对象,&#x27;属性名&#x27;) 操作    </span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">delete</span> stuInfo2.newProto</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">customEventClick</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">//触发自定义事件</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            context.emit(<span class="string">&#x27;cmpEvent&#x27;</span>, &#123;<span class="attr">customEventParam</span>:<span class="string">&#x27;自定义方法的参数&#x27;</span>&#125;);   </span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            stuName,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            stuInfo1,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            stuInfo2,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            btnClick,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            addProto,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            deleteProto,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            customEventClick</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  </span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>app组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>自定义方法的参数:&#123;&#123;cstmParam.customEventParam&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Student</span> <span class="attr">propa</span>=<span class="string">&quot;propa传值&quot;</span> @<span class="attr">cmpEvent</span>=<span class="string">&quot;cmpEvent&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--vue3中 需要使用 v-slot:插槽名 的方式定义  不能使用 slot=&#x27;操作名&#x27; 的vue2形式--&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:slotStu</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color:aquamarine&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>插槽内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span>   </span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">student</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/reactivity&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Student</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> cstmParam = reactive(&#123;&#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="keyword">function</span> <span class="title">cmpEvent</span>(<span class="params">param</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            cstmParam[<span class="string">&#x27;customEventParam&#x27;</span>] = param[<span class="string">&#x27;customEventParam&#x27;</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            cstmParam,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            cmpEvent,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/151c.html&quot;&gt;Vue3.0 学习系列&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue3/"/>
    
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 学习系列</title>
    <link href="https://www.odinsam.com/articles/151c.html"/>
    <id>https://www.odinsam.com/articles/151c.html</id>
    <published>2022-10-20T08:10:00.000Z</published>
    <updated>2023-03-10T08:37:55.228Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/151c.html">Vue3.0 学习系列</a></p></blockquote><span id="more"></span><h3 id="vue30-01-初识vue3"><a class="markdownIt-Anchor" href="#vue30-01-初识vue3"></a> <a href="/articles/2774.html">Vue3.0 - 01. 初识vue3</a></h3><h3 id="vue30-02-计算属性与监视属性"><a class="markdownIt-Anchor" href="#vue30-02-计算属性与监视属性"></a> <a href="/articles/3ab3.html">Vue3.0 - 02. 计算属性与监视属性</a></h3><h3 id="vue30-03-生命周期"><a class="markdownIt-Anchor" href="#vue30-03-生命周期"></a> <a href="/articles/4ed.html">Vue3.0 - 03. 生命周期</a></h3><h3 id="vue30-04-vue3中的hook"><a class="markdownIt-Anchor" href="#vue30-04-vue3中的hook"></a> <a href="/articles/bd63.html">Vue3.0 - 04. vue3中的hook</a></h3><h3 id="vue30-05-toref与torefs"><a class="markdownIt-Anchor" href="#vue30-05-toref与torefs"></a> <a href="/articles/ba93.html">Vue3.0 - 05. toRef与toRefs</a></h3><h3 id="vue30-06-其他的compositionapi及总结"><a class="markdownIt-Anchor" href="#vue30-06-其他的compositionapi及总结"></a> <a href="/articles/9754.html">Vue3.0 - 06. 其他的CompositionApi及总结</a></h3><h3 id="vue30-07-vue3中新增的一些组件"><a class="markdownIt-Anchor" href="#vue30-07-vue3中新增的一些组件"></a> <a href="/articles/40e7.html">Vue3.0 - 07. vue3中新增的一些组件</a></h3><h3 id="vue30-pinia-状态管理框架"><a class="markdownIt-Anchor" href="#vue30-pinia-状态管理框架"></a> <a href="/articles/99b6.html">Vue3.0 - Pinia 状态管理框架</a></h3><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/151c.html&quot;&gt;Vue3.0 学习系列&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue3/"/>
    
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 15. vue-router路由</title>
    <link href="https://www.odinsam.com/articles/cc23.html"/>
    <id>https://www.odinsam.com/articles/cc23.html</id>
    <published>2022-10-20T08:04:00.000Z</published>
    <updated>2023-03-10T08:09:17.350Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p></blockquote><span id="more"></span><h4 id="vue-router路由"><a class="markdownIt-Anchor" href="#vue-router路由"></a> vue-router路由</h4><ol><li>vue-router是vue的一个插件库，专门用来实现spa应用(单页面应用)</li><li>一个路由就是一组映射关系 key-value,key是路径，value是组件(前端)或函数(后端)</li><li>创建路由表,多级路由配置child时不需要写父路径 以及 /</li></ol><figure class="highlight js"><figcaption><span>router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&#x27;../components/Home.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">&#x27;../components/About.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line"><span class="comment">//路由工作的两种模式 默认是hash模式 mode改变模式为history模式</span></span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: Home,</span><br><span class="line">            <span class="attr">children</span>: [</span><br><span class="line">            <span class="comment">//不需要写父路径 以及 /  也可以给路由命名 跳转时可以不用path 使用name即可</span></span><br><span class="line">                &#123; <span class="attr">path</span>: <span class="string">&#x27;news&#x27;</span>, <span class="attr">component</span>: News,<span class="attr">name</span>:<span class="string">&#x27;news&#x27;</span>,</span><br><span class="line">                <span class="attr">children</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">name</span>: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">                            <span class="comment">//路由使用parmas传参,跳转必须使用name不可以使用path  获取使用$route.params.id获取</span></span><br><span class="line">                            <span class="attr">path</span>: <span class="string">&#x27;detail/:id&#x27;</span>,</span><br><span class="line">                            <span class="attr">component</span>: Detail,</span><br><span class="line">                            <span class="comment">//给details组件传递对象，所有数据在details中可以以props的方式接收</span></span><br><span class="line">                            <span class="comment">// props:&#123;a:1,b:2&#125;</span></span><br><span class="line">                            <span class="comment">//如果props是true，则路由收到的params参数会以props的形式传递 即 id 会以props方式传递</span></span><br><span class="line">                            <span class="comment">// props:true</span></span><br><span class="line">                            <span class="comment">// 如果props是函数，则路由同样以props的形式传递参数给组件，但是这可以通过route结构获取到query并传参（此处使用解构赋值的连续写法 先从route中结构获取query，再从query中结构出id，title</span></span><br><span class="line">                            <span class="function"><span class="title">props</span>(<span class="params">&#123;query:&#123;id,title&#125;&#125;</span>)</span>&#123; <span class="keyword">return</span> &#123;id,title&#125; &#125;</span><br><span class="line">                            </span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; <span class="attr">path</span>: <span class="string">&#x27;messages&#x27;</span>, <span class="attr">component</span>: Message &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: About</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="4"><li>加载VueRouter插件并加载路由表</li></ol><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span>;</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App),</span><br><span class="line">    router</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="5"><li>使用route-link实现路由切换 route-view 指定展示位置(被切换掉组件会被销毁)</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--一级路由--&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">class</span>=<span class="string">&quot;navitem&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;navitem-active&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/home&quot;</span>&gt;</span>Home Page<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line">&lt;!--一级路由  replace模式：控制路由器跳转时操作浏览器历史记录的模式，默认是push追加记录，replace是替换当前记录。--&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">replace</span> <span class="attr">class</span>=<span class="string">&quot;navitem&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;navitem-active&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/home&quot;</span>&gt;</span>Home Page<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line">&lt;!--二级路由--&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/home/news&quot;</span>&gt;</span>News<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line">&lt;!--route-view展示--&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line">&lt;!-- router-link url querystring传参 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;`/home/news/detail?id=$&#123;n.id&#125;`&quot;</span>&gt;</span>&#123;&#123;n.title&#125;&#125;<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line">&lt;!-- router-link url params传参 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;`/home/news/detail/$&#123;n.id&#125;`&quot;</span>&gt;</span>&#123;&#123;n.title&#125;&#125;-byid<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line">&lt;!-- router-link to对象 query传参 只能用name 不能用path--&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="xml">name:&#x27;detail&#x27;,</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="xml">    query:&#123; id:n.id &#125;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="xml">&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">&#123;&#123;n.title&#125;&#125; - query对象形式</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line">&lt;!-- router-link to对象 param传参 只能用name 不能用path--&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="xml">name:&#x27;detailid&#x27;,</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="xml">    params:&#123; id:n.id &#125;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="xml">&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">&#123;&#123;n.title&#125;&#125; - params对象形式</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="6"><li>路由组件一般放在components文件夹，路由组件放在page文件夹</li><li>每一个组件都有自己的$route属性，存储自己的路由信息</li><li>整个应用只有一个router，可以通过$router获取</li><li>也可以不借助router-link实现路由跳转.两种模式：push模式和replace模式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编程式导航 push模式 query传参</span></span><br><span class="line"><span class="function"><span class="title">pushShow</span>(<span class="params">n</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">        <span class="attr">query</span>:&#123; <span class="attr">id</span>:n.id &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//编程式导航 replace模式 params传参</span></span><br><span class="line"><span class="function"><span class="title">replaceShow</span>(<span class="params">n</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.$router.replace(&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;detailid&#x27;</span>,</span><br><span class="line">        <span class="attr">params</span>:&#123; <span class="attr">id</span>:n.id &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">backClick</span>(<span class="params"></span>)</span> &#123; <span class="built_in">this</span>.$router.back(); &#125;,<span class="comment">//后退</span></span><br><span class="line"><span class="function"><span class="title">forwardClick</span>(<span class="params"></span>)</span> &#123; <span class="built_in">this</span>.$router.forward(); &#125;,<span class="comment">//前进</span></span><br><span class="line"><span class="function"><span class="title">goClick</span>(<span class="params"></span>)</span> &#123; <span class="built_in">this</span>.$router.go(<span class="number">2</span>); &#125; <span class="comment">//跳转</span></span><br></pre></td></tr></table></figure><ol start="10"><li>可以使用keep-alive标签包含用来缓存路由组件默认缓存所有组件。:include=&quot;[‘组件名’]&quot; 指定需要缓存的路由组件。exclude功能刚好相反</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive :include=<span class="string">&quot;[&#x27;Message&#x27;]&quot;</span>&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line">&lt;/keep-alive&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">keep-alive</span> <span class="attr">:exclude</span>=<span class="string">&quot;[&#x27;News&#x27;]&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="11"><li>当使用keep-alive包含路由组件后，组件不会触发beforeDestroy销毁流程。需要使用路由组件独有的两个生命周期解决 activated()激活、deactivated()失活。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//激活</span></span><br><span class="line"><span class="function"><span class="title">activated</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.timer=<span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.opacity -= <span class="number">0.01</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.opacity &lt;= <span class="number">0</span>) <span class="built_in">this</span>.opacity = <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    &#125;, <span class="number">16</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//失活</span></span><br><span class="line"><span class="function"><span class="title">deactivated</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timer)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="12"><li>路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享路由守卫、组件内守卫</li></ol><figure class="highlight js"><figcaption><span>router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享守卫、组件内守卫</span></span><br><span class="line"><span class="comment">//全局前置路由守卫 - 初始化、每次路由切换时被调用</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (to.meta.isAuth) &#123;</span><br><span class="line">        <span class="comment">//判断权限</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;token&#x27;</span>) === <span class="string">&#x27;odinsam&#x27;</span>) next();</span><br><span class="line">        <span class="keyword">else</span> alert(<span class="string">&#x27;undefind token&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局后置路由守卫 - 初始化、每次路由切换时被调用</span></span><br><span class="line">router.afterEach(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.title = to.meta.title || <span class="string">&#x27;index&#x27;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="13"><li>独享路由守卫是在加某一个需要控制的路由上.<font color='red'>代码加在路由表需要控制的路由中</font></li></ol><figure class="highlight js"><figcaption><span>router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">beforeRouteEnter</span>(<span class="params">to, <span class="keyword">from</span>, next</span>)</span> &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="14"><li>组件内守卫<font color='red'>代码加在组件里需要控制的路由中</font></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当路由进入之前   通过路由规则，进入该组件时被调用</span></span><br><span class="line">beforeRouteEnter (to, <span class="keyword">from</span>, next) &#123; <span class="comment">// ... &#125;,</span></span><br><span class="line"><span class="comment">//当路由离开之前    通过路由规则，离开改组件时被调用</span></span><br><span class="line">beforeRouteLeave (to, <span class="keyword">from</span>, next) &#123; <span class="comment">// ... &#125; </span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/e255.html&quot;&gt;Vue2.0进阶学习&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue2" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue2/"/>
    
    
    <category term="vue2" scheme="https://www.odinsam.com/tags/vue2/"/>
    
    <category term="router" scheme="https://www.odinsam.com/tags/router/"/>
    
    <category term="路由" scheme="https://www.odinsam.com/tags/%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 14. vuex</title>
    <link href="https://www.odinsam.com/articles/97b5.html"/>
    <id>https://www.odinsam.com/articles/97b5.html</id>
    <published>2022-10-20T08:01:00.000Z</published>
    <updated>2023-03-10T08:03:57.564Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p></blockquote><span id="more"></span><h4 id="vuex"><a class="markdownIt-Anchor" href="#vuex"></a> vuex</h4><p>vue组件通过dispatch(‘key’,param)找到store的actions(key,param),action通过commit找到mutations(key,function),mutations执行回调函数修改state中的数据，vue根据state数据的改变自动重新render模板.<br />vue组件也可以直接通过commit找到mutations。这种情况一般用在所需要的参数是固定已知的情况下</p><ol><li>安装vuex vue2.0需要安装vuex3 npm i vuex@3 2. 创建 store/index.js。store中包含actions、mutations、state、getters。</li></ol><figure class="highlight js"><figcaption><span>store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span>;</span><br><span class="line">Vue.use(Vuex);</span><br><span class="line"><span class="comment">// 模块化创建storeOptions</span></span><br><span class="line"><span class="keyword">const</span> stuOptions = &#123;</span><br><span class="line">    <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">add</span>(<span class="params">context, param</span>)</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;action add&#x27;</span>, param);</span><br><span class="line">            context.commit(<span class="string">&#x27;ADD&#x27;</span>, param);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mutations</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">ADD</span>(<span class="params">state, param</span>)</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;mutations add&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> stuId =</span><br><span class="line">                state.stus.length === <span class="literal">undefined</span> ? <span class="number">1</span> : state.stus.length + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">const</span> stu = &#123; <span class="attr">id</span>: stuId, <span class="attr">stuName</span>: stuId + <span class="string">&#x27;-&#x27;</span> + param.stuName &#125;;</span><br><span class="line">            state.stus.push(stu);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">state</span>: &#123; <span class="attr">stus</span>: [] &#125;,</span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">bigSum</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">            <span class="keyword">return</span> state.stus.length * <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//创建store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    <span class="attr">modules</span>: &#123;</span><br><span class="line">        stuOptions</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="2"><li>创建vue时，在配置项中配置store</li></ol><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    store,</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>在组件中使用store</li></ol><figure class="highlight js"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;studv&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Student组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>放大十倍后的学生人数:&#123;&#123;$store.getters[&#x27;stuOptions/bigSum&#x27;]&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;s in $store.state.stuOptions.stus&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;s.id&quot;</span>&gt;</span>&#123;&#123;s.stuName&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            </span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.$store);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        </span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;css&quot;</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.studv</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">background-color</span>:bisque;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">width</span>:<span class="number">200px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">padding</span>:<span class="number">50px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">margin-left</span>:<span class="number">50px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>app组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>共计学生&#123;&#123;stusSum&#125;&#125;,<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addStu&quot;</span>&gt;</span>添加学生<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Student</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123;mapState,mapGetters,mapMutations&#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Student</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">addStu</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;stuOptions/add&#x27;</span>, &#123; <span class="attr">stuName</span>: <span class="string">&#x27;odin&#x27;</span> &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">//跳过dispatch字节commit到mutations</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">// this.$store.commit(&#x27;ADD&#x27;,&#123; stuName: &#x27;odin&#x27; &#125;)</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">//使用映射的形式 映射mutations</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// ...mapMutations([&#x27;ADD&#x27;])</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// ...mapMutations(&#x27;stuOptions&#x27;,[&#x27;ADD&#x27;])</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">computed</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">stusSum</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="built_in">this</span>.$store);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">return</span> <span class="built_in">this</span>.$store.state.stuOptions.stus.length</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">//使用映射的形式 映射state为计算属性</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// ...mapState([&#x27;stus&#x27;])</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        ...mapState(<span class="string">&#x27;stuOptions&#x27;</span>,[<span class="string">&#x27;stus&#x27;</span>])</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">//...mapGetters([&#x27;stus&#x27;])</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-id">#app</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -moz-osx-<span class="attribute">font-smoothing</span>: grayscale;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.dvapp</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">background-color</span>: aquamarine;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/e255.html&quot;&gt;Vue2.0进阶学习&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue2" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue2/"/>
    
    
    <category term="vue2" scheme="https://www.odinsam.com/tags/vue2/"/>
    
    <category term="vuex" scheme="https://www.odinsam.com/tags/vuex/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 13. slot插槽</title>
    <link href="https://www.odinsam.com/articles/d7ab.html"/>
    <id>https://www.odinsam.com/articles/d7ab.html</id>
    <published>2022-10-20T07:57:00.000Z</published>
    <updated>2023-03-10T08:01:13.836Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p></blockquote><span id="more"></span><h4 id="slot插槽"><a class="markdownIt-Anchor" href="#slot插槽"></a> slot插槽</h4><ol><li>让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据</li><li>插槽分为 默认插槽、具名插槽、作用域插槽</li><li>默认插槽: 数据定义在父组件中</li></ol><figure class="highlight js"><figcaption><span>父组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Category title=<span class="string">&quot;美食&quot;</span>&gt;</span><br><span class="line">  html结构</span><br><span class="line">&lt;/Category&gt; </span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>子组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>具名插槽: 数据定义在父组件中</li></ol><figure class="highlight js"><figcaption><span>父组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Category title=<span class="string">&quot;美食&quot;</span>&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&#x27;插槽名称&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        html结构</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:</span>插槽名称<span class="attr">2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        html结构</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/Category&gt; </span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>子组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;插槽名称1&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;插槽名称2&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>作用域插槽:数据定义在子组件中</li></ol><figure class="highlight js"><figcaption><span>父组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Category title=<span class="string">&quot;美食&quot;</span>&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;&#123;stus,msg&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        html结构</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:</span>插槽名称<span class="attr">2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        html结构</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/Category&gt; </span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>子组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">:stus</span>=<span class="string">&quot;子组件数据&quot;</span> <span class="attr">msg</span>=<span class="string">&quot;作用域&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h4><figure class="highlight js"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="comment"><span class="xml">        slot插槽</span></span></span><br><span class="line"><span class="comment"><span class="xml">        1. 让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据</span></span></span><br><span class="line"><span class="comment"><span class="xml">        2. 插槽分为 默认插槽、具名插槽、作用域插槽</span></span></span><br><span class="line"><span class="comment"><span class="xml">        3. 默认插槽: 数据定义在父组件中</span></span></span><br><span class="line"><span class="comment"><span class="xml">            父组件  </span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;Category title=&quot;美食&quot;&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                html结构</span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;/Category&gt; </span></span></span><br><span class="line"><span class="comment"><span class="xml">            子组件 </span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;slot&gt;&lt;/slot&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;/template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        4. 具名插槽: 数据定义在父组件中</span></span></span><br><span class="line"><span class="comment"><span class="xml">            父组件  </span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;Category title=&quot;美食&quot;&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;template slot=&#x27;插槽名称&#x27;&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                    html结构</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;/template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;template v-slot:插槽名称2&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                    html结构</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;/template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;/Category&gt; </span></span></span><br><span class="line"><span class="comment"><span class="xml">            子组件 </span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;slot name=&#x27;插槽名称1&#x27;&gt;&lt;/slot&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;slot name=&#x27;插槽名称2&#x27;&gt;&lt;/slot&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;/template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        5. 作用域插槽:数据定义在子组件中</span></span></span><br><span class="line"><span class="comment"><span class="xml">            父组件  </span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;Category title=&quot;美食&quot;&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;template slot-scope=&quot;&#123;stus,msg&#125;&quot;&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                    html结构</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;/template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;template v-slot:插槽名称2&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                    html结构</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;/template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;/Category&gt; </span></span></span><br><span class="line"><span class="comment"><span class="xml">            子组件</span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &lt;slot :stus=&quot;子组件数据&quot; msg=&quot;作用域&quot;&gt;&lt;/slot&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">            &lt;/template&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xml">    --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>app组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dvslot&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Category</span> <span class="attr">title</span>=<span class="string">&quot;美食&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">slot</span>=<span class="string">&quot;center&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://s2.ax1x.com/2021/01/16/srJ1q0.jpg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;美食&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://odinsam.com&quot;</span>&gt;</span>热门美食<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://odinsam.com&quot;</span>&gt;</span>更多美食<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Category</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Category</span> <span class="attr">title</span>=<span class="string">&quot;游戏&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">slot</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(g,index) in games&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123;g&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://odinsam.com&quot;</span>&gt;</span>热门游戏<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Category</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Category</span> <span class="attr">title</span>=<span class="string">&quot;影视&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">video</span> <span class="attr">slot</span>=<span class="string">&quot;center&quot;</span> <span class="attr">controls</span> <span class="attr">src</span>=<span class="string">&quot;http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">template</span>  <span class="attr">v-slot:footer</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://odinsam.com&quot;</span>&gt;</span>热门<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://odinsam.com&quot;</span>&gt;</span>经典<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://odinsam.com&quot;</span>&gt;</span>推荐<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>欢迎观看<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Category</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">Student</span> <span class="attr">title</span>=<span class="string">&quot;作用于插槽&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;&#123;stus,msg&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">slot</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">h4</span> <span class="attr">v-for</span>=<span class="string">&quot;stu in stus&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;stu.id&quot;</span>&gt;</span>&#123;&#123;stu.name&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Category <span class="keyword">from</span> <span class="string">&#x27;./components/Category.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;foods&#x27;</span>: [<span class="string">&#x27;火锅&#x27;</span>, <span class="string">&#x27;小龙虾&#x27;</span>, <span class="string">&#x27;牛排&#x27;</span>, <span class="string">&#x27;烧烤&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;games&#x27;</span>: [<span class="string">&#x27;魔兽&#x27;</span>, <span class="string">&#x27;炉石&#x27;</span>, <span class="string">&#x27;暗黑&#x27;</span>, <span class="string">&#x27;星际&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&#x27;films&#x27;</span>:[<span class="string">&#x27;西游&#x27;</span>,<span class="string">&#x27;三国&#x27;</span>,<span class="string">&#x27;红楼梦&#x27;</span>,<span class="string">&#x27;水浒&#x27;</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Category,Student</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        </span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-id">#app</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -moz-osx-<span class="attribute">font-smoothing</span>: grayscale;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.dvapp</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">background-color</span>: aquamarine;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.dvslot</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">justify-content</span>: space-evenly;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-tag">video</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">width</span>:<span class="number">100%</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.footer</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>category.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;studv&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">stus</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;odinsam1&quot;</span> &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&quot;odinsam2&quot;</span> &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&quot;odinsam3&quot;</span> &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            ]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>: [<span class="string">&#x27;title&#x27;</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;css&quot;</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.studv</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">background-color</span>:bisque;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">width</span>:<span class="number">400px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;studv&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:stus</span>=<span class="string">&quot;stus&quot;</span> <span class="attr">msg</span>=<span class="string">&quot;作用域&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">stus</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;odinsam1&quot;</span> &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&quot;odinsam2&quot;</span> &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&quot;odinsam3&quot;</span> &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            ]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>: [<span class="string">&#x27;title&#x27;</span>]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;css&quot;</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.studv</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">background-color</span>:bisque;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">width</span>:<span class="number">400px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/e255.html&quot;&gt;Vue2.0进阶学习&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue2" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue2/"/>
    
    
    <category term="vue2" scheme="https://www.odinsam.com/tags/vue2/"/>
    
    <category term="slot" scheme="https://www.odinsam.com/tags/slot/"/>
    
    <category term="插槽" scheme="https://www.odinsam.com/tags/%E6%8F%92%E6%A7%BD/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 12. 配置代理</title>
    <link href="https://www.odinsam.com/articles/551e.html"/>
    <id>https://www.odinsam.com/articles/551e.html</id>
    <published>2022-10-20T07:55:00.000Z</published>
    <updated>2023-03-10T07:56:59.635Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p></blockquote><span id="more"></span><h4 id="配置代理"><a class="markdownIt-Anchor" href="#配置代理"></a> 配置代理</h4><ol><li>yarn add axios 安装axios库</li><li>在vue.config.js中添加代理配置 devServer:{ 配置内容 }</li><li>简单配置 proxy: ‘<a href="http://localhost:8899">http://localhost:8899</a>’</li><li>复杂配置,可配置多个代理</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">proxy: &#123;</span><br><span class="line"><span class="string">&#x27;/odinapi&#x27;</span>: &#123;</span><br><span class="line">    <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8899&#x27;</span>, <span class="comment">//目标请求服务器</span></span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/odinapi&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;, <span class="comment">//路径重写匹配服务器路径</span></span><br><span class="line">        <span class="attr">ws</span>: <span class="literal">true</span>, <span class="comment">//是否支持websocket</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span> <span class="comment">//用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>在需要请求的地方发起axios请求获取数据</li></ol><figure class="highlight js"><figcaption><span>vue.config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@vue/cli-service&#x27;</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = defineConfig(&#123;</span><br><span class="line">    <span class="attr">transpileDependencies</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//关闭语法检查</span></span><br><span class="line">    <span class="attr">lintOnSave</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">//简单配置代理服务器 不能添加多个代理服务器</span></span><br><span class="line">    <span class="comment">// devServer: &#123;</span></span><br><span class="line">    <span class="comment">//     proxy: &#x27;http://localhost:5000&#x27;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">proxy</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;/odinapi&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8899&#x27;</span>, <span class="comment">//目标请求服务器</span></span><br><span class="line">                <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/odinapi&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;, <span class="comment">//路径重写匹配服务器路径</span></span><br><span class="line">                <span class="attr">ws</span>: <span class="literal">true</span>, <span class="comment">//是否支持websocket</span></span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span> <span class="comment">//用户控制请求头中的host</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="comment"><span class="xml">        vue配置代理</span></span></span><br><span class="line"><span class="comment"><span class="xml">        1. yarn add axios 安装axios库</span></span></span><br><span class="line"><span class="comment"><span class="xml">        2. 在vue.config.js中添加代理配置 devServer:&#123; 配置内容 &#125;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        3. 简单配置 proxy: &#x27;http://localhost:8899&#x27;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        4. 复杂配置,可配置多个代理</span></span></span><br><span class="line"><span class="comment"><span class="xml">            proxy: &#123;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &#x27;/odinapi&#x27;: &#123;</span></span></span><br><span class="line"><span class="comment"><span class="xml">                    target: &#x27;http://localhost:8899&#x27;, //目标请求服务器</span></span></span><br><span class="line"><span class="comment"><span class="xml">                    pathRewrite: &#123; &#x27;^/odinapi&#x27;: &#x27;&#x27; &#125;, //路径重写匹配服务器路径</span></span></span><br><span class="line"><span class="comment"><span class="xml">                    ws: true, //是否支持websocket</span></span></span><br><span class="line"><span class="comment"><span class="xml">                    changeOrigin: true //用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080</span></span></span><br><span class="line"><span class="comment"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="comment"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        5. 在需要请求的地方发起axios请求获取数据</span></span></span><br><span class="line"><span class="comment"><span class="xml">    --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>app组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getStus&quot;</span>&gt;</span>获取学生信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;stu in stus&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;stu.id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Student</span> <span class="attr">stuName</span>=<span class="string">&quot;stu.stuName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">stus</span>:[]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Student</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">getStus</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            axios.get(<span class="string">&#x27;http://localhost:8080/odinapi/student&#x27;</span>).then(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(<span class="string">&#x27;success&#x27;</span>, response.data);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">this</span>.stus = response.data;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(<span class="string">&#x27;error&#x27;</span>,error.message);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    </span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            )</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        </span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-id">#app</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -moz-osx-<span class="attribute">font-smoothing</span>: grayscale;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.dvapp</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">background-color</span>: aquamarine;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/e255.html&quot;&gt;Vue2.0进阶学习&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue2" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue2/"/>
    
    
    <category term="vue2" scheme="https://www.odinsam.com/tags/vue2/"/>
    
    <category term="proxy" scheme="https://www.odinsam.com/tags/proxy/"/>
    
    <category term="axios" scheme="https://www.odinsam.com/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 11. 动画效果</title>
    <link href="https://www.odinsam.com/articles/f2de.html"/>
    <id>https://www.odinsam.com/articles/f2de.html</id>
    <published>2022-10-19T07:52:00.000Z</published>
    <updated>2023-03-10T07:54:26.068Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p></blockquote><span id="more"></span><h4 id="动画效果"><a class="markdownIt-Anchor" href="#动画效果"></a> 动画效果</h4><ol><li>普通实现方式: 使用 @keyframes amName{ from{transform: translateX(-100%);}to{transform: translateX(0);}} 创建关键帧并定义动画</li><li>定义vue的进入动画 .name-enter-active{animation: odinAnimate 1s linear;}</li><li>定义vue的离开动画 .name-leave-active{animation: odinAnimate 1s linear reverse;}</li><li>使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画</li></ol><h4 id="过度动画"><a class="markdownIt-Anchor" href="#过度动画"></a> 过度动画</h4><ol><li>定义过度动画 .name-enter,.name-leave-to{transform: translateX(-100%);} 和 .name-leave .name-enter-to{transform: translateX(0);}</li><li>定义过滤效果 .name-enter-active,.name-leave-active{transition: 3s linear;}</li><li>多个元素需要相同的动画效果需要使用 transition-group</li></ol><h4 id="第三方动画库-详见-httpsanimatestyle"><a class="markdownIt-Anchor" href="#第三方动画库-详见-httpsanimatestyle"></a> 第三方动画库 详见 <a href="https://animate.style/">https://animate.style/</a></h4><ol><li>yarn add animate.css</li><li>引入 animate.css import ‘animate.css’</li><li>给需要动画的组件 添加 name=‘animate__animated animate__bounce’</li><li>添加 enter-active-class=‘动画名称’ leave-active-class=‘动画名称</li></ol><figure class="highlight js"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--</span></span></span><br><span class="line"><span class="comment"><span class="xml">        动画效果</span></span></span><br><span class="line"><span class="comment"><span class="xml">        1. 普通实现方式: 使用 @keyframes amName&#123; from&#123;transform: translateX(-100%);&#125;to&#123;transform: translateX(0);&#125;&#125; 创建关键帧并定义动画</span></span></span><br><span class="line"><span class="comment"><span class="xml">        2. 定义vue的进入动画  .name-enter-active&#123;animation: odinAnimate 1s linear;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        3. 定义vue的离开动画  .name-leave-active&#123;animation: odinAnimate 1s linear reverse;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        4. 使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画</span></span></span><br><span class="line"><span class="comment"><span class="xml"></span></span></span><br><span class="line"><span class="comment"><span class="xml">        过度动画</span></span></span><br><span class="line"><span class="comment"><span class="xml">        1. 定义过度动画 .name-enter,.name-leave-to&#123;transform: translateX(-100%);&#125; 和 .name-leave .name-enter-to&#123;transform: translateX(0);&#125;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        2. 定义过滤效果 .name-enter-active,.name-leave-active&#123;transition: 3s linear;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        3. 多个元素需要相同的动画效果需要使用 transition-group</span></span></span><br><span class="line"><span class="comment"><span class="xml"></span></span></span><br><span class="line"><span class="comment"><span class="xml">        第三方动画库 详见 https://animate.style/</span></span></span><br><span class="line"><span class="comment"><span class="xml">        1. yarn add animate.css</span></span></span><br><span class="line"><span class="comment"><span class="xml">        2. 引入 animate.css   import &#x27;animate.css&#x27;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        3. 给需要动画的组件 添加 name=&#x27;animate__animated animate__bounce&#x27;</span></span></span><br><span class="line"><span class="comment"><span class="xml">        4. 添加 enter-active-class=&#x27;动画名称&#x27;  leave-active-class=&#x27;动画名称&#x27;</span></span></span><br><span class="line"><span class="comment"><span class="xml">    --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>app组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showComponent&quot;</span>&gt;</span>显示、隐藏组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--动画效果--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">&quot;odinam1&quot;</span> <span class="attr">appear</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Student</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--过度动画--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">&quot;odinam2&quot;</span> <span class="attr">appear</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Student</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--组过度动画--&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">name</span>=<span class="string">&quot;odinam2&quot;</span> <span class="attr">appear</span> &gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Student</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Student</span> <span class="attr">v-show</span>=<span class="string">&quot;!isShow&quot;</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--第三方动画库--&gt;</span> </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">name</span>=<span class="string">&#x27;animate__animated animate__bounce&#x27;</span> <span class="attr">appear</span> <span class="attr">enter-active-class</span>=<span class="string">&#x27;animate__shakeY&#x27;</span>  <span class="attr">leave-active-class</span>=<span class="string">&#x27;animate__bounceOutRight&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Student</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Student</span> <span class="attr">v-show</span>=<span class="string">&quot;!isShow&quot;</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> <span class="string">&#x27;animate.css&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">isShow</span>:<span class="literal">true</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Student</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">showComponent</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-id">#app</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -moz-osx-<span class="attribute">font-smoothing</span>: grayscale;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">  </span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.dvapp</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">background-color</span>: aquamarine;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.odinam2-enter-active</span>,<span class="selector-class">.odinam2-leave-active</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">transition</span>: <span class="number">1s</span> linear;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.odinam2-enter</span>,<span class="selector-class">.odinam2-leave-to</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100%</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.odinam2-enter-to</span>,<span class="selector-class">.odinam2-leave</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.odinam1-enter-active</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">animation</span>: odinAnimate <span class="number">1s</span> linear;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.odinam1-leave-active</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">animation</span>: odinAnimate <span class="number">1s</span> linear reverse;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="keyword">@keyframes</span> odinAnimate &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">from</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100%</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="selector-tag">to</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">        <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>);</span></span></span><br><span class="line"><span class="css"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/e255.html&quot;&gt;Vue2.0进阶学习&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue2" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue2/"/>
    
    
    <category term="vue2" scheme="https://www.odinsam.com/tags/vue2/"/>
    
    <category term="animate" scheme="https://www.odinsam.com/tags/animate/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 10. nextTick与props传递函数</title>
    <link href="https://www.odinsam.com/articles/fc6a.html"/>
    <id>https://www.odinsam.com/articles/fc6a.html</id>
    <published>2022-10-19T07:50:00.000Z</published>
    <updated>2023-03-10T07:52:11.645Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="/articles/e255.html">Vue2.0进阶学习</a></p></blockquote><span id="more"></span><h4 id="nexttick与props传递函数"><a class="markdownIt-Anchor" href="#nexttick与props传递函数"></a> nextTick与props传递函数</h4><ol><li>this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</li><li>使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</li><li>父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</li></ol><figure class="highlight js"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        nextTick与props传递函数</span><br><span class="line">        <span class="number">1.</span> <span class="built_in">this</span>.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</span><br><span class="line">        <span class="number">2.</span> 使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</span><br><span class="line">        <span class="number">3.</span> 父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</span><br><span class="line">    --&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;studv&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Student组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;!isEdit&quot;</span>&gt;</span>姓名：&#123;&#123;stuName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">ref</span>=<span class="string">&quot;txtStuName&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;stuName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;editOrOkClick&quot;</span>&gt;</span>&#123;&#123;btnText[isEdit]&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">isEdit</span>:<span class="literal">false</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">stuName</span>: <span class="string">&#x27;odinsam&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">btnText</span>:&#123;<span class="attr">true</span>:<span class="string">&#x27;确定&#x27;</span>,<span class="attr">false</span>:<span class="string">&#x27;编辑&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//app组件传递的回调函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>:[<span class="string">&#x27;getStuName&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">editOrOkClick</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">if</span> (<span class="built_in">this</span>.isEdit)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="comment">//子组件调用父组件通过props传递的回调函数向父组件传递数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">this</span>.getStuName(&#123;<span class="attr">stuName</span>:<span class="built_in">this</span>.stuName&#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.isEdit = !<span class="built_in">this</span>.isEdit;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">// 在本次操作执行完成dom修改后，执行回调函数，使新出现的文本框获得焦点</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.$nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">if</span> (<span class="built_in">this</span>.isEdit) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">this</span>.$refs.txtStuName.focus();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            </span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;css&quot;</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.studv</span>&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">background-color</span>:bisque;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">width</span>:<span class="number">200px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">padding</span>:<span class="number">50px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">margin-left</span>:<span class="number">50px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dvapp&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>app组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>学生的姓名是:&#123;&#123;stuName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">Student</span> <span class="attr">:getStuName</span>=<span class="string">&quot;getStuName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">stuName</span>:<span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        Student</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">getStuName</span>(<span class="params">param</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(param);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.stuName = param.stuName;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-id">#app</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span></span></span><br><span class="line"><span class="css"><span class="xml">  -moz-osx-<span class="attribute">font-smoothing</span>: grayscale;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">  <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.dvapp</span></span></span></span><br><span class="line"><span class="css"><span class="xml">&#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">background-color</span>: aquamarine;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="/articles/da3d.html">Vue2.0 基础学习目录</a></p><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;/articles/e255.html&quot;&gt;Vue2.0进阶学习&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="前端" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vue2" scheme="https://www.odinsam.com/categories/%E5%89%8D%E7%AB%AF/vue2/"/>
    
    
    <category term="vue2" scheme="https://www.odinsam.com/tags/vue2/"/>
    
    <category term="props" scheme="https://www.odinsam.com/tags/props/"/>
    
    <category term="nexttick" scheme="https://www.odinsam.com/tags/nexttick/"/>
    
  </entry>
  
</feed>
